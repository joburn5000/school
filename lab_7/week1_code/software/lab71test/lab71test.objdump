
lab71test.elf:     file format elf32-littlenios2
lab71test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000230

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x00014558 memsz 0x00014558 flags r-x
    LOAD off    0x00015578 vaddr 0x08014578 paddr 0x08016350 align 2**12
         filesz 0x00001dd8 memsz 0x00001dd8 flags rw-
    LOAD off    0x00018128 vaddr 0x08018128 paddr 0x08018128 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013ecc  08000230  08000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000047c  080140fc  080140fc  000150fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dd8  08014578  08016350  00015578  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  08018128  08018128  00018128  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00017350  2**0
                  CONTENTS
  7 .sdram        00000000  08018288  08018288  00017350  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00017350  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fc8  00000000  00000000  00017378  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00026c44  00000000  00000000  00018340  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009c4c  00000000  00000000  0003ef84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000cfee  00000000  00000000  00048bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000023cc  00000000  00000000  00055bc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003c29  00000000  00000000  00057f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001c9cf  00000000  00000000  0005bbb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00078584  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001ab0  00000000  00000000  000785c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007d52e  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0007d531  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007d53d  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007d53e  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007d53f  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007d543  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0007d547  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0007d54b  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0007d556  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0007d561  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0007d56c  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000042  00000000  00000000  0007d574  2**0
                  CONTENTS, READONLY
 30 .jdi          00004f1c  00000000  00000000  0007d5b6  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0008af9d  00000000  00000000  000824d2  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000230 l    d  .text	00000000 .text
080140fc l    d  .rodata	00000000 .rodata
08014578 l    d  .rwdata	00000000 .rwdata
08018128 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
08018288 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab71test_bsp//obj/HAL/src/crt0.o
08000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 specs.cpp
00000000 l    df *ABS*	00000000 main.c
08016304 l     O .rwdata	00000004 vga_ctrl
08014578 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga.c
08016308 l     O .rwdata	00000004 vga_ctrl
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
0801630c l     O .rwdata	00000004 vga_ctrl
080146e8 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 specs.cpp
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0801427e l     O .rodata	00000010 zeroes.4389
0801428e l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
0801429e l     O .rodata	00000010 zeroes.4404
08005a08 l     F .text	000000bc __sbprintf
080142ae l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
08005c18 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08007770 l     F .text	00000008 __fp_unlock
08007784 l     F .text	0000019c __sinit.part.1
08007920 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
08014858 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
08014c9c l     O .rwdata	00000020 lc_ctype_charset
08014c7c l     O .rwdata	00000020 lc_message_charset
08014cbc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
080142e0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
08014404 l     O .rodata	00000010 zeroes.4333
08014414 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfprintf.c
0800b694 l     F .text	000000fc __sprint_r.part.0
08014424 l     O .rodata	00000010 zeroes.4349
0800ccd0 l     F .text	000000bc __sbprintf
08014434 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
080117d0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
080118e4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
08011910 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
08011a04 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
08011aec l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
08011bd8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
08011db4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08016340 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
08012058 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
08012194 l     F .text	00000034 alt_dev_reg
080152a4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
08012488 l     F .text	0000020c altera_avalon_jtag_uart_irq
08012694 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
08012ccc l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
08013064 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
080134c4 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
08013624 l     F .text	0000003c alt_get_errno
08013660 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0801815c g     O .bss	00000004 alt_instruction_exception_handler
08009ccc g     F .text	00000074 _mprec_log10
08009db8 g     F .text	0000008c __any_on
0800d74c g     F .text	00000054 _isatty_r
080142ec g     O .rodata	00000028 __mprec_tinytens
08011cf0 g     F .text	0000007c alt_main
080002dc g     F .text	00000050 textVGAClr
08018188 g     O .bss	00000100 alt_irq
0800d7a0 g     F .text	00000060 _lseek_r
08016350 g       *ABS*	00000000 __flash_rwdata_start
080101a8 g     F .text	00000088 .hidden __eqdf2
08018288 g       *ABS*	00000000 __alt_heap_start
08001240 g     F .text	0000003c printf
0800e078 g     F .text	0000009c _wcrtomb_r
0800032c g     F .text	0000064c textVGATest
08009fe4 g     F .text	0000005c __sseek
08007ad0 g     F .text	00000010 __sinit
0800df20 g     F .text	00000140 __swbuf_r
080080dc g     F .text	0000007c _setlocale_r
08007928 g     F .text	00000078 __sfmoreglue
08011d90 g     F .text	00000024 __malloc_unlock
08000c80 g     F .text	0000026c textVGAColorScreenSaver
0800d800 g     F .text	0000015c memmove
08007ab8 g     F .text	00000018 _cleanup
08008d8c g     F .text	000000a8 _Balloc
08010230 g     F .text	000000dc .hidden __gtdf2
08013a4c g     F .text	00000024 altera_nios2_gen2_irq_init
08000000 g     F .entry	0000000c __reset
08000020 g       *ABS*	00000000 __flash_exceptions_start
0800d228 g     F .text	0000005c _fstat_r
08018140 g     O .bss	00000004 errno
08009f60 g     F .text	00000008 __seofread
0800a2f4 g     F .text	000013a0 ___svfiprintf_internal_r
08018148 g     O .bss	00000004 alt_argv
0801e304 g       *ABS*	00000000 _gp
08012028 g     F .text	00000030 usleep
08000978 g     F .text	00000050 textVGAColorClr
08015124 g     O .rwdata	00000180 alt_fd_list
08013a70 g     F .text	00000090 alt_find_dev
080010c8 g     F .text	00000148 memcpy
08007778 g     F .text	0000000c _cleanup_r
080115e8 g     F .text	000000dc .hidden __floatsidf
080135a8 g     F .text	0000007c alt_io_redirect
0801030c g     F .text	000000f4 .hidden __ltdf2
080140fc g       *ABS*	00000000 __DTOR_END__
08013ccc g     F .text	0000009c alt_exception_cause_generated_bad_addr
08009e44 g     F .text	00000074 __fpclassifyd
08009c28 g     F .text	000000a4 __ratio
0800ccb4 g     F .text	0000001c __vfiprintf_internal
0801288c g     F .text	0000021c altera_avalon_jtag_uart_read
08001210 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
08000fe4 g     F .text	00000064 .hidden __udivsi3
08011a40 g     F .text	000000ac isatty
0801433c g     O .rodata	000000c8 __mprec_tens
08008158 g     F .text	0000000c __locale_charset
0801813c g     O .bss	00000004 __malloc_top_pad
08016318 g     O .rwdata	00000004 __mb_cur_max
08008188 g     F .text	0000000c _localeconv_r
0800d284 g     F .text	000004c8 __sfvwrite_r
080091c0 g     F .text	0000003c __i2b
08009eb8 g     F .text	00000054 _sbrk_r
0800d95c g     F .text	00000060 _read_r
08016338 g     O .rwdata	00000004 alt_max_fd
0800cf1c g     F .text	000000f0 _fclose_r
08007740 g     F .text	00000030 fflush
08018138 g     O .bss	00000004 __malloc_max_sbrked_mem
0800ef2c g     F .text	000008ac .hidden __adddf3
080099d0 g     F .text	0000010c __b2d
0800e968 g     F .text	000005c4 .hidden __umoddi3
08011c14 g     F .text	000000dc lseek
08016310 g     O .rwdata	00000004 _global_impure_ptr
0800d9bc g     F .text	00000564 _realloc_r
08018288 g       *ABS*	00000000 __bss_end
080133d4 g     F .text	000000f0 alt_iic_isr_register
08013944 g     F .text	00000108 alt_tick
0800e36c g     F .text	000005fc .hidden __udivdi3
0800d184 g     F .text	00000024 _fputwc_r
08014314 g     O .rodata	00000028 __mprec_bigtens
08008fa4 g     F .text	00000104 __s2b
080116c4 g     F .text	000000a8 .hidden __floatunsidf
08009710 g     F .text	00000060 __mcmp
08007af0 g     F .text	00000018 __fp_lock_all
08013388 g     F .text	0000004c alt_ic_irq_enabled
080138a8 g     F .text	0000009c alt_alarm_stop
08018150 g     O .bss	00000004 alt_irq_active
080000fc g     F .exceptions	000000d4 alt_irq_handler
080150fc g     O .rwdata	00000028 alt_dev_null
08013044 g     F .text	00000020 alt_dcache_flush_all
080090a8 g     F .text	00000068 __hi0bits
08011568 g     F .text	00000080 .hidden __fixdfsi
08016350 g       *ABS*	00000000 __ram_rwdata_end
08016330 g     O .rwdata	00000008 alt_dev_list
08012094 g     F .text	00000100 write
08014578 g       *ABS*	00000000 __ram_rodata_end
0801194c g     F .text	000000b8 fstat
0801030c g     F .text	000000f4 .hidden __ledf2
08009488 g     F .text	00000140 __pow5mult
0800b7a8 g     F .text	0000150c ___vfiprintf_internal_r
08018130 g     O .bss	00000004 __nlocale_changed
08001048 g     F .text	00000058 .hidden __umodsi3
08018288 g       *ABS*	00000000 end
080123c8 g     F .text	000000c0 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
080140fc g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
08012d44 g     F .text	0000007c alt_avalon_timer_sc_init
0801176c g     F .text	00000064 .hidden __clzsi2
08012aa8 g     F .text	00000224 altera_avalon_jtag_uart_write
08007ae0 g     F .text	00000004 __sfp_lock_acquire
08008b80 g     F .text	000000e4 memchr
08003710 g     F .text	000022dc ___vfprintf_internal_r
080012f8 g     F .text	00000058 _sprintf_r
08007c44 g     F .text	00000310 _free_r
08008164 g     F .text	00000010 __locale_mb_cur_max
08013f48 g     F .text	00000180 __call_exitprocs
0801812c g     O .bss	00000004 __mlocale_changed
0801631c g     O .rwdata	00000004 __malloc_sbrk_base
08000230 g     F .text	0000003c _start
08018154 g     O .bss	00000004 _alt_tick_rate
08001294 g     F .text	00000064 rand
080095c8 g     F .text	00000148 __lshift
08018158 g     O .bss	00000004 _alt_nticks
08011df0 g     F .text	00000104 read
08012200 g     F .text	00000064 alt_sys_init
0800a124 g     F .text	000001d0 __ssprint_r
08013e30 g     F .text	00000118 __register_exitproc
080091fc g     F .text	0000028c __multiply
08012734 g     F .text	00000068 altera_avalon_jtag_uart_close
080010a0 g     F .text	00000028 .hidden __mulsi3
08014578 g       *ABS*	00000000 __ram_rwdata_start
080140fc g       *ABS*	00000000 __ram_rodata_start
08018160 g     O .bss	00000028 __malloc_current_mallinfo
08009adc g     F .text	0000014c __d2b
08012264 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08013c08 g     F .text	000000c4 alt_get_fd
08012eec g     F .text	00000158 alt_busy_sleep
0800cdec g     F .text	00000054 _close_r
08013db4 g     F .text	0000007c memcmp
08012324 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
08018288 g       *ABS*	00000000 __alt_stack_base
08012374 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
08005ac4 g     F .text	00000154 __swsetup_r
0800f7d8 g     F .text	000009d0 .hidden __divdf3
080079a0 g     F .text	00000118 __sfp
08009d40 g     F .text	00000078 __copybits
08014cf4 g     O .rwdata	00000408 __malloc_av_
08007aec g     F .text	00000004 __sinit_lock_release
08010400 g     F .text	0000086c .hidden __muldf3
08009f0c g     F .text	00000054 __sread
08013b00 g     F .text	00000108 alt_find_file
080130a0 g     F .text	000000a4 alt_dev_llist_insert
08011d6c g     F .text	00000024 __malloc_lock
08011f78 g     F .text	000000b0 sbrk
08001454 g     F .text	000022bc ___svfprintf_internal_r
080076e4 g     F .text	0000005c _fflush_r
0800ce40 g     F .text	000000dc _calloc_r
08018128 g       *ABS*	00000000 __bss_start
08008c64 g     F .text	00000128 memset
0800026c g     F .text	0000002c main
0801814c g     O .bss	00000004 alt_envp
08018134 g     O .bss	00000004 __malloc_max_total_mem
080122c4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0800e060 g     F .text	00000018 __swbuf
0800127c g     F .text	00000018 srand
0800a040 g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
0800d00c g     F .text	00000014 fclose
08005e40 g     F .text	00001688 _dtoa_r
08008374 g     F .text	0000080c _malloc_r
0800e1d4 g     F .text	00000030 __ascii_wctomb
0801633c g     O .rwdata	00000004 alt_errno
08007f54 g     F .text	000000c4 _fwalk
08000eec g     F .text	00000084 .hidden __divsi3
08000ad8 g     F .text	000001a8 setColorPalette
08007b20 g     F .text	00000124 _malloc_trim_r
080140fc g       *ABS*	00000000 __CTOR_END__
0800a048 g     F .text	000000dc strcmp
080140fc g       *ABS*	00000000 __flash_rodata_start
080140fc g       *ABS*	00000000 __DTOR_LIST__
080101a8 g     F .text	00000088 .hidden __nedf2
080121c8 g     F .text	00000038 alt_irq_init
08011ef4 g     F .text	00000084 alt_release_fd
08001350 g     F .text	0000006c sprintf
08014444 g     O .rodata	00000100 .hidden __clz_tab
08018128 g     O .bss	00000004 _PathLocale
08013d68 g     F .text	00000014 atexit
0800cd8c g     F .text	00000060 _write_r
08008194 g     F .text	00000018 setlocale
08000298 g     F .text	00000044 textVGASetColor
08016314 g     O .rwdata	00000004 _impure_ptr
08018144 g     O .bss	00000004 alt_argc
080074c8 g     F .text	0000021c __sflush_r
080131a4 g     F .text	00000060 _do_dtors
08008180 g     F .text	00000008 __locale_cjk_lang
08000020 g       .exceptions	00000000 alt_irq_entry
0800996c g     F .text	00000064 __ulp
08007b08 g     F .text	00000018 __fp_unlock_all
08016328 g     O .rwdata	00000008 alt_fs_list
08000020 g       *ABS*	00000000 __ram_exceptions_start
080081ac g     F .text	0000000c localeconv
08013224 g     F .text	00000050 alt_ic_isr_register
08016350 g       *ABS*	00000000 _edata
08018288 g       *ABS*	00000000 _end
0800d020 g     F .text	00000164 __fputwc
08000230 g       *ABS*	00000000 __ram_exceptions_end
0801279c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
080009c8 g     F .text	00000110 textVGADrawColorText
080132fc g     F .text	0000008c alt_ic_irq_disable
08009f68 g     F .text	0000007c __swrite
08016320 g     O .rwdata	00000004 __malloc_trim_threshold
08008174 g     F .text	0000000c __locale_msgcharset
08013d7c g     F .text	00000038 exit
08008018 g     F .text	000000c4 _fwalk_reent
08009770 g     F .text	000001fc __mdiff
08000f70 g     F .text	00000074 .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
08007ae4 g     F .text	00000004 __sfp_lock_release
08000000 g       *ABS*	00000000 __alt_mem_sdram
080140c8 g     F .text	00000034 _exit
08012dc0 g     F .text	0000012c alt_alarm_start
0800e260 g     F .text	0000010c .hidden __muldi3
080081b8 g     F .text	000001bc __smakebuf_r
080013bc g     F .text	00000098 strlen
0801374c g     F .text	0000015c open
08010230 g     F .text	000000dc .hidden __gedf2
08016324 g     O .rwdata	00000004 __wctomb
0800b790 g     F .text	00000018 __sprint_r
08013204 g     F .text	00000020 alt_icache_flush_all
08016344 g     O .rwdata	00000004 alt_priority_mask
08013274 g     F .text	00000088 alt_ic_irq_enable
080059ec g     F .text	0000001c __vfprintf_internal
0800e204 g     F .text	0000005c _wctomb_r
08010c6c g     F .text	000008fc .hidden __subdf3
08009110 g     F .text	000000b0 __lo0bits
08016348 g     O .rwdata	00000008 alt_alarm_list
08013144 g     F .text	00000060 _do_ctors
0800e114 g     F .text	000000c0 wcrtomb
0801180c g     F .text	000000d8 close
08011b54 g     F .text	00000084 alt_load
0800d1a8 g     F .text	00000080 fputwc
08007ae8 g     F .text	00000004 __sinit_lock_acquire
08008e5c g     F .text	00000148 __multadd
08008e34 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000000:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000004:	08408c14 	ori	at,at,560
    jmp r1
 8000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 800008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001426 	beq	r2,zero,800018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 800013c:	008200b4 	movhi	r2,2050
 8000140:	10a06204 	addi	r2,r2,-32376
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	008200b4 	movhi	r2,2050
 8000158:	10a06204 	addi	r2,r2,-32376
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 8000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 800017c:	0005313a 	rdctl	r2,ipending
 8000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000184:	e0bfff17 	ldw	r2,-4(fp)
 8000188:	00000706 	br	80001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 800018c:	e0bffc17 	ldw	r2,-16(fp)
 8000190:	1085883a 	add	r2,r2,r2
 8000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 8000198:	e0bffd17 	ldw	r2,-12(fp)
 800019c:	10800044 	addi	r2,r2,1
 80001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a4:	003fe106 	br	800012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 80001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001ac:	e0bffb17 	ldw	r2,-20(fp)
 80001b0:	103fdb1e 	bne	r2,zero,8000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b4:	0001883a 	nop
}
 80001b8:	0001883a 	nop
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 80001e4:	00bfffc4 	movi	r2,-1
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 80001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 80001f0:	d0a79617 	ldw	r2,-25000(gp)
 80001f4:	10000726 	beq	r2,zero,8000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 80001f8:	d0a79617 	ldw	r2,-25000(gp)
 80001fc:	e0fffd17 	ldw	r3,-12(fp)
 8000200:	e1bffe17 	ldw	r6,-8(fp)
 8000204:	e17fff17 	ldw	r5,-4(fp)
 8000208:	1809883a 	mov	r4,r3
 800020c:	103ee83a 	callr	r2
 8000210:	00000206 	br	800021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8000218:	0005883a 	mov	r2,zero
}
 800021c:	e037883a 	mov	sp,fp
 8000220:	dfc00117 	ldw	ra,4(sp)
 8000224:	df000017 	ldw	fp,0(sp)
 8000228:	dec00204 	addi	sp,sp,8
 800022c:	f800283a 	ret

Disassembly of section .text:

08000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000230:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 8000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000238:	06820074 	movhi	gp,2049
    ori gp, gp, %lo(_gp)
 800023c:	d6b8c114 	ori	gp,gp,58116
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000240:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 8000244:	10a04a14 	ori	r2,r2,33064

    movhi r3, %hi(__bss_end)
 8000248:	00c20074 	movhi	r3,2049
    ori r3, r3, %lo(__bss_end)
 800024c:	18e0a214 	ori	r3,r3,33416

    beq r2, r3, 1f
 8000250:	10c00326 	beq	r2,r3,8000260 <_start+0x30>

0:
    stw zero, (r2)
 8000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800025c:	10fffd36 	bltu	r2,r3,8000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000260:	8011b540 	call	8011b54 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000264:	8011cf00 	call	8011cf0 <alt_main>

08000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000268:	003fff06 	br	8000268 <__alt_data_end+0xfc000268>

0800026c <main>:
#include <stdio.h>
#include <stdlib.h>
#include "text_mode_vga_color.h"

int main() {
 800026c:	defffe04 	addi	sp,sp,-8
 8000270:	dfc00115 	stw	ra,4(sp)
 8000274:	df000015 	stw	fp,0(sp)
 8000278:	d839883a 	mov	fp,sp
	textVGAColorScreenSaver();
 800027c:	8000c800 	call	8000c80 <textVGAColorScreenSaver>
	return 0;
 8000280:	0005883a 	mov	r2,zero
}
 8000284:	e037883a 	mov	sp,fp
 8000288:	dfc00117 	ldw	ra,4(sp)
 800028c:	df000017 	ldw	fp,0(sp)
 8000290:	dec00204 	addi	sp,sp,8
 8000294:	f800283a 	ret

08000298 <textVGASetColor>:
#include <alt_types.h>
#include "text_mode_vga.h"


void textVGASetColor(int background, int foreground)
{
 8000298:	defffd04 	addi	sp,sp,-12
 800029c:	df000215 	stw	fp,8(sp)
 80002a0:	df000204 	addi	fp,sp,8
 80002a4:	e13ffe15 	stw	r4,-8(fp)
 80002a8:	e17fff15 	stw	r5,-4(fp)
	vga_ctrl->CTRL = foreground << 13 |
 80002ac:	d0e00117 	ldw	r3,-32764(gp)
 80002b0:	e0bfff17 	ldw	r2,-4(fp)
 80002b4:	1008937a 	slli	r4,r2,13
					 background << 1;
 80002b8:	e0bffe17 	ldw	r2,-8(fp)
 80002bc:	1085883a 	add	r2,r2,r2
#include "text_mode_vga.h"


void textVGASetColor(int background, int foreground)
{
	vga_ctrl->CTRL = foreground << 13 |
 80002c0:	2084b03a 	or	r2,r4,r2
 80002c4:	18825815 	stw	r2,2400(r3)
					 background << 1;
}
 80002c8:	0001883a 	nop
 80002cc:	e037883a 	mov	sp,fp
 80002d0:	df000017 	ldw	fp,0(sp)
 80002d4:	dec00104 	addi	sp,sp,4
 80002d8:	f800283a 	ret

080002dc <textVGAClr>:

void textVGAClr()
{
 80002dc:	defffe04 	addi	sp,sp,-8
 80002e0:	df000115 	stw	fp,4(sp)
 80002e4:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS); i++)
 80002e8:	e03fff15 	stw	zero,-4(fp)
 80002ec:	00000706 	br	800030c <textVGAClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
 80002f0:	d0e00117 	ldw	r3,-32764(gp)
 80002f4:	e0bfff17 	ldw	r2,-4(fp)
 80002f8:	1885883a 	add	r2,r3,r2
 80002fc:	10000005 	stb	zero,0(r2)
					 background << 1;
}

void textVGAClr()
{
	for (int i = 0; i<(ROWS*COLUMNS); i++)
 8000300:	e0bfff17 	ldw	r2,-4(fp)
 8000304:	10800044 	addi	r2,r2,1
 8000308:	e0bfff15 	stw	r2,-4(fp)
 800030c:	e0bfff17 	ldw	r2,-4(fp)
 8000310:	10825810 	cmplti	r2,r2,2400
 8000314:	103ff61e 	bne	r2,zero,80002f0 <__alt_data_end+0xfc0002f0>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}
 8000318:	0001883a 	nop
 800031c:	e037883a 	mov	sp,fp
 8000320:	df000017 	ldw	fp,0(sp)
 8000324:	dec00104 	addi	sp,sp,4
 8000328:	f800283a 	ret

0800032c <textVGATest>:

void textVGATest()
{
 800032c:	deff8904 	addi	sp,sp,-476
 8000330:	dfc07615 	stw	ra,472(sp)
 8000334:	df007515 	stw	fp,468(sp)
 8000338:	dc007415 	stw	r16,464(sp)
 800033c:	df007504 	addi	fp,sp,468
	textVGASetColor(BLACK, WHITE);
 8000340:	0143ffc4 	movi	r5,4095
 8000344:	0009883a 	mov	r4,zero
 8000348:	80002980 	call	8000298 <textVGASetColor>
	textVGAClr();
 800034c:	80002dc0 	call	80002dc <textVGAClr>

	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
 8000350:	e03f8b15 	stw	zero,-468(fp)
 8000354:	00003106 	br	800041c <textVGATest+0xf0>
	{
		checksum[j] = 0;
 8000358:	e0bf8b17 	ldw	r2,-468(fp)
 800035c:	1085883a 	add	r2,r2,r2
 8000360:	1085883a 	add	r2,r2,r2
 8000364:	e0ff8b04 	addi	r3,fp,-468
 8000368:	1885883a 	add	r2,r3,r2
 800036c:	10800904 	addi	r2,r2,36
 8000370:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
 8000374:	e03f8c15 	stw	zero,-464(fp)
 8000378:	00002206 	br	8000404 <textVGATest+0xd8>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
 800037c:	d4200117 	ldw	r16,-32764(gp)
 8000380:	01401404 	movi	r5,80
 8000384:	e13f8b17 	ldw	r4,-468(fp)
 8000388:	80010a00 	call	80010a0 <__mulsi3>
 800038c:	1007883a 	mov	r3,r2
 8000390:	e0bf8c17 	ldw	r2,-464(fp)
 8000394:	1885883a 	add	r2,r3,r2
 8000398:	e0ff8c17 	ldw	r3,-464(fp)
 800039c:	1809883a 	mov	r4,r3
 80003a0:	e0ff8b17 	ldw	r3,-468(fp)
 80003a4:	20c7883a 	add	r3,r4,r3
 80003a8:	8085883a 	add	r2,r16,r2
 80003ac:	10c00005 	stb	r3,0(r2)
			checksum[j] += i + j;
 80003b0:	e0bf8b17 	ldw	r2,-468(fp)
 80003b4:	1085883a 	add	r2,r2,r2
 80003b8:	1085883a 	add	r2,r2,r2
 80003bc:	e13f8b04 	addi	r4,fp,-468
 80003c0:	2085883a 	add	r2,r4,r2
 80003c4:	10800904 	addi	r2,r2,36
 80003c8:	10800017 	ldw	r2,0(r2)
 80003cc:	e13f8c17 	ldw	r4,-464(fp)
 80003d0:	e0ff8b17 	ldw	r3,-468(fp)
 80003d4:	20c7883a 	add	r3,r4,r3
 80003d8:	10c7883a 	add	r3,r2,r3
 80003dc:	e0bf8b17 	ldw	r2,-468(fp)
 80003e0:	1085883a 	add	r2,r2,r2
 80003e4:	1085883a 	add	r2,r2,r2
 80003e8:	e13f8b04 	addi	r4,fp,-468
 80003ec:	2085883a 	add	r2,r4,r2
 80003f0:	10800904 	addi	r2,r2,36
 80003f4:	10c00015 	stw	r3,0(r2)
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
	{
		checksum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
 80003f8:	e0bf8c17 	ldw	r2,-464(fp)
 80003fc:	10800044 	addi	r2,r2,1
 8000400:	e0bf8c15 	stw	r2,-464(fp)
 8000404:	e0bf8c17 	ldw	r2,-464(fp)
 8000408:	10801410 	cmplti	r2,r2,80
 800040c:	103fdb1e 	bne	r2,zero,800037c <__alt_data_end+0xfc00037c>
	textVGAClr();

	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
 8000410:	e0bf8b17 	ldw	r2,-468(fp)
 8000414:	10800044 	addi	r2,r2,1
 8000418:	e0bf8b15 	stw	r2,-468(fp)
 800041c:	e0bf8b17 	ldw	r2,-468(fp)
 8000420:	10800790 	cmplti	r2,r2,30
 8000424:	103fcc1e 	bne	r2,zero,8000358 <__alt_data_end+0xfc000358>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
 8000428:	e03f8d15 	stw	zero,-460(fp)
 800042c:	00005106 	br	8000574 <textVGATest+0x248>
	{
		readsum[j] = 0;
 8000430:	e0bf8d17 	ldw	r2,-460(fp)
 8000434:	1085883a 	add	r2,r2,r2
 8000438:	1085883a 	add	r2,r2,r2
 800043c:	e0ff8b04 	addi	r3,fp,-468
 8000440:	1885883a 	add	r2,r3,r2
 8000444:	10802704 	addi	r2,r2,156
 8000448:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
 800044c:	e03f8e15 	stw	zero,-456(fp)
 8000450:	00001c06 	br	80004c4 <textVGATest+0x198>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
 8000454:	d4200117 	ldw	r16,-32764(gp)
 8000458:	01401404 	movi	r5,80
 800045c:	e13f8d17 	ldw	r4,-460(fp)
 8000460:	80010a00 	call	80010a0 <__mulsi3>
 8000464:	1007883a 	mov	r3,r2
 8000468:	e0bf8e17 	ldw	r2,-456(fp)
 800046c:	1885883a 	add	r2,r3,r2
 8000470:	8085883a 	add	r2,r16,r2
 8000474:	11000003 	ldbu	r4,0(r2)
 8000478:	e0bf8d17 	ldw	r2,-460(fp)
 800047c:	1085883a 	add	r2,r2,r2
 8000480:	1085883a 	add	r2,r2,r2
 8000484:	e0ff8b04 	addi	r3,fp,-468
 8000488:	1885883a 	add	r2,r3,r2
 800048c:	10802704 	addi	r2,r2,156
 8000490:	10c00017 	ldw	r3,0(r2)
 8000494:	20803fcc 	andi	r2,r4,255
 8000498:	1887883a 	add	r3,r3,r2
 800049c:	e0bf8d17 	ldw	r2,-460(fp)
 80004a0:	1085883a 	add	r2,r2,r2
 80004a4:	1085883a 	add	r2,r2,r2
 80004a8:	e13f8b04 	addi	r4,fp,-468
 80004ac:	2085883a 	add	r2,r4,r2
 80004b0:	10802704 	addi	r2,r2,156
 80004b4:	10c00015 	stw	r3,0(r2)
		}
	}
	for (int j = 0; j < ROWS; j++)
	{
		readsum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
 80004b8:	e0bf8e17 	ldw	r2,-456(fp)
 80004bc:	10800044 	addi	r2,r2,1
 80004c0:	e0bf8e15 	stw	r2,-456(fp)
 80004c4:	e0bf8e17 	ldw	r2,-456(fp)
 80004c8:	10801410 	cmplti	r2,r2,80
 80004cc:	103fe11e 	bne	r2,zero,8000454 <__alt_data_end+0xfc000454>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
			//printf ("%x \n\r", vga_ctrl->VRAM[j*COLUMNS + i]);
		}
		printf ("Row: %d, Checksum: %x, Read-back Checksum: %x\n\r", j, checksum[j], readsum[j]);
 80004d0:	e0bf8d17 	ldw	r2,-460(fp)
 80004d4:	1085883a 	add	r2,r2,r2
 80004d8:	1085883a 	add	r2,r2,r2
 80004dc:	e0ff8b04 	addi	r3,fp,-468
 80004e0:	1885883a 	add	r2,r3,r2
 80004e4:	10800904 	addi	r2,r2,36
 80004e8:	10c00017 	ldw	r3,0(r2)
 80004ec:	e0bf8d17 	ldw	r2,-460(fp)
 80004f0:	1085883a 	add	r2,r2,r2
 80004f4:	1085883a 	add	r2,r2,r2
 80004f8:	e13f8b04 	addi	r4,fp,-468
 80004fc:	2085883a 	add	r2,r4,r2
 8000500:	10802704 	addi	r2,r2,156
 8000504:	10800017 	ldw	r2,0(r2)
 8000508:	100f883a 	mov	r7,r2
 800050c:	180d883a 	mov	r6,r3
 8000510:	e17f8d17 	ldw	r5,-460(fp)
 8000514:	01020074 	movhi	r4,2049
 8000518:	21103f04 	addi	r4,r4,16636
 800051c:	80012400 	call	8001240 <printf>
		if (checksum[j] != readsum[j])
 8000520:	e0bf8d17 	ldw	r2,-460(fp)
 8000524:	1085883a 	add	r2,r2,r2
 8000528:	1085883a 	add	r2,r2,r2
 800052c:	e0ff8b04 	addi	r3,fp,-468
 8000530:	1885883a 	add	r2,r3,r2
 8000534:	10800904 	addi	r2,r2,36
 8000538:	10c00017 	ldw	r3,0(r2)
 800053c:	e0bf8d17 	ldw	r2,-460(fp)
 8000540:	1085883a 	add	r2,r2,r2
 8000544:	1085883a 	add	r2,r2,r2
 8000548:	e13f8b04 	addi	r4,fp,-468
 800054c:	2085883a 	add	r2,r4,r2
 8000550:	10802704 	addi	r2,r2,156
 8000554:	10800017 	ldw	r2,0(r2)
 8000558:	18800326 	beq	r3,r2,8000568 <textVGATest+0x23c>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
 800055c:	01020074 	movhi	r4,2049
 8000560:	21104b04 	addi	r4,r4,16684
 8000564:	80012400 	call	8001240 <printf>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
 8000568:	e0bf8d17 	ldw	r2,-460(fp)
 800056c:	10800044 	addi	r2,r2,1
 8000570:	e0bf8d15 	stw	r2,-460(fp)
 8000574:	e0bf8d17 	ldw	r2,-460(fp)
 8000578:	10800790 	cmplti	r2,r2,30
 800057c:	103fac1e 	bne	r2,zero,8000430 <__alt_data_end+0xfc000430>

		}

	}
//	while (1){};
	printf ("Checksum code passed!...starting color test \n\r");
 8000580:	01020074 	movhi	r4,2049
 8000584:	21105704 	addi	r4,r4,16732
 8000588:	80012400 	call	8001240 <printf>
	usleep (500000);
 800058c:	01000234 	movhi	r4,8
 8000590:	21284804 	addi	r4,r4,-24288
 8000594:	80120280 	call	8012028 <usleep>
	textVGASetColor(DIM_GRN, BRIGHT_GRN);
 8000598:	01403c04 	movi	r5,240
 800059c:	01001c04 	movi	r4,112
 80005a0:	80002980 	call	8000298 <textVGASetColor>
	textVGAClr();
 80005a4:	80002dc0 	call	80002dc <textVGAClr>
	char greentest[] = "This text should draw in green";
 80005a8:	009cda74 	movhi	r2,29545
 80005ac:	109a1504 	addi	r2,r2,26708
 80005b0:	e0bfd015 	stw	r2,-192(fp)
 80005b4:	009e1974 	movhi	r2,30821
 80005b8:	109d0804 	addi	r2,r2,29728
 80005bc:	e0bfd115 	stw	r2,-188(fp)
 80005c0:	009a1cf4 	movhi	r2,26739
 80005c4:	10881d04 	addi	r2,r2,8308
 80005c8:	e0bfd215 	stw	r2,-184(fp)
 80005cc:	00991b34 	movhi	r2,25708
 80005d0:	109d5bc4 	addi	r2,r2,30063
 80005d4:	e0bfd315 	stw	r2,-180(fp)
 80005d8:	00985cb4 	movhi	r2,24946
 80005dc:	10990804 	addi	r2,r2,25632
 80005e0:	e0bfd415 	stw	r2,-176(fp)
 80005e4:	009b9a74 	movhi	r2,28265
 80005e8:	10881dc4 	addi	r2,r2,8311
 80005ec:	e0bfd515 	stw	r2,-172(fp)
 80005f0:	00995cb4 	movhi	r2,25970
 80005f4:	1099c804 	addi	r2,r2,26400
 80005f8:	e0bfd615 	stw	r2,-168(fp)
 80005fc:	009b9944 	movi	r2,28261
 8000600:	e0bfd70d 	sth	r2,-164(fp)
 8000604:	e03fd785 	stb	zero,-162(fp)
	{
		for (int j = 0; j < ROWS; j++)
 8000608:	e03f8f15 	stw	zero,-452(fp)
 800060c:	00001006 	br	8000650 <textVGATest+0x324>
		{
			memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+j,greentest, sizeof(greentest));
 8000610:	d4200117 	ldw	r16,-32764(gp)
 8000614:	01401404 	movi	r5,80
 8000618:	e13f8f17 	ldw	r4,-452(fp)
 800061c:	80010a00 	call	80010a0 <__mulsi3>
 8000620:	8087883a 	add	r3,r16,r2
 8000624:	e0bf8f17 	ldw	r2,-452(fp)
 8000628:	1885883a 	add	r2,r3,r2
 800062c:	1009883a 	mov	r4,r2
 8000630:	e0bfd004 	addi	r2,fp,-192
 8000634:	00c007c4 	movi	r3,31
 8000638:	180d883a 	mov	r6,r3
 800063c:	100b883a 	mov	r5,r2
 8000640:	80010c80 	call	80010c8 <memcpy>
	usleep (500000);
	textVGASetColor(DIM_GRN, BRIGHT_GRN);
	textVGAClr();
	char greentest[] = "This text should draw in green";
	{
		for (int j = 0; j < ROWS; j++)
 8000644:	e0bf8f17 	ldw	r2,-452(fp)
 8000648:	10800044 	addi	r2,r2,1
 800064c:	e0bf8f15 	stw	r2,-452(fp)
 8000650:	e0bf8f17 	ldw	r2,-452(fp)
 8000654:	10800790 	cmplti	r2,r2,30
 8000658:	103fed1e 	bne	r2,zero,8000610 <__alt_data_end+0xfc000610>
		{
			memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+j,greentest, sizeof(greentest));
		}
	}
	usleep (500000);
 800065c:	01000234 	movhi	r4,8
 8000660:	21284804 	addi	r4,r4,-24288
 8000664:	80120280 	call	8012028 <usleep>
	textVGASetColor(DIM_RED, BRIGHT_RED);
 8000668:	0143c004 	movi	r5,3840
 800066c:	0101c004 	movi	r4,1792
 8000670:	80002980 	call	8000298 <textVGASetColor>
	textVGAClr();
 8000674:	80002dc0 	call	80002dc <textVGAClr>
	char redtest[] = "This text should draw in red";
 8000678:	00820074 	movhi	r2,2049
 800067c:	10906504 	addi	r2,r2,16788
 8000680:	e0ffd7c4 	addi	r3,fp,-161
 8000684:	1009883a 	mov	r4,r2
 8000688:	00800744 	movi	r2,29
 800068c:	100d883a 	mov	r6,r2
 8000690:	200b883a 	mov	r5,r4
 8000694:	1809883a 	mov	r4,r3
 8000698:	80010c80 	call	80010c8 <memcpy>
	{
		for (int j = 0; j < ROWS; j++)
 800069c:	e03f9015 	stw	zero,-448(fp)
 80006a0:	00001206 	br	80006ec <textVGATest+0x3c0>
		{
			memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+(ROWS-j),redtest, sizeof(redtest));
 80006a4:	d4200117 	ldw	r16,-32764(gp)
 80006a8:	01401404 	movi	r5,80
 80006ac:	e13f9017 	ldw	r4,-448(fp)
 80006b0:	80010a00 	call	80010a0 <__mulsi3>
 80006b4:	8085883a 	add	r2,r16,r2
 80006b8:	01000784 	movi	r4,30
 80006bc:	e0ff9017 	ldw	r3,-448(fp)
 80006c0:	20c7c83a 	sub	r3,r4,r3
 80006c4:	10c5883a 	add	r2,r2,r3
 80006c8:	1009883a 	mov	r4,r2
 80006cc:	e0bfd7c4 	addi	r2,fp,-161
 80006d0:	00c00744 	movi	r3,29
 80006d4:	180d883a 	mov	r6,r3
 80006d8:	100b883a 	mov	r5,r2
 80006dc:	80010c80 	call	80010c8 <memcpy>
	usleep (500000);
	textVGASetColor(DIM_RED, BRIGHT_RED);
	textVGAClr();
	char redtest[] = "This text should draw in red";
	{
		for (int j = 0; j < ROWS; j++)
 80006e0:	e0bf9017 	ldw	r2,-448(fp)
 80006e4:	10800044 	addi	r2,r2,1
 80006e8:	e0bf9015 	stw	r2,-448(fp)
 80006ec:	e0bf9017 	ldw	r2,-448(fp)
 80006f0:	10800790 	cmplti	r2,r2,30
 80006f4:	103feb1e 	bne	r2,zero,80006a4 <__alt_data_end+0xfc0006a4>
		{
			memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+(ROWS-j),redtest, sizeof(redtest));
		}
	}
	usleep (500000);
 80006f8:	01000234 	movhi	r4,8
 80006fc:	21284804 	addi	r4,r4,-24288
 8000700:	80120280 	call	8012028 <usleep>
	textVGASetColor(DIM_BLU, BRIGHT_BLU);
 8000704:	014003c4 	movi	r5,15
 8000708:	010001c4 	movi	r4,7
 800070c:	80002980 	call	8000298 <textVGASetColor>
	textVGAClr();
 8000710:	80002dc0 	call	80002dc <textVGAClr>
	char blutest[] = "This text should draw in blue";
 8000714:	009cda74 	movhi	r2,29545
 8000718:	109a1504 	addi	r2,r2,26708
 800071c:	e0bfdf15 	stw	r2,-132(fp)
 8000720:	009e1974 	movhi	r2,30821
 8000724:	109d0804 	addi	r2,r2,29728
 8000728:	e0bfe015 	stw	r2,-128(fp)
 800072c:	009a1cf4 	movhi	r2,26739
 8000730:	10881d04 	addi	r2,r2,8308
 8000734:	e0bfe115 	stw	r2,-124(fp)
 8000738:	00991b34 	movhi	r2,25708
 800073c:	109d5bc4 	addi	r2,r2,30063
 8000740:	e0bfe215 	stw	r2,-120(fp)
 8000744:	00985cb4 	movhi	r2,24946
 8000748:	10990804 	addi	r2,r2,25632
 800074c:	e0bfe315 	stw	r2,-116(fp)
 8000750:	009b9a74 	movhi	r2,28265
 8000754:	10881dc4 	addi	r2,r2,8311
 8000758:	e0bfe415 	stw	r2,-112(fp)
 800075c:	009d5b34 	movhi	r2,30060
 8000760:	10988804 	addi	r2,r2,25120
 8000764:	e0bfe515 	stw	r2,-108(fp)
 8000768:	00801944 	movi	r2,101
 800076c:	e0bfe60d 	sth	r2,-104(fp)
	{
		for (int j = 0; j < ROWS; j++)
 8000770:	e03f9115 	stw	zero,-444(fp)
 8000774:	00000e06 	br	80007b0 <textVGATest+0x484>
		{
			memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS],blutest, sizeof(blutest));
 8000778:	d4200117 	ldw	r16,-32764(gp)
 800077c:	01401404 	movi	r5,80
 8000780:	e13f9117 	ldw	r4,-444(fp)
 8000784:	80010a00 	call	80010a0 <__mulsi3>
 8000788:	8085883a 	add	r2,r16,r2
 800078c:	1009883a 	mov	r4,r2
 8000790:	e0bfdf04 	addi	r2,fp,-132
 8000794:	00c00784 	movi	r3,30
 8000798:	180d883a 	mov	r6,r3
 800079c:	100b883a 	mov	r5,r2
 80007a0:	80010c80 	call	80010c8 <memcpy>
	usleep (500000);
	textVGASetColor(DIM_BLU, BRIGHT_BLU);
	textVGAClr();
	char blutest[] = "This text should draw in blue";
	{
		for (int j = 0; j < ROWS; j++)
 80007a4:	e0bf9117 	ldw	r2,-444(fp)
 80007a8:	10800044 	addi	r2,r2,1
 80007ac:	e0bf9115 	stw	r2,-444(fp)
 80007b0:	e0bf9117 	ldw	r2,-444(fp)
 80007b4:	10800790 	cmplti	r2,r2,30
 80007b8:	103fef1e 	bne	r2,zero,8000778 <__alt_data_end+0xfc000778>
		{
			memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS],blutest, sizeof(blutest));
		}
	}
	usleep (500000);
 80007bc:	01000234 	movhi	r4,8
 80007c0:	21284804 	addi	r4,r4,-24288
 80007c4:	80120280 	call	8012028 <usleep>
	textVGAClr();
 80007c8:	80002dc0 	call	80002dc <textVGAClr>
	char inverted[] = "This text should draw inverted";
 80007cc:	00820074 	movhi	r2,2049
 80007d0:	10906d04 	addi	r2,r2,16820
 80007d4:	e0ffe684 	addi	r3,fp,-102
 80007d8:	1009883a 	mov	r4,r2
 80007dc:	008007c4 	movi	r2,31
 80007e0:	100d883a 	mov	r6,r2
 80007e4:	200b883a 	mov	r5,r4
 80007e8:	1809883a 	mov	r4,r3
 80007ec:	80010c80 	call	80010c8 <memcpy>
	for (int i = 0; i < sizeof(inverted); i++)
 80007f0:	e03f9215 	stw	zero,-440(fp)
 80007f4:	00000e06 	br	8000830 <textVGATest+0x504>
		inverted[i] |= 0x80;
 80007f8:	e0ffe684 	addi	r3,fp,-102
 80007fc:	e0bf9217 	ldw	r2,-440(fp)
 8000800:	1885883a 	add	r2,r3,r2
 8000804:	10c00003 	ldbu	r3,0(r2)
 8000808:	00bfe004 	movi	r2,-128
 800080c:	1884b03a 	or	r2,r3,r2
 8000810:	1009883a 	mov	r4,r2
 8000814:	e0ffe684 	addi	r3,fp,-102
 8000818:	e0bf9217 	ldw	r2,-440(fp)
 800081c:	1885883a 	add	r2,r3,r2
 8000820:	11000005 	stb	r4,0(r2)
		}
	}
	usleep (500000);
	textVGAClr();
	char inverted[] = "This text should draw inverted";
	for (int i = 0; i < sizeof(inverted); i++)
 8000824:	e0bf9217 	ldw	r2,-440(fp)
 8000828:	10800044 	addi	r2,r2,1
 800082c:	e0bf9215 	stw	r2,-440(fp)
 8000830:	e0bf9217 	ldw	r2,-440(fp)
 8000834:	108007f0 	cmpltui	r2,r2,31
 8000838:	103fef1e 	bne	r2,zero,80007f8 <__alt_data_end+0xfc0007f8>
		inverted[i] |= 0x80;

	textVGASetColor(DIM_GRN, BRIGHT_GRN);
 800083c:	01403c04 	movi	r5,240
 8000840:	01001c04 	movi	r4,112
 8000844:	80002980 	call	8000298 <textVGASetColor>
	{
		for (int j = 0; j < ROWS; j++)
 8000848:	e03f9315 	stw	zero,-436(fp)
 800084c:	00002106 	br	80008d4 <textVGATest+0x5a8>
		{
			if (j%2==0)
 8000850:	e0bf9317 	ldw	r2,-436(fp)
 8000854:	1080004c 	andi	r2,r2,1
 8000858:	10000e1e 	bne	r2,zero,8000894 <textVGATest+0x568>
				memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+j,greentest, sizeof(greentest));
 800085c:	d4200117 	ldw	r16,-32764(gp)
 8000860:	01401404 	movi	r5,80
 8000864:	e13f9317 	ldw	r4,-436(fp)
 8000868:	80010a00 	call	80010a0 <__mulsi3>
 800086c:	8087883a 	add	r3,r16,r2
 8000870:	e0bf9317 	ldw	r2,-436(fp)
 8000874:	1885883a 	add	r2,r3,r2
 8000878:	1009883a 	mov	r4,r2
 800087c:	e0bfd004 	addi	r2,fp,-192
 8000880:	00c007c4 	movi	r3,31
 8000884:	180d883a 	mov	r6,r3
 8000888:	100b883a 	mov	r5,r2
 800088c:	80010c80 	call	80010c8 <memcpy>
 8000890:	00000d06 	br	80008c8 <textVGATest+0x59c>
			else
				memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+j,inverted, sizeof(inverted));
 8000894:	d4200117 	ldw	r16,-32764(gp)
 8000898:	01401404 	movi	r5,80
 800089c:	e13f9317 	ldw	r4,-436(fp)
 80008a0:	80010a00 	call	80010a0 <__mulsi3>
 80008a4:	8087883a 	add	r3,r16,r2
 80008a8:	e0bf9317 	ldw	r2,-436(fp)
 80008ac:	1885883a 	add	r2,r3,r2
 80008b0:	1009883a 	mov	r4,r2
 80008b4:	e0bfe684 	addi	r2,fp,-102
 80008b8:	00c007c4 	movi	r3,31
 80008bc:	180d883a 	mov	r6,r3
 80008c0:	100b883a 	mov	r5,r2
 80008c4:	80010c80 	call	80010c8 <memcpy>
	for (int i = 0; i < sizeof(inverted); i++)
		inverted[i] |= 0x80;

	textVGASetColor(DIM_GRN, BRIGHT_GRN);
	{
		for (int j = 0; j < ROWS; j++)
 80008c8:	e0bf9317 	ldw	r2,-436(fp)
 80008cc:	10800044 	addi	r2,r2,1
 80008d0:	e0bf9315 	stw	r2,-436(fp)
 80008d4:	e0bf9317 	ldw	r2,-436(fp)
 80008d8:	10800790 	cmplti	r2,r2,30
 80008dc:	103fdc1e 	bne	r2,zero,8000850 <__alt_data_end+0xfc000850>
				memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+j,greentest, sizeof(greentest));
			else
				memcpy((void*)&vga_ctrl->VRAM[j*COLUMNS]+j,inverted, sizeof(inverted));
		}
	}
	usleep (500000);
 80008e0:	01000234 	movhi	r4,8
 80008e4:	21284804 	addi	r4,r4,-24288
 80008e8:	80120280 	call	8012028 <usleep>

	textVGASetColor(BLACK, WHITE);
 80008ec:	0143ffc4 	movi	r5,4095
 80008f0:	0009883a 	mov	r4,zero
 80008f4:	80002980 	call	8000298 <textVGASetColor>
	textVGAClr();
 80008f8:	80002dc0 	call	80002dc <textVGAClr>

	char completed[] = "All visual tests completed, verify on-screen results are correct.";
 80008fc:	00820074 	movhi	r2,2049
 8000900:	10907504 	addi	r2,r2,16852
 8000904:	e0ffee44 	addi	r3,fp,-71
 8000908:	1009883a 	mov	r4,r2
 800090c:	00801084 	movi	r2,66
 8000910:	100d883a 	mov	r6,r2
 8000914:	200b883a 	mov	r5,r4
 8000918:	1809883a 	mov	r4,r3
 800091c:	80010c80 	call	80010c8 <memcpy>
	memcpy((void*)&vga_ctrl->VRAM[0],completed, sizeof(completed));
 8000920:	d0a00117 	ldw	r2,-32764(gp)
 8000924:	1009883a 	mov	r4,r2
 8000928:	e0bfee44 	addi	r2,fp,-71
 800092c:	00c01084 	movi	r3,66
 8000930:	180d883a 	mov	r6,r3
 8000934:	100b883a 	mov	r5,r2
 8000938:	80010c80 	call	80010c8 <memcpy>
	printf( "%s \n\r", completed);
 800093c:	e0bfee44 	addi	r2,fp,-71
 8000940:	100b883a 	mov	r5,r2
 8000944:	01020074 	movhi	r4,2049
 8000948:	21106304 	addi	r4,r4,16780
 800094c:	80012400 	call	8001240 <printf>

	usleep (1000000);
 8000950:	010003f4 	movhi	r4,15
 8000954:	21109004 	addi	r4,r4,16960
 8000958:	80120280 	call	8012028 <usleep>

}
 800095c:	0001883a 	nop
 8000960:	e6ffff04 	addi	sp,fp,-4
 8000964:	dfc00217 	ldw	ra,8(sp)
 8000968:	df000117 	ldw	fp,4(sp)
 800096c:	dc000017 	ldw	r16,0(sp)
 8000970:	dec00304 	addi	sp,sp,12
 8000974:	f800283a 	ret

08000978 <textVGAColorClr>:
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
 8000978:	defffe04 	addi	sp,sp,-8
 800097c:	df000115 	stw	fp,4(sp)
 8000980:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
 8000984:	e03fff15 	stw	zero,-4(fp)
 8000988:	00000706 	br	80009a8 <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
 800098c:	d0e00217 	ldw	r3,-32760(gp)
 8000990:	e0bfff17 	ldw	r2,-4(fp)
 8000994:	1885883a 	add	r2,r3,r2
 8000998:	10000005 	stb	zero,0(r2)
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
 800099c:	e0bfff17 	ldw	r2,-4(fp)
 80009a0:	10800044 	addi	r2,r2,1
 80009a4:	e0bfff15 	stw	r2,-4(fp)
 80009a8:	e0bfff17 	ldw	r2,-4(fp)
 80009ac:	1084b010 	cmplti	r2,r2,4800
 80009b0:	103ff61e 	bne	r2,zero,800098c <__alt_data_end+0xfc00098c>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}
 80009b4:	0001883a 	nop
 80009b8:	e037883a 	mov	sp,fp
 80009bc:	df000017 	ldw	fp,0(sp)
 80009c0:	dec00104 	addi	sp,sp,4
 80009c4:	f800283a 	ret

080009c8 <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
 80009c8:	defff704 	addi	sp,sp,-36
 80009cc:	dfc00815 	stw	ra,32(sp)
 80009d0:	df000715 	stw	fp,28(sp)
 80009d4:	dc000615 	stw	r16,24(sp)
 80009d8:	df000704 	addi	fp,sp,28
 80009dc:	e13ffa15 	stw	r4,-24(fp)
 80009e0:	e17ffb15 	stw	r5,-20(fp)
 80009e4:	e1bffc15 	stw	r6,-16(fp)
 80009e8:	3807883a 	mov	r3,r7
 80009ec:	e0800217 	ldw	r2,8(fp)
 80009f0:	e0fffd05 	stb	r3,-12(fp)
 80009f4:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
 80009f8:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
 80009fc:	00002706 	br	8000a9c <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
 8000a00:	d4200217 	ldw	r16,-32760(gp)
 8000a04:	01401404 	movi	r5,80
 8000a08:	e13ffc17 	ldw	r4,-16(fp)
 8000a0c:	80010a00 	call	80010a0 <__mulsi3>
 8000a10:	1007883a 	mov	r3,r2
 8000a14:	e0bffb17 	ldw	r2,-20(fp)
 8000a18:	1887883a 	add	r3,r3,r2
 8000a1c:	e0bff917 	ldw	r2,-28(fp)
 8000a20:	1885883a 	add	r2,r3,r2
 8000a24:	1085883a 	add	r2,r2,r2
 8000a28:	1009883a 	mov	r4,r2
 8000a2c:	e0bffe03 	ldbu	r2,-8(fp)
 8000a30:	1004913a 	slli	r2,r2,4
 8000a34:	1007883a 	mov	r3,r2
 8000a38:	e0bffd03 	ldbu	r2,-12(fp)
 8000a3c:	1884b03a 	or	r2,r3,r2
 8000a40:	1007883a 	mov	r3,r2
 8000a44:	8105883a 	add	r2,r16,r4
 8000a48:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
 8000a4c:	d4200217 	ldw	r16,-32760(gp)
 8000a50:	01401404 	movi	r5,80
 8000a54:	e13ffc17 	ldw	r4,-16(fp)
 8000a58:	80010a00 	call	80010a0 <__mulsi3>
 8000a5c:	1007883a 	mov	r3,r2
 8000a60:	e0bffb17 	ldw	r2,-20(fp)
 8000a64:	1887883a 	add	r3,r3,r2
 8000a68:	e0bff917 	ldw	r2,-28(fp)
 8000a6c:	1885883a 	add	r2,r3,r2
 8000a70:	1085883a 	add	r2,r2,r2
 8000a74:	10800044 	addi	r2,r2,1
 8000a78:	e0fff917 	ldw	r3,-28(fp)
 8000a7c:	e13ffa17 	ldw	r4,-24(fp)
 8000a80:	20c7883a 	add	r3,r4,r3
 8000a84:	18c00003 	ldbu	r3,0(r3)
 8000a88:	8085883a 	add	r2,r16,r2
 8000a8c:	10c00005 	stb	r3,0(r2)
		i++;
 8000a90:	e0bff917 	ldw	r2,-28(fp)
 8000a94:	10800044 	addi	r2,r2,1
 8000a98:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
 8000a9c:	e0bff917 	ldw	r2,-28(fp)
 8000aa0:	e0fffa17 	ldw	r3,-24(fp)
 8000aa4:	1885883a 	add	r2,r3,r2
 8000aa8:	10800003 	ldbu	r2,0(r2)
 8000aac:	10803fcc 	andi	r2,r2,255
 8000ab0:	1080201c 	xori	r2,r2,128
 8000ab4:	10bfe004 	addi	r2,r2,-128
 8000ab8:	103fd11e 	bne	r2,zero,8000a00 <__alt_data_end+0xfc000a00>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
 8000abc:	0001883a 	nop
 8000ac0:	e6ffff04 	addi	sp,fp,-4
 8000ac4:	dfc00217 	ldw	ra,8(sp)
 8000ac8:	df000117 	ldw	fp,4(sp)
 8000acc:	dc000017 	ldw	r16,0(sp)
 8000ad0:	dec00304 	addi	sp,sp,12
 8000ad4:	f800283a 	ret

08000ad8 <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
 8000ad8:	defff904 	addi	sp,sp,-28
 8000adc:	df000615 	stw	fp,24(sp)
 8000ae0:	df000604 	addi	fp,sp,24
 8000ae4:	2011883a 	mov	r8,r4
 8000ae8:	2809883a 	mov	r4,r5
 8000aec:	3007883a 	mov	r3,r6
 8000af0:	3805883a 	mov	r2,r7
 8000af4:	e23ffc05 	stb	r8,-16(fp)
 8000af8:	e13ffd05 	stb	r4,-12(fp)
 8000afc:	e0fffe05 	stb	r3,-8(fp)
 8000b00:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	int color_row = color / 2;
 8000b04:	e0bffc03 	ldbu	r2,-16(fp)
 8000b08:	1004d07a 	srli	r2,r2,1
 8000b0c:	10803fcc 	andi	r2,r2,255
 8000b10:	e0bffa15 	stw	r2,-24(fp)
	int color_col = color % 2;
 8000b14:	e0bffc03 	ldbu	r2,-16(fp)
 8000b18:	1080004c 	andi	r2,r2,1
 8000b1c:	e0bffb15 	stw	r2,-20(fp)
	if (color_col == 0) {
 8000b20:	e0bffb17 	ldw	r2,-20(fp)
 8000b24:	1000291e 	bne	r2,zero,8000bcc <setColorPalette+0xf4>
		vga_ctrl -> COLOR[color_row] &= ~(0xFFF << 1);
 8000b28:	d1200217 	ldw	r4,-32760(gp)
 8000b2c:	d0e00217 	ldw	r3,-32760(gp)
 8000b30:	e0bffa17 	ldw	r2,-24(fp)
 8000b34:	10820004 	addi	r2,r2,2048
 8000b38:	1085883a 	add	r2,r2,r2
 8000b3c:	1085883a 	add	r2,r2,r2
 8000b40:	1885883a 	add	r2,r3,r2
 8000b44:	10c00017 	ldw	r3,0(r2)
 8000b48:	00b80044 	movi	r2,-8191
 8000b4c:	1886703a 	and	r3,r3,r2
 8000b50:	e0bffa17 	ldw	r2,-24(fp)
 8000b54:	10820004 	addi	r2,r2,2048
 8000b58:	1085883a 	add	r2,r2,r2
 8000b5c:	1085883a 	add	r2,r2,r2
 8000b60:	2085883a 	add	r2,r4,r2
 8000b64:	10c00015 	stw	r3,0(r2)
		vga_ctrl -> COLOR[color_row] |= (blue << 1 | green << 5 | red << 9);
 8000b68:	d1200217 	ldw	r4,-32760(gp)
 8000b6c:	d0e00217 	ldw	r3,-32760(gp)
 8000b70:	e0bffa17 	ldw	r2,-24(fp)
 8000b74:	10820004 	addi	r2,r2,2048
 8000b78:	1085883a 	add	r2,r2,r2
 8000b7c:	1085883a 	add	r2,r2,r2
 8000b80:	1885883a 	add	r2,r3,r2
 8000b84:	10c00017 	ldw	r3,0(r2)
 8000b88:	e0bfff03 	ldbu	r2,-4(fp)
 8000b8c:	1085883a 	add	r2,r2,r2
 8000b90:	100b883a 	mov	r5,r2
 8000b94:	e0bffe03 	ldbu	r2,-8(fp)
 8000b98:	1004917a 	slli	r2,r2,5
 8000b9c:	288ab03a 	or	r5,r5,r2
 8000ba0:	e0bffd03 	ldbu	r2,-12(fp)
 8000ba4:	1004927a 	slli	r2,r2,9
 8000ba8:	2884b03a 	or	r2,r5,r2
 8000bac:	1886b03a 	or	r3,r3,r2
 8000bb0:	e0bffa17 	ldw	r2,-24(fp)
 8000bb4:	10820004 	addi	r2,r2,2048
 8000bb8:	1085883a 	add	r2,r2,r2
 8000bbc:	1085883a 	add	r2,r2,r2
 8000bc0:	2085883a 	add	r2,r4,r2
 8000bc4:	10c00015 	stw	r3,0(r2)
	else {
		vga_ctrl -> COLOR[color_row] &= ~(0xFFF << 13);
		vga_ctrl -> COLOR[color_row] |= (blue << 13 | green << 17 | red << 21);
	}

}
 8000bc8:	00002806 	br	8000c6c <setColorPalette+0x194>
	if (color_col == 0) {
		vga_ctrl -> COLOR[color_row] &= ~(0xFFF << 1);
		vga_ctrl -> COLOR[color_row] |= (blue << 1 | green << 5 | red << 9);
	}
	else {
		vga_ctrl -> COLOR[color_row] &= ~(0xFFF << 13);
 8000bcc:	d1200217 	ldw	r4,-32760(gp)
 8000bd0:	d0e00217 	ldw	r3,-32760(gp)
 8000bd4:	e0bffa17 	ldw	r2,-24(fp)
 8000bd8:	10820004 	addi	r2,r2,2048
 8000bdc:	1085883a 	add	r2,r2,r2
 8000be0:	1085883a 	add	r2,r2,r2
 8000be4:	1885883a 	add	r2,r3,r2
 8000be8:	10c00017 	ldw	r3,0(r2)
 8000bec:	00bf8034 	movhi	r2,65024
 8000bf0:	1087ffc4 	addi	r2,r2,8191
 8000bf4:	1886703a 	and	r3,r3,r2
 8000bf8:	e0bffa17 	ldw	r2,-24(fp)
 8000bfc:	10820004 	addi	r2,r2,2048
 8000c00:	1085883a 	add	r2,r2,r2
 8000c04:	1085883a 	add	r2,r2,r2
 8000c08:	2085883a 	add	r2,r4,r2
 8000c0c:	10c00015 	stw	r3,0(r2)
		vga_ctrl -> COLOR[color_row] |= (blue << 13 | green << 17 | red << 21);
 8000c10:	d1200217 	ldw	r4,-32760(gp)
 8000c14:	d0e00217 	ldw	r3,-32760(gp)
 8000c18:	e0bffa17 	ldw	r2,-24(fp)
 8000c1c:	10820004 	addi	r2,r2,2048
 8000c20:	1085883a 	add	r2,r2,r2
 8000c24:	1085883a 	add	r2,r2,r2
 8000c28:	1885883a 	add	r2,r3,r2
 8000c2c:	10800017 	ldw	r2,0(r2)
 8000c30:	e0ffff03 	ldbu	r3,-4(fp)
 8000c34:	180a937a 	slli	r5,r3,13
 8000c38:	e0fffe03 	ldbu	r3,-8(fp)
 8000c3c:	1806947a 	slli	r3,r3,17
 8000c40:	28cab03a 	or	r5,r5,r3
 8000c44:	e0fffd03 	ldbu	r3,-12(fp)
 8000c48:	1806957a 	slli	r3,r3,21
 8000c4c:	28c6b03a 	or	r3,r5,r3
 8000c50:	10c6b03a 	or	r3,r2,r3
 8000c54:	e0bffa17 	ldw	r2,-24(fp)
 8000c58:	10820004 	addi	r2,r2,2048
 8000c5c:	1085883a 	add	r2,r2,r2
 8000c60:	1085883a 	add	r2,r2,r2
 8000c64:	2085883a 	add	r2,r4,r2
 8000c68:	10c00015 	stw	r3,0(r2)
	}

}
 8000c6c:	0001883a 	nop
 8000c70:	e037883a 	mov	sp,fp
 8000c74:	df000017 	ldw	fp,0(sp)
 8000c78:	dec00104 	addi	sp,sp,4
 8000c7c:	f800283a 	ret

08000c80 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
 8000c80:	deffe004 	addi	sp,sp,-128
 8000c84:	dfc01f15 	stw	ra,124(sp)
 8000c88:	df001e15 	stw	fp,120(sp)
 8000c8c:	dcc01d15 	stw	r19,116(sp)
 8000c90:	dc801c15 	stw	r18,112(sp)
 8000c94:	dc401b15 	stw	r17,108(sp)
 8000c98:	dc001a15 	stw	r16,104(sp)
 8000c9c:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
 8000ca0:	80009780 	call	8000978 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
 8000ca4:	e03fe515 	stw	zero,-108(fp)
 8000ca8:	00002806 	br	8000d4c <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
 8000cac:	e0bfe517 	ldw	r2,-108(fp)
 8000cb0:	14403fcc 	andi	r17,r2,255
 8000cb4:	04020074 	movhi	r16,2049
 8000cb8:	8411ba04 	addi	r16,r16,18152
 8000cbc:	e0bfe517 	ldw	r2,-108(fp)
 8000cc0:	014005c4 	movi	r5,23
 8000cc4:	1009883a 	mov	r4,r2
 8000cc8:	80010a00 	call	80010a0 <__mulsi3>
 8000ccc:	8085883a 	add	r2,r16,r2
 8000cd0:	10800504 	addi	r2,r2,20
 8000cd4:	10800003 	ldbu	r2,0(r2)
 8000cd8:	14803fcc 	andi	r18,r2,255
 8000cdc:	04020074 	movhi	r16,2049
 8000ce0:	8411ba04 	addi	r16,r16,18152
 8000ce4:	e0bfe517 	ldw	r2,-108(fp)
 8000ce8:	014005c4 	movi	r5,23
 8000cec:	1009883a 	mov	r4,r2
 8000cf0:	80010a00 	call	80010a0 <__mulsi3>
 8000cf4:	8085883a 	add	r2,r16,r2
 8000cf8:	10800544 	addi	r2,r2,21
 8000cfc:	10800003 	ldbu	r2,0(r2)
 8000d00:	14c03fcc 	andi	r19,r2,255
 8000d04:	04020074 	movhi	r16,2049
 8000d08:	8411ba04 	addi	r16,r16,18152
 8000d0c:	e0bfe517 	ldw	r2,-108(fp)
 8000d10:	014005c4 	movi	r5,23
 8000d14:	1009883a 	mov	r4,r2
 8000d18:	80010a00 	call	80010a0 <__mulsi3>
 8000d1c:	8085883a 	add	r2,r16,r2
 8000d20:	10800584 	addi	r2,r2,22
 8000d24:	10800003 	ldbu	r2,0(r2)
 8000d28:	10803fcc 	andi	r2,r2,255
 8000d2c:	100f883a 	mov	r7,r2
 8000d30:	980d883a 	mov	r6,r19
 8000d34:	900b883a 	mov	r5,r18
 8000d38:	8809883a 	mov	r4,r17
 8000d3c:	8000ad80 	call	8000ad8 <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
 8000d40:	e0bfe517 	ldw	r2,-108(fp)
 8000d44:	10800044 	addi	r2,r2,1
 8000d48:	e0bfe515 	stw	r2,-108(fp)
 8000d4c:	e0bfe517 	ldw	r2,-108(fp)
 8000d50:	10800410 	cmplti	r2,r2,16
 8000d54:	103fd51e 	bne	r2,zero,8000cac <__alt_data_end+0xfc000cac>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
 8000d58:	80012940 	call	8001294 <rand>
 8000d5c:	1007883a 	mov	r3,r2
 8000d60:	00a00034 	movhi	r2,32768
 8000d64:	108003c4 	addi	r2,r2,15
 8000d68:	1884703a 	and	r2,r3,r2
 8000d6c:	1000040e 	bge	r2,zero,8000d80 <textVGAColorScreenSaver+0x100>
 8000d70:	10bfffc4 	addi	r2,r2,-1
 8000d74:	00fffc04 	movi	r3,-16
 8000d78:	10c4b03a 	or	r2,r2,r3
 8000d7c:	10800044 	addi	r2,r2,1
 8000d80:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
 8000d84:	80012940 	call	8001294 <rand>
 8000d88:	1007883a 	mov	r3,r2
 8000d8c:	00a00034 	movhi	r2,32768
 8000d90:	108003c4 	addi	r2,r2,15
 8000d94:	1884703a 	and	r2,r3,r2
 8000d98:	1000040e 	bge	r2,zero,8000dac <textVGAColorScreenSaver+0x12c>
 8000d9c:	10bfffc4 	addi	r2,r2,-1
 8000da0:	00fffc04 	movi	r3,-16
 8000da4:	10c4b03a 	or	r2,r2,r3
 8000da8:	10800044 	addi	r2,r2,1
 8000dac:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
 8000db0:	00001606 	br	8000e0c <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
 8000db4:	80012940 	call	8001294 <rand>
 8000db8:	1007883a 	mov	r3,r2
 8000dbc:	00a00034 	movhi	r2,32768
 8000dc0:	108003c4 	addi	r2,r2,15
 8000dc4:	1884703a 	and	r2,r3,r2
 8000dc8:	1000040e 	bge	r2,zero,8000ddc <textVGAColorScreenSaver+0x15c>
 8000dcc:	10bfffc4 	addi	r2,r2,-1
 8000dd0:	00fffc04 	movi	r3,-16
 8000dd4:	10c4b03a 	or	r2,r2,r3
 8000dd8:	10800044 	addi	r2,r2,1
 8000ddc:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
 8000de0:	80012940 	call	8001294 <rand>
 8000de4:	1007883a 	mov	r3,r2
 8000de8:	00a00034 	movhi	r2,32768
 8000dec:	108003c4 	addi	r2,r2,15
 8000df0:	1884703a 	and	r2,r3,r2
 8000df4:	1000040e 	bge	r2,zero,8000e08 <textVGAColorScreenSaver+0x188>
 8000df8:	10bfffc4 	addi	r2,r2,-1
 8000dfc:	00fffc04 	movi	r3,-16
 8000e00:	10c4b03a 	or	r2,r2,r3
 8000e04:	10800044 	addi	r2,r2,1
 8000e08:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
 8000e0c:	e0ffe317 	ldw	r3,-116(fp)
 8000e10:	e0bfe417 	ldw	r2,-112(fp)
 8000e14:	18bfe726 	beq	r3,r2,8000db4 <__alt_data_end+0xfc000db4>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
 8000e18:	014005c4 	movi	r5,23
 8000e1c:	e13fe317 	ldw	r4,-116(fp)
 8000e20:	80010a00 	call	80010a0 <__mulsi3>
 8000e24:	1007883a 	mov	r3,r2
 8000e28:	00820074 	movhi	r2,2049
 8000e2c:	1091ba04 	addi	r2,r2,18152
 8000e30:	18a1883a 	add	r16,r3,r2
 8000e34:	014005c4 	movi	r5,23
 8000e38:	e13fe417 	ldw	r4,-112(fp)
 8000e3c:	80010a00 	call	80010a0 <__mulsi3>
 8000e40:	1007883a 	mov	r3,r2
 8000e44:	00820074 	movhi	r2,2049
 8000e48:	1091ba04 	addi	r2,r2,18152
 8000e4c:	1887883a 	add	r3,r3,r2
 8000e50:	e0bfe804 	addi	r2,fp,-96
 8000e54:	180f883a 	mov	r7,r3
 8000e58:	800d883a 	mov	r6,r16
 8000e5c:	01420074 	movhi	r5,2049
 8000e60:	29508604 	addi	r5,r5,16920
 8000e64:	1009883a 	mov	r4,r2
 8000e68:	80013500 	call	8001350 <sprintf>
		x = rand() % (80-strlen(color_string));
 8000e6c:	80012940 	call	8001294 <rand>
 8000e70:	1021883a 	mov	r16,r2
 8000e74:	e0bfe804 	addi	r2,fp,-96
 8000e78:	1009883a 	mov	r4,r2
 8000e7c:	80013bc0 	call	80013bc <strlen>
 8000e80:	1007883a 	mov	r3,r2
 8000e84:	00801404 	movi	r2,80
 8000e88:	10c5c83a 	sub	r2,r2,r3
 8000e8c:	100b883a 	mov	r5,r2
 8000e90:	8009883a 	mov	r4,r16
 8000e94:	80010480 	call	8001048 <__umodsi3>
 8000e98:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
 8000e9c:	80012940 	call	8001294 <rand>
 8000ea0:	01400784 	movi	r5,30
 8000ea4:	1009883a 	mov	r4,r2
 8000ea8:	8000f700 	call	8000f70 <__modsi3>
 8000eac:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
 8000eb0:	e0bfe417 	ldw	r2,-112(fp)
 8000eb4:	11003fcc 	andi	r4,r2,255
 8000eb8:	e0bfe317 	ldw	r2,-116(fp)
 8000ebc:	10803fcc 	andi	r2,r2,255
 8000ec0:	e0ffe804 	addi	r3,fp,-96
 8000ec4:	d8800015 	stw	r2,0(sp)
 8000ec8:	200f883a 	mov	r7,r4
 8000ecc:	e1bfe717 	ldw	r6,-100(fp)
 8000ed0:	e17fe617 	ldw	r5,-104(fp)
 8000ed4:	1809883a 	mov	r4,r3
 8000ed8:	80009c80 	call	80009c8 <textVGADrawColorText>
		usleep (100000);
 8000edc:	010000b4 	movhi	r4,2
 8000ee0:	2121a804 	addi	r4,r4,-31072
 8000ee4:	80120280 	call	8012028 <usleep>
	}
 8000ee8:	003f9b06 	br	8000d58 <__alt_data_end+0xfc000d58>

08000eec <__divsi3>:
 8000eec:	20001b16 	blt	r4,zero,8000f5c <__divsi3+0x70>
 8000ef0:	000f883a 	mov	r7,zero
 8000ef4:	28001616 	blt	r5,zero,8000f50 <__divsi3+0x64>
 8000ef8:	200d883a 	mov	r6,r4
 8000efc:	29001a2e 	bgeu	r5,r4,8000f68 <__divsi3+0x7c>
 8000f00:	00800804 	movi	r2,32
 8000f04:	00c00044 	movi	r3,1
 8000f08:	00000106 	br	8000f10 <__divsi3+0x24>
 8000f0c:	10000d26 	beq	r2,zero,8000f44 <__divsi3+0x58>
 8000f10:	294b883a 	add	r5,r5,r5
 8000f14:	10bfffc4 	addi	r2,r2,-1
 8000f18:	18c7883a 	add	r3,r3,r3
 8000f1c:	293ffb36 	bltu	r5,r4,8000f0c <__alt_data_end+0xfc000f0c>
 8000f20:	0005883a 	mov	r2,zero
 8000f24:	18000726 	beq	r3,zero,8000f44 <__divsi3+0x58>
 8000f28:	0005883a 	mov	r2,zero
 8000f2c:	31400236 	bltu	r6,r5,8000f38 <__divsi3+0x4c>
 8000f30:	314dc83a 	sub	r6,r6,r5
 8000f34:	10c4b03a 	or	r2,r2,r3
 8000f38:	1806d07a 	srli	r3,r3,1
 8000f3c:	280ad07a 	srli	r5,r5,1
 8000f40:	183ffa1e 	bne	r3,zero,8000f2c <__alt_data_end+0xfc000f2c>
 8000f44:	38000126 	beq	r7,zero,8000f4c <__divsi3+0x60>
 8000f48:	0085c83a 	sub	r2,zero,r2
 8000f4c:	f800283a 	ret
 8000f50:	014bc83a 	sub	r5,zero,r5
 8000f54:	39c0005c 	xori	r7,r7,1
 8000f58:	003fe706 	br	8000ef8 <__alt_data_end+0xfc000ef8>
 8000f5c:	0109c83a 	sub	r4,zero,r4
 8000f60:	01c00044 	movi	r7,1
 8000f64:	003fe306 	br	8000ef4 <__alt_data_end+0xfc000ef4>
 8000f68:	00c00044 	movi	r3,1
 8000f6c:	003fee06 	br	8000f28 <__alt_data_end+0xfc000f28>

08000f70 <__modsi3>:
 8000f70:	20001716 	blt	r4,zero,8000fd0 <__modsi3+0x60>
 8000f74:	000f883a 	mov	r7,zero
 8000f78:	2005883a 	mov	r2,r4
 8000f7c:	28001216 	blt	r5,zero,8000fc8 <__modsi3+0x58>
 8000f80:	2900162e 	bgeu	r5,r4,8000fdc <__modsi3+0x6c>
 8000f84:	01800804 	movi	r6,32
 8000f88:	00c00044 	movi	r3,1
 8000f8c:	00000106 	br	8000f94 <__modsi3+0x24>
 8000f90:	30000a26 	beq	r6,zero,8000fbc <__modsi3+0x4c>
 8000f94:	294b883a 	add	r5,r5,r5
 8000f98:	31bfffc4 	addi	r6,r6,-1
 8000f9c:	18c7883a 	add	r3,r3,r3
 8000fa0:	293ffb36 	bltu	r5,r4,8000f90 <__alt_data_end+0xfc000f90>
 8000fa4:	18000526 	beq	r3,zero,8000fbc <__modsi3+0x4c>
 8000fa8:	1806d07a 	srli	r3,r3,1
 8000fac:	11400136 	bltu	r2,r5,8000fb4 <__modsi3+0x44>
 8000fb0:	1145c83a 	sub	r2,r2,r5
 8000fb4:	280ad07a 	srli	r5,r5,1
 8000fb8:	183ffb1e 	bne	r3,zero,8000fa8 <__alt_data_end+0xfc000fa8>
 8000fbc:	38000126 	beq	r7,zero,8000fc4 <__modsi3+0x54>
 8000fc0:	0085c83a 	sub	r2,zero,r2
 8000fc4:	f800283a 	ret
 8000fc8:	014bc83a 	sub	r5,zero,r5
 8000fcc:	003fec06 	br	8000f80 <__alt_data_end+0xfc000f80>
 8000fd0:	0109c83a 	sub	r4,zero,r4
 8000fd4:	01c00044 	movi	r7,1
 8000fd8:	003fe706 	br	8000f78 <__alt_data_end+0xfc000f78>
 8000fdc:	00c00044 	movi	r3,1
 8000fe0:	003ff106 	br	8000fa8 <__alt_data_end+0xfc000fa8>

08000fe4 <__udivsi3>:
 8000fe4:	200d883a 	mov	r6,r4
 8000fe8:	2900152e 	bgeu	r5,r4,8001040 <__udivsi3+0x5c>
 8000fec:	28001416 	blt	r5,zero,8001040 <__udivsi3+0x5c>
 8000ff0:	00800804 	movi	r2,32
 8000ff4:	00c00044 	movi	r3,1
 8000ff8:	00000206 	br	8001004 <__udivsi3+0x20>
 8000ffc:	10000e26 	beq	r2,zero,8001038 <__udivsi3+0x54>
 8001000:	28000516 	blt	r5,zero,8001018 <__udivsi3+0x34>
 8001004:	294b883a 	add	r5,r5,r5
 8001008:	10bfffc4 	addi	r2,r2,-1
 800100c:	18c7883a 	add	r3,r3,r3
 8001010:	293ffa36 	bltu	r5,r4,8000ffc <__alt_data_end+0xfc000ffc>
 8001014:	18000826 	beq	r3,zero,8001038 <__udivsi3+0x54>
 8001018:	0005883a 	mov	r2,zero
 800101c:	31400236 	bltu	r6,r5,8001028 <__udivsi3+0x44>
 8001020:	314dc83a 	sub	r6,r6,r5
 8001024:	10c4b03a 	or	r2,r2,r3
 8001028:	1806d07a 	srli	r3,r3,1
 800102c:	280ad07a 	srli	r5,r5,1
 8001030:	183ffa1e 	bne	r3,zero,800101c <__alt_data_end+0xfc00101c>
 8001034:	f800283a 	ret
 8001038:	0005883a 	mov	r2,zero
 800103c:	f800283a 	ret
 8001040:	00c00044 	movi	r3,1
 8001044:	003ff406 	br	8001018 <__alt_data_end+0xfc001018>

08001048 <__umodsi3>:
 8001048:	2005883a 	mov	r2,r4
 800104c:	2900122e 	bgeu	r5,r4,8001098 <__umodsi3+0x50>
 8001050:	28001116 	blt	r5,zero,8001098 <__umodsi3+0x50>
 8001054:	01800804 	movi	r6,32
 8001058:	00c00044 	movi	r3,1
 800105c:	00000206 	br	8001068 <__umodsi3+0x20>
 8001060:	30000c26 	beq	r6,zero,8001094 <__umodsi3+0x4c>
 8001064:	28000516 	blt	r5,zero,800107c <__umodsi3+0x34>
 8001068:	294b883a 	add	r5,r5,r5
 800106c:	31bfffc4 	addi	r6,r6,-1
 8001070:	18c7883a 	add	r3,r3,r3
 8001074:	293ffa36 	bltu	r5,r4,8001060 <__alt_data_end+0xfc001060>
 8001078:	18000626 	beq	r3,zero,8001094 <__umodsi3+0x4c>
 800107c:	1806d07a 	srli	r3,r3,1
 8001080:	11400136 	bltu	r2,r5,8001088 <__umodsi3+0x40>
 8001084:	1145c83a 	sub	r2,r2,r5
 8001088:	280ad07a 	srli	r5,r5,1
 800108c:	183ffb1e 	bne	r3,zero,800107c <__alt_data_end+0xfc00107c>
 8001090:	f800283a 	ret
 8001094:	f800283a 	ret
 8001098:	00c00044 	movi	r3,1
 800109c:	003ff706 	br	800107c <__alt_data_end+0xfc00107c>

080010a0 <__mulsi3>:
 80010a0:	0005883a 	mov	r2,zero
 80010a4:	20000726 	beq	r4,zero,80010c4 <__mulsi3+0x24>
 80010a8:	20c0004c 	andi	r3,r4,1
 80010ac:	2008d07a 	srli	r4,r4,1
 80010b0:	18000126 	beq	r3,zero,80010b8 <__mulsi3+0x18>
 80010b4:	1145883a 	add	r2,r2,r5
 80010b8:	294b883a 	add	r5,r5,r5
 80010bc:	203ffa1e 	bne	r4,zero,80010a8 <__alt_data_end+0xfc0010a8>
 80010c0:	f800283a 	ret
 80010c4:	f800283a 	ret

080010c8 <memcpy>:
 80010c8:	defffd04 	addi	sp,sp,-12
 80010cc:	dfc00215 	stw	ra,8(sp)
 80010d0:	dc400115 	stw	r17,4(sp)
 80010d4:	dc000015 	stw	r16,0(sp)
 80010d8:	00c003c4 	movi	r3,15
 80010dc:	2005883a 	mov	r2,r4
 80010e0:	1980452e 	bgeu	r3,r6,80011f8 <memcpy+0x130>
 80010e4:	2906b03a 	or	r3,r5,r4
 80010e8:	18c000cc 	andi	r3,r3,3
 80010ec:	1800441e 	bne	r3,zero,8001200 <memcpy+0x138>
 80010f0:	347ffc04 	addi	r17,r6,-16
 80010f4:	8822d13a 	srli	r17,r17,4
 80010f8:	28c00104 	addi	r3,r5,4
 80010fc:	23400104 	addi	r13,r4,4
 8001100:	8820913a 	slli	r16,r17,4
 8001104:	2b000204 	addi	r12,r5,8
 8001108:	22c00204 	addi	r11,r4,8
 800110c:	84000504 	addi	r16,r16,20
 8001110:	2a800304 	addi	r10,r5,12
 8001114:	22400304 	addi	r9,r4,12
 8001118:	2c21883a 	add	r16,r5,r16
 800111c:	2811883a 	mov	r8,r5
 8001120:	200f883a 	mov	r7,r4
 8001124:	41000017 	ldw	r4,0(r8)
 8001128:	1fc00017 	ldw	ra,0(r3)
 800112c:	63c00017 	ldw	r15,0(r12)
 8001130:	39000015 	stw	r4,0(r7)
 8001134:	53800017 	ldw	r14,0(r10)
 8001138:	6fc00015 	stw	ra,0(r13)
 800113c:	5bc00015 	stw	r15,0(r11)
 8001140:	4b800015 	stw	r14,0(r9)
 8001144:	18c00404 	addi	r3,r3,16
 8001148:	39c00404 	addi	r7,r7,16
 800114c:	42000404 	addi	r8,r8,16
 8001150:	6b400404 	addi	r13,r13,16
 8001154:	63000404 	addi	r12,r12,16
 8001158:	5ac00404 	addi	r11,r11,16
 800115c:	52800404 	addi	r10,r10,16
 8001160:	4a400404 	addi	r9,r9,16
 8001164:	1c3fef1e 	bne	r3,r16,8001124 <__alt_data_end+0xfc001124>
 8001168:	89c00044 	addi	r7,r17,1
 800116c:	380e913a 	slli	r7,r7,4
 8001170:	310003cc 	andi	r4,r6,15
 8001174:	02c000c4 	movi	r11,3
 8001178:	11c7883a 	add	r3,r2,r7
 800117c:	29cb883a 	add	r5,r5,r7
 8001180:	5900212e 	bgeu	r11,r4,8001208 <memcpy+0x140>
 8001184:	1813883a 	mov	r9,r3
 8001188:	2811883a 	mov	r8,r5
 800118c:	200f883a 	mov	r7,r4
 8001190:	42800017 	ldw	r10,0(r8)
 8001194:	4a400104 	addi	r9,r9,4
 8001198:	39ffff04 	addi	r7,r7,-4
 800119c:	4abfff15 	stw	r10,-4(r9)
 80011a0:	42000104 	addi	r8,r8,4
 80011a4:	59fffa36 	bltu	r11,r7,8001190 <__alt_data_end+0xfc001190>
 80011a8:	213fff04 	addi	r4,r4,-4
 80011ac:	2008d0ba 	srli	r4,r4,2
 80011b0:	318000cc 	andi	r6,r6,3
 80011b4:	21000044 	addi	r4,r4,1
 80011b8:	2109883a 	add	r4,r4,r4
 80011bc:	2109883a 	add	r4,r4,r4
 80011c0:	1907883a 	add	r3,r3,r4
 80011c4:	290b883a 	add	r5,r5,r4
 80011c8:	30000626 	beq	r6,zero,80011e4 <memcpy+0x11c>
 80011cc:	198d883a 	add	r6,r3,r6
 80011d0:	29c00003 	ldbu	r7,0(r5)
 80011d4:	18c00044 	addi	r3,r3,1
 80011d8:	29400044 	addi	r5,r5,1
 80011dc:	19ffffc5 	stb	r7,-1(r3)
 80011e0:	19bffb1e 	bne	r3,r6,80011d0 <__alt_data_end+0xfc0011d0>
 80011e4:	dfc00217 	ldw	ra,8(sp)
 80011e8:	dc400117 	ldw	r17,4(sp)
 80011ec:	dc000017 	ldw	r16,0(sp)
 80011f0:	dec00304 	addi	sp,sp,12
 80011f4:	f800283a 	ret
 80011f8:	2007883a 	mov	r3,r4
 80011fc:	003ff206 	br	80011c8 <__alt_data_end+0xfc0011c8>
 8001200:	2007883a 	mov	r3,r4
 8001204:	003ff106 	br	80011cc <__alt_data_end+0xfc0011cc>
 8001208:	200d883a 	mov	r6,r4
 800120c:	003fee06 	br	80011c8 <__alt_data_end+0xfc0011c8>

08001210 <_printf_r>:
 8001210:	defffd04 	addi	sp,sp,-12
 8001214:	2805883a 	mov	r2,r5
 8001218:	dfc00015 	stw	ra,0(sp)
 800121c:	d9800115 	stw	r6,4(sp)
 8001220:	d9c00215 	stw	r7,8(sp)
 8001224:	21400217 	ldw	r5,8(r4)
 8001228:	d9c00104 	addi	r7,sp,4
 800122c:	100d883a 	mov	r6,r2
 8001230:	80037100 	call	8003710 <___vfprintf_internal_r>
 8001234:	dfc00017 	ldw	ra,0(sp)
 8001238:	dec00304 	addi	sp,sp,12
 800123c:	f800283a 	ret

08001240 <printf>:
 8001240:	defffc04 	addi	sp,sp,-16
 8001244:	dfc00015 	stw	ra,0(sp)
 8001248:	d9400115 	stw	r5,4(sp)
 800124c:	d9800215 	stw	r6,8(sp)
 8001250:	d9c00315 	stw	r7,12(sp)
 8001254:	00820074 	movhi	r2,2049
 8001258:	1098c504 	addi	r2,r2,25364
 800125c:	10800017 	ldw	r2,0(r2)
 8001260:	200b883a 	mov	r5,r4
 8001264:	d9800104 	addi	r6,sp,4
 8001268:	11000217 	ldw	r4,8(r2)
 800126c:	80059ec0 	call	80059ec <__vfprintf_internal>
 8001270:	dfc00017 	ldw	ra,0(sp)
 8001274:	dec00404 	addi	sp,sp,16
 8001278:	f800283a 	ret

0800127c <srand>:
 800127c:	00820074 	movhi	r2,2049
 8001280:	1098c504 	addi	r2,r2,25364
 8001284:	10800017 	ldw	r2,0(r2)
 8001288:	11002915 	stw	r4,164(r2)
 800128c:	10002a15 	stw	zero,168(r2)
 8001290:	f800283a 	ret

08001294 <rand>:
 8001294:	00820074 	movhi	r2,2049
 8001298:	defffe04 	addi	sp,sp,-8
 800129c:	1098c504 	addi	r2,r2,25364
 80012a0:	dc000015 	stw	r16,0(sp)
 80012a4:	14000017 	ldw	r16,0(r2)
 80012a8:	dfc00115 	stw	ra,4(sp)
 80012ac:	01932574 	movhi	r6,19605
 80012b0:	81002917 	ldw	r4,164(r16)
 80012b4:	81402a17 	ldw	r5,168(r16)
 80012b8:	01d614b4 	movhi	r7,22610
 80012bc:	319fcb44 	addi	r6,r6,32557
 80012c0:	39fd0b44 	addi	r7,r7,-3027
 80012c4:	800e2600 	call	800e260 <__muldi3>
 80012c8:	11000044 	addi	r4,r2,1
 80012cc:	2085803a 	cmpltu	r2,r4,r2
 80012d0:	10c7883a 	add	r3,r2,r3
 80012d4:	00a00034 	movhi	r2,32768
 80012d8:	10bfffc4 	addi	r2,r2,-1
 80012dc:	1884703a 	and	r2,r3,r2
 80012e0:	81002915 	stw	r4,164(r16)
 80012e4:	80c02a15 	stw	r3,168(r16)
 80012e8:	dfc00117 	ldw	ra,4(sp)
 80012ec:	dc000017 	ldw	r16,0(sp)
 80012f0:	dec00204 	addi	sp,sp,8
 80012f4:	f800283a 	ret

080012f8 <_sprintf_r>:
 80012f8:	deffe404 	addi	sp,sp,-112
 80012fc:	2807883a 	mov	r3,r5
 8001300:	dfc01a15 	stw	ra,104(sp)
 8001304:	d9c01b15 	stw	r7,108(sp)
 8001308:	00a00034 	movhi	r2,32768
 800130c:	10bfffc4 	addi	r2,r2,-1
 8001310:	02008204 	movi	r8,520
 8001314:	d8800215 	stw	r2,8(sp)
 8001318:	d8800515 	stw	r2,20(sp)
 800131c:	d9c01b04 	addi	r7,sp,108
 8001320:	d80b883a 	mov	r5,sp
 8001324:	00bfffc4 	movi	r2,-1
 8001328:	d8c00015 	stw	r3,0(sp)
 800132c:	d8c00415 	stw	r3,16(sp)
 8001330:	da00030d 	sth	r8,12(sp)
 8001334:	d880038d 	sth	r2,14(sp)
 8001338:	80014540 	call	8001454 <___svfprintf_internal_r>
 800133c:	d8c00017 	ldw	r3,0(sp)
 8001340:	18000005 	stb	zero,0(r3)
 8001344:	dfc01a17 	ldw	ra,104(sp)
 8001348:	dec01c04 	addi	sp,sp,112
 800134c:	f800283a 	ret

08001350 <sprintf>:
 8001350:	deffe304 	addi	sp,sp,-116
 8001354:	2007883a 	mov	r3,r4
 8001358:	dfc01a15 	stw	ra,104(sp)
 800135c:	d9801b15 	stw	r6,108(sp)
 8001360:	d9c01c15 	stw	r7,112(sp)
 8001364:	01020074 	movhi	r4,2049
 8001368:	2118c504 	addi	r4,r4,25364
 800136c:	21000017 	ldw	r4,0(r4)
 8001370:	00a00034 	movhi	r2,32768
 8001374:	10bfffc4 	addi	r2,r2,-1
 8001378:	280d883a 	mov	r6,r5
 800137c:	02008204 	movi	r8,520
 8001380:	d8800215 	stw	r2,8(sp)
 8001384:	d8800515 	stw	r2,20(sp)
 8001388:	d9c01b04 	addi	r7,sp,108
 800138c:	d80b883a 	mov	r5,sp
 8001390:	00bfffc4 	movi	r2,-1
 8001394:	d8c00015 	stw	r3,0(sp)
 8001398:	d8c00415 	stw	r3,16(sp)
 800139c:	da00030d 	sth	r8,12(sp)
 80013a0:	d880038d 	sth	r2,14(sp)
 80013a4:	80014540 	call	8001454 <___svfprintf_internal_r>
 80013a8:	d8c00017 	ldw	r3,0(sp)
 80013ac:	18000005 	stb	zero,0(r3)
 80013b0:	dfc01a17 	ldw	ra,104(sp)
 80013b4:	dec01d04 	addi	sp,sp,116
 80013b8:	f800283a 	ret

080013bc <strlen>:
 80013bc:	208000cc 	andi	r2,r4,3
 80013c0:	10002026 	beq	r2,zero,8001444 <strlen+0x88>
 80013c4:	20800007 	ldb	r2,0(r4)
 80013c8:	10002026 	beq	r2,zero,800144c <strlen+0x90>
 80013cc:	2005883a 	mov	r2,r4
 80013d0:	00000206 	br	80013dc <strlen+0x20>
 80013d4:	10c00007 	ldb	r3,0(r2)
 80013d8:	18001826 	beq	r3,zero,800143c <strlen+0x80>
 80013dc:	10800044 	addi	r2,r2,1
 80013e0:	10c000cc 	andi	r3,r2,3
 80013e4:	183ffb1e 	bne	r3,zero,80013d4 <__alt_data_end+0xfc0013d4>
 80013e8:	10c00017 	ldw	r3,0(r2)
 80013ec:	01ffbff4 	movhi	r7,65279
 80013f0:	39ffbfc4 	addi	r7,r7,-257
 80013f4:	00ca303a 	nor	r5,zero,r3
 80013f8:	01a02074 	movhi	r6,32897
 80013fc:	19c7883a 	add	r3,r3,r7
 8001400:	31a02004 	addi	r6,r6,-32640
 8001404:	1946703a 	and	r3,r3,r5
 8001408:	1986703a 	and	r3,r3,r6
 800140c:	1800091e 	bne	r3,zero,8001434 <strlen+0x78>
 8001410:	10800104 	addi	r2,r2,4
 8001414:	10c00017 	ldw	r3,0(r2)
 8001418:	19cb883a 	add	r5,r3,r7
 800141c:	00c6303a 	nor	r3,zero,r3
 8001420:	28c6703a 	and	r3,r5,r3
 8001424:	1986703a 	and	r3,r3,r6
 8001428:	183ff926 	beq	r3,zero,8001410 <__alt_data_end+0xfc001410>
 800142c:	00000106 	br	8001434 <strlen+0x78>
 8001430:	10800044 	addi	r2,r2,1
 8001434:	10c00007 	ldb	r3,0(r2)
 8001438:	183ffd1e 	bne	r3,zero,8001430 <__alt_data_end+0xfc001430>
 800143c:	1105c83a 	sub	r2,r2,r4
 8001440:	f800283a 	ret
 8001444:	2005883a 	mov	r2,r4
 8001448:	003fe706 	br	80013e8 <__alt_data_end+0xfc0013e8>
 800144c:	0005883a 	mov	r2,zero
 8001450:	f800283a 	ret

08001454 <___svfprintf_internal_r>:
 8001454:	deffb704 	addi	sp,sp,-292
 8001458:	dfc04815 	stw	ra,288(sp)
 800145c:	ddc04615 	stw	r23,280(sp)
 8001460:	d9402d15 	stw	r5,180(sp)
 8001464:	d9003915 	stw	r4,228(sp)
 8001468:	302f883a 	mov	r23,r6
 800146c:	d9c02e15 	stw	r7,184(sp)
 8001470:	df004715 	stw	fp,284(sp)
 8001474:	dd804515 	stw	r22,276(sp)
 8001478:	dd404415 	stw	r21,272(sp)
 800147c:	dd004315 	stw	r20,268(sp)
 8001480:	dcc04215 	stw	r19,264(sp)
 8001484:	dc804115 	stw	r18,260(sp)
 8001488:	dc404015 	stw	r17,256(sp)
 800148c:	dc003f15 	stw	r16,252(sp)
 8001490:	80081880 	call	8008188 <_localeconv_r>
 8001494:	10800017 	ldw	r2,0(r2)
 8001498:	1009883a 	mov	r4,r2
 800149c:	d8803415 	stw	r2,208(sp)
 80014a0:	80013bc0 	call	80013bc <strlen>
 80014a4:	d8c02d17 	ldw	r3,180(sp)
 80014a8:	d8803815 	stw	r2,224(sp)
 80014ac:	1880030b 	ldhu	r2,12(r3)
 80014b0:	1080200c 	andi	r2,r2,128
 80014b4:	10000226 	beq	r2,zero,80014c0 <___svfprintf_internal_r+0x6c>
 80014b8:	18800417 	ldw	r2,16(r3)
 80014bc:	1006b126 	beq	r2,zero,8002f84 <___svfprintf_internal_r+0x1b30>
 80014c0:	dcc03917 	ldw	r19,228(sp)
 80014c4:	d8c00404 	addi	r3,sp,16
 80014c8:	05420074 	movhi	r21,2049
 80014cc:	d9001e04 	addi	r4,sp,120
 80014d0:	ad509f84 	addi	r21,r21,17022
 80014d4:	d8c01e15 	stw	r3,120(sp)
 80014d8:	d8002015 	stw	zero,128(sp)
 80014dc:	d8001f15 	stw	zero,124(sp)
 80014e0:	d8003315 	stw	zero,204(sp)
 80014e4:	d8003615 	stw	zero,216(sp)
 80014e8:	d8003715 	stw	zero,220(sp)
 80014ec:	1811883a 	mov	r8,r3
 80014f0:	d8003a15 	stw	zero,232(sp)
 80014f4:	d8003b15 	stw	zero,236(sp)
 80014f8:	d8002f15 	stw	zero,188(sp)
 80014fc:	d9002815 	stw	r4,160(sp)
 8001500:	b8800007 	ldb	r2,0(r23)
 8001504:	10027726 	beq	r2,zero,8001ee4 <___svfprintf_internal_r+0xa90>
 8001508:	00c00944 	movi	r3,37
 800150c:	b823883a 	mov	r17,r23
 8001510:	10c0021e 	bne	r2,r3,800151c <___svfprintf_internal_r+0xc8>
 8001514:	00001406 	br	8001568 <___svfprintf_internal_r+0x114>
 8001518:	10c00326 	beq	r2,r3,8001528 <___svfprintf_internal_r+0xd4>
 800151c:	8c400044 	addi	r17,r17,1
 8001520:	88800007 	ldb	r2,0(r17)
 8001524:	103ffc1e 	bne	r2,zero,8001518 <__alt_data_end+0xfc001518>
 8001528:	8de1c83a 	sub	r16,r17,r23
 800152c:	80000e26 	beq	r16,zero,8001568 <___svfprintf_internal_r+0x114>
 8001530:	d8c02017 	ldw	r3,128(sp)
 8001534:	d8801f17 	ldw	r2,124(sp)
 8001538:	45c00015 	stw	r23,0(r8)
 800153c:	1c07883a 	add	r3,r3,r16
 8001540:	10800044 	addi	r2,r2,1
 8001544:	d8c02015 	stw	r3,128(sp)
 8001548:	44000115 	stw	r16,4(r8)
 800154c:	d8801f15 	stw	r2,124(sp)
 8001550:	00c001c4 	movi	r3,7
 8001554:	18809916 	blt	r3,r2,80017bc <___svfprintf_internal_r+0x368>
 8001558:	42000204 	addi	r8,r8,8
 800155c:	d9402f17 	ldw	r5,188(sp)
 8001560:	2c0b883a 	add	r5,r5,r16
 8001564:	d9402f15 	stw	r5,188(sp)
 8001568:	88800007 	ldb	r2,0(r17)
 800156c:	10009a26 	beq	r2,zero,80017d8 <___svfprintf_internal_r+0x384>
 8001570:	8dc00044 	addi	r23,r17,1
 8001574:	8c400047 	ldb	r17,1(r17)
 8001578:	0021883a 	mov	r16,zero
 800157c:	00bfffc4 	movi	r2,-1
 8001580:	0025883a 	mov	r18,zero
 8001584:	dc002905 	stb	r16,164(sp)
 8001588:	d8002785 	stb	zero,158(sp)
 800158c:	d8002b05 	stb	zero,172(sp)
 8001590:	d8802a15 	stw	r2,168(sp)
 8001594:	d8003115 	stw	zero,196(sp)
 8001598:	05001604 	movi	r20,88
 800159c:	05800244 	movi	r22,9
 80015a0:	4039883a 	mov	fp,r8
 80015a4:	9021883a 	mov	r16,r18
 80015a8:	bdc00044 	addi	r23,r23,1
 80015ac:	88bff804 	addi	r2,r17,-32
 80015b0:	a0831e36 	bltu	r20,r2,800222c <___svfprintf_internal_r+0xdd8>
 80015b4:	100490ba 	slli	r2,r2,2
 80015b8:	00c20034 	movhi	r3,2048
 80015bc:	18c57304 	addi	r3,r3,5580
 80015c0:	10c5883a 	add	r2,r2,r3
 80015c4:	10800017 	ldw	r2,0(r2)
 80015c8:	1000683a 	jmp	r2
 80015cc:	08002174 	orhi	zero,at,133
 80015d0:	0800222c 	andhi	zero,at,136
 80015d4:	0800222c 	andhi	zero,at,136
 80015d8:	08002168 	cmpgeui	zero,at,133
 80015dc:	0800222c 	andhi	zero,at,136
 80015e0:	0800222c 	andhi	zero,at,136
 80015e4:	0800222c 	andhi	zero,at,136
 80015e8:	0800222c 	andhi	zero,at,136
 80015ec:	0800222c 	andhi	zero,at,136
 80015f0:	0800222c 	andhi	zero,at,136
 80015f4:	08001834 	orhi	zero,at,96
 80015f8:	08002078 	rdprs	zero,at,129
 80015fc:	0800222c 	andhi	zero,at,136
 8001600:	08001740 	call	800174 <__alt_mem_onchip_memory2_0+0x800174>
 8001604:	08001858 	cmpnei	zero,at,97
 8001608:	0800222c 	andhi	zero,at,136
 800160c:	080018e4 	muli	zero,at,99
 8001610:	080018a8 	cmpgeui	zero,at,98
 8001614:	080018a8 	cmpgeui	zero,at,98
 8001618:	080018a8 	cmpgeui	zero,at,98
 800161c:	080018a8 	cmpgeui	zero,at,98
 8001620:	080018a8 	cmpgeui	zero,at,98
 8001624:	080018a8 	cmpgeui	zero,at,98
 8001628:	080018a8 	cmpgeui	zero,at,98
 800162c:	080018a8 	cmpgeui	zero,at,98
 8001630:	080018a8 	cmpgeui	zero,at,98
 8001634:	0800222c 	andhi	zero,at,136
 8001638:	0800222c 	andhi	zero,at,136
 800163c:	0800222c 	andhi	zero,at,136
 8001640:	0800222c 	andhi	zero,at,136
 8001644:	0800222c 	andhi	zero,at,136
 8001648:	0800222c 	andhi	zero,at,136
 800164c:	0800222c 	andhi	zero,at,136
 8001650:	0800222c 	andhi	zero,at,136
 8001654:	0800222c 	andhi	zero,at,136
 8001658:	0800222c 	andhi	zero,at,136
 800165c:	080019a8 	cmpgeui	zero,at,102
 8001660:	080018f0 	cmpltui	zero,at,99
 8001664:	0800222c 	andhi	zero,at,136
 8001668:	080018f0 	cmpltui	zero,at,99
 800166c:	0800222c 	andhi	zero,at,136
 8001670:	0800222c 	andhi	zero,at,136
 8001674:	0800222c 	andhi	zero,at,136
 8001678:	0800222c 	andhi	zero,at,136
 800167c:	0800199c 	xori	zero,at,102
 8001680:	0800222c 	andhi	zero,at,136
 8001684:	0800222c 	andhi	zero,at,136
 8001688:	08001a70 	cmpltui	zero,at,105
 800168c:	0800222c 	andhi	zero,at,136
 8001690:	0800222c 	andhi	zero,at,136
 8001694:	0800222c 	andhi	zero,at,136
 8001698:	0800222c 	andhi	zero,at,136
 800169c:	0800222c 	andhi	zero,at,136
 80016a0:	08001eec 	andhi	zero,at,123
 80016a4:	0800222c 	andhi	zero,at,136
 80016a8:	0800222c 	andhi	zero,at,136
 80016ac:	08001f58 	cmpnei	zero,at,125
 80016b0:	0800222c 	andhi	zero,at,136
 80016b4:	0800222c 	andhi	zero,at,136
 80016b8:	0800222c 	andhi	zero,at,136
 80016bc:	0800222c 	andhi	zero,at,136
 80016c0:	0800222c 	andhi	zero,at,136
 80016c4:	0800222c 	andhi	zero,at,136
 80016c8:	0800222c 	andhi	zero,at,136
 80016cc:	0800222c 	andhi	zero,at,136
 80016d0:	0800222c 	andhi	zero,at,136
 80016d4:	0800222c 	andhi	zero,at,136
 80016d8:	08002014 	ori	zero,at,128
 80016dc:	08002194 	ori	zero,at,134
 80016e0:	080018f0 	cmpltui	zero,at,99
 80016e4:	080018f0 	cmpltui	zero,at,99
 80016e8:	080018f0 	cmpltui	zero,at,99
 80016ec:	08002208 	cmpgei	zero,at,136
 80016f0:	08002194 	ori	zero,at,134
 80016f4:	0800222c 	andhi	zero,at,136
 80016f8:	0800222c 	andhi	zero,at,136
 80016fc:	080021b4 	orhi	zero,at,134
 8001700:	0800222c 	andhi	zero,at,136
 8001704:	080021c8 	cmpgei	zero,at,135
 8001708:	08002058 	cmpnei	zero,at,129
 800170c:	0800174c 	andi	zero,at,93
 8001710:	08002090 	cmplti	zero,at,130
 8001714:	0800222c 	andhi	zero,at,136
 8001718:	0800209c 	xori	zero,at,130
 800171c:	0800222c 	andhi	zero,at,136
 8001720:	08002100 	call	800210 <__alt_mem_onchip_memory2_0+0x800210>
 8001724:	0800222c 	andhi	zero,at,136
 8001728:	0800222c 	andhi	zero,at,136
 800172c:	08002120 	cmpeqi	zero,at,132
 8001730:	d8c03117 	ldw	r3,196(sp)
 8001734:	d8802e15 	stw	r2,184(sp)
 8001738:	00c7c83a 	sub	r3,zero,r3
 800173c:	d8c03115 	stw	r3,196(sp)
 8001740:	84000114 	ori	r16,r16,4
 8001744:	bc400007 	ldb	r17,0(r23)
 8001748:	003f9706 	br	80015a8 <__alt_data_end+0xfc0015a8>
 800174c:	00800c04 	movi	r2,48
 8001750:	d8802705 	stb	r2,156(sp)
 8001754:	00801e04 	movi	r2,120
 8001758:	d8802745 	stb	r2,157(sp)
 800175c:	d9002a17 	ldw	r4,168(sp)
 8001760:	d8802e17 	ldw	r2,184(sp)
 8001764:	d8002785 	stb	zero,158(sp)
 8001768:	e011883a 	mov	r8,fp
 800176c:	10c00104 	addi	r3,r2,4
 8001770:	15000017 	ldw	r20,0(r2)
 8001774:	002d883a 	mov	r22,zero
 8001778:	80800094 	ori	r2,r16,2
 800177c:	2002b616 	blt	r4,zero,8002258 <___svfprintf_internal_r+0xe04>
 8001780:	00bfdfc4 	movi	r2,-129
 8001784:	80a4703a 	and	r18,r16,r2
 8001788:	d8c02e15 	stw	r3,184(sp)
 800178c:	94800094 	ori	r18,r18,2
 8001790:	a002a01e 	bne	r20,zero,8002214 <___svfprintf_internal_r+0xdc0>
 8001794:	01420074 	movhi	r5,2049
 8001798:	29509804 	addi	r5,r5,16992
 800179c:	d9403a15 	stw	r5,232(sp)
 80017a0:	04401e04 	movi	r17,120
 80017a4:	d8c02a17 	ldw	r3,168(sp)
 80017a8:	0039883a 	mov	fp,zero
 80017ac:	1801e626 	beq	r3,zero,8001f48 <___svfprintf_internal_r+0xaf4>
 80017b0:	0029883a 	mov	r20,zero
 80017b4:	002d883a 	mov	r22,zero
 80017b8:	00020506 	br	8001fd0 <___svfprintf_internal_r+0xb7c>
 80017bc:	d9402d17 	ldw	r5,180(sp)
 80017c0:	d9801e04 	addi	r6,sp,120
 80017c4:	9809883a 	mov	r4,r19
 80017c8:	800a1240 	call	800a124 <__ssprint_r>
 80017cc:	1000081e 	bne	r2,zero,80017f0 <___svfprintf_internal_r+0x39c>
 80017d0:	da000404 	addi	r8,sp,16
 80017d4:	003f6106 	br	800155c <__alt_data_end+0xfc00155c>
 80017d8:	d8802017 	ldw	r2,128(sp)
 80017dc:	10000426 	beq	r2,zero,80017f0 <___svfprintf_internal_r+0x39c>
 80017e0:	d9402d17 	ldw	r5,180(sp)
 80017e4:	d9003917 	ldw	r4,228(sp)
 80017e8:	d9801e04 	addi	r6,sp,120
 80017ec:	800a1240 	call	800a124 <__ssprint_r>
 80017f0:	d8802d17 	ldw	r2,180(sp)
 80017f4:	10c0030b 	ldhu	r3,12(r2)
 80017f8:	d8802f17 	ldw	r2,188(sp)
 80017fc:	18c0100c 	andi	r3,r3,64
 8001800:	1806251e 	bne	r3,zero,8003098 <___svfprintf_internal_r+0x1c44>
 8001804:	dfc04817 	ldw	ra,288(sp)
 8001808:	df004717 	ldw	fp,284(sp)
 800180c:	ddc04617 	ldw	r23,280(sp)
 8001810:	dd804517 	ldw	r22,276(sp)
 8001814:	dd404417 	ldw	r21,272(sp)
 8001818:	dd004317 	ldw	r20,268(sp)
 800181c:	dcc04217 	ldw	r19,264(sp)
 8001820:	dc804117 	ldw	r18,260(sp)
 8001824:	dc404017 	ldw	r17,256(sp)
 8001828:	dc003f17 	ldw	r16,252(sp)
 800182c:	dec04904 	addi	sp,sp,292
 8001830:	f800283a 	ret
 8001834:	d9002e17 	ldw	r4,184(sp)
 8001838:	d9402e17 	ldw	r5,184(sp)
 800183c:	21000017 	ldw	r4,0(r4)
 8001840:	28800104 	addi	r2,r5,4
 8001844:	d9003115 	stw	r4,196(sp)
 8001848:	203fb916 	blt	r4,zero,8001730 <__alt_data_end+0xfc001730>
 800184c:	d8802e15 	stw	r2,184(sp)
 8001850:	bc400007 	ldb	r17,0(r23)
 8001854:	003f5406 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8001858:	bc400007 	ldb	r17,0(r23)
 800185c:	01000a84 	movi	r4,42
 8001860:	b8c00044 	addi	r3,r23,1
 8001864:	89076926 	beq	r17,r4,800360c <___svfprintf_internal_r+0x21b8>
 8001868:	8cbff404 	addi	r18,r17,-48
 800186c:	b486b936 	bltu	r22,r18,8003354 <___svfprintf_internal_r+0x1f00>
 8001870:	0009883a 	mov	r4,zero
 8001874:	1823883a 	mov	r17,r3
 8001878:	01400284 	movi	r5,10
 800187c:	80010a00 	call	80010a0 <__mulsi3>
 8001880:	88c00007 	ldb	r3,0(r17)
 8001884:	1489883a 	add	r4,r2,r18
 8001888:	8dc00044 	addi	r23,r17,1
 800188c:	1cbff404 	addi	r18,r3,-48
 8001890:	b823883a 	mov	r17,r23
 8001894:	b4bff82e 	bgeu	r22,r18,8001878 <__alt_data_end+0xfc001878>
 8001898:	1823883a 	mov	r17,r3
 800189c:	20060416 	blt	r4,zero,80030b0 <___svfprintf_internal_r+0x1c5c>
 80018a0:	d9002a15 	stw	r4,168(sp)
 80018a4:	003f4106 	br	80015ac <__alt_data_end+0xfc0015ac>
 80018a8:	8cbff404 	addi	r18,r17,-48
 80018ac:	d8003115 	stw	zero,196(sp)
 80018b0:	0009883a 	mov	r4,zero
 80018b4:	b823883a 	mov	r17,r23
 80018b8:	01400284 	movi	r5,10
 80018bc:	80010a00 	call	80010a0 <__mulsi3>
 80018c0:	88c00007 	ldb	r3,0(r17)
 80018c4:	9089883a 	add	r4,r18,r2
 80018c8:	bdc00044 	addi	r23,r23,1
 80018cc:	1cbff404 	addi	r18,r3,-48
 80018d0:	b823883a 	mov	r17,r23
 80018d4:	b4bff82e 	bgeu	r22,r18,80018b8 <__alt_data_end+0xfc0018b8>
 80018d8:	1823883a 	mov	r17,r3
 80018dc:	d9003115 	stw	r4,196(sp)
 80018e0:	003f3206 	br	80015ac <__alt_data_end+0xfc0015ac>
 80018e4:	84002014 	ori	r16,r16,128
 80018e8:	bc400007 	ldb	r17,0(r23)
 80018ec:	003f2e06 	br	80015a8 <__alt_data_end+0xfc0015a8>
 80018f0:	8025883a 	mov	r18,r16
 80018f4:	dc002903 	ldbu	r16,164(sp)
 80018f8:	e011883a 	mov	r8,fp
 80018fc:	84003fcc 	andi	r16,r16,255
 8001900:	8007721e 	bne	r16,zero,80036cc <___svfprintf_internal_r+0x2278>
 8001904:	9080020c 	andi	r2,r18,8
 8001908:	1004a526 	beq	r2,zero,8002ba0 <___svfprintf_internal_r+0x174c>
 800190c:	d9002e17 	ldw	r4,184(sp)
 8001910:	d9402e17 	ldw	r5,184(sp)
 8001914:	d8802e17 	ldw	r2,184(sp)
 8001918:	21000017 	ldw	r4,0(r4)
 800191c:	29400117 	ldw	r5,4(r5)
 8001920:	10800204 	addi	r2,r2,8
 8001924:	d9003615 	stw	r4,216(sp)
 8001928:	d9403715 	stw	r5,220(sp)
 800192c:	d8802e15 	stw	r2,184(sp)
 8001930:	d9003617 	ldw	r4,216(sp)
 8001934:	d9403717 	ldw	r5,220(sp)
 8001938:	da003e15 	stw	r8,248(sp)
 800193c:	04000044 	movi	r16,1
 8001940:	8009e440 	call	8009e44 <__fpclassifyd>
 8001944:	da003e17 	ldw	r8,248(sp)
 8001948:	1404731e 	bne	r2,r16,8002b18 <___svfprintf_internal_r+0x16c4>
 800194c:	d9003617 	ldw	r4,216(sp)
 8001950:	d9403717 	ldw	r5,220(sp)
 8001954:	000d883a 	mov	r6,zero
 8001958:	000f883a 	mov	r7,zero
 800195c:	801030c0 	call	801030c <__ledf2>
 8001960:	da003e17 	ldw	r8,248(sp)
 8001964:	10061b16 	blt	r2,zero,80031d4 <___svfprintf_internal_r+0x1d80>
 8001968:	df002783 	ldbu	fp,158(sp)
 800196c:	008011c4 	movi	r2,71
 8001970:	1445810e 	bge	r2,r17,8002f78 <___svfprintf_internal_r+0x1b24>
 8001974:	04020074 	movhi	r16,2049
 8001978:	84109004 	addi	r16,r16,16960
 800197c:	00c000c4 	movi	r3,3
 8001980:	00bfdfc4 	movi	r2,-129
 8001984:	d8c02915 	stw	r3,164(sp)
 8001988:	90a4703a 	and	r18,r18,r2
 800198c:	d8c02b15 	stw	r3,172(sp)
 8001990:	d8002a15 	stw	zero,168(sp)
 8001994:	d8003215 	stw	zero,200(sp)
 8001998:	00006c06 	br	8001b4c <___svfprintf_internal_r+0x6f8>
 800199c:	84000214 	ori	r16,r16,8
 80019a0:	bc400007 	ldb	r17,0(r23)
 80019a4:	003f0006 	br	80015a8 <__alt_data_end+0xfc0015a8>
 80019a8:	8025883a 	mov	r18,r16
 80019ac:	dc002903 	ldbu	r16,164(sp)
 80019b0:	e011883a 	mov	r8,fp
 80019b4:	84003fcc 	andi	r16,r16,255
 80019b8:	80073f1e 	bne	r16,zero,80036b8 <___svfprintf_internal_r+0x2264>
 80019bc:	94800414 	ori	r18,r18,16
 80019c0:	9080080c 	andi	r2,r18,32
 80019c4:	1003bb26 	beq	r2,zero,80028b4 <___svfprintf_internal_r+0x1460>
 80019c8:	d9002e17 	ldw	r4,184(sp)
 80019cc:	20800117 	ldw	r2,4(r4)
 80019d0:	25000017 	ldw	r20,0(r4)
 80019d4:	21000204 	addi	r4,r4,8
 80019d8:	d9002e15 	stw	r4,184(sp)
 80019dc:	102d883a 	mov	r22,r2
 80019e0:	1003bd16 	blt	r2,zero,80028d8 <___svfprintf_internal_r+0x1484>
 80019e4:	d9002a17 	ldw	r4,168(sp)
 80019e8:	df002783 	ldbu	fp,158(sp)
 80019ec:	2003d016 	blt	r4,zero,8002930 <___svfprintf_internal_r+0x14dc>
 80019f0:	00ffdfc4 	movi	r3,-129
 80019f4:	a584b03a 	or	r2,r20,r22
 80019f8:	90e4703a 	and	r18,r18,r3
 80019fc:	10015026 	beq	r2,zero,8001f40 <___svfprintf_internal_r+0xaec>
 8001a00:	b0037026 	beq	r22,zero,80027c4 <___svfprintf_internal_r+0x1370>
 8001a04:	dc402915 	stw	r17,164(sp)
 8001a08:	dc001e04 	addi	r16,sp,120
 8001a0c:	b023883a 	mov	r17,r22
 8001a10:	402d883a 	mov	r22,r8
 8001a14:	a009883a 	mov	r4,r20
 8001a18:	880b883a 	mov	r5,r17
 8001a1c:	01800284 	movi	r6,10
 8001a20:	000f883a 	mov	r7,zero
 8001a24:	800e9680 	call	800e968 <__umoddi3>
 8001a28:	10800c04 	addi	r2,r2,48
 8001a2c:	843fffc4 	addi	r16,r16,-1
 8001a30:	a009883a 	mov	r4,r20
 8001a34:	880b883a 	mov	r5,r17
 8001a38:	80800005 	stb	r2,0(r16)
 8001a3c:	01800284 	movi	r6,10
 8001a40:	000f883a 	mov	r7,zero
 8001a44:	800e36c0 	call	800e36c <__udivdi3>
 8001a48:	1029883a 	mov	r20,r2
 8001a4c:	10c4b03a 	or	r2,r2,r3
 8001a50:	1823883a 	mov	r17,r3
 8001a54:	103fef1e 	bne	r2,zero,8001a14 <__alt_data_end+0xfc001a14>
 8001a58:	d8c02817 	ldw	r3,160(sp)
 8001a5c:	dc402917 	ldw	r17,164(sp)
 8001a60:	b011883a 	mov	r8,r22
 8001a64:	1c07c83a 	sub	r3,r3,r16
 8001a68:	d8c02b15 	stw	r3,172(sp)
 8001a6c:	00003106 	br	8001b34 <___svfprintf_internal_r+0x6e0>
 8001a70:	8025883a 	mov	r18,r16
 8001a74:	dc002903 	ldbu	r16,164(sp)
 8001a78:	e011883a 	mov	r8,fp
 8001a7c:	84003fcc 	andi	r16,r16,255
 8001a80:	80070a1e 	bne	r16,zero,80036ac <___svfprintf_internal_r+0x2258>
 8001a84:	94800414 	ori	r18,r18,16
 8001a88:	9080080c 	andi	r2,r18,32
 8001a8c:	1002f626 	beq	r2,zero,8002668 <___svfprintf_internal_r+0x1214>
 8001a90:	d9002e17 	ldw	r4,184(sp)
 8001a94:	d9402a17 	ldw	r5,168(sp)
 8001a98:	d8002785 	stb	zero,158(sp)
 8001a9c:	20800204 	addi	r2,r4,8
 8001aa0:	25000017 	ldw	r20,0(r4)
 8001aa4:	25800117 	ldw	r22,4(r4)
 8001aa8:	28043716 	blt	r5,zero,8002b88 <___svfprintf_internal_r+0x1734>
 8001aac:	013fdfc4 	movi	r4,-129
 8001ab0:	a586b03a 	or	r3,r20,r22
 8001ab4:	d8802e15 	stw	r2,184(sp)
 8001ab8:	9124703a 	and	r18,r18,r4
 8001abc:	1802f71e 	bne	r3,zero,800269c <___svfprintf_internal_r+0x1248>
 8001ac0:	d9402a17 	ldw	r5,168(sp)
 8001ac4:	0039883a 	mov	fp,zero
 8001ac8:	2806df26 	beq	r5,zero,8003648 <___svfprintf_internal_r+0x21f4>
 8001acc:	0029883a 	mov	r20,zero
 8001ad0:	002d883a 	mov	r22,zero
 8001ad4:	dc001e04 	addi	r16,sp,120
 8001ad8:	a006d0fa 	srli	r3,r20,3
 8001adc:	b008977a 	slli	r4,r22,29
 8001ae0:	b02cd0fa 	srli	r22,r22,3
 8001ae4:	a50001cc 	andi	r20,r20,7
 8001ae8:	a0800c04 	addi	r2,r20,48
 8001aec:	843fffc4 	addi	r16,r16,-1
 8001af0:	20e8b03a 	or	r20,r4,r3
 8001af4:	80800005 	stb	r2,0(r16)
 8001af8:	a586b03a 	or	r3,r20,r22
 8001afc:	183ff61e 	bne	r3,zero,8001ad8 <__alt_data_end+0xfc001ad8>
 8001b00:	90c0004c 	andi	r3,r18,1
 8001b04:	18013f26 	beq	r3,zero,8002004 <___svfprintf_internal_r+0xbb0>
 8001b08:	10803fcc 	andi	r2,r2,255
 8001b0c:	1080201c 	xori	r2,r2,128
 8001b10:	10bfe004 	addi	r2,r2,-128
 8001b14:	00c00c04 	movi	r3,48
 8001b18:	10c13a26 	beq	r2,r3,8002004 <___svfprintf_internal_r+0xbb0>
 8001b1c:	80ffffc5 	stb	r3,-1(r16)
 8001b20:	d8c02817 	ldw	r3,160(sp)
 8001b24:	80bfffc4 	addi	r2,r16,-1
 8001b28:	1021883a 	mov	r16,r2
 8001b2c:	1887c83a 	sub	r3,r3,r2
 8001b30:	d8c02b15 	stw	r3,172(sp)
 8001b34:	d8802b17 	ldw	r2,172(sp)
 8001b38:	d9002a17 	ldw	r4,168(sp)
 8001b3c:	1100010e 	bge	r2,r4,8001b44 <___svfprintf_internal_r+0x6f0>
 8001b40:	2005883a 	mov	r2,r4
 8001b44:	d8802915 	stw	r2,164(sp)
 8001b48:	d8003215 	stw	zero,200(sp)
 8001b4c:	e7003fcc 	andi	fp,fp,255
 8001b50:	e700201c 	xori	fp,fp,128
 8001b54:	e73fe004 	addi	fp,fp,-128
 8001b58:	e0000326 	beq	fp,zero,8001b68 <___svfprintf_internal_r+0x714>
 8001b5c:	d8c02917 	ldw	r3,164(sp)
 8001b60:	18c00044 	addi	r3,r3,1
 8001b64:	d8c02915 	stw	r3,164(sp)
 8001b68:	90c0008c 	andi	r3,r18,2
 8001b6c:	d8c02c15 	stw	r3,176(sp)
 8001b70:	18000326 	beq	r3,zero,8001b80 <___svfprintf_internal_r+0x72c>
 8001b74:	d8c02917 	ldw	r3,164(sp)
 8001b78:	18c00084 	addi	r3,r3,2
 8001b7c:	d8c02915 	stw	r3,164(sp)
 8001b80:	90c0210c 	andi	r3,r18,132
 8001b84:	d8c03015 	stw	r3,192(sp)
 8001b88:	1801c31e 	bne	r3,zero,8002298 <___svfprintf_internal_r+0xe44>
 8001b8c:	d9003117 	ldw	r4,196(sp)
 8001b90:	d8c02917 	ldw	r3,164(sp)
 8001b94:	20e9c83a 	sub	r20,r4,r3
 8001b98:	0501bf0e 	bge	zero,r20,8002298 <___svfprintf_internal_r+0xe44>
 8001b9c:	02400404 	movi	r9,16
 8001ba0:	d8c02017 	ldw	r3,128(sp)
 8001ba4:	d8801f17 	ldw	r2,124(sp)
 8001ba8:	4d053d0e 	bge	r9,r20,80030a0 <___svfprintf_internal_r+0x1c4c>
 8001bac:	01420074 	movhi	r5,2049
 8001bb0:	2950a384 	addi	r5,r5,17038
 8001bb4:	dc403c15 	stw	r17,240(sp)
 8001bb8:	d9403515 	stw	r5,212(sp)
 8001bbc:	a023883a 	mov	r17,r20
 8001bc0:	482d883a 	mov	r22,r9
 8001bc4:	9029883a 	mov	r20,r18
 8001bc8:	070001c4 	movi	fp,7
 8001bcc:	8025883a 	mov	r18,r16
 8001bd0:	dc002d17 	ldw	r16,180(sp)
 8001bd4:	00000306 	br	8001be4 <___svfprintf_internal_r+0x790>
 8001bd8:	8c7ffc04 	addi	r17,r17,-16
 8001bdc:	42000204 	addi	r8,r8,8
 8001be0:	b440130e 	bge	r22,r17,8001c30 <___svfprintf_internal_r+0x7dc>
 8001be4:	01020074 	movhi	r4,2049
 8001be8:	18c00404 	addi	r3,r3,16
 8001bec:	10800044 	addi	r2,r2,1
 8001bf0:	2110a384 	addi	r4,r4,17038
 8001bf4:	41000015 	stw	r4,0(r8)
 8001bf8:	45800115 	stw	r22,4(r8)
 8001bfc:	d8c02015 	stw	r3,128(sp)
 8001c00:	d8801f15 	stw	r2,124(sp)
 8001c04:	e0bff40e 	bge	fp,r2,8001bd8 <__alt_data_end+0xfc001bd8>
 8001c08:	d9801e04 	addi	r6,sp,120
 8001c0c:	800b883a 	mov	r5,r16
 8001c10:	9809883a 	mov	r4,r19
 8001c14:	800a1240 	call	800a124 <__ssprint_r>
 8001c18:	103ef51e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8001c1c:	8c7ffc04 	addi	r17,r17,-16
 8001c20:	d8c02017 	ldw	r3,128(sp)
 8001c24:	d8801f17 	ldw	r2,124(sp)
 8001c28:	da000404 	addi	r8,sp,16
 8001c2c:	b47fed16 	blt	r22,r17,8001be4 <__alt_data_end+0xfc001be4>
 8001c30:	9021883a 	mov	r16,r18
 8001c34:	a025883a 	mov	r18,r20
 8001c38:	8829883a 	mov	r20,r17
 8001c3c:	dc403c17 	ldw	r17,240(sp)
 8001c40:	d9403517 	ldw	r5,212(sp)
 8001c44:	a0c7883a 	add	r3,r20,r3
 8001c48:	10800044 	addi	r2,r2,1
 8001c4c:	41400015 	stw	r5,0(r8)
 8001c50:	45000115 	stw	r20,4(r8)
 8001c54:	d8c02015 	stw	r3,128(sp)
 8001c58:	d8801f15 	stw	r2,124(sp)
 8001c5c:	010001c4 	movi	r4,7
 8001c60:	2082c116 	blt	r4,r2,8002768 <___svfprintf_internal_r+0x1314>
 8001c64:	df002787 	ldb	fp,158(sp)
 8001c68:	42000204 	addi	r8,r8,8
 8001c6c:	e0000c26 	beq	fp,zero,8001ca0 <___svfprintf_internal_r+0x84c>
 8001c70:	d8801f17 	ldw	r2,124(sp)
 8001c74:	d9002784 	addi	r4,sp,158
 8001c78:	18c00044 	addi	r3,r3,1
 8001c7c:	10800044 	addi	r2,r2,1
 8001c80:	41000015 	stw	r4,0(r8)
 8001c84:	01000044 	movi	r4,1
 8001c88:	41000115 	stw	r4,4(r8)
 8001c8c:	d8c02015 	stw	r3,128(sp)
 8001c90:	d8801f15 	stw	r2,124(sp)
 8001c94:	010001c4 	movi	r4,7
 8001c98:	20825a16 	blt	r4,r2,8002604 <___svfprintf_internal_r+0x11b0>
 8001c9c:	42000204 	addi	r8,r8,8
 8001ca0:	d8802c17 	ldw	r2,176(sp)
 8001ca4:	10000c26 	beq	r2,zero,8001cd8 <___svfprintf_internal_r+0x884>
 8001ca8:	d8801f17 	ldw	r2,124(sp)
 8001cac:	d9002704 	addi	r4,sp,156
 8001cb0:	18c00084 	addi	r3,r3,2
 8001cb4:	10800044 	addi	r2,r2,1
 8001cb8:	41000015 	stw	r4,0(r8)
 8001cbc:	01000084 	movi	r4,2
 8001cc0:	41000115 	stw	r4,4(r8)
 8001cc4:	d8c02015 	stw	r3,128(sp)
 8001cc8:	d8801f15 	stw	r2,124(sp)
 8001ccc:	010001c4 	movi	r4,7
 8001cd0:	20825416 	blt	r4,r2,8002624 <___svfprintf_internal_r+0x11d0>
 8001cd4:	42000204 	addi	r8,r8,8
 8001cd8:	d9003017 	ldw	r4,192(sp)
 8001cdc:	00802004 	movi	r2,128
 8001ce0:	2081b926 	beq	r4,r2,80023c8 <___svfprintf_internal_r+0xf74>
 8001ce4:	d9402a17 	ldw	r5,168(sp)
 8001ce8:	d8802b17 	ldw	r2,172(sp)
 8001cec:	28adc83a 	sub	r22,r5,r2
 8001cf0:	05802f0e 	bge	zero,r22,8001db0 <___svfprintf_internal_r+0x95c>
 8001cf4:	07000404 	movi	fp,16
 8001cf8:	d8801f17 	ldw	r2,124(sp)
 8001cfc:	e583e20e 	bge	fp,r22,8002c88 <___svfprintf_internal_r+0x1834>
 8001d00:	01420074 	movhi	r5,2049
 8001d04:	29509f84 	addi	r5,r5,17022
 8001d08:	dc402a15 	stw	r17,168(sp)
 8001d0c:	d9402c15 	stw	r5,176(sp)
 8001d10:	b023883a 	mov	r17,r22
 8001d14:	050001c4 	movi	r20,7
 8001d18:	902d883a 	mov	r22,r18
 8001d1c:	8025883a 	mov	r18,r16
 8001d20:	dc002d17 	ldw	r16,180(sp)
 8001d24:	00000306 	br	8001d34 <___svfprintf_internal_r+0x8e0>
 8001d28:	8c7ffc04 	addi	r17,r17,-16
 8001d2c:	42000204 	addi	r8,r8,8
 8001d30:	e440110e 	bge	fp,r17,8001d78 <___svfprintf_internal_r+0x924>
 8001d34:	18c00404 	addi	r3,r3,16
 8001d38:	10800044 	addi	r2,r2,1
 8001d3c:	45400015 	stw	r21,0(r8)
 8001d40:	47000115 	stw	fp,4(r8)
 8001d44:	d8c02015 	stw	r3,128(sp)
 8001d48:	d8801f15 	stw	r2,124(sp)
 8001d4c:	a0bff60e 	bge	r20,r2,8001d28 <__alt_data_end+0xfc001d28>
 8001d50:	d9801e04 	addi	r6,sp,120
 8001d54:	800b883a 	mov	r5,r16
 8001d58:	9809883a 	mov	r4,r19
 8001d5c:	800a1240 	call	800a124 <__ssprint_r>
 8001d60:	103ea31e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8001d64:	8c7ffc04 	addi	r17,r17,-16
 8001d68:	d8c02017 	ldw	r3,128(sp)
 8001d6c:	d8801f17 	ldw	r2,124(sp)
 8001d70:	da000404 	addi	r8,sp,16
 8001d74:	e47fef16 	blt	fp,r17,8001d34 <__alt_data_end+0xfc001d34>
 8001d78:	9021883a 	mov	r16,r18
 8001d7c:	b025883a 	mov	r18,r22
 8001d80:	882d883a 	mov	r22,r17
 8001d84:	dc402a17 	ldw	r17,168(sp)
 8001d88:	d9002c17 	ldw	r4,176(sp)
 8001d8c:	1d87883a 	add	r3,r3,r22
 8001d90:	10800044 	addi	r2,r2,1
 8001d94:	41000015 	stw	r4,0(r8)
 8001d98:	45800115 	stw	r22,4(r8)
 8001d9c:	d8c02015 	stw	r3,128(sp)
 8001da0:	d8801f15 	stw	r2,124(sp)
 8001da4:	010001c4 	movi	r4,7
 8001da8:	20820e16 	blt	r4,r2,80025e4 <___svfprintf_internal_r+0x1190>
 8001dac:	42000204 	addi	r8,r8,8
 8001db0:	9080400c 	andi	r2,r18,256
 8001db4:	10013a1e 	bne	r2,zero,80022a0 <___svfprintf_internal_r+0xe4c>
 8001db8:	d9402b17 	ldw	r5,172(sp)
 8001dbc:	d8801f17 	ldw	r2,124(sp)
 8001dc0:	44000015 	stw	r16,0(r8)
 8001dc4:	1947883a 	add	r3,r3,r5
 8001dc8:	10800044 	addi	r2,r2,1
 8001dcc:	41400115 	stw	r5,4(r8)
 8001dd0:	d8c02015 	stw	r3,128(sp)
 8001dd4:	d8801f15 	stw	r2,124(sp)
 8001dd8:	010001c4 	movi	r4,7
 8001ddc:	2081f316 	blt	r4,r2,80025ac <___svfprintf_internal_r+0x1158>
 8001de0:	42000204 	addi	r8,r8,8
 8001de4:	9480010c 	andi	r18,r18,4
 8001de8:	90003226 	beq	r18,zero,8001eb4 <___svfprintf_internal_r+0xa60>
 8001dec:	d9403117 	ldw	r5,196(sp)
 8001df0:	d8802917 	ldw	r2,164(sp)
 8001df4:	28a1c83a 	sub	r16,r5,r2
 8001df8:	04002e0e 	bge	zero,r16,8001eb4 <___svfprintf_internal_r+0xa60>
 8001dfc:	04400404 	movi	r17,16
 8001e00:	d8801f17 	ldw	r2,124(sp)
 8001e04:	8c04db0e 	bge	r17,r16,8003174 <___svfprintf_internal_r+0x1d20>
 8001e08:	01420074 	movhi	r5,2049
 8001e0c:	2950a384 	addi	r5,r5,17038
 8001e10:	d9403515 	stw	r5,212(sp)
 8001e14:	048001c4 	movi	r18,7
 8001e18:	dd002d17 	ldw	r20,180(sp)
 8001e1c:	00000306 	br	8001e2c <___svfprintf_internal_r+0x9d8>
 8001e20:	843ffc04 	addi	r16,r16,-16
 8001e24:	42000204 	addi	r8,r8,8
 8001e28:	8c00130e 	bge	r17,r16,8001e78 <___svfprintf_internal_r+0xa24>
 8001e2c:	01020074 	movhi	r4,2049
 8001e30:	18c00404 	addi	r3,r3,16
 8001e34:	10800044 	addi	r2,r2,1
 8001e38:	2110a384 	addi	r4,r4,17038
 8001e3c:	41000015 	stw	r4,0(r8)
 8001e40:	44400115 	stw	r17,4(r8)
 8001e44:	d8c02015 	stw	r3,128(sp)
 8001e48:	d8801f15 	stw	r2,124(sp)
 8001e4c:	90bff40e 	bge	r18,r2,8001e20 <__alt_data_end+0xfc001e20>
 8001e50:	d9801e04 	addi	r6,sp,120
 8001e54:	a00b883a 	mov	r5,r20
 8001e58:	9809883a 	mov	r4,r19
 8001e5c:	800a1240 	call	800a124 <__ssprint_r>
 8001e60:	103e631e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8001e64:	843ffc04 	addi	r16,r16,-16
 8001e68:	d8c02017 	ldw	r3,128(sp)
 8001e6c:	d8801f17 	ldw	r2,124(sp)
 8001e70:	da000404 	addi	r8,sp,16
 8001e74:	8c3fed16 	blt	r17,r16,8001e2c <__alt_data_end+0xfc001e2c>
 8001e78:	d9403517 	ldw	r5,212(sp)
 8001e7c:	1c07883a 	add	r3,r3,r16
 8001e80:	10800044 	addi	r2,r2,1
 8001e84:	41400015 	stw	r5,0(r8)
 8001e88:	44000115 	stw	r16,4(r8)
 8001e8c:	d8c02015 	stw	r3,128(sp)
 8001e90:	d8801f15 	stw	r2,124(sp)
 8001e94:	010001c4 	movi	r4,7
 8001e98:	2080060e 	bge	r4,r2,8001eb4 <___svfprintf_internal_r+0xa60>
 8001e9c:	d9402d17 	ldw	r5,180(sp)
 8001ea0:	d9801e04 	addi	r6,sp,120
 8001ea4:	9809883a 	mov	r4,r19
 8001ea8:	800a1240 	call	800a124 <__ssprint_r>
 8001eac:	103e501e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8001eb0:	d8c02017 	ldw	r3,128(sp)
 8001eb4:	d8803117 	ldw	r2,196(sp)
 8001eb8:	d9002917 	ldw	r4,164(sp)
 8001ebc:	1100010e 	bge	r2,r4,8001ec4 <___svfprintf_internal_r+0xa70>
 8001ec0:	2005883a 	mov	r2,r4
 8001ec4:	d9402f17 	ldw	r5,188(sp)
 8001ec8:	288b883a 	add	r5,r5,r2
 8001ecc:	d9402f15 	stw	r5,188(sp)
 8001ed0:	1801be1e 	bne	r3,zero,80025cc <___svfprintf_internal_r+0x1178>
 8001ed4:	b8800007 	ldb	r2,0(r23)
 8001ed8:	d8001f15 	stw	zero,124(sp)
 8001edc:	da000404 	addi	r8,sp,16
 8001ee0:	103d891e 	bne	r2,zero,8001508 <__alt_data_end+0xfc001508>
 8001ee4:	b823883a 	mov	r17,r23
 8001ee8:	003d9f06 	br	8001568 <__alt_data_end+0xfc001568>
 8001eec:	8025883a 	mov	r18,r16
 8001ef0:	dc002903 	ldbu	r16,164(sp)
 8001ef4:	e011883a 	mov	r8,fp
 8001ef8:	84003fcc 	andi	r16,r16,255
 8001efc:	8005e61e 	bne	r16,zero,8003698 <___svfprintf_internal_r+0x2244>
 8001f00:	94800414 	ori	r18,r18,16
 8001f04:	9080080c 	andi	r2,r18,32
 8001f08:	10022026 	beq	r2,zero,800278c <___svfprintf_internal_r+0x1338>
 8001f0c:	d9002e17 	ldw	r4,184(sp)
 8001f10:	d9402a17 	ldw	r5,168(sp)
 8001f14:	d8002785 	stb	zero,158(sp)
 8001f18:	20c00204 	addi	r3,r4,8
 8001f1c:	25000017 	ldw	r20,0(r4)
 8001f20:	25800117 	ldw	r22,4(r4)
 8001f24:	2803ad16 	blt	r5,zero,8002ddc <___svfprintf_internal_r+0x1988>
 8001f28:	013fdfc4 	movi	r4,-129
 8001f2c:	a584b03a 	or	r2,r20,r22
 8001f30:	d8c02e15 	stw	r3,184(sp)
 8001f34:	9124703a 	and	r18,r18,r4
 8001f38:	0039883a 	mov	fp,zero
 8001f3c:	103eb01e 	bne	r2,zero,8001a00 <__alt_data_end+0xfc001a00>
 8001f40:	d8802a17 	ldw	r2,168(sp)
 8001f44:	1002e71e 	bne	r2,zero,8002ae4 <___svfprintf_internal_r+0x1690>
 8001f48:	d8002a15 	stw	zero,168(sp)
 8001f4c:	d8002b15 	stw	zero,172(sp)
 8001f50:	dc001e04 	addi	r16,sp,120
 8001f54:	003ef706 	br	8001b34 <__alt_data_end+0xfc001b34>
 8001f58:	8025883a 	mov	r18,r16
 8001f5c:	dc002903 	ldbu	r16,164(sp)
 8001f60:	e011883a 	mov	r8,fp
 8001f64:	84003fcc 	andi	r16,r16,255
 8001f68:	8005c81e 	bne	r16,zero,800368c <___svfprintf_internal_r+0x2238>
 8001f6c:	01020074 	movhi	r4,2049
 8001f70:	21109304 	addi	r4,r4,16972
 8001f74:	d9003a15 	stw	r4,232(sp)
 8001f78:	9080080c 	andi	r2,r18,32
 8001f7c:	10007226 	beq	r2,zero,8002148 <___svfprintf_internal_r+0xcf4>
 8001f80:	d9402e17 	ldw	r5,184(sp)
 8001f84:	2d000017 	ldw	r20,0(r5)
 8001f88:	2d800117 	ldw	r22,4(r5)
 8001f8c:	29400204 	addi	r5,r5,8
 8001f90:	d9402e15 	stw	r5,184(sp)
 8001f94:	9080004c 	andi	r2,r18,1
 8001f98:	1001aa26 	beq	r2,zero,8002644 <___svfprintf_internal_r+0x11f0>
 8001f9c:	a584b03a 	or	r2,r20,r22
 8001fa0:	10032526 	beq	r2,zero,8002c38 <___svfprintf_internal_r+0x17e4>
 8001fa4:	d8c02a17 	ldw	r3,168(sp)
 8001fa8:	00800c04 	movi	r2,48
 8001fac:	d8802705 	stb	r2,156(sp)
 8001fb0:	dc402745 	stb	r17,157(sp)
 8001fb4:	d8002785 	stb	zero,158(sp)
 8001fb8:	90800094 	ori	r2,r18,2
 8001fbc:	1804a316 	blt	r3,zero,800324c <___svfprintf_internal_r+0x1df8>
 8001fc0:	00bfdfc4 	movi	r2,-129
 8001fc4:	90a4703a 	and	r18,r18,r2
 8001fc8:	94800094 	ori	r18,r18,2
 8001fcc:	0039883a 	mov	fp,zero
 8001fd0:	d9003a17 	ldw	r4,232(sp)
 8001fd4:	dc001e04 	addi	r16,sp,120
 8001fd8:	a08003cc 	andi	r2,r20,15
 8001fdc:	b006973a 	slli	r3,r22,28
 8001fe0:	2085883a 	add	r2,r4,r2
 8001fe4:	a028d13a 	srli	r20,r20,4
 8001fe8:	10800003 	ldbu	r2,0(r2)
 8001fec:	b02cd13a 	srli	r22,r22,4
 8001ff0:	843fffc4 	addi	r16,r16,-1
 8001ff4:	1d28b03a 	or	r20,r3,r20
 8001ff8:	80800005 	stb	r2,0(r16)
 8001ffc:	a584b03a 	or	r2,r20,r22
 8002000:	103ff51e 	bne	r2,zero,8001fd8 <__alt_data_end+0xfc001fd8>
 8002004:	d8c02817 	ldw	r3,160(sp)
 8002008:	1c07c83a 	sub	r3,r3,r16
 800200c:	d8c02b15 	stw	r3,172(sp)
 8002010:	003ec806 	br	8001b34 <__alt_data_end+0xfc001b34>
 8002014:	d8c02e17 	ldw	r3,184(sp)
 8002018:	d9002e17 	ldw	r4,184(sp)
 800201c:	8025883a 	mov	r18,r16
 8002020:	18800017 	ldw	r2,0(r3)
 8002024:	21000104 	addi	r4,r4,4
 8002028:	00c00044 	movi	r3,1
 800202c:	e011883a 	mov	r8,fp
 8002030:	d8c02915 	stw	r3,164(sp)
 8002034:	d8002785 	stb	zero,158(sp)
 8002038:	d8801405 	stb	r2,80(sp)
 800203c:	d9002e15 	stw	r4,184(sp)
 8002040:	d8c02b15 	stw	r3,172(sp)
 8002044:	d8002a15 	stw	zero,168(sp)
 8002048:	d8003215 	stw	zero,200(sp)
 800204c:	dc001404 	addi	r16,sp,80
 8002050:	0039883a 	mov	fp,zero
 8002054:	003ec406 	br	8001b68 <__alt_data_end+0xfc001b68>
 8002058:	8025883a 	mov	r18,r16
 800205c:	dc002903 	ldbu	r16,164(sp)
 8002060:	e011883a 	mov	r8,fp
 8002064:	84003fcc 	andi	r16,r16,255
 8002068:	803e8726 	beq	r16,zero,8001a88 <__alt_data_end+0xfc001a88>
 800206c:	d8c02b03 	ldbu	r3,172(sp)
 8002070:	d8c02785 	stb	r3,158(sp)
 8002074:	003e8406 	br	8001a88 <__alt_data_end+0xfc001a88>
 8002078:	00c00044 	movi	r3,1
 800207c:	d8c02905 	stb	r3,164(sp)
 8002080:	00c00ac4 	movi	r3,43
 8002084:	d8c02b05 	stb	r3,172(sp)
 8002088:	bc400007 	ldb	r17,0(r23)
 800208c:	003d4606 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8002090:	84000814 	ori	r16,r16,32
 8002094:	bc400007 	ldb	r17,0(r23)
 8002098:	003d4306 	br	80015a8 <__alt_data_end+0xfc0015a8>
 800209c:	d8802e17 	ldw	r2,184(sp)
 80020a0:	8025883a 	mov	r18,r16
 80020a4:	d8002785 	stb	zero,158(sp)
 80020a8:	14000017 	ldw	r16,0(r2)
 80020ac:	e011883a 	mov	r8,fp
 80020b0:	15000104 	addi	r20,r2,4
 80020b4:	80042126 	beq	r16,zero,800313c <___svfprintf_internal_r+0x1ce8>
 80020b8:	d8c02a17 	ldw	r3,168(sp)
 80020bc:	1803ee16 	blt	r3,zero,8003078 <___svfprintf_internal_r+0x1c24>
 80020c0:	180d883a 	mov	r6,r3
 80020c4:	000b883a 	mov	r5,zero
 80020c8:	8009883a 	mov	r4,r16
 80020cc:	df003e15 	stw	fp,248(sp)
 80020d0:	8008b800 	call	8008b80 <memchr>
 80020d4:	da003e17 	ldw	r8,248(sp)
 80020d8:	10046a26 	beq	r2,zero,8003284 <___svfprintf_internal_r+0x1e30>
 80020dc:	1405c83a 	sub	r2,r2,r16
 80020e0:	d8802b15 	stw	r2,172(sp)
 80020e4:	1003ea16 	blt	r2,zero,8003090 <___svfprintf_internal_r+0x1c3c>
 80020e8:	df002783 	ldbu	fp,158(sp)
 80020ec:	d8802915 	stw	r2,164(sp)
 80020f0:	dd002e15 	stw	r20,184(sp)
 80020f4:	d8002a15 	stw	zero,168(sp)
 80020f8:	d8003215 	stw	zero,200(sp)
 80020fc:	003e9306 	br	8001b4c <__alt_data_end+0xfc001b4c>
 8002100:	8025883a 	mov	r18,r16
 8002104:	dc002903 	ldbu	r16,164(sp)
 8002108:	e011883a 	mov	r8,fp
 800210c:	84003fcc 	andi	r16,r16,255
 8002110:	803f7c26 	beq	r16,zero,8001f04 <__alt_data_end+0xfc001f04>
 8002114:	d8c02b03 	ldbu	r3,172(sp)
 8002118:	d8c02785 	stb	r3,158(sp)
 800211c:	003f7906 	br	8001f04 <__alt_data_end+0xfc001f04>
 8002120:	8025883a 	mov	r18,r16
 8002124:	dc002903 	ldbu	r16,164(sp)
 8002128:	e011883a 	mov	r8,fp
 800212c:	84003fcc 	andi	r16,r16,255
 8002130:	8005741e 	bne	r16,zero,8003704 <___svfprintf_internal_r+0x22b0>
 8002134:	01020074 	movhi	r4,2049
 8002138:	21109804 	addi	r4,r4,16992
 800213c:	d9003a15 	stw	r4,232(sp)
 8002140:	9080080c 	andi	r2,r18,32
 8002144:	103f8e1e 	bne	r2,zero,8001f80 <__alt_data_end+0xfc001f80>
 8002148:	9080040c 	andi	r2,r18,16
 800214c:	1002a726 	beq	r2,zero,8002bec <___svfprintf_internal_r+0x1798>
 8002150:	d8802e17 	ldw	r2,184(sp)
 8002154:	002d883a 	mov	r22,zero
 8002158:	15000017 	ldw	r20,0(r2)
 800215c:	10800104 	addi	r2,r2,4
 8002160:	d8802e15 	stw	r2,184(sp)
 8002164:	003f8b06 	br	8001f94 <__alt_data_end+0xfc001f94>
 8002168:	84000054 	ori	r16,r16,1
 800216c:	bc400007 	ldb	r17,0(r23)
 8002170:	003d0d06 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8002174:	d8802b07 	ldb	r2,172(sp)
 8002178:	1002a41e 	bne	r2,zero,8002c0c <___svfprintf_internal_r+0x17b8>
 800217c:	00c00044 	movi	r3,1
 8002180:	d8c02905 	stb	r3,164(sp)
 8002184:	00c00804 	movi	r3,32
 8002188:	d8c02b05 	stb	r3,172(sp)
 800218c:	bc400007 	ldb	r17,0(r23)
 8002190:	003d0506 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8002194:	8025883a 	mov	r18,r16
 8002198:	dc002903 	ldbu	r16,164(sp)
 800219c:	e011883a 	mov	r8,fp
 80021a0:	84003fcc 	andi	r16,r16,255
 80021a4:	803e0626 	beq	r16,zero,80019c0 <__alt_data_end+0xfc0019c0>
 80021a8:	d8c02b03 	ldbu	r3,172(sp)
 80021ac:	d8c02785 	stb	r3,158(sp)
 80021b0:	003e0306 	br	80019c0 <__alt_data_end+0xfc0019c0>
 80021b4:	bc400007 	ldb	r17,0(r23)
 80021b8:	00801b04 	movi	r2,108
 80021bc:	88830a26 	beq	r17,r2,8002de8 <___svfprintf_internal_r+0x1994>
 80021c0:	84000414 	ori	r16,r16,16
 80021c4:	003cf806 	br	80015a8 <__alt_data_end+0xfc0015a8>
 80021c8:	8025883a 	mov	r18,r16
 80021cc:	dc002903 	ldbu	r16,164(sp)
 80021d0:	e011883a 	mov	r8,fp
 80021d4:	84003fcc 	andi	r16,r16,255
 80021d8:	8005471e 	bne	r16,zero,80036f8 <___svfprintf_internal_r+0x22a4>
 80021dc:	9080080c 	andi	r2,r18,32
 80021e0:	10028c26 	beq	r2,zero,8002c14 <___svfprintf_internal_r+0x17c0>
 80021e4:	d9002e17 	ldw	r4,184(sp)
 80021e8:	d9402f17 	ldw	r5,188(sp)
 80021ec:	20800017 	ldw	r2,0(r4)
 80021f0:	2807d7fa 	srai	r3,r5,31
 80021f4:	21000104 	addi	r4,r4,4
 80021f8:	d9002e15 	stw	r4,184(sp)
 80021fc:	11400015 	stw	r5,0(r2)
 8002200:	10c00115 	stw	r3,4(r2)
 8002204:	003cbe06 	br	8001500 <__alt_data_end+0xfc001500>
 8002208:	84001014 	ori	r16,r16,64
 800220c:	bc400007 	ldb	r17,0(r23)
 8002210:	003ce506 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8002214:	01020074 	movhi	r4,2049
 8002218:	21109804 	addi	r4,r4,16992
 800221c:	0039883a 	mov	fp,zero
 8002220:	d9003a15 	stw	r4,232(sp)
 8002224:	04401e04 	movi	r17,120
 8002228:	003f6906 	br	8001fd0 <__alt_data_end+0xfc001fd0>
 800222c:	8025883a 	mov	r18,r16
 8002230:	dc002903 	ldbu	r16,164(sp)
 8002234:	e011883a 	mov	r8,fp
 8002238:	84003fcc 	andi	r16,r16,255
 800223c:	8005261e 	bne	r16,zero,80036d8 <___svfprintf_internal_r+0x2284>
 8002240:	883d6526 	beq	r17,zero,80017d8 <__alt_data_end+0xfc0017d8>
 8002244:	00c00044 	movi	r3,1
 8002248:	d8c02915 	stw	r3,164(sp)
 800224c:	dc401405 	stb	r17,80(sp)
 8002250:	d8002785 	stb	zero,158(sp)
 8002254:	003f7a06 	br	8002040 <__alt_data_end+0xfc002040>
 8002258:	01020074 	movhi	r4,2049
 800225c:	21109804 	addi	r4,r4,16992
 8002260:	d9003a15 	stw	r4,232(sp)
 8002264:	d8c02e15 	stw	r3,184(sp)
 8002268:	1025883a 	mov	r18,r2
 800226c:	04401e04 	movi	r17,120
 8002270:	a584b03a 	or	r2,r20,r22
 8002274:	1000fa1e 	bne	r2,zero,8002660 <___svfprintf_internal_r+0x120c>
 8002278:	0039883a 	mov	fp,zero
 800227c:	00800084 	movi	r2,2
 8002280:	10803fcc 	andi	r2,r2,255
 8002284:	00c00044 	movi	r3,1
 8002288:	10c21626 	beq	r2,r3,8002ae4 <___svfprintf_internal_r+0x1690>
 800228c:	00c00084 	movi	r3,2
 8002290:	10fe0e1e 	bne	r2,r3,8001acc <__alt_data_end+0xfc001acc>
 8002294:	003d4606 	br	80017b0 <__alt_data_end+0xfc0017b0>
 8002298:	d8c02017 	ldw	r3,128(sp)
 800229c:	003e7306 	br	8001c6c <__alt_data_end+0xfc001c6c>
 80022a0:	00801944 	movi	r2,101
 80022a4:	14407c0e 	bge	r2,r17,8002498 <___svfprintf_internal_r+0x1044>
 80022a8:	d9003617 	ldw	r4,216(sp)
 80022ac:	d9403717 	ldw	r5,220(sp)
 80022b0:	000d883a 	mov	r6,zero
 80022b4:	000f883a 	mov	r7,zero
 80022b8:	d8c03d15 	stw	r3,244(sp)
 80022bc:	da003e15 	stw	r8,248(sp)
 80022c0:	80101a80 	call	80101a8 <__eqdf2>
 80022c4:	d8c03d17 	ldw	r3,244(sp)
 80022c8:	da003e17 	ldw	r8,248(sp)
 80022cc:	1000f51e 	bne	r2,zero,80026a4 <___svfprintf_internal_r+0x1250>
 80022d0:	d8801f17 	ldw	r2,124(sp)
 80022d4:	01020074 	movhi	r4,2049
 80022d8:	21109f04 	addi	r4,r4,17020
 80022dc:	18c00044 	addi	r3,r3,1
 80022e0:	10800044 	addi	r2,r2,1
 80022e4:	41000015 	stw	r4,0(r8)
 80022e8:	01000044 	movi	r4,1
 80022ec:	41000115 	stw	r4,4(r8)
 80022f0:	d8c02015 	stw	r3,128(sp)
 80022f4:	d8801f15 	stw	r2,124(sp)
 80022f8:	010001c4 	movi	r4,7
 80022fc:	20826616 	blt	r4,r2,8002c98 <___svfprintf_internal_r+0x1844>
 8002300:	42000204 	addi	r8,r8,8
 8002304:	d8802617 	ldw	r2,152(sp)
 8002308:	d9403317 	ldw	r5,204(sp)
 800230c:	11400216 	blt	r2,r5,8002318 <___svfprintf_internal_r+0xec4>
 8002310:	9080004c 	andi	r2,r18,1
 8002314:	103eb326 	beq	r2,zero,8001de4 <__alt_data_end+0xfc001de4>
 8002318:	d8803817 	ldw	r2,224(sp)
 800231c:	d9003417 	ldw	r4,208(sp)
 8002320:	d9403817 	ldw	r5,224(sp)
 8002324:	1887883a 	add	r3,r3,r2
 8002328:	d8801f17 	ldw	r2,124(sp)
 800232c:	41000015 	stw	r4,0(r8)
 8002330:	41400115 	stw	r5,4(r8)
 8002334:	10800044 	addi	r2,r2,1
 8002338:	d8c02015 	stw	r3,128(sp)
 800233c:	d8801f15 	stw	r2,124(sp)
 8002340:	010001c4 	movi	r4,7
 8002344:	2082af16 	blt	r4,r2,8002e04 <___svfprintf_internal_r+0x19b0>
 8002348:	42000204 	addi	r8,r8,8
 800234c:	d8803317 	ldw	r2,204(sp)
 8002350:	143fffc4 	addi	r16,r2,-1
 8002354:	043ea30e 	bge	zero,r16,8001de4 <__alt_data_end+0xfc001de4>
 8002358:	04400404 	movi	r17,16
 800235c:	d8801f17 	ldw	r2,124(sp)
 8002360:	8c00860e 	bge	r17,r16,800257c <___svfprintf_internal_r+0x1128>
 8002364:	01420074 	movhi	r5,2049
 8002368:	29509f84 	addi	r5,r5,17022
 800236c:	d9402c15 	stw	r5,176(sp)
 8002370:	058001c4 	movi	r22,7
 8002374:	dd002d17 	ldw	r20,180(sp)
 8002378:	00000306 	br	8002388 <___svfprintf_internal_r+0xf34>
 800237c:	42000204 	addi	r8,r8,8
 8002380:	843ffc04 	addi	r16,r16,-16
 8002384:	8c00800e 	bge	r17,r16,8002588 <___svfprintf_internal_r+0x1134>
 8002388:	18c00404 	addi	r3,r3,16
 800238c:	10800044 	addi	r2,r2,1
 8002390:	45400015 	stw	r21,0(r8)
 8002394:	44400115 	stw	r17,4(r8)
 8002398:	d8c02015 	stw	r3,128(sp)
 800239c:	d8801f15 	stw	r2,124(sp)
 80023a0:	b0bff60e 	bge	r22,r2,800237c <__alt_data_end+0xfc00237c>
 80023a4:	d9801e04 	addi	r6,sp,120
 80023a8:	a00b883a 	mov	r5,r20
 80023ac:	9809883a 	mov	r4,r19
 80023b0:	800a1240 	call	800a124 <__ssprint_r>
 80023b4:	103d0e1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 80023b8:	d8c02017 	ldw	r3,128(sp)
 80023bc:	d8801f17 	ldw	r2,124(sp)
 80023c0:	da000404 	addi	r8,sp,16
 80023c4:	003fee06 	br	8002380 <__alt_data_end+0xfc002380>
 80023c8:	d9403117 	ldw	r5,196(sp)
 80023cc:	d8802917 	ldw	r2,164(sp)
 80023d0:	28adc83a 	sub	r22,r5,r2
 80023d4:	05be430e 	bge	zero,r22,8001ce4 <__alt_data_end+0xfc001ce4>
 80023d8:	07000404 	movi	fp,16
 80023dc:	d8801f17 	ldw	r2,124(sp)
 80023e0:	e583a20e 	bge	fp,r22,800326c <___svfprintf_internal_r+0x1e18>
 80023e4:	01420074 	movhi	r5,2049
 80023e8:	29509f84 	addi	r5,r5,17022
 80023ec:	dc403015 	stw	r17,192(sp)
 80023f0:	d9402c15 	stw	r5,176(sp)
 80023f4:	b023883a 	mov	r17,r22
 80023f8:	050001c4 	movi	r20,7
 80023fc:	902d883a 	mov	r22,r18
 8002400:	8025883a 	mov	r18,r16
 8002404:	dc002d17 	ldw	r16,180(sp)
 8002408:	00000306 	br	8002418 <___svfprintf_internal_r+0xfc4>
 800240c:	8c7ffc04 	addi	r17,r17,-16
 8002410:	42000204 	addi	r8,r8,8
 8002414:	e440110e 	bge	fp,r17,800245c <___svfprintf_internal_r+0x1008>
 8002418:	18c00404 	addi	r3,r3,16
 800241c:	10800044 	addi	r2,r2,1
 8002420:	45400015 	stw	r21,0(r8)
 8002424:	47000115 	stw	fp,4(r8)
 8002428:	d8c02015 	stw	r3,128(sp)
 800242c:	d8801f15 	stw	r2,124(sp)
 8002430:	a0bff60e 	bge	r20,r2,800240c <__alt_data_end+0xfc00240c>
 8002434:	d9801e04 	addi	r6,sp,120
 8002438:	800b883a 	mov	r5,r16
 800243c:	9809883a 	mov	r4,r19
 8002440:	800a1240 	call	800a124 <__ssprint_r>
 8002444:	103cea1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002448:	8c7ffc04 	addi	r17,r17,-16
 800244c:	d8c02017 	ldw	r3,128(sp)
 8002450:	d8801f17 	ldw	r2,124(sp)
 8002454:	da000404 	addi	r8,sp,16
 8002458:	e47fef16 	blt	fp,r17,8002418 <__alt_data_end+0xfc002418>
 800245c:	9021883a 	mov	r16,r18
 8002460:	b025883a 	mov	r18,r22
 8002464:	882d883a 	mov	r22,r17
 8002468:	dc403017 	ldw	r17,192(sp)
 800246c:	d9002c17 	ldw	r4,176(sp)
 8002470:	1d87883a 	add	r3,r3,r22
 8002474:	10800044 	addi	r2,r2,1
 8002478:	41000015 	stw	r4,0(r8)
 800247c:	45800115 	stw	r22,4(r8)
 8002480:	d8c02015 	stw	r3,128(sp)
 8002484:	d8801f15 	stw	r2,124(sp)
 8002488:	010001c4 	movi	r4,7
 800248c:	20819a16 	blt	r4,r2,8002af8 <___svfprintf_internal_r+0x16a4>
 8002490:	42000204 	addi	r8,r8,8
 8002494:	003e1306 	br	8001ce4 <__alt_data_end+0xfc001ce4>
 8002498:	d9403317 	ldw	r5,204(sp)
 800249c:	00800044 	movi	r2,1
 80024a0:	18c00044 	addi	r3,r3,1
 80024a4:	1141710e 	bge	r2,r5,8002a6c <___svfprintf_internal_r+0x1618>
 80024a8:	dc401f17 	ldw	r17,124(sp)
 80024ac:	00800044 	movi	r2,1
 80024b0:	40800115 	stw	r2,4(r8)
 80024b4:	8c400044 	addi	r17,r17,1
 80024b8:	44000015 	stw	r16,0(r8)
 80024bc:	d8c02015 	stw	r3,128(sp)
 80024c0:	dc401f15 	stw	r17,124(sp)
 80024c4:	008001c4 	movi	r2,7
 80024c8:	14417416 	blt	r2,r17,8002a9c <___svfprintf_internal_r+0x1648>
 80024cc:	42000204 	addi	r8,r8,8
 80024d0:	d8803817 	ldw	r2,224(sp)
 80024d4:	d9003417 	ldw	r4,208(sp)
 80024d8:	8c400044 	addi	r17,r17,1
 80024dc:	10c7883a 	add	r3,r2,r3
 80024e0:	40800115 	stw	r2,4(r8)
 80024e4:	41000015 	stw	r4,0(r8)
 80024e8:	d8c02015 	stw	r3,128(sp)
 80024ec:	dc401f15 	stw	r17,124(sp)
 80024f0:	008001c4 	movi	r2,7
 80024f4:	14417216 	blt	r2,r17,8002ac0 <___svfprintf_internal_r+0x166c>
 80024f8:	45800204 	addi	r22,r8,8
 80024fc:	d9003617 	ldw	r4,216(sp)
 8002500:	d9403717 	ldw	r5,220(sp)
 8002504:	000d883a 	mov	r6,zero
 8002508:	000f883a 	mov	r7,zero
 800250c:	d8c03d15 	stw	r3,244(sp)
 8002510:	80101a80 	call	80101a8 <__eqdf2>
 8002514:	d8c03d17 	ldw	r3,244(sp)
 8002518:	1000b326 	beq	r2,zero,80027e8 <___svfprintf_internal_r+0x1394>
 800251c:	d9403317 	ldw	r5,204(sp)
 8002520:	84000044 	addi	r16,r16,1
 8002524:	8c400044 	addi	r17,r17,1
 8002528:	28bfffc4 	addi	r2,r5,-1
 800252c:	1887883a 	add	r3,r3,r2
 8002530:	b0800115 	stw	r2,4(r22)
 8002534:	b4000015 	stw	r16,0(r22)
 8002538:	d8c02015 	stw	r3,128(sp)
 800253c:	dc401f15 	stw	r17,124(sp)
 8002540:	008001c4 	movi	r2,7
 8002544:	1440d216 	blt	r2,r17,8002890 <___svfprintf_internal_r+0x143c>
 8002548:	b5800204 	addi	r22,r22,8
 800254c:	d9003b17 	ldw	r4,236(sp)
 8002550:	df0022c4 	addi	fp,sp,139
 8002554:	8c400044 	addi	r17,r17,1
 8002558:	20c7883a 	add	r3,r4,r3
 800255c:	b7000015 	stw	fp,0(r22)
 8002560:	b1000115 	stw	r4,4(r22)
 8002564:	d8c02015 	stw	r3,128(sp)
 8002568:	dc401f15 	stw	r17,124(sp)
 800256c:	008001c4 	movi	r2,7
 8002570:	14400e16 	blt	r2,r17,80025ac <___svfprintf_internal_r+0x1158>
 8002574:	b2000204 	addi	r8,r22,8
 8002578:	003e1a06 	br	8001de4 <__alt_data_end+0xfc001de4>
 800257c:	01020074 	movhi	r4,2049
 8002580:	21109f84 	addi	r4,r4,17022
 8002584:	d9002c15 	stw	r4,176(sp)
 8002588:	d9002c17 	ldw	r4,176(sp)
 800258c:	1c07883a 	add	r3,r3,r16
 8002590:	44000115 	stw	r16,4(r8)
 8002594:	41000015 	stw	r4,0(r8)
 8002598:	10800044 	addi	r2,r2,1
 800259c:	d8c02015 	stw	r3,128(sp)
 80025a0:	d8801f15 	stw	r2,124(sp)
 80025a4:	010001c4 	movi	r4,7
 80025a8:	20be0d0e 	bge	r4,r2,8001de0 <__alt_data_end+0xfc001de0>
 80025ac:	d9402d17 	ldw	r5,180(sp)
 80025b0:	d9801e04 	addi	r6,sp,120
 80025b4:	9809883a 	mov	r4,r19
 80025b8:	800a1240 	call	800a124 <__ssprint_r>
 80025bc:	103c8c1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 80025c0:	d8c02017 	ldw	r3,128(sp)
 80025c4:	da000404 	addi	r8,sp,16
 80025c8:	003e0606 	br	8001de4 <__alt_data_end+0xfc001de4>
 80025cc:	d9402d17 	ldw	r5,180(sp)
 80025d0:	d9801e04 	addi	r6,sp,120
 80025d4:	9809883a 	mov	r4,r19
 80025d8:	800a1240 	call	800a124 <__ssprint_r>
 80025dc:	103e3d26 	beq	r2,zero,8001ed4 <__alt_data_end+0xfc001ed4>
 80025e0:	003c8306 	br	80017f0 <__alt_data_end+0xfc0017f0>
 80025e4:	d9402d17 	ldw	r5,180(sp)
 80025e8:	d9801e04 	addi	r6,sp,120
 80025ec:	9809883a 	mov	r4,r19
 80025f0:	800a1240 	call	800a124 <__ssprint_r>
 80025f4:	103c7e1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 80025f8:	d8c02017 	ldw	r3,128(sp)
 80025fc:	da000404 	addi	r8,sp,16
 8002600:	003deb06 	br	8001db0 <__alt_data_end+0xfc001db0>
 8002604:	d9402d17 	ldw	r5,180(sp)
 8002608:	d9801e04 	addi	r6,sp,120
 800260c:	9809883a 	mov	r4,r19
 8002610:	800a1240 	call	800a124 <__ssprint_r>
 8002614:	103c761e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002618:	d8c02017 	ldw	r3,128(sp)
 800261c:	da000404 	addi	r8,sp,16
 8002620:	003d9f06 	br	8001ca0 <__alt_data_end+0xfc001ca0>
 8002624:	d9402d17 	ldw	r5,180(sp)
 8002628:	d9801e04 	addi	r6,sp,120
 800262c:	9809883a 	mov	r4,r19
 8002630:	800a1240 	call	800a124 <__ssprint_r>
 8002634:	103c6e1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002638:	d8c02017 	ldw	r3,128(sp)
 800263c:	da000404 	addi	r8,sp,16
 8002640:	003da506 	br	8001cd8 <__alt_data_end+0xfc001cd8>
 8002644:	d9402a17 	ldw	r5,168(sp)
 8002648:	d8002785 	stb	zero,158(sp)
 800264c:	283f0816 	blt	r5,zero,8002270 <__alt_data_end+0xfc002270>
 8002650:	00ffdfc4 	movi	r3,-129
 8002654:	a584b03a 	or	r2,r20,r22
 8002658:	90e4703a 	and	r18,r18,r3
 800265c:	103c5126 	beq	r2,zero,80017a4 <__alt_data_end+0xfc0017a4>
 8002660:	0039883a 	mov	fp,zero
 8002664:	003e5a06 	br	8001fd0 <__alt_data_end+0xfc001fd0>
 8002668:	9080040c 	andi	r2,r18,16
 800266c:	10013d26 	beq	r2,zero,8002b64 <___svfprintf_internal_r+0x1710>
 8002670:	d8c02e17 	ldw	r3,184(sp)
 8002674:	d9002a17 	ldw	r4,168(sp)
 8002678:	d8002785 	stb	zero,158(sp)
 800267c:	18800104 	addi	r2,r3,4
 8002680:	1d000017 	ldw	r20,0(r3)
 8002684:	002d883a 	mov	r22,zero
 8002688:	20013f16 	blt	r4,zero,8002b88 <___svfprintf_internal_r+0x1734>
 800268c:	00ffdfc4 	movi	r3,-129
 8002690:	d8802e15 	stw	r2,184(sp)
 8002694:	90e4703a 	and	r18,r18,r3
 8002698:	a03d0926 	beq	r20,zero,8001ac0 <__alt_data_end+0xfc001ac0>
 800269c:	0039883a 	mov	fp,zero
 80026a0:	003d0c06 	br	8001ad4 <__alt_data_end+0xfc001ad4>
 80026a4:	dc402617 	ldw	r17,152(sp)
 80026a8:	0441830e 	bge	zero,r17,8002cb8 <___svfprintf_internal_r+0x1864>
 80026ac:	dc403217 	ldw	r17,200(sp)
 80026b0:	d8803317 	ldw	r2,204(sp)
 80026b4:	1440010e 	bge	r2,r17,80026bc <___svfprintf_internal_r+0x1268>
 80026b8:	1023883a 	mov	r17,r2
 80026bc:	04400a0e 	bge	zero,r17,80026e8 <___svfprintf_internal_r+0x1294>
 80026c0:	d8801f17 	ldw	r2,124(sp)
 80026c4:	1c47883a 	add	r3,r3,r17
 80026c8:	44000015 	stw	r16,0(r8)
 80026cc:	10800044 	addi	r2,r2,1
 80026d0:	44400115 	stw	r17,4(r8)
 80026d4:	d8c02015 	stw	r3,128(sp)
 80026d8:	d8801f15 	stw	r2,124(sp)
 80026dc:	010001c4 	movi	r4,7
 80026e0:	20827516 	blt	r4,r2,80030b8 <___svfprintf_internal_r+0x1c64>
 80026e4:	42000204 	addi	r8,r8,8
 80026e8:	88027b16 	blt	r17,zero,80030d8 <___svfprintf_internal_r+0x1c84>
 80026ec:	d9003217 	ldw	r4,200(sp)
 80026f0:	2463c83a 	sub	r17,r4,r17
 80026f4:	0440990e 	bge	zero,r17,800295c <___svfprintf_internal_r+0x1508>
 80026f8:	05800404 	movi	r22,16
 80026fc:	d8801f17 	ldw	r2,124(sp)
 8002700:	b441530e 	bge	r22,r17,8002c50 <___svfprintf_internal_r+0x17fc>
 8002704:	01020074 	movhi	r4,2049
 8002708:	21109f84 	addi	r4,r4,17022
 800270c:	d9002c15 	stw	r4,176(sp)
 8002710:	070001c4 	movi	fp,7
 8002714:	dd002d17 	ldw	r20,180(sp)
 8002718:	00000306 	br	8002728 <___svfprintf_internal_r+0x12d4>
 800271c:	42000204 	addi	r8,r8,8
 8002720:	8c7ffc04 	addi	r17,r17,-16
 8002724:	b4414d0e 	bge	r22,r17,8002c5c <___svfprintf_internal_r+0x1808>
 8002728:	18c00404 	addi	r3,r3,16
 800272c:	10800044 	addi	r2,r2,1
 8002730:	45400015 	stw	r21,0(r8)
 8002734:	45800115 	stw	r22,4(r8)
 8002738:	d8c02015 	stw	r3,128(sp)
 800273c:	d8801f15 	stw	r2,124(sp)
 8002740:	e0bff60e 	bge	fp,r2,800271c <__alt_data_end+0xfc00271c>
 8002744:	d9801e04 	addi	r6,sp,120
 8002748:	a00b883a 	mov	r5,r20
 800274c:	9809883a 	mov	r4,r19
 8002750:	800a1240 	call	800a124 <__ssprint_r>
 8002754:	103c261e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002758:	d8c02017 	ldw	r3,128(sp)
 800275c:	d8801f17 	ldw	r2,124(sp)
 8002760:	da000404 	addi	r8,sp,16
 8002764:	003fee06 	br	8002720 <__alt_data_end+0xfc002720>
 8002768:	d9402d17 	ldw	r5,180(sp)
 800276c:	d9801e04 	addi	r6,sp,120
 8002770:	9809883a 	mov	r4,r19
 8002774:	800a1240 	call	800a124 <__ssprint_r>
 8002778:	103c1d1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 800277c:	d8c02017 	ldw	r3,128(sp)
 8002780:	df002787 	ldb	fp,158(sp)
 8002784:	da000404 	addi	r8,sp,16
 8002788:	003d3806 	br	8001c6c <__alt_data_end+0xfc001c6c>
 800278c:	9080040c 	andi	r2,r18,16
 8002790:	10005c26 	beq	r2,zero,8002904 <___svfprintf_internal_r+0x14b0>
 8002794:	d8c02e17 	ldw	r3,184(sp)
 8002798:	d9002a17 	ldw	r4,168(sp)
 800279c:	d8002785 	stb	zero,158(sp)
 80027a0:	18800104 	addi	r2,r3,4
 80027a4:	1d000017 	ldw	r20,0(r3)
 80027a8:	002d883a 	mov	r22,zero
 80027ac:	20005e16 	blt	r4,zero,8002928 <___svfprintf_internal_r+0x14d4>
 80027b0:	00ffdfc4 	movi	r3,-129
 80027b4:	d8802e15 	stw	r2,184(sp)
 80027b8:	90e4703a 	and	r18,r18,r3
 80027bc:	0039883a 	mov	fp,zero
 80027c0:	a03ddf26 	beq	r20,zero,8001f40 <__alt_data_end+0xfc001f40>
 80027c4:	00800244 	movi	r2,9
 80027c8:	153c8e36 	bltu	r2,r20,8001a04 <__alt_data_end+0xfc001a04>
 80027cc:	a5000c04 	addi	r20,r20,48
 80027d0:	dc001dc4 	addi	r16,sp,119
 80027d4:	dd001dc5 	stb	r20,119(sp)
 80027d8:	d8c02817 	ldw	r3,160(sp)
 80027dc:	1c07c83a 	sub	r3,r3,r16
 80027e0:	d8c02b15 	stw	r3,172(sp)
 80027e4:	003cd306 	br	8001b34 <__alt_data_end+0xfc001b34>
 80027e8:	d8803317 	ldw	r2,204(sp)
 80027ec:	143fffc4 	addi	r16,r2,-1
 80027f0:	043f560e 	bge	zero,r16,800254c <__alt_data_end+0xfc00254c>
 80027f4:	07000404 	movi	fp,16
 80027f8:	e403530e 	bge	fp,r16,8003548 <___svfprintf_internal_r+0x20f4>
 80027fc:	01420074 	movhi	r5,2049
 8002800:	29509f84 	addi	r5,r5,17022
 8002804:	d9402c15 	stw	r5,176(sp)
 8002808:	01c001c4 	movi	r7,7
 800280c:	dd002d17 	ldw	r20,180(sp)
 8002810:	00000306 	br	8002820 <___svfprintf_internal_r+0x13cc>
 8002814:	843ffc04 	addi	r16,r16,-16
 8002818:	b5800204 	addi	r22,r22,8
 800281c:	e400130e 	bge	fp,r16,800286c <___svfprintf_internal_r+0x1418>
 8002820:	18c00404 	addi	r3,r3,16
 8002824:	8c400044 	addi	r17,r17,1
 8002828:	b5400015 	stw	r21,0(r22)
 800282c:	b7000115 	stw	fp,4(r22)
 8002830:	d8c02015 	stw	r3,128(sp)
 8002834:	dc401f15 	stw	r17,124(sp)
 8002838:	3c7ff60e 	bge	r7,r17,8002814 <__alt_data_end+0xfc002814>
 800283c:	d9801e04 	addi	r6,sp,120
 8002840:	a00b883a 	mov	r5,r20
 8002844:	9809883a 	mov	r4,r19
 8002848:	d9c03d15 	stw	r7,244(sp)
 800284c:	800a1240 	call	800a124 <__ssprint_r>
 8002850:	d9c03d17 	ldw	r7,244(sp)
 8002854:	103be61e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002858:	843ffc04 	addi	r16,r16,-16
 800285c:	d8c02017 	ldw	r3,128(sp)
 8002860:	dc401f17 	ldw	r17,124(sp)
 8002864:	dd800404 	addi	r22,sp,16
 8002868:	e43fed16 	blt	fp,r16,8002820 <__alt_data_end+0xfc002820>
 800286c:	d8802c17 	ldw	r2,176(sp)
 8002870:	1c07883a 	add	r3,r3,r16
 8002874:	8c400044 	addi	r17,r17,1
 8002878:	b0800015 	stw	r2,0(r22)
 800287c:	b4000115 	stw	r16,4(r22)
 8002880:	d8c02015 	stw	r3,128(sp)
 8002884:	dc401f15 	stw	r17,124(sp)
 8002888:	008001c4 	movi	r2,7
 800288c:	147f2e0e 	bge	r2,r17,8002548 <__alt_data_end+0xfc002548>
 8002890:	d9402d17 	ldw	r5,180(sp)
 8002894:	d9801e04 	addi	r6,sp,120
 8002898:	9809883a 	mov	r4,r19
 800289c:	800a1240 	call	800a124 <__ssprint_r>
 80028a0:	103bd31e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 80028a4:	d8c02017 	ldw	r3,128(sp)
 80028a8:	dc401f17 	ldw	r17,124(sp)
 80028ac:	dd800404 	addi	r22,sp,16
 80028b0:	003f2606 	br	800254c <__alt_data_end+0xfc00254c>
 80028b4:	9080040c 	andi	r2,r18,16
 80028b8:	1000c326 	beq	r2,zero,8002bc8 <___svfprintf_internal_r+0x1774>
 80028bc:	d9402e17 	ldw	r5,184(sp)
 80028c0:	2d000017 	ldw	r20,0(r5)
 80028c4:	29400104 	addi	r5,r5,4
 80028c8:	d9402e15 	stw	r5,184(sp)
 80028cc:	a02dd7fa 	srai	r22,r20,31
 80028d0:	b005883a 	mov	r2,r22
 80028d4:	103c430e 	bge	r2,zero,80019e4 <__alt_data_end+0xfc0019e4>
 80028d8:	d9402a17 	ldw	r5,168(sp)
 80028dc:	0529c83a 	sub	r20,zero,r20
 80028e0:	07000b44 	movi	fp,45
 80028e4:	a004c03a 	cmpne	r2,r20,zero
 80028e8:	05adc83a 	sub	r22,zero,r22
 80028ec:	df002785 	stb	fp,158(sp)
 80028f0:	b0adc83a 	sub	r22,r22,r2
 80028f4:	28022e16 	blt	r5,zero,80031b0 <___svfprintf_internal_r+0x1d5c>
 80028f8:	00bfdfc4 	movi	r2,-129
 80028fc:	90a4703a 	and	r18,r18,r2
 8002900:	003c3f06 	br	8001a00 <__alt_data_end+0xfc001a00>
 8002904:	9080100c 	andi	r2,r18,64
 8002908:	d8002785 	stb	zero,158(sp)
 800290c:	10012526 	beq	r2,zero,8002da4 <___svfprintf_internal_r+0x1950>
 8002910:	d9402e17 	ldw	r5,184(sp)
 8002914:	d8c02a17 	ldw	r3,168(sp)
 8002918:	002d883a 	mov	r22,zero
 800291c:	28800104 	addi	r2,r5,4
 8002920:	2d00000b 	ldhu	r20,0(r5)
 8002924:	183fa20e 	bge	r3,zero,80027b0 <__alt_data_end+0xfc0027b0>
 8002928:	d8802e15 	stw	r2,184(sp)
 800292c:	0039883a 	mov	fp,zero
 8002930:	a584b03a 	or	r2,r20,r22
 8002934:	103c321e 	bne	r2,zero,8001a00 <__alt_data_end+0xfc001a00>
 8002938:	00800044 	movi	r2,1
 800293c:	003e5006 	br	8002280 <__alt_data_end+0xfc002280>
 8002940:	d9402d17 	ldw	r5,180(sp)
 8002944:	d9801e04 	addi	r6,sp,120
 8002948:	9809883a 	mov	r4,r19
 800294c:	800a1240 	call	800a124 <__ssprint_r>
 8002950:	103ba71e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002954:	d8c02017 	ldw	r3,128(sp)
 8002958:	da000404 	addi	r8,sp,16
 800295c:	d9003217 	ldw	r4,200(sp)
 8002960:	d8802617 	ldw	r2,152(sp)
 8002964:	d9403317 	ldw	r5,204(sp)
 8002968:	8123883a 	add	r17,r16,r4
 800296c:	11400216 	blt	r2,r5,8002978 <___svfprintf_internal_r+0x1524>
 8002970:	9100004c 	andi	r4,r18,1
 8002974:	20000d26 	beq	r4,zero,80029ac <___svfprintf_internal_r+0x1558>
 8002978:	d9003817 	ldw	r4,224(sp)
 800297c:	d9403417 	ldw	r5,208(sp)
 8002980:	1907883a 	add	r3,r3,r4
 8002984:	d9001f17 	ldw	r4,124(sp)
 8002988:	41400015 	stw	r5,0(r8)
 800298c:	d9403817 	ldw	r5,224(sp)
 8002990:	21000044 	addi	r4,r4,1
 8002994:	d8c02015 	stw	r3,128(sp)
 8002998:	41400115 	stw	r5,4(r8)
 800299c:	d9001f15 	stw	r4,124(sp)
 80029a0:	014001c4 	movi	r5,7
 80029a4:	2901dc16 	blt	r5,r4,8003118 <___svfprintf_internal_r+0x1cc4>
 80029a8:	42000204 	addi	r8,r8,8
 80029ac:	d9003317 	ldw	r4,204(sp)
 80029b0:	8121883a 	add	r16,r16,r4
 80029b4:	2085c83a 	sub	r2,r4,r2
 80029b8:	8461c83a 	sub	r16,r16,r17
 80029bc:	1400010e 	bge	r2,r16,80029c4 <___svfprintf_internal_r+0x1570>
 80029c0:	1021883a 	mov	r16,r2
 80029c4:	04000a0e 	bge	zero,r16,80029f0 <___svfprintf_internal_r+0x159c>
 80029c8:	d9001f17 	ldw	r4,124(sp)
 80029cc:	1c07883a 	add	r3,r3,r16
 80029d0:	44400015 	stw	r17,0(r8)
 80029d4:	21000044 	addi	r4,r4,1
 80029d8:	44000115 	stw	r16,4(r8)
 80029dc:	d8c02015 	stw	r3,128(sp)
 80029e0:	d9001f15 	stw	r4,124(sp)
 80029e4:	014001c4 	movi	r5,7
 80029e8:	2901e616 	blt	r5,r4,8003184 <___svfprintf_internal_r+0x1d30>
 80029ec:	42000204 	addi	r8,r8,8
 80029f0:	8001f616 	blt	r16,zero,80031cc <___svfprintf_internal_r+0x1d78>
 80029f4:	1421c83a 	sub	r16,r2,r16
 80029f8:	043cfa0e 	bge	zero,r16,8001de4 <__alt_data_end+0xfc001de4>
 80029fc:	04400404 	movi	r17,16
 8002a00:	d8801f17 	ldw	r2,124(sp)
 8002a04:	8c3edd0e 	bge	r17,r16,800257c <__alt_data_end+0xfc00257c>
 8002a08:	01420074 	movhi	r5,2049
 8002a0c:	29509f84 	addi	r5,r5,17022
 8002a10:	d9402c15 	stw	r5,176(sp)
 8002a14:	058001c4 	movi	r22,7
 8002a18:	dd002d17 	ldw	r20,180(sp)
 8002a1c:	00000306 	br	8002a2c <___svfprintf_internal_r+0x15d8>
 8002a20:	42000204 	addi	r8,r8,8
 8002a24:	843ffc04 	addi	r16,r16,-16
 8002a28:	8c3ed70e 	bge	r17,r16,8002588 <__alt_data_end+0xfc002588>
 8002a2c:	18c00404 	addi	r3,r3,16
 8002a30:	10800044 	addi	r2,r2,1
 8002a34:	45400015 	stw	r21,0(r8)
 8002a38:	44400115 	stw	r17,4(r8)
 8002a3c:	d8c02015 	stw	r3,128(sp)
 8002a40:	d8801f15 	stw	r2,124(sp)
 8002a44:	b0bff60e 	bge	r22,r2,8002a20 <__alt_data_end+0xfc002a20>
 8002a48:	d9801e04 	addi	r6,sp,120
 8002a4c:	a00b883a 	mov	r5,r20
 8002a50:	9809883a 	mov	r4,r19
 8002a54:	800a1240 	call	800a124 <__ssprint_r>
 8002a58:	103b651e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002a5c:	d8c02017 	ldw	r3,128(sp)
 8002a60:	d8801f17 	ldw	r2,124(sp)
 8002a64:	da000404 	addi	r8,sp,16
 8002a68:	003fee06 	br	8002a24 <__alt_data_end+0xfc002a24>
 8002a6c:	9088703a 	and	r4,r18,r2
 8002a70:	203e8d1e 	bne	r4,zero,80024a8 <__alt_data_end+0xfc0024a8>
 8002a74:	dc401f17 	ldw	r17,124(sp)
 8002a78:	40800115 	stw	r2,4(r8)
 8002a7c:	44000015 	stw	r16,0(r8)
 8002a80:	8c400044 	addi	r17,r17,1
 8002a84:	d8c02015 	stw	r3,128(sp)
 8002a88:	dc401f15 	stw	r17,124(sp)
 8002a8c:	008001c4 	movi	r2,7
 8002a90:	147f7f16 	blt	r2,r17,8002890 <__alt_data_end+0xfc002890>
 8002a94:	45800204 	addi	r22,r8,8
 8002a98:	003eac06 	br	800254c <__alt_data_end+0xfc00254c>
 8002a9c:	d9402d17 	ldw	r5,180(sp)
 8002aa0:	d9801e04 	addi	r6,sp,120
 8002aa4:	9809883a 	mov	r4,r19
 8002aa8:	800a1240 	call	800a124 <__ssprint_r>
 8002aac:	103b501e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002ab0:	d8c02017 	ldw	r3,128(sp)
 8002ab4:	dc401f17 	ldw	r17,124(sp)
 8002ab8:	da000404 	addi	r8,sp,16
 8002abc:	003e8406 	br	80024d0 <__alt_data_end+0xfc0024d0>
 8002ac0:	d9402d17 	ldw	r5,180(sp)
 8002ac4:	d9801e04 	addi	r6,sp,120
 8002ac8:	9809883a 	mov	r4,r19
 8002acc:	800a1240 	call	800a124 <__ssprint_r>
 8002ad0:	103b471e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002ad4:	d8c02017 	ldw	r3,128(sp)
 8002ad8:	dc401f17 	ldw	r17,124(sp)
 8002adc:	dd800404 	addi	r22,sp,16
 8002ae0:	003e8606 	br	80024fc <__alt_data_end+0xfc0024fc>
 8002ae4:	0029883a 	mov	r20,zero
 8002ae8:	a5000c04 	addi	r20,r20,48
 8002aec:	dc001dc4 	addi	r16,sp,119
 8002af0:	dd001dc5 	stb	r20,119(sp)
 8002af4:	003f3806 	br	80027d8 <__alt_data_end+0xfc0027d8>
 8002af8:	d9402d17 	ldw	r5,180(sp)
 8002afc:	d9801e04 	addi	r6,sp,120
 8002b00:	9809883a 	mov	r4,r19
 8002b04:	800a1240 	call	800a124 <__ssprint_r>
 8002b08:	103b391e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002b0c:	d8c02017 	ldw	r3,128(sp)
 8002b10:	da000404 	addi	r8,sp,16
 8002b14:	003c7306 	br	8001ce4 <__alt_data_end+0xfc001ce4>
 8002b18:	d9003617 	ldw	r4,216(sp)
 8002b1c:	d9403717 	ldw	r5,220(sp)
 8002b20:	da003e15 	stw	r8,248(sp)
 8002b24:	8009e440 	call	8009e44 <__fpclassifyd>
 8002b28:	da003e17 	ldw	r8,248(sp)
 8002b2c:	1000bd1e 	bne	r2,zero,8002e24 <___svfprintf_internal_r+0x19d0>
 8002b30:	008011c4 	movi	r2,71
 8002b34:	14411e0e 	bge	r2,r17,8002fb0 <___svfprintf_internal_r+0x1b5c>
 8002b38:	04020074 	movhi	r16,2049
 8002b3c:	84109204 	addi	r16,r16,16968
 8002b40:	00c000c4 	movi	r3,3
 8002b44:	00bfdfc4 	movi	r2,-129
 8002b48:	d8c02915 	stw	r3,164(sp)
 8002b4c:	90a4703a 	and	r18,r18,r2
 8002b50:	df002783 	ldbu	fp,158(sp)
 8002b54:	d8c02b15 	stw	r3,172(sp)
 8002b58:	d8002a15 	stw	zero,168(sp)
 8002b5c:	d8003215 	stw	zero,200(sp)
 8002b60:	003bfa06 	br	8001b4c <__alt_data_end+0xfc001b4c>
 8002b64:	9080100c 	andi	r2,r18,64
 8002b68:	d8002785 	stb	zero,158(sp)
 8002b6c:	10009426 	beq	r2,zero,8002dc0 <___svfprintf_internal_r+0x196c>
 8002b70:	d9402e17 	ldw	r5,184(sp)
 8002b74:	d8c02a17 	ldw	r3,168(sp)
 8002b78:	002d883a 	mov	r22,zero
 8002b7c:	28800104 	addi	r2,r5,4
 8002b80:	2d00000b 	ldhu	r20,0(r5)
 8002b84:	183ec10e 	bge	r3,zero,800268c <__alt_data_end+0xfc00268c>
 8002b88:	a586b03a 	or	r3,r20,r22
 8002b8c:	d8802e15 	stw	r2,184(sp)
 8002b90:	183ec21e 	bne	r3,zero,800269c <__alt_data_end+0xfc00269c>
 8002b94:	0039883a 	mov	fp,zero
 8002b98:	0005883a 	mov	r2,zero
 8002b9c:	003db806 	br	8002280 <__alt_data_end+0xfc002280>
 8002ba0:	d8c02e17 	ldw	r3,184(sp)
 8002ba4:	d9002e17 	ldw	r4,184(sp)
 8002ba8:	d9402e17 	ldw	r5,184(sp)
 8002bac:	18c00017 	ldw	r3,0(r3)
 8002bb0:	21000117 	ldw	r4,4(r4)
 8002bb4:	29400204 	addi	r5,r5,8
 8002bb8:	d8c03615 	stw	r3,216(sp)
 8002bbc:	d9003715 	stw	r4,220(sp)
 8002bc0:	d9402e15 	stw	r5,184(sp)
 8002bc4:	003b5a06 	br	8001930 <__alt_data_end+0xfc001930>
 8002bc8:	9080100c 	andi	r2,r18,64
 8002bcc:	10010726 	beq	r2,zero,8002fec <___svfprintf_internal_r+0x1b98>
 8002bd0:	d8802e17 	ldw	r2,184(sp)
 8002bd4:	1500000f 	ldh	r20,0(r2)
 8002bd8:	10800104 	addi	r2,r2,4
 8002bdc:	d8802e15 	stw	r2,184(sp)
 8002be0:	a02dd7fa 	srai	r22,r20,31
 8002be4:	b005883a 	mov	r2,r22
 8002be8:	003b7d06 	br	80019e0 <__alt_data_end+0xfc0019e0>
 8002bec:	9080100c 	andi	r2,r18,64
 8002bf0:	10010526 	beq	r2,zero,8003008 <___svfprintf_internal_r+0x1bb4>
 8002bf4:	d8c02e17 	ldw	r3,184(sp)
 8002bf8:	002d883a 	mov	r22,zero
 8002bfc:	1d00000b 	ldhu	r20,0(r3)
 8002c00:	18c00104 	addi	r3,r3,4
 8002c04:	d8c02e15 	stw	r3,184(sp)
 8002c08:	003ce206 	br	8001f94 <__alt_data_end+0xfc001f94>
 8002c0c:	bc400007 	ldb	r17,0(r23)
 8002c10:	003a6506 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8002c14:	9080040c 	andi	r2,r18,16
 8002c18:	10010126 	beq	r2,zero,8003020 <___svfprintf_internal_r+0x1bcc>
 8002c1c:	d8c02e17 	ldw	r3,184(sp)
 8002c20:	d9002f17 	ldw	r4,188(sp)
 8002c24:	18800017 	ldw	r2,0(r3)
 8002c28:	18c00104 	addi	r3,r3,4
 8002c2c:	d8c02e15 	stw	r3,184(sp)
 8002c30:	11000015 	stw	r4,0(r2)
 8002c34:	003a3206 	br	8001500 <__alt_data_end+0xfc001500>
 8002c38:	d9002a17 	ldw	r4,168(sp)
 8002c3c:	d8002785 	stb	zero,158(sp)
 8002c40:	203d8d16 	blt	r4,zero,8002278 <__alt_data_end+0xfc002278>
 8002c44:	00bfdfc4 	movi	r2,-129
 8002c48:	90a4703a 	and	r18,r18,r2
 8002c4c:	003ad506 	br	80017a4 <__alt_data_end+0xfc0017a4>
 8002c50:	01420074 	movhi	r5,2049
 8002c54:	29509f84 	addi	r5,r5,17022
 8002c58:	d9402c15 	stw	r5,176(sp)
 8002c5c:	d9402c17 	ldw	r5,176(sp)
 8002c60:	1c47883a 	add	r3,r3,r17
 8002c64:	10800044 	addi	r2,r2,1
 8002c68:	41400015 	stw	r5,0(r8)
 8002c6c:	44400115 	stw	r17,4(r8)
 8002c70:	d8c02015 	stw	r3,128(sp)
 8002c74:	d8801f15 	stw	r2,124(sp)
 8002c78:	010001c4 	movi	r4,7
 8002c7c:	20bf3016 	blt	r4,r2,8002940 <__alt_data_end+0xfc002940>
 8002c80:	42000204 	addi	r8,r8,8
 8002c84:	003f3506 	br	800295c <__alt_data_end+0xfc00295c>
 8002c88:	01020074 	movhi	r4,2049
 8002c8c:	21109f84 	addi	r4,r4,17022
 8002c90:	d9002c15 	stw	r4,176(sp)
 8002c94:	003c3c06 	br	8001d88 <__alt_data_end+0xfc001d88>
 8002c98:	d9402d17 	ldw	r5,180(sp)
 8002c9c:	d9801e04 	addi	r6,sp,120
 8002ca0:	9809883a 	mov	r4,r19
 8002ca4:	800a1240 	call	800a124 <__ssprint_r>
 8002ca8:	103ad11e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002cac:	d8c02017 	ldw	r3,128(sp)
 8002cb0:	da000404 	addi	r8,sp,16
 8002cb4:	003d9306 	br	8002304 <__alt_data_end+0xfc002304>
 8002cb8:	d8801f17 	ldw	r2,124(sp)
 8002cbc:	01420074 	movhi	r5,2049
 8002cc0:	01000044 	movi	r4,1
 8002cc4:	18c00044 	addi	r3,r3,1
 8002cc8:	10800044 	addi	r2,r2,1
 8002ccc:	29509f04 	addi	r5,r5,17020
 8002cd0:	41000115 	stw	r4,4(r8)
 8002cd4:	41400015 	stw	r5,0(r8)
 8002cd8:	d8c02015 	stw	r3,128(sp)
 8002cdc:	d8801f15 	stw	r2,124(sp)
 8002ce0:	010001c4 	movi	r4,7
 8002ce4:	2080b516 	blt	r4,r2,8002fbc <___svfprintf_internal_r+0x1b68>
 8002ce8:	42000204 	addi	r8,r8,8
 8002cec:	8800041e 	bne	r17,zero,8002d00 <___svfprintf_internal_r+0x18ac>
 8002cf0:	d8803317 	ldw	r2,204(sp)
 8002cf4:	1000021e 	bne	r2,zero,8002d00 <___svfprintf_internal_r+0x18ac>
 8002cf8:	9080004c 	andi	r2,r18,1
 8002cfc:	103c3926 	beq	r2,zero,8001de4 <__alt_data_end+0xfc001de4>
 8002d00:	d9003817 	ldw	r4,224(sp)
 8002d04:	d8801f17 	ldw	r2,124(sp)
 8002d08:	d9403417 	ldw	r5,208(sp)
 8002d0c:	20c7883a 	add	r3,r4,r3
 8002d10:	10800044 	addi	r2,r2,1
 8002d14:	41000115 	stw	r4,4(r8)
 8002d18:	41400015 	stw	r5,0(r8)
 8002d1c:	d8c02015 	stw	r3,128(sp)
 8002d20:	d8801f15 	stw	r2,124(sp)
 8002d24:	010001c4 	movi	r4,7
 8002d28:	20818016 	blt	r4,r2,800332c <___svfprintf_internal_r+0x1ed8>
 8002d2c:	42000204 	addi	r8,r8,8
 8002d30:	0463c83a 	sub	r17,zero,r17
 8002d34:	0440cb0e 	bge	zero,r17,8003064 <___svfprintf_internal_r+0x1c10>
 8002d38:	05800404 	movi	r22,16
 8002d3c:	b440e80e 	bge	r22,r17,80030e0 <___svfprintf_internal_r+0x1c8c>
 8002d40:	01420074 	movhi	r5,2049
 8002d44:	29509f84 	addi	r5,r5,17022
 8002d48:	d9402c15 	stw	r5,176(sp)
 8002d4c:	070001c4 	movi	fp,7
 8002d50:	dd002d17 	ldw	r20,180(sp)
 8002d54:	00000306 	br	8002d64 <___svfprintf_internal_r+0x1910>
 8002d58:	42000204 	addi	r8,r8,8
 8002d5c:	8c7ffc04 	addi	r17,r17,-16
 8002d60:	b440e20e 	bge	r22,r17,80030ec <___svfprintf_internal_r+0x1c98>
 8002d64:	18c00404 	addi	r3,r3,16
 8002d68:	10800044 	addi	r2,r2,1
 8002d6c:	45400015 	stw	r21,0(r8)
 8002d70:	45800115 	stw	r22,4(r8)
 8002d74:	d8c02015 	stw	r3,128(sp)
 8002d78:	d8801f15 	stw	r2,124(sp)
 8002d7c:	e0bff60e 	bge	fp,r2,8002d58 <__alt_data_end+0xfc002d58>
 8002d80:	d9801e04 	addi	r6,sp,120
 8002d84:	a00b883a 	mov	r5,r20
 8002d88:	9809883a 	mov	r4,r19
 8002d8c:	800a1240 	call	800a124 <__ssprint_r>
 8002d90:	103a971e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002d94:	d8c02017 	ldw	r3,128(sp)
 8002d98:	d8801f17 	ldw	r2,124(sp)
 8002d9c:	da000404 	addi	r8,sp,16
 8002da0:	003fee06 	br	8002d5c <__alt_data_end+0xfc002d5c>
 8002da4:	d9002e17 	ldw	r4,184(sp)
 8002da8:	d9402a17 	ldw	r5,168(sp)
 8002dac:	002d883a 	mov	r22,zero
 8002db0:	20800104 	addi	r2,r4,4
 8002db4:	25000017 	ldw	r20,0(r4)
 8002db8:	283e7d0e 	bge	r5,zero,80027b0 <__alt_data_end+0xfc0027b0>
 8002dbc:	003eda06 	br	8002928 <__alt_data_end+0xfc002928>
 8002dc0:	d9002e17 	ldw	r4,184(sp)
 8002dc4:	d9402a17 	ldw	r5,168(sp)
 8002dc8:	002d883a 	mov	r22,zero
 8002dcc:	20800104 	addi	r2,r4,4
 8002dd0:	25000017 	ldw	r20,0(r4)
 8002dd4:	283e2d0e 	bge	r5,zero,800268c <__alt_data_end+0xfc00268c>
 8002dd8:	003f6b06 	br	8002b88 <__alt_data_end+0xfc002b88>
 8002ddc:	d8c02e15 	stw	r3,184(sp)
 8002de0:	0039883a 	mov	fp,zero
 8002de4:	003ed206 	br	8002930 <__alt_data_end+0xfc002930>
 8002de8:	bc400043 	ldbu	r17,1(r23)
 8002dec:	84000814 	ori	r16,r16,32
 8002df0:	bdc00044 	addi	r23,r23,1
 8002df4:	8c403fcc 	andi	r17,r17,255
 8002df8:	8c40201c 	xori	r17,r17,128
 8002dfc:	8c7fe004 	addi	r17,r17,-128
 8002e00:	0039e906 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8002e04:	d9402d17 	ldw	r5,180(sp)
 8002e08:	d9801e04 	addi	r6,sp,120
 8002e0c:	9809883a 	mov	r4,r19
 8002e10:	800a1240 	call	800a124 <__ssprint_r>
 8002e14:	103a761e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002e18:	d8c02017 	ldw	r3,128(sp)
 8002e1c:	da000404 	addi	r8,sp,16
 8002e20:	003d4a06 	br	800234c <__alt_data_end+0xfc00234c>
 8002e24:	d9002a17 	ldw	r4,168(sp)
 8002e28:	05bff7c4 	movi	r22,-33
 8002e2c:	00bfffc4 	movi	r2,-1
 8002e30:	8dac703a 	and	r22,r17,r22
 8002e34:	20806a26 	beq	r4,r2,8002fe0 <___svfprintf_internal_r+0x1b8c>
 8002e38:	008011c4 	movi	r2,71
 8002e3c:	b0813726 	beq	r22,r2,800331c <___svfprintf_internal_r+0x1ec8>
 8002e40:	d9003717 	ldw	r4,220(sp)
 8002e44:	90c04014 	ori	r3,r18,256
 8002e48:	d8c02c15 	stw	r3,176(sp)
 8002e4c:	20015d16 	blt	r4,zero,80033c4 <___svfprintf_internal_r+0x1f70>
 8002e50:	dd003717 	ldw	r20,220(sp)
 8002e54:	d8002905 	stb	zero,164(sp)
 8002e58:	00801984 	movi	r2,102
 8002e5c:	88814026 	beq	r17,r2,8003360 <___svfprintf_internal_r+0x1f0c>
 8002e60:	00801184 	movi	r2,70
 8002e64:	88817126 	beq	r17,r2,800342c <___svfprintf_internal_r+0x1fd8>
 8002e68:	00801144 	movi	r2,69
 8002e6c:	b0816226 	beq	r22,r2,80033f8 <___svfprintf_internal_r+0x1fa4>
 8002e70:	d8c02a17 	ldw	r3,168(sp)
 8002e74:	d8802104 	addi	r2,sp,132
 8002e78:	d8800315 	stw	r2,12(sp)
 8002e7c:	d9403617 	ldw	r5,216(sp)
 8002e80:	d8802504 	addi	r2,sp,148
 8002e84:	d8800215 	stw	r2,8(sp)
 8002e88:	d8802604 	addi	r2,sp,152
 8002e8c:	d8c00015 	stw	r3,0(sp)
 8002e90:	d8800115 	stw	r2,4(sp)
 8002e94:	01c00084 	movi	r7,2
 8002e98:	a00d883a 	mov	r6,r20
 8002e9c:	9809883a 	mov	r4,r19
 8002ea0:	d8c03d15 	stw	r3,244(sp)
 8002ea4:	da003e15 	stw	r8,248(sp)
 8002ea8:	8005e400 	call	8005e40 <_dtoa_r>
 8002eac:	1021883a 	mov	r16,r2
 8002eb0:	008019c4 	movi	r2,103
 8002eb4:	d8c03d17 	ldw	r3,244(sp)
 8002eb8:	da003e17 	ldw	r8,248(sp)
 8002ebc:	8880e726 	beq	r17,r2,800325c <___svfprintf_internal_r+0x1e08>
 8002ec0:	008011c4 	movi	r2,71
 8002ec4:	8880d426 	beq	r17,r2,8003218 <___svfprintf_internal_r+0x1dc4>
 8002ec8:	80f9883a 	add	fp,r16,r3
 8002ecc:	d9003617 	ldw	r4,216(sp)
 8002ed0:	000d883a 	mov	r6,zero
 8002ed4:	000f883a 	mov	r7,zero
 8002ed8:	a00b883a 	mov	r5,r20
 8002edc:	da003e15 	stw	r8,248(sp)
 8002ee0:	80101a80 	call	80101a8 <__eqdf2>
 8002ee4:	da003e17 	ldw	r8,248(sp)
 8002ee8:	1000e426 	beq	r2,zero,800327c <___svfprintf_internal_r+0x1e28>
 8002eec:	d8802117 	ldw	r2,132(sp)
 8002ef0:	1700062e 	bgeu	r2,fp,8002f0c <___svfprintf_internal_r+0x1ab8>
 8002ef4:	01000c04 	movi	r4,48
 8002ef8:	10c00044 	addi	r3,r2,1
 8002efc:	d8c02115 	stw	r3,132(sp)
 8002f00:	11000005 	stb	r4,0(r2)
 8002f04:	d8802117 	ldw	r2,132(sp)
 8002f08:	173ffb36 	bltu	r2,fp,8002ef8 <__alt_data_end+0xfc002ef8>
 8002f0c:	1405c83a 	sub	r2,r2,r16
 8002f10:	d8803315 	stw	r2,204(sp)
 8002f14:	008011c4 	movi	r2,71
 8002f18:	b080c526 	beq	r22,r2,8003230 <___svfprintf_internal_r+0x1ddc>
 8002f1c:	00801944 	movi	r2,101
 8002f20:	1441d80e 	bge	r2,r17,8003684 <___svfprintf_internal_r+0x2230>
 8002f24:	d8c02617 	ldw	r3,152(sp)
 8002f28:	00801984 	movi	r2,102
 8002f2c:	d8c03215 	stw	r3,200(sp)
 8002f30:	88813426 	beq	r17,r2,8003404 <___svfprintf_internal_r+0x1fb0>
 8002f34:	d8c03217 	ldw	r3,200(sp)
 8002f38:	d9003317 	ldw	r4,204(sp)
 8002f3c:	19012516 	blt	r3,r4,80033d4 <___svfprintf_internal_r+0x1f80>
 8002f40:	9480004c 	andi	r18,r18,1
 8002f44:	9001841e 	bne	r18,zero,8003558 <___svfprintf_internal_r+0x2104>
 8002f48:	1805883a 	mov	r2,r3
 8002f4c:	1801cb16 	blt	r3,zero,800367c <___svfprintf_internal_r+0x2228>
 8002f50:	d8c03217 	ldw	r3,200(sp)
 8002f54:	044019c4 	movi	r17,103
 8002f58:	d8c02b15 	stw	r3,172(sp)
 8002f5c:	df002907 	ldb	fp,164(sp)
 8002f60:	e000a61e 	bne	fp,zero,80031fc <___svfprintf_internal_r+0x1da8>
 8002f64:	df002783 	ldbu	fp,158(sp)
 8002f68:	d8802915 	stw	r2,164(sp)
 8002f6c:	dc802c17 	ldw	r18,176(sp)
 8002f70:	d8002a15 	stw	zero,168(sp)
 8002f74:	003af506 	br	8001b4c <__alt_data_end+0xfc001b4c>
 8002f78:	04020074 	movhi	r16,2049
 8002f7c:	84108f04 	addi	r16,r16,16956
 8002f80:	003a7e06 	br	800197c <__alt_data_end+0xfc00197c>
 8002f84:	d9003917 	ldw	r4,228(sp)
 8002f88:	04001004 	movi	r16,64
 8002f8c:	800b883a 	mov	r5,r16
 8002f90:	80083740 	call	8008374 <_malloc_r>
 8002f94:	d9002d17 	ldw	r4,180(sp)
 8002f98:	20800015 	stw	r2,0(r4)
 8002f9c:	20800415 	stw	r2,16(r4)
 8002fa0:	1001d026 	beq	r2,zero,80036e4 <___svfprintf_internal_r+0x2290>
 8002fa4:	d8802d17 	ldw	r2,180(sp)
 8002fa8:	14000515 	stw	r16,20(r2)
 8002fac:	00394406 	br	80014c0 <__alt_data_end+0xfc0014c0>
 8002fb0:	04020074 	movhi	r16,2049
 8002fb4:	84109104 	addi	r16,r16,16964
 8002fb8:	003ee106 	br	8002b40 <__alt_data_end+0xfc002b40>
 8002fbc:	d9402d17 	ldw	r5,180(sp)
 8002fc0:	d9801e04 	addi	r6,sp,120
 8002fc4:	9809883a 	mov	r4,r19
 8002fc8:	800a1240 	call	800a124 <__ssprint_r>
 8002fcc:	103a081e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8002fd0:	dc402617 	ldw	r17,152(sp)
 8002fd4:	d8c02017 	ldw	r3,128(sp)
 8002fd8:	da000404 	addi	r8,sp,16
 8002fdc:	003f4306 	br	8002cec <__alt_data_end+0xfc002cec>
 8002fe0:	01400184 	movi	r5,6
 8002fe4:	d9402a15 	stw	r5,168(sp)
 8002fe8:	003f9506 	br	8002e40 <__alt_data_end+0xfc002e40>
 8002fec:	d8c02e17 	ldw	r3,184(sp)
 8002ff0:	1d000017 	ldw	r20,0(r3)
 8002ff4:	18c00104 	addi	r3,r3,4
 8002ff8:	d8c02e15 	stw	r3,184(sp)
 8002ffc:	a02dd7fa 	srai	r22,r20,31
 8003000:	b005883a 	mov	r2,r22
 8003004:	003a7606 	br	80019e0 <__alt_data_end+0xfc0019e0>
 8003008:	d9002e17 	ldw	r4,184(sp)
 800300c:	002d883a 	mov	r22,zero
 8003010:	25000017 	ldw	r20,0(r4)
 8003014:	21000104 	addi	r4,r4,4
 8003018:	d9002e15 	stw	r4,184(sp)
 800301c:	003bdd06 	br	8001f94 <__alt_data_end+0xfc001f94>
 8003020:	9480100c 	andi	r18,r18,64
 8003024:	90006e26 	beq	r18,zero,80031e0 <___svfprintf_internal_r+0x1d8c>
 8003028:	d9402e17 	ldw	r5,184(sp)
 800302c:	d8c02f17 	ldw	r3,188(sp)
 8003030:	28800017 	ldw	r2,0(r5)
 8003034:	29400104 	addi	r5,r5,4
 8003038:	d9402e15 	stw	r5,184(sp)
 800303c:	10c0000d 	sth	r3,0(r2)
 8003040:	00392f06 	br	8001500 <__alt_data_end+0xfc001500>
 8003044:	d9402d17 	ldw	r5,180(sp)
 8003048:	d9801e04 	addi	r6,sp,120
 800304c:	9809883a 	mov	r4,r19
 8003050:	800a1240 	call	800a124 <__ssprint_r>
 8003054:	1039e61e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8003058:	d8c02017 	ldw	r3,128(sp)
 800305c:	d8801f17 	ldw	r2,124(sp)
 8003060:	da000404 	addi	r8,sp,16
 8003064:	d9403317 	ldw	r5,204(sp)
 8003068:	10800044 	addi	r2,r2,1
 800306c:	44000015 	stw	r16,0(r8)
 8003070:	28c7883a 	add	r3,r5,r3
 8003074:	003b5506 	br	8001dcc <__alt_data_end+0xfc001dcc>
 8003078:	8009883a 	mov	r4,r16
 800307c:	df003e15 	stw	fp,248(sp)
 8003080:	80013bc0 	call	80013bc <strlen>
 8003084:	d8802b15 	stw	r2,172(sp)
 8003088:	da003e17 	ldw	r8,248(sp)
 800308c:	103c160e 	bge	r2,zero,80020e8 <__alt_data_end+0xfc0020e8>
 8003090:	0005883a 	mov	r2,zero
 8003094:	003c1406 	br	80020e8 <__alt_data_end+0xfc0020e8>
 8003098:	00bfffc4 	movi	r2,-1
 800309c:	0039d906 	br	8001804 <__alt_data_end+0xfc001804>
 80030a0:	01020074 	movhi	r4,2049
 80030a4:	2110a384 	addi	r4,r4,17038
 80030a8:	d9003515 	stw	r4,212(sp)
 80030ac:	003ae406 	br	8001c40 <__alt_data_end+0xfc001c40>
 80030b0:	013fffc4 	movi	r4,-1
 80030b4:	0039fa06 	br	80018a0 <__alt_data_end+0xfc0018a0>
 80030b8:	d9402d17 	ldw	r5,180(sp)
 80030bc:	d9801e04 	addi	r6,sp,120
 80030c0:	9809883a 	mov	r4,r19
 80030c4:	800a1240 	call	800a124 <__ssprint_r>
 80030c8:	1039c91e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 80030cc:	d8c02017 	ldw	r3,128(sp)
 80030d0:	da000404 	addi	r8,sp,16
 80030d4:	003d8406 	br	80026e8 <__alt_data_end+0xfc0026e8>
 80030d8:	0023883a 	mov	r17,zero
 80030dc:	003d8306 	br	80026ec <__alt_data_end+0xfc0026ec>
 80030e0:	01020074 	movhi	r4,2049
 80030e4:	21109f84 	addi	r4,r4,17022
 80030e8:	d9002c15 	stw	r4,176(sp)
 80030ec:	d9002c17 	ldw	r4,176(sp)
 80030f0:	1c47883a 	add	r3,r3,r17
 80030f4:	10800044 	addi	r2,r2,1
 80030f8:	41000015 	stw	r4,0(r8)
 80030fc:	44400115 	stw	r17,4(r8)
 8003100:	d8c02015 	stw	r3,128(sp)
 8003104:	d8801f15 	stw	r2,124(sp)
 8003108:	010001c4 	movi	r4,7
 800310c:	20bfcd16 	blt	r4,r2,8003044 <__alt_data_end+0xfc003044>
 8003110:	42000204 	addi	r8,r8,8
 8003114:	003fd306 	br	8003064 <__alt_data_end+0xfc003064>
 8003118:	d9402d17 	ldw	r5,180(sp)
 800311c:	d9801e04 	addi	r6,sp,120
 8003120:	9809883a 	mov	r4,r19
 8003124:	800a1240 	call	800a124 <__ssprint_r>
 8003128:	1039b11e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 800312c:	d8802617 	ldw	r2,152(sp)
 8003130:	d8c02017 	ldw	r3,128(sp)
 8003134:	da000404 	addi	r8,sp,16
 8003138:	003e1c06 	br	80029ac <__alt_data_end+0xfc0029ac>
 800313c:	d8802a17 	ldw	r2,168(sp)
 8003140:	00c00184 	movi	r3,6
 8003144:	1880012e 	bgeu	r3,r2,800314c <___svfprintf_internal_r+0x1cf8>
 8003148:	1805883a 	mov	r2,r3
 800314c:	d8802b15 	stw	r2,172(sp)
 8003150:	1000f316 	blt	r2,zero,8003520 <___svfprintf_internal_r+0x20cc>
 8003154:	04020074 	movhi	r16,2049
 8003158:	d8802915 	stw	r2,164(sp)
 800315c:	dd002e15 	stw	r20,184(sp)
 8003160:	d8002a15 	stw	zero,168(sp)
 8003164:	d8003215 	stw	zero,200(sp)
 8003168:	84109d04 	addi	r16,r16,17012
 800316c:	0039883a 	mov	fp,zero
 8003170:	003a7d06 	br	8001b68 <__alt_data_end+0xfc001b68>
 8003174:	01020074 	movhi	r4,2049
 8003178:	2110a384 	addi	r4,r4,17038
 800317c:	d9003515 	stw	r4,212(sp)
 8003180:	003b3d06 	br	8001e78 <__alt_data_end+0xfc001e78>
 8003184:	d9402d17 	ldw	r5,180(sp)
 8003188:	d9801e04 	addi	r6,sp,120
 800318c:	9809883a 	mov	r4,r19
 8003190:	800a1240 	call	800a124 <__ssprint_r>
 8003194:	1039961e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8003198:	d8802617 	ldw	r2,152(sp)
 800319c:	d9403317 	ldw	r5,204(sp)
 80031a0:	d8c02017 	ldw	r3,128(sp)
 80031a4:	da000404 	addi	r8,sp,16
 80031a8:	2885c83a 	sub	r2,r5,r2
 80031ac:	003e1006 	br	80029f0 <__alt_data_end+0xfc0029f0>
 80031b0:	00800044 	movi	r2,1
 80031b4:	10803fcc 	andi	r2,r2,255
 80031b8:	00c00044 	movi	r3,1
 80031bc:	10fa1026 	beq	r2,r3,8001a00 <__alt_data_end+0xfc001a00>
 80031c0:	00c00084 	movi	r3,2
 80031c4:	10fb8226 	beq	r2,r3,8001fd0 <__alt_data_end+0xfc001fd0>
 80031c8:	003a4206 	br	8001ad4 <__alt_data_end+0xfc001ad4>
 80031cc:	0021883a 	mov	r16,zero
 80031d0:	003e0806 	br	80029f4 <__alt_data_end+0xfc0029f4>
 80031d4:	07000b44 	movi	fp,45
 80031d8:	df002785 	stb	fp,158(sp)
 80031dc:	0039e306 	br	800196c <__alt_data_end+0xfc00196c>
 80031e0:	d9002e17 	ldw	r4,184(sp)
 80031e4:	d9402f17 	ldw	r5,188(sp)
 80031e8:	20800017 	ldw	r2,0(r4)
 80031ec:	21000104 	addi	r4,r4,4
 80031f0:	d9002e15 	stw	r4,184(sp)
 80031f4:	11400015 	stw	r5,0(r2)
 80031f8:	0038c106 	br	8001500 <__alt_data_end+0xfc001500>
 80031fc:	00c00b44 	movi	r3,45
 8003200:	d8c02785 	stb	r3,158(sp)
 8003204:	d8802915 	stw	r2,164(sp)
 8003208:	dc802c17 	ldw	r18,176(sp)
 800320c:	d8002a15 	stw	zero,168(sp)
 8003210:	07000b44 	movi	fp,45
 8003214:	003a5106 	br	8001b5c <__alt_data_end+0xfc001b5c>
 8003218:	9080004c 	andi	r2,r18,1
 800321c:	1000941e 	bne	r2,zero,8003470 <___svfprintf_internal_r+0x201c>
 8003220:	d8802117 	ldw	r2,132(sp)
 8003224:	1405c83a 	sub	r2,r2,r16
 8003228:	d8803315 	stw	r2,204(sp)
 800322c:	b441151e 	bne	r22,r17,8003684 <___svfprintf_internal_r+0x2230>
 8003230:	dd802617 	ldw	r22,152(sp)
 8003234:	00bfff44 	movi	r2,-3
 8003238:	b0801a16 	blt	r22,r2,80032a4 <___svfprintf_internal_r+0x1e50>
 800323c:	d9402a17 	ldw	r5,168(sp)
 8003240:	2d801816 	blt	r5,r22,80032a4 <___svfprintf_internal_r+0x1e50>
 8003244:	dd803215 	stw	r22,200(sp)
 8003248:	003f3a06 	br	8002f34 <__alt_data_end+0xfc002f34>
 800324c:	1025883a 	mov	r18,r2
 8003250:	0039883a 	mov	fp,zero
 8003254:	00800084 	movi	r2,2
 8003258:	003fd606 	br	80031b4 <__alt_data_end+0xfc0031b4>
 800325c:	9080004c 	andi	r2,r18,1
 8003260:	103f191e 	bne	r2,zero,8002ec8 <__alt_data_end+0xfc002ec8>
 8003264:	d8802117 	ldw	r2,132(sp)
 8003268:	003f2806 	br	8002f0c <__alt_data_end+0xfc002f0c>
 800326c:	01020074 	movhi	r4,2049
 8003270:	21109f84 	addi	r4,r4,17022
 8003274:	d9002c15 	stw	r4,176(sp)
 8003278:	003c7c06 	br	800246c <__alt_data_end+0xfc00246c>
 800327c:	e005883a 	mov	r2,fp
 8003280:	003f2206 	br	8002f0c <__alt_data_end+0xfc002f0c>
 8003284:	d9002a17 	ldw	r4,168(sp)
 8003288:	df002783 	ldbu	fp,158(sp)
 800328c:	dd002e15 	stw	r20,184(sp)
 8003290:	d9002915 	stw	r4,164(sp)
 8003294:	d9002b15 	stw	r4,172(sp)
 8003298:	d8002a15 	stw	zero,168(sp)
 800329c:	d8003215 	stw	zero,200(sp)
 80032a0:	003a2a06 	br	8001b4c <__alt_data_end+0xfc001b4c>
 80032a4:	8c7fff84 	addi	r17,r17,-2
 80032a8:	b5bfffc4 	addi	r22,r22,-1
 80032ac:	dd802615 	stw	r22,152(sp)
 80032b0:	dc4022c5 	stb	r17,139(sp)
 80032b4:	b000c316 	blt	r22,zero,80035c4 <___svfprintf_internal_r+0x2170>
 80032b8:	00800ac4 	movi	r2,43
 80032bc:	d8802305 	stb	r2,140(sp)
 80032c0:	00800244 	movi	r2,9
 80032c4:	15806e16 	blt	r2,r22,8003480 <___svfprintf_internal_r+0x202c>
 80032c8:	00800c04 	movi	r2,48
 80032cc:	b5800c04 	addi	r22,r22,48
 80032d0:	d8802345 	stb	r2,141(sp)
 80032d4:	dd802385 	stb	r22,142(sp)
 80032d8:	d88023c4 	addi	r2,sp,143
 80032dc:	df0022c4 	addi	fp,sp,139
 80032e0:	d8c03317 	ldw	r3,204(sp)
 80032e4:	1739c83a 	sub	fp,r2,fp
 80032e8:	d9003317 	ldw	r4,204(sp)
 80032ec:	e0c7883a 	add	r3,fp,r3
 80032f0:	df003b15 	stw	fp,236(sp)
 80032f4:	d8c02b15 	stw	r3,172(sp)
 80032f8:	00800044 	movi	r2,1
 80032fc:	1100b70e 	bge	r2,r4,80035dc <___svfprintf_internal_r+0x2188>
 8003300:	d8c02b17 	ldw	r3,172(sp)
 8003304:	18c00044 	addi	r3,r3,1
 8003308:	d8c02b15 	stw	r3,172(sp)
 800330c:	1805883a 	mov	r2,r3
 8003310:	1800b016 	blt	r3,zero,80035d4 <___svfprintf_internal_r+0x2180>
 8003314:	d8003215 	stw	zero,200(sp)
 8003318:	003f1006 	br	8002f5c <__alt_data_end+0xfc002f5c>
 800331c:	d8802a17 	ldw	r2,168(sp)
 8003320:	103ec71e 	bne	r2,zero,8002e40 <__alt_data_end+0xfc002e40>
 8003324:	dc002a15 	stw	r16,168(sp)
 8003328:	003ec506 	br	8002e40 <__alt_data_end+0xfc002e40>
 800332c:	d9402d17 	ldw	r5,180(sp)
 8003330:	d9801e04 	addi	r6,sp,120
 8003334:	9809883a 	mov	r4,r19
 8003338:	800a1240 	call	800a124 <__ssprint_r>
 800333c:	10392c1e 	bne	r2,zero,80017f0 <__alt_data_end+0xfc0017f0>
 8003340:	dc402617 	ldw	r17,152(sp)
 8003344:	d8c02017 	ldw	r3,128(sp)
 8003348:	d8801f17 	ldw	r2,124(sp)
 800334c:	da000404 	addi	r8,sp,16
 8003350:	003e7706 	br	8002d30 <__alt_data_end+0xfc002d30>
 8003354:	182f883a 	mov	r23,r3
 8003358:	d8002a15 	stw	zero,168(sp)
 800335c:	00389306 	br	80015ac <__alt_data_end+0xfc0015ac>
 8003360:	d8c02a17 	ldw	r3,168(sp)
 8003364:	d8802104 	addi	r2,sp,132
 8003368:	d8800315 	stw	r2,12(sp)
 800336c:	d9403617 	ldw	r5,216(sp)
 8003370:	d8802504 	addi	r2,sp,148
 8003374:	d8800215 	stw	r2,8(sp)
 8003378:	d8802604 	addi	r2,sp,152
 800337c:	d8c00015 	stw	r3,0(sp)
 8003380:	9809883a 	mov	r4,r19
 8003384:	d8800115 	stw	r2,4(sp)
 8003388:	01c000c4 	movi	r7,3
 800338c:	a00d883a 	mov	r6,r20
 8003390:	da003e15 	stw	r8,248(sp)
 8003394:	8005e400 	call	8005e40 <_dtoa_r>
 8003398:	d9002a17 	ldw	r4,168(sp)
 800339c:	da003e17 	ldw	r8,248(sp)
 80033a0:	1021883a 	mov	r16,r2
 80033a4:	1139883a 	add	fp,r2,r4
 80033a8:	2007883a 	mov	r3,r4
 80033ac:	81000007 	ldb	r4,0(r16)
 80033b0:	00800c04 	movi	r2,48
 80033b4:	20806f26 	beq	r4,r2,8003574 <___svfprintf_internal_r+0x2120>
 80033b8:	d8c02617 	ldw	r3,152(sp)
 80033bc:	e0f9883a 	add	fp,fp,r3
 80033c0:	003ec206 	br	8002ecc <__alt_data_end+0xfc002ecc>
 80033c4:	00c00b44 	movi	r3,45
 80033c8:	2520003c 	xorhi	r20,r4,32768
 80033cc:	d8c02905 	stb	r3,164(sp)
 80033d0:	003ea106 	br	8002e58 <__alt_data_end+0xfc002e58>
 80033d4:	d8c03217 	ldw	r3,200(sp)
 80033d8:	00c0890e 	bge	zero,r3,8003600 <___svfprintf_internal_r+0x21ac>
 80033dc:	00800044 	movi	r2,1
 80033e0:	d9003317 	ldw	r4,204(sp)
 80033e4:	1105883a 	add	r2,r2,r4
 80033e8:	d8802b15 	stw	r2,172(sp)
 80033ec:	10005f16 	blt	r2,zero,800356c <___svfprintf_internal_r+0x2118>
 80033f0:	044019c4 	movi	r17,103
 80033f4:	003ed906 	br	8002f5c <__alt_data_end+0xfc002f5c>
 80033f8:	d9002a17 	ldw	r4,168(sp)
 80033fc:	20c00044 	addi	r3,r4,1
 8003400:	003e9c06 	br	8002e74 <__alt_data_end+0xfc002e74>
 8003404:	d9002a17 	ldw	r4,168(sp)
 8003408:	00c0680e 	bge	zero,r3,80035ac <___svfprintf_internal_r+0x2158>
 800340c:	2000461e 	bne	r4,zero,8003528 <___svfprintf_internal_r+0x20d4>
 8003410:	9480004c 	andi	r18,r18,1
 8003414:	9000441e 	bne	r18,zero,8003528 <___svfprintf_internal_r+0x20d4>
 8003418:	1805883a 	mov	r2,r3
 800341c:	1800a116 	blt	r3,zero,80036a4 <___svfprintf_internal_r+0x2250>
 8003420:	d8c03217 	ldw	r3,200(sp)
 8003424:	d8c02b15 	stw	r3,172(sp)
 8003428:	003ecc06 	br	8002f5c <__alt_data_end+0xfc002f5c>
 800342c:	d9402a17 	ldw	r5,168(sp)
 8003430:	d8802104 	addi	r2,sp,132
 8003434:	d8800315 	stw	r2,12(sp)
 8003438:	d9400015 	stw	r5,0(sp)
 800343c:	d8802504 	addi	r2,sp,148
 8003440:	d9403617 	ldw	r5,216(sp)
 8003444:	d8800215 	stw	r2,8(sp)
 8003448:	d8802604 	addi	r2,sp,152
 800344c:	d8800115 	stw	r2,4(sp)
 8003450:	01c000c4 	movi	r7,3
 8003454:	a00d883a 	mov	r6,r20
 8003458:	9809883a 	mov	r4,r19
 800345c:	da003e15 	stw	r8,248(sp)
 8003460:	8005e400 	call	8005e40 <_dtoa_r>
 8003464:	d8c02a17 	ldw	r3,168(sp)
 8003468:	da003e17 	ldw	r8,248(sp)
 800346c:	1021883a 	mov	r16,r2
 8003470:	00801184 	movi	r2,70
 8003474:	80f9883a 	add	fp,r16,r3
 8003478:	88bfcc26 	beq	r17,r2,80033ac <__alt_data_end+0xfc0033ac>
 800347c:	003e9306 	br	8002ecc <__alt_data_end+0xfc002ecc>
 8003480:	df0022c4 	addi	fp,sp,139
 8003484:	dc002a15 	stw	r16,168(sp)
 8003488:	9829883a 	mov	r20,r19
 800348c:	e021883a 	mov	r16,fp
 8003490:	4027883a 	mov	r19,r8
 8003494:	b009883a 	mov	r4,r22
 8003498:	01400284 	movi	r5,10
 800349c:	8000f700 	call	8000f70 <__modsi3>
 80034a0:	10800c04 	addi	r2,r2,48
 80034a4:	843fffc4 	addi	r16,r16,-1
 80034a8:	b009883a 	mov	r4,r22
 80034ac:	01400284 	movi	r5,10
 80034b0:	80800005 	stb	r2,0(r16)
 80034b4:	8000eec0 	call	8000eec <__divsi3>
 80034b8:	102d883a 	mov	r22,r2
 80034bc:	00800244 	movi	r2,9
 80034c0:	15bff416 	blt	r2,r22,8003494 <__alt_data_end+0xfc003494>
 80034c4:	9811883a 	mov	r8,r19
 80034c8:	b0800c04 	addi	r2,r22,48
 80034cc:	a027883a 	mov	r19,r20
 80034d0:	8029883a 	mov	r20,r16
 80034d4:	a17fffc4 	addi	r5,r20,-1
 80034d8:	a0bfffc5 	stb	r2,-1(r20)
 80034dc:	dc002a17 	ldw	r16,168(sp)
 80034e0:	2f00782e 	bgeu	r5,fp,80036c4 <___svfprintf_internal_r+0x2270>
 80034e4:	d9c02384 	addi	r7,sp,142
 80034e8:	3d0fc83a 	sub	r7,r7,r20
 80034ec:	d9002344 	addi	r4,sp,141
 80034f0:	e1cf883a 	add	r7,fp,r7
 80034f4:	00000106 	br	80034fc <___svfprintf_internal_r+0x20a8>
 80034f8:	28800003 	ldbu	r2,0(r5)
 80034fc:	20800005 	stb	r2,0(r4)
 8003500:	21000044 	addi	r4,r4,1
 8003504:	29400044 	addi	r5,r5,1
 8003508:	21fffb1e 	bne	r4,r7,80034f8 <__alt_data_end+0xfc0034f8>
 800350c:	d8802304 	addi	r2,sp,140
 8003510:	1505c83a 	sub	r2,r2,r20
 8003514:	d8c02344 	addi	r3,sp,141
 8003518:	1885883a 	add	r2,r3,r2
 800351c:	003f7006 	br	80032e0 <__alt_data_end+0xfc0032e0>
 8003520:	0005883a 	mov	r2,zero
 8003524:	003f0b06 	br	8003154 <__alt_data_end+0xfc003154>
 8003528:	d9002a17 	ldw	r4,168(sp)
 800352c:	d8c03217 	ldw	r3,200(sp)
 8003530:	20800044 	addi	r2,r4,1
 8003534:	1885883a 	add	r2,r3,r2
 8003538:	d8802b15 	stw	r2,172(sp)
 800353c:	103e870e 	bge	r2,zero,8002f5c <__alt_data_end+0xfc002f5c>
 8003540:	0005883a 	mov	r2,zero
 8003544:	003e8506 	br	8002f5c <__alt_data_end+0xfc002f5c>
 8003548:	01020074 	movhi	r4,2049
 800354c:	21109f84 	addi	r4,r4,17022
 8003550:	d9002c15 	stw	r4,176(sp)
 8003554:	003cc506 	br	800286c <__alt_data_end+0xfc00286c>
 8003558:	d8c03217 	ldw	r3,200(sp)
 800355c:	18c00044 	addi	r3,r3,1
 8003560:	d8c02b15 	stw	r3,172(sp)
 8003564:	1805883a 	mov	r2,r3
 8003568:	183fa10e 	bge	r3,zero,80033f0 <__alt_data_end+0xfc0033f0>
 800356c:	0005883a 	mov	r2,zero
 8003570:	003f9f06 	br	80033f0 <__alt_data_end+0xfc0033f0>
 8003574:	d9003617 	ldw	r4,216(sp)
 8003578:	000d883a 	mov	r6,zero
 800357c:	000f883a 	mov	r7,zero
 8003580:	a00b883a 	mov	r5,r20
 8003584:	d8c03d15 	stw	r3,244(sp)
 8003588:	da003e15 	stw	r8,248(sp)
 800358c:	80101a80 	call	80101a8 <__eqdf2>
 8003590:	d8c03d17 	ldw	r3,244(sp)
 8003594:	da003e17 	ldw	r8,248(sp)
 8003598:	103f8726 	beq	r2,zero,80033b8 <__alt_data_end+0xfc0033b8>
 800359c:	00800044 	movi	r2,1
 80035a0:	10c7c83a 	sub	r3,r2,r3
 80035a4:	d8c02615 	stw	r3,152(sp)
 80035a8:	003f8406 	br	80033bc <__alt_data_end+0xfc0033bc>
 80035ac:	20000e1e 	bne	r4,zero,80035e8 <___svfprintf_internal_r+0x2194>
 80035b0:	9480004c 	andi	r18,r18,1
 80035b4:	90000c1e 	bne	r18,zero,80035e8 <___svfprintf_internal_r+0x2194>
 80035b8:	00800044 	movi	r2,1
 80035bc:	d8802b15 	stw	r2,172(sp)
 80035c0:	003e6606 	br	8002f5c <__alt_data_end+0xfc002f5c>
 80035c4:	00800b44 	movi	r2,45
 80035c8:	05adc83a 	sub	r22,zero,r22
 80035cc:	d8802305 	stb	r2,140(sp)
 80035d0:	003f3b06 	br	80032c0 <__alt_data_end+0xfc0032c0>
 80035d4:	0005883a 	mov	r2,zero
 80035d8:	003f4e06 	br	8003314 <__alt_data_end+0xfc003314>
 80035dc:	90a4703a 	and	r18,r18,r2
 80035e0:	903f4a26 	beq	r18,zero,800330c <__alt_data_end+0xfc00330c>
 80035e4:	003f4606 	br	8003300 <__alt_data_end+0xfc003300>
 80035e8:	d8c02a17 	ldw	r3,168(sp)
 80035ec:	18c00084 	addi	r3,r3,2
 80035f0:	d8c02b15 	stw	r3,172(sp)
 80035f4:	1805883a 	mov	r2,r3
 80035f8:	183e580e 	bge	r3,zero,8002f5c <__alt_data_end+0xfc002f5c>
 80035fc:	003fd006 	br	8003540 <__alt_data_end+0xfc003540>
 8003600:	00800084 	movi	r2,2
 8003604:	10c5c83a 	sub	r2,r2,r3
 8003608:	003f7506 	br	80033e0 <__alt_data_end+0xfc0033e0>
 800360c:	d9402e17 	ldw	r5,184(sp)
 8003610:	d9002e17 	ldw	r4,184(sp)
 8003614:	bc400043 	ldbu	r17,1(r23)
 8003618:	29400017 	ldw	r5,0(r5)
 800361c:	20800104 	addi	r2,r4,4
 8003620:	d8802e15 	stw	r2,184(sp)
 8003624:	d9402a15 	stw	r5,168(sp)
 8003628:	182f883a 	mov	r23,r3
 800362c:	283df10e 	bge	r5,zero,8002df4 <__alt_data_end+0xfc002df4>
 8003630:	8c403fcc 	andi	r17,r17,255
 8003634:	017fffc4 	movi	r5,-1
 8003638:	8c40201c 	xori	r17,r17,128
 800363c:	d9402a15 	stw	r5,168(sp)
 8003640:	8c7fe004 	addi	r17,r17,-128
 8003644:	0037d806 	br	80015a8 <__alt_data_end+0xfc0015a8>
 8003648:	9080004c 	andi	r2,r18,1
 800364c:	0039883a 	mov	fp,zero
 8003650:	10000726 	beq	r2,zero,8003670 <___svfprintf_internal_r+0x221c>
 8003654:	d8c02817 	ldw	r3,160(sp)
 8003658:	dc001dc4 	addi	r16,sp,119
 800365c:	00800c04 	movi	r2,48
 8003660:	1c07c83a 	sub	r3,r3,r16
 8003664:	d8801dc5 	stb	r2,119(sp)
 8003668:	d8c02b15 	stw	r3,172(sp)
 800366c:	00393106 	br	8001b34 <__alt_data_end+0xfc001b34>
 8003670:	d8002b15 	stw	zero,172(sp)
 8003674:	dc001e04 	addi	r16,sp,120
 8003678:	00392e06 	br	8001b34 <__alt_data_end+0xfc001b34>
 800367c:	0005883a 	mov	r2,zero
 8003680:	003e3306 	br	8002f50 <__alt_data_end+0xfc002f50>
 8003684:	dd802617 	ldw	r22,152(sp)
 8003688:	003f0706 	br	80032a8 <__alt_data_end+0xfc0032a8>
 800368c:	d8c02b03 	ldbu	r3,172(sp)
 8003690:	d8c02785 	stb	r3,158(sp)
 8003694:	003a3506 	br	8001f6c <__alt_data_end+0xfc001f6c>
 8003698:	d8c02b03 	ldbu	r3,172(sp)
 800369c:	d8c02785 	stb	r3,158(sp)
 80036a0:	003a1706 	br	8001f00 <__alt_data_end+0xfc001f00>
 80036a4:	0005883a 	mov	r2,zero
 80036a8:	003f5d06 	br	8003420 <__alt_data_end+0xfc003420>
 80036ac:	d8c02b03 	ldbu	r3,172(sp)
 80036b0:	d8c02785 	stb	r3,158(sp)
 80036b4:	0038f306 	br	8001a84 <__alt_data_end+0xfc001a84>
 80036b8:	d8c02b03 	ldbu	r3,172(sp)
 80036bc:	d8c02785 	stb	r3,158(sp)
 80036c0:	0038be06 	br	80019bc <__alt_data_end+0xfc0019bc>
 80036c4:	d8802344 	addi	r2,sp,141
 80036c8:	003f0506 	br	80032e0 <__alt_data_end+0xfc0032e0>
 80036cc:	d8c02b03 	ldbu	r3,172(sp)
 80036d0:	d8c02785 	stb	r3,158(sp)
 80036d4:	00388b06 	br	8001904 <__alt_data_end+0xfc001904>
 80036d8:	d8c02b03 	ldbu	r3,172(sp)
 80036dc:	d8c02785 	stb	r3,158(sp)
 80036e0:	003ad706 	br	8002240 <__alt_data_end+0xfc002240>
 80036e4:	d9403917 	ldw	r5,228(sp)
 80036e8:	00800304 	movi	r2,12
 80036ec:	28800015 	stw	r2,0(r5)
 80036f0:	00bfffc4 	movi	r2,-1
 80036f4:	00384306 	br	8001804 <__alt_data_end+0xfc001804>
 80036f8:	d8c02b03 	ldbu	r3,172(sp)
 80036fc:	d8c02785 	stb	r3,158(sp)
 8003700:	003ab606 	br	80021dc <__alt_data_end+0xfc0021dc>
 8003704:	d8c02b03 	ldbu	r3,172(sp)
 8003708:	d8c02785 	stb	r3,158(sp)
 800370c:	003a8906 	br	8002134 <__alt_data_end+0xfc002134>

08003710 <___vfprintf_internal_r>:
 8003710:	deffb804 	addi	sp,sp,-288
 8003714:	dfc04715 	stw	ra,284(sp)
 8003718:	ddc04515 	stw	r23,276(sp)
 800371c:	dd404315 	stw	r21,268(sp)
 8003720:	d9002d15 	stw	r4,180(sp)
 8003724:	282f883a 	mov	r23,r5
 8003728:	302b883a 	mov	r21,r6
 800372c:	d9c02e15 	stw	r7,184(sp)
 8003730:	df004615 	stw	fp,280(sp)
 8003734:	dd804415 	stw	r22,272(sp)
 8003738:	dd004215 	stw	r20,264(sp)
 800373c:	dcc04115 	stw	r19,260(sp)
 8003740:	dc804015 	stw	r18,256(sp)
 8003744:	dc403f15 	stw	r17,252(sp)
 8003748:	dc003e15 	stw	r16,248(sp)
 800374c:	80081880 	call	8008188 <_localeconv_r>
 8003750:	10800017 	ldw	r2,0(r2)
 8003754:	1009883a 	mov	r4,r2
 8003758:	d8803415 	stw	r2,208(sp)
 800375c:	80013bc0 	call	80013bc <strlen>
 8003760:	d8803715 	stw	r2,220(sp)
 8003764:	d8802d17 	ldw	r2,180(sp)
 8003768:	10000226 	beq	r2,zero,8003774 <___vfprintf_internal_r+0x64>
 800376c:	10800e17 	ldw	r2,56(r2)
 8003770:	1000fb26 	beq	r2,zero,8003b60 <___vfprintf_internal_r+0x450>
 8003774:	b880030b 	ldhu	r2,12(r23)
 8003778:	10c8000c 	andi	r3,r2,8192
 800377c:	1800061e 	bne	r3,zero,8003798 <___vfprintf_internal_r+0x88>
 8003780:	b9001917 	ldw	r4,100(r23)
 8003784:	00f7ffc4 	movi	r3,-8193
 8003788:	10880014 	ori	r2,r2,8192
 800378c:	20c6703a 	and	r3,r4,r3
 8003790:	b880030d 	sth	r2,12(r23)
 8003794:	b8c01915 	stw	r3,100(r23)
 8003798:	10c0020c 	andi	r3,r2,8
 800379c:	1800c326 	beq	r3,zero,8003aac <___vfprintf_internal_r+0x39c>
 80037a0:	b8c00417 	ldw	r3,16(r23)
 80037a4:	1800c126 	beq	r3,zero,8003aac <___vfprintf_internal_r+0x39c>
 80037a8:	1080068c 	andi	r2,r2,26
 80037ac:	00c00284 	movi	r3,10
 80037b0:	10c0c626 	beq	r2,r3,8003acc <___vfprintf_internal_r+0x3bc>
 80037b4:	d8c00404 	addi	r3,sp,16
 80037b8:	05020074 	movhi	r20,2049
 80037bc:	d9001e04 	addi	r4,sp,120
 80037c0:	a510a784 	addi	r20,r20,17054
 80037c4:	d8c01e15 	stw	r3,120(sp)
 80037c8:	d8002015 	stw	zero,128(sp)
 80037cc:	d8001f15 	stw	zero,124(sp)
 80037d0:	d8003315 	stw	zero,204(sp)
 80037d4:	d8003615 	stw	zero,216(sp)
 80037d8:	d8003815 	stw	zero,224(sp)
 80037dc:	1811883a 	mov	r8,r3
 80037e0:	d8003915 	stw	zero,228(sp)
 80037e4:	d8003a15 	stw	zero,232(sp)
 80037e8:	d8002f15 	stw	zero,188(sp)
 80037ec:	d9002815 	stw	r4,160(sp)
 80037f0:	a8800007 	ldb	r2,0(r21)
 80037f4:	10028b26 	beq	r2,zero,8004224 <___vfprintf_internal_r+0xb14>
 80037f8:	00c00944 	movi	r3,37
 80037fc:	a823883a 	mov	r17,r21
 8003800:	10c0021e 	bne	r2,r3,800380c <___vfprintf_internal_r+0xfc>
 8003804:	00001406 	br	8003858 <___vfprintf_internal_r+0x148>
 8003808:	10c00326 	beq	r2,r3,8003818 <___vfprintf_internal_r+0x108>
 800380c:	8c400044 	addi	r17,r17,1
 8003810:	88800007 	ldb	r2,0(r17)
 8003814:	103ffc1e 	bne	r2,zero,8003808 <__alt_data_end+0xfc003808>
 8003818:	8d61c83a 	sub	r16,r17,r21
 800381c:	80000e26 	beq	r16,zero,8003858 <___vfprintf_internal_r+0x148>
 8003820:	d8c02017 	ldw	r3,128(sp)
 8003824:	d8801f17 	ldw	r2,124(sp)
 8003828:	45400015 	stw	r21,0(r8)
 800382c:	1c07883a 	add	r3,r3,r16
 8003830:	10800044 	addi	r2,r2,1
 8003834:	d8c02015 	stw	r3,128(sp)
 8003838:	44000115 	stw	r16,4(r8)
 800383c:	d8801f15 	stw	r2,124(sp)
 8003840:	00c001c4 	movi	r3,7
 8003844:	1880a916 	blt	r3,r2,8003aec <___vfprintf_internal_r+0x3dc>
 8003848:	42000204 	addi	r8,r8,8
 800384c:	d9402f17 	ldw	r5,188(sp)
 8003850:	2c0b883a 	add	r5,r5,r16
 8003854:	d9402f15 	stw	r5,188(sp)
 8003858:	88800007 	ldb	r2,0(r17)
 800385c:	1000aa26 	beq	r2,zero,8003b08 <___vfprintf_internal_r+0x3f8>
 8003860:	8d400044 	addi	r21,r17,1
 8003864:	8c400047 	ldb	r17,1(r17)
 8003868:	0021883a 	mov	r16,zero
 800386c:	00bfffc4 	movi	r2,-1
 8003870:	0025883a 	mov	r18,zero
 8003874:	dc002905 	stb	r16,164(sp)
 8003878:	d8002785 	stb	zero,158(sp)
 800387c:	d8002b05 	stb	zero,172(sp)
 8003880:	d8802a15 	stw	r2,168(sp)
 8003884:	d8003115 	stw	zero,196(sp)
 8003888:	04c01604 	movi	r19,88
 800388c:	05800244 	movi	r22,9
 8003890:	9021883a 	mov	r16,r18
 8003894:	4039883a 	mov	fp,r8
 8003898:	ad400044 	addi	r21,r21,1
 800389c:	88bff804 	addi	r2,r17,-32
 80038a0:	98833236 	bltu	r19,r2,800456c <___vfprintf_internal_r+0xe5c>
 80038a4:	100490ba 	slli	r2,r2,2
 80038a8:	00c20034 	movhi	r3,2048
 80038ac:	18ce2f04 	addi	r3,r3,14524
 80038b0:	10c5883a 	add	r2,r2,r3
 80038b4:	10800017 	ldw	r2,0(r2)
 80038b8:	1000683a 	jmp	r2
 80038bc:	08004464 	muli	zero,at,273
 80038c0:	0800456c 	andhi	zero,at,277
 80038c4:	0800456c 	andhi	zero,at,277
 80038c8:	08004484 	addi	zero,at,274
 80038cc:	0800456c 	andhi	zero,at,277
 80038d0:	0800456c 	andhi	zero,at,277
 80038d4:	0800456c 	andhi	zero,at,277
 80038d8:	0800456c 	andhi	zero,at,277
 80038dc:	0800456c 	andhi	zero,at,277
 80038e0:	0800456c 	andhi	zero,at,277
 80038e4:	08003b6c 	andhi	zero,at,237
 80038e8:	08004374 	orhi	zero,at,269
 80038ec:	0800456c 	andhi	zero,at,277
 80038f0:	08003a30 	cmpltui	zero,at,232
 80038f4:	08003b90 	cmplti	zero,at,238
 80038f8:	0800456c 	andhi	zero,at,277
 80038fc:	08003be0 	cmpeqi	zero,at,239
 8003900:	08003bec 	andhi	zero,at,239
 8003904:	08003bec 	andhi	zero,at,239
 8003908:	08003bec 	andhi	zero,at,239
 800390c:	08003bec 	andhi	zero,at,239
 8003910:	08003bec 	andhi	zero,at,239
 8003914:	08003bec 	andhi	zero,at,239
 8003918:	08003bec 	andhi	zero,at,239
 800391c:	08003bec 	andhi	zero,at,239
 8003920:	08003bec 	andhi	zero,at,239
 8003924:	0800456c 	andhi	zero,at,277
 8003928:	0800456c 	andhi	zero,at,277
 800392c:	0800456c 	andhi	zero,at,277
 8003930:	0800456c 	andhi	zero,at,277
 8003934:	0800456c 	andhi	zero,at,277
 8003938:	0800456c 	andhi	zero,at,277
 800393c:	0800456c 	andhi	zero,at,277
 8003940:	0800456c 	andhi	zero,at,277
 8003944:	0800456c 	andhi	zero,at,277
 8003948:	0800456c 	andhi	zero,at,277
 800394c:	08003c28 	cmpgeui	zero,at,240
 8003950:	08003cf0 	cmpltui	zero,at,243
 8003954:	0800456c 	andhi	zero,at,277
 8003958:	08003cf0 	cmpltui	zero,at,243
 800395c:	0800456c 	andhi	zero,at,277
 8003960:	0800456c 	andhi	zero,at,277
 8003964:	0800456c 	andhi	zero,at,277
 8003968:	0800456c 	andhi	zero,at,277
 800396c:	08003d9c 	xori	zero,at,246
 8003970:	0800456c 	andhi	zero,at,277
 8003974:	0800456c 	andhi	zero,at,277
 8003978:	08003da8 	cmpgeui	zero,at,246
 800397c:	0800456c 	andhi	zero,at,277
 8003980:	0800456c 	andhi	zero,at,277
 8003984:	0800456c 	andhi	zero,at,277
 8003988:	0800456c 	andhi	zero,at,277
 800398c:	0800456c 	andhi	zero,at,277
 8003990:	0800422c 	andhi	zero,at,264
 8003994:	0800456c 	andhi	zero,at,277
 8003998:	0800456c 	andhi	zero,at,277
 800399c:	08004298 	cmpnei	zero,at,266
 80039a0:	0800456c 	andhi	zero,at,277
 80039a4:	0800456c 	andhi	zero,at,277
 80039a8:	0800456c 	andhi	zero,at,277
 80039ac:	0800456c 	andhi	zero,at,277
 80039b0:	0800456c 	andhi	zero,at,277
 80039b4:	0800456c 	andhi	zero,at,277
 80039b8:	0800456c 	andhi	zero,at,277
 80039bc:	0800456c 	andhi	zero,at,277
 80039c0:	0800456c 	andhi	zero,at,277
 80039c4:	0800456c 	andhi	zero,at,277
 80039c8:	08004510 	cmplti	zero,at,276
 80039cc:	08004490 	cmplti	zero,at,274
 80039d0:	08003cf0 	cmpltui	zero,at,243
 80039d4:	08003cf0 	cmpltui	zero,at,243
 80039d8:	08003cf0 	cmpltui	zero,at,243
 80039dc:	080044b0 	cmpltui	zero,at,274
 80039e0:	08004490 	cmplti	zero,at,274
 80039e4:	0800456c 	andhi	zero,at,277
 80039e8:	0800456c 	andhi	zero,at,277
 80039ec:	080044bc 	xorhi	zero,at,274
 80039f0:	0800456c 	andhi	zero,at,277
 80039f4:	080044d0 	cmplti	zero,at,275
 80039f8:	08004354 	ori	zero,at,269
 80039fc:	08003a3c 	xorhi	zero,at,232
 8003a00:	0800438c 	andi	zero,at,270
 8003a04:	0800456c 	andhi	zero,at,277
 8003a08:	08004398 	cmpnei	zero,at,270
 8003a0c:	0800456c 	andhi	zero,at,277
 8003a10:	080043fc 	xorhi	zero,at,271
 8003a14:	0800456c 	andhi	zero,at,277
 8003a18:	0800456c 	andhi	zero,at,277
 8003a1c:	0800441c 	xori	zero,at,272
 8003a20:	d8c03117 	ldw	r3,196(sp)
 8003a24:	d8802e15 	stw	r2,184(sp)
 8003a28:	00c7c83a 	sub	r3,zero,r3
 8003a2c:	d8c03115 	stw	r3,196(sp)
 8003a30:	84000114 	ori	r16,r16,4
 8003a34:	ac400007 	ldb	r17,0(r21)
 8003a38:	003f9706 	br	8003898 <__alt_data_end+0xfc003898>
 8003a3c:	00800c04 	movi	r2,48
 8003a40:	d8802705 	stb	r2,156(sp)
 8003a44:	00801e04 	movi	r2,120
 8003a48:	d8802745 	stb	r2,157(sp)
 8003a4c:	d9002a17 	ldw	r4,168(sp)
 8003a50:	d8802e17 	ldw	r2,184(sp)
 8003a54:	d8002785 	stb	zero,158(sp)
 8003a58:	e011883a 	mov	r8,fp
 8003a5c:	10c00104 	addi	r3,r2,4
 8003a60:	14c00017 	ldw	r19,0(r2)
 8003a64:	002d883a 	mov	r22,zero
 8003a68:	80800094 	ori	r2,r16,2
 8003a6c:	2002ca16 	blt	r4,zero,8004598 <___vfprintf_internal_r+0xe88>
 8003a70:	00bfdfc4 	movi	r2,-129
 8003a74:	80a4703a 	and	r18,r16,r2
 8003a78:	d8c02e15 	stw	r3,184(sp)
 8003a7c:	94800094 	ori	r18,r18,2
 8003a80:	9802b41e 	bne	r19,zero,8004554 <___vfprintf_internal_r+0xe44>
 8003a84:	01420074 	movhi	r5,2049
 8003a88:	29509804 	addi	r5,r5,16992
 8003a8c:	d9403915 	stw	r5,228(sp)
 8003a90:	04401e04 	movi	r17,120
 8003a94:	d8802a17 	ldw	r2,168(sp)
 8003a98:	0039883a 	mov	fp,zero
 8003a9c:	1001fa26 	beq	r2,zero,8004288 <___vfprintf_internal_r+0xb78>
 8003aa0:	0027883a 	mov	r19,zero
 8003aa4:	002d883a 	mov	r22,zero
 8003aa8:	00021906 	br	8004310 <___vfprintf_internal_r+0xc00>
 8003aac:	d9002d17 	ldw	r4,180(sp)
 8003ab0:	b80b883a 	mov	r5,r23
 8003ab4:	8005ac40 	call	8005ac4 <__swsetup_r>
 8003ab8:	1005dc1e 	bne	r2,zero,800522c <___vfprintf_internal_r+0x1b1c>
 8003abc:	b880030b 	ldhu	r2,12(r23)
 8003ac0:	00c00284 	movi	r3,10
 8003ac4:	1080068c 	andi	r2,r2,26
 8003ac8:	10ff3a1e 	bne	r2,r3,80037b4 <__alt_data_end+0xfc0037b4>
 8003acc:	b880038f 	ldh	r2,14(r23)
 8003ad0:	103f3816 	blt	r2,zero,80037b4 <__alt_data_end+0xfc0037b4>
 8003ad4:	d9c02e17 	ldw	r7,184(sp)
 8003ad8:	d9002d17 	ldw	r4,180(sp)
 8003adc:	a80d883a 	mov	r6,r21
 8003ae0:	b80b883a 	mov	r5,r23
 8003ae4:	8005a080 	call	8005a08 <__sbprintf>
 8003ae8:	00001106 	br	8003b30 <___vfprintf_internal_r+0x420>
 8003aec:	d9002d17 	ldw	r4,180(sp)
 8003af0:	d9801e04 	addi	r6,sp,120
 8003af4:	b80b883a 	mov	r5,r23
 8003af8:	800b7900 	call	800b790 <__sprint_r>
 8003afc:	1000081e 	bne	r2,zero,8003b20 <___vfprintf_internal_r+0x410>
 8003b00:	da000404 	addi	r8,sp,16
 8003b04:	003f5106 	br	800384c <__alt_data_end+0xfc00384c>
 8003b08:	d8802017 	ldw	r2,128(sp)
 8003b0c:	10000426 	beq	r2,zero,8003b20 <___vfprintf_internal_r+0x410>
 8003b10:	d9002d17 	ldw	r4,180(sp)
 8003b14:	d9801e04 	addi	r6,sp,120
 8003b18:	b80b883a 	mov	r5,r23
 8003b1c:	800b7900 	call	800b790 <__sprint_r>
 8003b20:	b880030b 	ldhu	r2,12(r23)
 8003b24:	1080100c 	andi	r2,r2,64
 8003b28:	1005c01e 	bne	r2,zero,800522c <___vfprintf_internal_r+0x1b1c>
 8003b2c:	d8802f17 	ldw	r2,188(sp)
 8003b30:	dfc04717 	ldw	ra,284(sp)
 8003b34:	df004617 	ldw	fp,280(sp)
 8003b38:	ddc04517 	ldw	r23,276(sp)
 8003b3c:	dd804417 	ldw	r22,272(sp)
 8003b40:	dd404317 	ldw	r21,268(sp)
 8003b44:	dd004217 	ldw	r20,264(sp)
 8003b48:	dcc04117 	ldw	r19,260(sp)
 8003b4c:	dc804017 	ldw	r18,256(sp)
 8003b50:	dc403f17 	ldw	r17,252(sp)
 8003b54:	dc003e17 	ldw	r16,248(sp)
 8003b58:	dec04804 	addi	sp,sp,288
 8003b5c:	f800283a 	ret
 8003b60:	d9002d17 	ldw	r4,180(sp)
 8003b64:	8007ad00 	call	8007ad0 <__sinit>
 8003b68:	003f0206 	br	8003774 <__alt_data_end+0xfc003774>
 8003b6c:	d9002e17 	ldw	r4,184(sp)
 8003b70:	d9402e17 	ldw	r5,184(sp)
 8003b74:	21000017 	ldw	r4,0(r4)
 8003b78:	28800104 	addi	r2,r5,4
 8003b7c:	d9003115 	stw	r4,196(sp)
 8003b80:	203fa716 	blt	r4,zero,8003a20 <__alt_data_end+0xfc003a20>
 8003b84:	d8802e15 	stw	r2,184(sp)
 8003b88:	ac400007 	ldb	r17,0(r21)
 8003b8c:	003f4206 	br	8003898 <__alt_data_end+0xfc003898>
 8003b90:	ac400007 	ldb	r17,0(r21)
 8003b94:	01000a84 	movi	r4,42
 8003b98:	a8c00044 	addi	r3,r21,1
 8003b9c:	89075826 	beq	r17,r4,8005900 <___vfprintf_internal_r+0x21f0>
 8003ba0:	8cbff404 	addi	r18,r17,-48
 8003ba4:	b486ae36 	bltu	r22,r18,8005660 <___vfprintf_internal_r+0x1f50>
 8003ba8:	0009883a 	mov	r4,zero
 8003bac:	1823883a 	mov	r17,r3
 8003bb0:	01400284 	movi	r5,10
 8003bb4:	80010a00 	call	80010a0 <__mulsi3>
 8003bb8:	88c00007 	ldb	r3,0(r17)
 8003bbc:	1489883a 	add	r4,r2,r18
 8003bc0:	8d400044 	addi	r21,r17,1
 8003bc4:	1cbff404 	addi	r18,r3,-48
 8003bc8:	a823883a 	mov	r17,r21
 8003bcc:	b4bff82e 	bgeu	r22,r18,8003bb0 <__alt_data_end+0xfc003bb0>
 8003bd0:	1823883a 	mov	r17,r3
 8003bd4:	2005f616 	blt	r4,zero,80053b0 <___vfprintf_internal_r+0x1ca0>
 8003bd8:	d9002a15 	stw	r4,168(sp)
 8003bdc:	003f2f06 	br	800389c <__alt_data_end+0xfc00389c>
 8003be0:	84002014 	ori	r16,r16,128
 8003be4:	ac400007 	ldb	r17,0(r21)
 8003be8:	003f2b06 	br	8003898 <__alt_data_end+0xfc003898>
 8003bec:	8cbff404 	addi	r18,r17,-48
 8003bf0:	d8003115 	stw	zero,196(sp)
 8003bf4:	0009883a 	mov	r4,zero
 8003bf8:	a823883a 	mov	r17,r21
 8003bfc:	01400284 	movi	r5,10
 8003c00:	80010a00 	call	80010a0 <__mulsi3>
 8003c04:	88c00007 	ldb	r3,0(r17)
 8003c08:	9089883a 	add	r4,r18,r2
 8003c0c:	ad400044 	addi	r21,r21,1
 8003c10:	1cbff404 	addi	r18,r3,-48
 8003c14:	a823883a 	mov	r17,r21
 8003c18:	b4bff82e 	bgeu	r22,r18,8003bfc <__alt_data_end+0xfc003bfc>
 8003c1c:	1823883a 	mov	r17,r3
 8003c20:	d9003115 	stw	r4,196(sp)
 8003c24:	003f1d06 	br	800389c <__alt_data_end+0xfc00389c>
 8003c28:	8025883a 	mov	r18,r16
 8003c2c:	dc002903 	ldbu	r16,164(sp)
 8003c30:	e011883a 	mov	r8,fp
 8003c34:	84003fcc 	andi	r16,r16,255
 8003c38:	8007531e 	bne	r16,zero,8005988 <___vfprintf_internal_r+0x2278>
 8003c3c:	94800414 	ori	r18,r18,16
 8003c40:	9080080c 	andi	r2,r18,32
 8003c44:	1003a326 	beq	r2,zero,8004ad4 <___vfprintf_internal_r+0x13c4>
 8003c48:	d9002e17 	ldw	r4,184(sp)
 8003c4c:	20800117 	ldw	r2,4(r4)
 8003c50:	24c00017 	ldw	r19,0(r4)
 8003c54:	21000204 	addi	r4,r4,8
 8003c58:	d9002e15 	stw	r4,184(sp)
 8003c5c:	102d883a 	mov	r22,r2
 8003c60:	10047316 	blt	r2,zero,8004e30 <___vfprintf_internal_r+0x1720>
 8003c64:	d9002a17 	ldw	r4,168(sp)
 8003c68:	df002783 	ldbu	fp,158(sp)
 8003c6c:	2003e416 	blt	r4,zero,8004c00 <___vfprintf_internal_r+0x14f0>
 8003c70:	00ffdfc4 	movi	r3,-129
 8003c74:	9d84b03a 	or	r2,r19,r22
 8003c78:	90e4703a 	and	r18,r18,r3
 8003c7c:	10018026 	beq	r2,zero,8004280 <___vfprintf_internal_r+0xb70>
 8003c80:	b003ab26 	beq	r22,zero,8004b30 <___vfprintf_internal_r+0x1420>
 8003c84:	dc402915 	stw	r17,164(sp)
 8003c88:	dc001e04 	addi	r16,sp,120
 8003c8c:	b023883a 	mov	r17,r22
 8003c90:	402d883a 	mov	r22,r8
 8003c94:	9809883a 	mov	r4,r19
 8003c98:	880b883a 	mov	r5,r17
 8003c9c:	01800284 	movi	r6,10
 8003ca0:	000f883a 	mov	r7,zero
 8003ca4:	800e9680 	call	800e968 <__umoddi3>
 8003ca8:	10800c04 	addi	r2,r2,48
 8003cac:	843fffc4 	addi	r16,r16,-1
 8003cb0:	9809883a 	mov	r4,r19
 8003cb4:	880b883a 	mov	r5,r17
 8003cb8:	80800005 	stb	r2,0(r16)
 8003cbc:	01800284 	movi	r6,10
 8003cc0:	000f883a 	mov	r7,zero
 8003cc4:	800e36c0 	call	800e36c <__udivdi3>
 8003cc8:	1027883a 	mov	r19,r2
 8003ccc:	10c4b03a 	or	r2,r2,r3
 8003cd0:	1823883a 	mov	r17,r3
 8003cd4:	103fef1e 	bne	r2,zero,8003c94 <__alt_data_end+0xfc003c94>
 8003cd8:	d8c02817 	ldw	r3,160(sp)
 8003cdc:	dc402917 	ldw	r17,164(sp)
 8003ce0:	b011883a 	mov	r8,r22
 8003ce4:	1c07c83a 	sub	r3,r3,r16
 8003ce8:	d8c02b15 	stw	r3,172(sp)
 8003cec:	00005f06 	br	8003e6c <___vfprintf_internal_r+0x75c>
 8003cf0:	8025883a 	mov	r18,r16
 8003cf4:	dc002903 	ldbu	r16,164(sp)
 8003cf8:	e011883a 	mov	r8,fp
 8003cfc:	84003fcc 	andi	r16,r16,255
 8003d00:	80071e1e 	bne	r16,zero,800597c <___vfprintf_internal_r+0x226c>
 8003d04:	9080020c 	andi	r2,r18,8
 8003d08:	1004af26 	beq	r2,zero,8004fc8 <___vfprintf_internal_r+0x18b8>
 8003d0c:	d9002e17 	ldw	r4,184(sp)
 8003d10:	d9402e17 	ldw	r5,184(sp)
 8003d14:	d8802e17 	ldw	r2,184(sp)
 8003d18:	21000017 	ldw	r4,0(r4)
 8003d1c:	29400117 	ldw	r5,4(r5)
 8003d20:	10800204 	addi	r2,r2,8
 8003d24:	d9003615 	stw	r4,216(sp)
 8003d28:	d9403815 	stw	r5,224(sp)
 8003d2c:	d8802e15 	stw	r2,184(sp)
 8003d30:	d9003617 	ldw	r4,216(sp)
 8003d34:	d9403817 	ldw	r5,224(sp)
 8003d38:	da003d15 	stw	r8,244(sp)
 8003d3c:	04000044 	movi	r16,1
 8003d40:	8009e440 	call	8009e44 <__fpclassifyd>
 8003d44:	da003d17 	ldw	r8,244(sp)
 8003d48:	1404441e 	bne	r2,r16,8004e5c <___vfprintf_internal_r+0x174c>
 8003d4c:	d9003617 	ldw	r4,216(sp)
 8003d50:	d9403817 	ldw	r5,224(sp)
 8003d54:	000d883a 	mov	r6,zero
 8003d58:	000f883a 	mov	r7,zero
 8003d5c:	801030c0 	call	801030c <__ledf2>
 8003d60:	da003d17 	ldw	r8,244(sp)
 8003d64:	1005e316 	blt	r2,zero,80054f4 <___vfprintf_internal_r+0x1de4>
 8003d68:	df002783 	ldbu	fp,158(sp)
 8003d6c:	008011c4 	movi	r2,71
 8003d70:	1445580e 	bge	r2,r17,80052d4 <___vfprintf_internal_r+0x1bc4>
 8003d74:	04020074 	movhi	r16,2049
 8003d78:	84109004 	addi	r16,r16,16960
 8003d7c:	00c000c4 	movi	r3,3
 8003d80:	00bfdfc4 	movi	r2,-129
 8003d84:	d8c02915 	stw	r3,164(sp)
 8003d88:	90a4703a 	and	r18,r18,r2
 8003d8c:	d8c02b15 	stw	r3,172(sp)
 8003d90:	d8002a15 	stw	zero,168(sp)
 8003d94:	d8003215 	stw	zero,200(sp)
 8003d98:	00003a06 	br	8003e84 <___vfprintf_internal_r+0x774>
 8003d9c:	84000214 	ori	r16,r16,8
 8003da0:	ac400007 	ldb	r17,0(r21)
 8003da4:	003ebc06 	br	8003898 <__alt_data_end+0xfc003898>
 8003da8:	8025883a 	mov	r18,r16
 8003dac:	dc002903 	ldbu	r16,164(sp)
 8003db0:	e011883a 	mov	r8,fp
 8003db4:	84003fcc 	andi	r16,r16,255
 8003db8:	8007001e 	bne	r16,zero,80059bc <___vfprintf_internal_r+0x22ac>
 8003dbc:	94800414 	ori	r18,r18,16
 8003dc0:	9080080c 	andi	r2,r18,32
 8003dc4:	1002fa26 	beq	r2,zero,80049b0 <___vfprintf_internal_r+0x12a0>
 8003dc8:	d9002e17 	ldw	r4,184(sp)
 8003dcc:	d9402a17 	ldw	r5,168(sp)
 8003dd0:	d8002785 	stb	zero,158(sp)
 8003dd4:	20800204 	addi	r2,r4,8
 8003dd8:	24c00017 	ldw	r19,0(r4)
 8003ddc:	25800117 	ldw	r22,4(r4)
 8003de0:	2804b116 	blt	r5,zero,80050a8 <___vfprintf_internal_r+0x1998>
 8003de4:	013fdfc4 	movi	r4,-129
 8003de8:	9d86b03a 	or	r3,r19,r22
 8003dec:	d8802e15 	stw	r2,184(sp)
 8003df0:	9124703a 	and	r18,r18,r4
 8003df4:	1802fb1e 	bne	r3,zero,80049e4 <___vfprintf_internal_r+0x12d4>
 8003df8:	d8c02a17 	ldw	r3,168(sp)
 8003dfc:	0039883a 	mov	fp,zero
 8003e00:	1805e526 	beq	r3,zero,8005598 <___vfprintf_internal_r+0x1e88>
 8003e04:	0027883a 	mov	r19,zero
 8003e08:	002d883a 	mov	r22,zero
 8003e0c:	dc001e04 	addi	r16,sp,120
 8003e10:	9806d0fa 	srli	r3,r19,3
 8003e14:	b008977a 	slli	r4,r22,29
 8003e18:	b02cd0fa 	srli	r22,r22,3
 8003e1c:	9cc001cc 	andi	r19,r19,7
 8003e20:	98800c04 	addi	r2,r19,48
 8003e24:	843fffc4 	addi	r16,r16,-1
 8003e28:	20e6b03a 	or	r19,r4,r3
 8003e2c:	80800005 	stb	r2,0(r16)
 8003e30:	9d86b03a 	or	r3,r19,r22
 8003e34:	183ff61e 	bne	r3,zero,8003e10 <__alt_data_end+0xfc003e10>
 8003e38:	90c0004c 	andi	r3,r18,1
 8003e3c:	18014126 	beq	r3,zero,8004344 <___vfprintf_internal_r+0xc34>
 8003e40:	10803fcc 	andi	r2,r2,255
 8003e44:	1080201c 	xori	r2,r2,128
 8003e48:	10bfe004 	addi	r2,r2,-128
 8003e4c:	00c00c04 	movi	r3,48
 8003e50:	10c13c26 	beq	r2,r3,8004344 <___vfprintf_internal_r+0xc34>
 8003e54:	80ffffc5 	stb	r3,-1(r16)
 8003e58:	d8c02817 	ldw	r3,160(sp)
 8003e5c:	80bfffc4 	addi	r2,r16,-1
 8003e60:	1021883a 	mov	r16,r2
 8003e64:	1887c83a 	sub	r3,r3,r2
 8003e68:	d8c02b15 	stw	r3,172(sp)
 8003e6c:	d8802b17 	ldw	r2,172(sp)
 8003e70:	d9002a17 	ldw	r4,168(sp)
 8003e74:	1100010e 	bge	r2,r4,8003e7c <___vfprintf_internal_r+0x76c>
 8003e78:	2005883a 	mov	r2,r4
 8003e7c:	d8802915 	stw	r2,164(sp)
 8003e80:	d8003215 	stw	zero,200(sp)
 8003e84:	e7003fcc 	andi	fp,fp,255
 8003e88:	e700201c 	xori	fp,fp,128
 8003e8c:	e73fe004 	addi	fp,fp,-128
 8003e90:	e0000326 	beq	fp,zero,8003ea0 <___vfprintf_internal_r+0x790>
 8003e94:	d8c02917 	ldw	r3,164(sp)
 8003e98:	18c00044 	addi	r3,r3,1
 8003e9c:	d8c02915 	stw	r3,164(sp)
 8003ea0:	90c0008c 	andi	r3,r18,2
 8003ea4:	d8c02c15 	stw	r3,176(sp)
 8003ea8:	18000326 	beq	r3,zero,8003eb8 <___vfprintf_internal_r+0x7a8>
 8003eac:	d8c02917 	ldw	r3,164(sp)
 8003eb0:	18c00084 	addi	r3,r3,2
 8003eb4:	d8c02915 	stw	r3,164(sp)
 8003eb8:	90c0210c 	andi	r3,r18,132
 8003ebc:	d8c03015 	stw	r3,192(sp)
 8003ec0:	1801c51e 	bne	r3,zero,80045d8 <___vfprintf_internal_r+0xec8>
 8003ec4:	d9003117 	ldw	r4,196(sp)
 8003ec8:	d8c02917 	ldw	r3,164(sp)
 8003ecc:	20e7c83a 	sub	r19,r4,r3
 8003ed0:	04c1c10e 	bge	zero,r19,80045d8 <___vfprintf_internal_r+0xec8>
 8003ed4:	02400404 	movi	r9,16
 8003ed8:	d8c02017 	ldw	r3,128(sp)
 8003edc:	d8801f17 	ldw	r2,124(sp)
 8003ee0:	4cc52f0e 	bge	r9,r19,80053a0 <___vfprintf_internal_r+0x1c90>
 8003ee4:	01420074 	movhi	r5,2049
 8003ee8:	2950ab84 	addi	r5,r5,17070
 8003eec:	dc403b15 	stw	r17,236(sp)
 8003ef0:	d9403515 	stw	r5,212(sp)
 8003ef4:	9823883a 	mov	r17,r19
 8003ef8:	482d883a 	mov	r22,r9
 8003efc:	9027883a 	mov	r19,r18
 8003f00:	070001c4 	movi	fp,7
 8003f04:	8025883a 	mov	r18,r16
 8003f08:	dc002d17 	ldw	r16,180(sp)
 8003f0c:	00000306 	br	8003f1c <___vfprintf_internal_r+0x80c>
 8003f10:	8c7ffc04 	addi	r17,r17,-16
 8003f14:	42000204 	addi	r8,r8,8
 8003f18:	b440130e 	bge	r22,r17,8003f68 <___vfprintf_internal_r+0x858>
 8003f1c:	01020074 	movhi	r4,2049
 8003f20:	18c00404 	addi	r3,r3,16
 8003f24:	10800044 	addi	r2,r2,1
 8003f28:	2110ab84 	addi	r4,r4,17070
 8003f2c:	41000015 	stw	r4,0(r8)
 8003f30:	45800115 	stw	r22,4(r8)
 8003f34:	d8c02015 	stw	r3,128(sp)
 8003f38:	d8801f15 	stw	r2,124(sp)
 8003f3c:	e0bff40e 	bge	fp,r2,8003f10 <__alt_data_end+0xfc003f10>
 8003f40:	d9801e04 	addi	r6,sp,120
 8003f44:	b80b883a 	mov	r5,r23
 8003f48:	8009883a 	mov	r4,r16
 8003f4c:	800b7900 	call	800b790 <__sprint_r>
 8003f50:	103ef31e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8003f54:	8c7ffc04 	addi	r17,r17,-16
 8003f58:	d8c02017 	ldw	r3,128(sp)
 8003f5c:	d8801f17 	ldw	r2,124(sp)
 8003f60:	da000404 	addi	r8,sp,16
 8003f64:	b47fed16 	blt	r22,r17,8003f1c <__alt_data_end+0xfc003f1c>
 8003f68:	9021883a 	mov	r16,r18
 8003f6c:	9825883a 	mov	r18,r19
 8003f70:	8827883a 	mov	r19,r17
 8003f74:	dc403b17 	ldw	r17,236(sp)
 8003f78:	d9403517 	ldw	r5,212(sp)
 8003f7c:	98c7883a 	add	r3,r19,r3
 8003f80:	10800044 	addi	r2,r2,1
 8003f84:	41400015 	stw	r5,0(r8)
 8003f88:	44c00115 	stw	r19,4(r8)
 8003f8c:	d8c02015 	stw	r3,128(sp)
 8003f90:	d8801f15 	stw	r2,124(sp)
 8003f94:	010001c4 	movi	r4,7
 8003f98:	2082c516 	blt	r4,r2,8004ab0 <___vfprintf_internal_r+0x13a0>
 8003f9c:	df002787 	ldb	fp,158(sp)
 8003fa0:	42000204 	addi	r8,r8,8
 8003fa4:	e0000c26 	beq	fp,zero,8003fd8 <___vfprintf_internal_r+0x8c8>
 8003fa8:	d8801f17 	ldw	r2,124(sp)
 8003fac:	d9002784 	addi	r4,sp,158
 8003fb0:	18c00044 	addi	r3,r3,1
 8003fb4:	10800044 	addi	r2,r2,1
 8003fb8:	41000015 	stw	r4,0(r8)
 8003fbc:	01000044 	movi	r4,1
 8003fc0:	41000115 	stw	r4,4(r8)
 8003fc4:	d8c02015 	stw	r3,128(sp)
 8003fc8:	d8801f15 	stw	r2,124(sp)
 8003fcc:	010001c4 	movi	r4,7
 8003fd0:	20825e16 	blt	r4,r2,800494c <___vfprintf_internal_r+0x123c>
 8003fd4:	42000204 	addi	r8,r8,8
 8003fd8:	d8802c17 	ldw	r2,176(sp)
 8003fdc:	10000c26 	beq	r2,zero,8004010 <___vfprintf_internal_r+0x900>
 8003fe0:	d8801f17 	ldw	r2,124(sp)
 8003fe4:	d9002704 	addi	r4,sp,156
 8003fe8:	18c00084 	addi	r3,r3,2
 8003fec:	10800044 	addi	r2,r2,1
 8003ff0:	41000015 	stw	r4,0(r8)
 8003ff4:	01000084 	movi	r4,2
 8003ff8:	41000115 	stw	r4,4(r8)
 8003ffc:	d8c02015 	stw	r3,128(sp)
 8004000:	d8801f15 	stw	r2,124(sp)
 8004004:	010001c4 	movi	r4,7
 8004008:	20825816 	blt	r4,r2,800496c <___vfprintf_internal_r+0x125c>
 800400c:	42000204 	addi	r8,r8,8
 8004010:	d9003017 	ldw	r4,192(sp)
 8004014:	00802004 	movi	r2,128
 8004018:	2081bb26 	beq	r4,r2,8004708 <___vfprintf_internal_r+0xff8>
 800401c:	d9402a17 	ldw	r5,168(sp)
 8004020:	d8802b17 	ldw	r2,172(sp)
 8004024:	28adc83a 	sub	r22,r5,r2
 8004028:	0580310e 	bge	zero,r22,80040f0 <___vfprintf_internal_r+0x9e0>
 800402c:	07000404 	movi	fp,16
 8004030:	d8801f17 	ldw	r2,124(sp)
 8004034:	e584360e 	bge	fp,r22,8005110 <___vfprintf_internal_r+0x1a00>
 8004038:	01420074 	movhi	r5,2049
 800403c:	2950a784 	addi	r5,r5,17054
 8004040:	dc402a15 	stw	r17,168(sp)
 8004044:	d9402c15 	stw	r5,176(sp)
 8004048:	b023883a 	mov	r17,r22
 800404c:	04c001c4 	movi	r19,7
 8004050:	a82d883a 	mov	r22,r21
 8004054:	902b883a 	mov	r21,r18
 8004058:	8025883a 	mov	r18,r16
 800405c:	dc002d17 	ldw	r16,180(sp)
 8004060:	00000306 	br	8004070 <___vfprintf_internal_r+0x960>
 8004064:	8c7ffc04 	addi	r17,r17,-16
 8004068:	42000204 	addi	r8,r8,8
 800406c:	e440110e 	bge	fp,r17,80040b4 <___vfprintf_internal_r+0x9a4>
 8004070:	18c00404 	addi	r3,r3,16
 8004074:	10800044 	addi	r2,r2,1
 8004078:	45000015 	stw	r20,0(r8)
 800407c:	47000115 	stw	fp,4(r8)
 8004080:	d8c02015 	stw	r3,128(sp)
 8004084:	d8801f15 	stw	r2,124(sp)
 8004088:	98bff60e 	bge	r19,r2,8004064 <__alt_data_end+0xfc004064>
 800408c:	d9801e04 	addi	r6,sp,120
 8004090:	b80b883a 	mov	r5,r23
 8004094:	8009883a 	mov	r4,r16
 8004098:	800b7900 	call	800b790 <__sprint_r>
 800409c:	103ea01e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80040a0:	8c7ffc04 	addi	r17,r17,-16
 80040a4:	d8c02017 	ldw	r3,128(sp)
 80040a8:	d8801f17 	ldw	r2,124(sp)
 80040ac:	da000404 	addi	r8,sp,16
 80040b0:	e47fef16 	blt	fp,r17,8004070 <__alt_data_end+0xfc004070>
 80040b4:	9021883a 	mov	r16,r18
 80040b8:	a825883a 	mov	r18,r21
 80040bc:	b02b883a 	mov	r21,r22
 80040c0:	882d883a 	mov	r22,r17
 80040c4:	dc402a17 	ldw	r17,168(sp)
 80040c8:	d9002c17 	ldw	r4,176(sp)
 80040cc:	1d87883a 	add	r3,r3,r22
 80040d0:	10800044 	addi	r2,r2,1
 80040d4:	41000015 	stw	r4,0(r8)
 80040d8:	45800115 	stw	r22,4(r8)
 80040dc:	d8c02015 	stw	r3,128(sp)
 80040e0:	d8801f15 	stw	r2,124(sp)
 80040e4:	010001c4 	movi	r4,7
 80040e8:	20821016 	blt	r4,r2,800492c <___vfprintf_internal_r+0x121c>
 80040ec:	42000204 	addi	r8,r8,8
 80040f0:	9080400c 	andi	r2,r18,256
 80040f4:	10013a1e 	bne	r2,zero,80045e0 <___vfprintf_internal_r+0xed0>
 80040f8:	d9402b17 	ldw	r5,172(sp)
 80040fc:	d8801f17 	ldw	r2,124(sp)
 8004100:	44000015 	stw	r16,0(r8)
 8004104:	1947883a 	add	r3,r3,r5
 8004108:	10800044 	addi	r2,r2,1
 800410c:	41400115 	stw	r5,4(r8)
 8004110:	d8c02015 	stw	r3,128(sp)
 8004114:	d8801f15 	stw	r2,124(sp)
 8004118:	010001c4 	movi	r4,7
 800411c:	2081f516 	blt	r4,r2,80048f4 <___vfprintf_internal_r+0x11e4>
 8004120:	42000204 	addi	r8,r8,8
 8004124:	9480010c 	andi	r18,r18,4
 8004128:	90003226 	beq	r18,zero,80041f4 <___vfprintf_internal_r+0xae4>
 800412c:	d9403117 	ldw	r5,196(sp)
 8004130:	d8802917 	ldw	r2,164(sp)
 8004134:	28a1c83a 	sub	r16,r5,r2
 8004138:	04002e0e 	bge	zero,r16,80041f4 <___vfprintf_internal_r+0xae4>
 800413c:	04400404 	movi	r17,16
 8004140:	d8801f17 	ldw	r2,124(sp)
 8004144:	8c04c40e 	bge	r17,r16,8005458 <___vfprintf_internal_r+0x1d48>
 8004148:	01420074 	movhi	r5,2049
 800414c:	2950ab84 	addi	r5,r5,17070
 8004150:	d9403515 	stw	r5,212(sp)
 8004154:	048001c4 	movi	r18,7
 8004158:	dcc02d17 	ldw	r19,180(sp)
 800415c:	00000306 	br	800416c <___vfprintf_internal_r+0xa5c>
 8004160:	843ffc04 	addi	r16,r16,-16
 8004164:	42000204 	addi	r8,r8,8
 8004168:	8c00130e 	bge	r17,r16,80041b8 <___vfprintf_internal_r+0xaa8>
 800416c:	01020074 	movhi	r4,2049
 8004170:	18c00404 	addi	r3,r3,16
 8004174:	10800044 	addi	r2,r2,1
 8004178:	2110ab84 	addi	r4,r4,17070
 800417c:	41000015 	stw	r4,0(r8)
 8004180:	44400115 	stw	r17,4(r8)
 8004184:	d8c02015 	stw	r3,128(sp)
 8004188:	d8801f15 	stw	r2,124(sp)
 800418c:	90bff40e 	bge	r18,r2,8004160 <__alt_data_end+0xfc004160>
 8004190:	d9801e04 	addi	r6,sp,120
 8004194:	b80b883a 	mov	r5,r23
 8004198:	9809883a 	mov	r4,r19
 800419c:	800b7900 	call	800b790 <__sprint_r>
 80041a0:	103e5f1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80041a4:	843ffc04 	addi	r16,r16,-16
 80041a8:	d8c02017 	ldw	r3,128(sp)
 80041ac:	d8801f17 	ldw	r2,124(sp)
 80041b0:	da000404 	addi	r8,sp,16
 80041b4:	8c3fed16 	blt	r17,r16,800416c <__alt_data_end+0xfc00416c>
 80041b8:	d9403517 	ldw	r5,212(sp)
 80041bc:	1c07883a 	add	r3,r3,r16
 80041c0:	10800044 	addi	r2,r2,1
 80041c4:	41400015 	stw	r5,0(r8)
 80041c8:	44000115 	stw	r16,4(r8)
 80041cc:	d8c02015 	stw	r3,128(sp)
 80041d0:	d8801f15 	stw	r2,124(sp)
 80041d4:	010001c4 	movi	r4,7
 80041d8:	2080060e 	bge	r4,r2,80041f4 <___vfprintf_internal_r+0xae4>
 80041dc:	d9002d17 	ldw	r4,180(sp)
 80041e0:	d9801e04 	addi	r6,sp,120
 80041e4:	b80b883a 	mov	r5,r23
 80041e8:	800b7900 	call	800b790 <__sprint_r>
 80041ec:	103e4c1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80041f0:	d8c02017 	ldw	r3,128(sp)
 80041f4:	d8803117 	ldw	r2,196(sp)
 80041f8:	d9002917 	ldw	r4,164(sp)
 80041fc:	1100010e 	bge	r2,r4,8004204 <___vfprintf_internal_r+0xaf4>
 8004200:	2005883a 	mov	r2,r4
 8004204:	d9402f17 	ldw	r5,188(sp)
 8004208:	288b883a 	add	r5,r5,r2
 800420c:	d9402f15 	stw	r5,188(sp)
 8004210:	1801c01e 	bne	r3,zero,8004914 <___vfprintf_internal_r+0x1204>
 8004214:	a8800007 	ldb	r2,0(r21)
 8004218:	d8001f15 	stw	zero,124(sp)
 800421c:	da000404 	addi	r8,sp,16
 8004220:	103d751e 	bne	r2,zero,80037f8 <__alt_data_end+0xfc0037f8>
 8004224:	a823883a 	mov	r17,r21
 8004228:	003d8b06 	br	8003858 <__alt_data_end+0xfc003858>
 800422c:	8025883a 	mov	r18,r16
 8004230:	dc002903 	ldbu	r16,164(sp)
 8004234:	e011883a 	mov	r8,fp
 8004238:	84003fcc 	andi	r16,r16,255
 800423c:	8005e51e 	bne	r16,zero,80059d4 <___vfprintf_internal_r+0x22c4>
 8004240:	94800414 	ori	r18,r18,16
 8004244:	9080080c 	andi	r2,r18,32
 8004248:	10022b26 	beq	r2,zero,8004af8 <___vfprintf_internal_r+0x13e8>
 800424c:	d9002e17 	ldw	r4,184(sp)
 8004250:	d9402a17 	ldw	r5,168(sp)
 8004254:	d8002785 	stb	zero,158(sp)
 8004258:	20c00204 	addi	r3,r4,8
 800425c:	24c00017 	ldw	r19,0(r4)
 8004260:	25800117 	ldw	r22,4(r4)
 8004264:	28042e16 	blt	r5,zero,8005320 <___vfprintf_internal_r+0x1c10>
 8004268:	013fdfc4 	movi	r4,-129
 800426c:	9d84b03a 	or	r2,r19,r22
 8004270:	d8c02e15 	stw	r3,184(sp)
 8004274:	9124703a 	and	r18,r18,r4
 8004278:	0039883a 	mov	fp,zero
 800427c:	103e801e 	bne	r2,zero,8003c80 <__alt_data_end+0xfc003c80>
 8004280:	d9002a17 	ldw	r4,168(sp)
 8004284:	2002e01e 	bne	r4,zero,8004e08 <___vfprintf_internal_r+0x16f8>
 8004288:	d8002a15 	stw	zero,168(sp)
 800428c:	d8002b15 	stw	zero,172(sp)
 8004290:	dc001e04 	addi	r16,sp,120
 8004294:	003ef506 	br	8003e6c <__alt_data_end+0xfc003e6c>
 8004298:	8025883a 	mov	r18,r16
 800429c:	dc002903 	ldbu	r16,164(sp)
 80042a0:	e011883a 	mov	r8,fp
 80042a4:	84003fcc 	andi	r16,r16,255
 80042a8:	8005ba1e 	bne	r16,zero,8005994 <___vfprintf_internal_r+0x2284>
 80042ac:	01020074 	movhi	r4,2049
 80042b0:	21109304 	addi	r4,r4,16972
 80042b4:	d9003915 	stw	r4,228(sp)
 80042b8:	9080080c 	andi	r2,r18,32
 80042bc:	10006126 	beq	r2,zero,8004444 <___vfprintf_internal_r+0xd34>
 80042c0:	d9402e17 	ldw	r5,184(sp)
 80042c4:	2cc00017 	ldw	r19,0(r5)
 80042c8:	2d800117 	ldw	r22,4(r5)
 80042cc:	29400204 	addi	r5,r5,8
 80042d0:	d9402e15 	stw	r5,184(sp)
 80042d4:	9080004c 	andi	r2,r18,1
 80042d8:	1001ac26 	beq	r2,zero,800498c <___vfprintf_internal_r+0x127c>
 80042dc:	9d84b03a 	or	r2,r19,r22
 80042e0:	10038526 	beq	r2,zero,80050f8 <___vfprintf_internal_r+0x19e8>
 80042e4:	d8c02a17 	ldw	r3,168(sp)
 80042e8:	00800c04 	movi	r2,48
 80042ec:	d8802705 	stb	r2,156(sp)
 80042f0:	dc402745 	stb	r17,157(sp)
 80042f4:	d8002785 	stb	zero,158(sp)
 80042f8:	90800094 	ori	r2,r18,2
 80042fc:	18047916 	blt	r3,zero,80054e4 <___vfprintf_internal_r+0x1dd4>
 8004300:	00bfdfc4 	movi	r2,-129
 8004304:	90a4703a 	and	r18,r18,r2
 8004308:	94800094 	ori	r18,r18,2
 800430c:	0039883a 	mov	fp,zero
 8004310:	d9003917 	ldw	r4,228(sp)
 8004314:	dc001e04 	addi	r16,sp,120
 8004318:	988003cc 	andi	r2,r19,15
 800431c:	b006973a 	slli	r3,r22,28
 8004320:	2085883a 	add	r2,r4,r2
 8004324:	9826d13a 	srli	r19,r19,4
 8004328:	10800003 	ldbu	r2,0(r2)
 800432c:	b02cd13a 	srli	r22,r22,4
 8004330:	843fffc4 	addi	r16,r16,-1
 8004334:	1ce6b03a 	or	r19,r3,r19
 8004338:	80800005 	stb	r2,0(r16)
 800433c:	9d84b03a 	or	r2,r19,r22
 8004340:	103ff51e 	bne	r2,zero,8004318 <__alt_data_end+0xfc004318>
 8004344:	d8c02817 	ldw	r3,160(sp)
 8004348:	1c07c83a 	sub	r3,r3,r16
 800434c:	d8c02b15 	stw	r3,172(sp)
 8004350:	003ec606 	br	8003e6c <__alt_data_end+0xfc003e6c>
 8004354:	8025883a 	mov	r18,r16
 8004358:	dc002903 	ldbu	r16,164(sp)
 800435c:	e011883a 	mov	r8,fp
 8004360:	84003fcc 	andi	r16,r16,255
 8004364:	803e9626 	beq	r16,zero,8003dc0 <__alt_data_end+0xfc003dc0>
 8004368:	d8c02b03 	ldbu	r3,172(sp)
 800436c:	d8c02785 	stb	r3,158(sp)
 8004370:	003e9306 	br	8003dc0 <__alt_data_end+0xfc003dc0>
 8004374:	00c00044 	movi	r3,1
 8004378:	d8c02905 	stb	r3,164(sp)
 800437c:	00c00ac4 	movi	r3,43
 8004380:	d8c02b05 	stb	r3,172(sp)
 8004384:	ac400007 	ldb	r17,0(r21)
 8004388:	003d4306 	br	8003898 <__alt_data_end+0xfc003898>
 800438c:	84000814 	ori	r16,r16,32
 8004390:	ac400007 	ldb	r17,0(r21)
 8004394:	003d4006 	br	8003898 <__alt_data_end+0xfc003898>
 8004398:	d8802e17 	ldw	r2,184(sp)
 800439c:	8025883a 	mov	r18,r16
 80043a0:	d8002785 	stb	zero,158(sp)
 80043a4:	14000017 	ldw	r16,0(r2)
 80043a8:	e011883a 	mov	r8,fp
 80043ac:	14c00104 	addi	r19,r2,4
 80043b0:	80042d26 	beq	r16,zero,8005468 <___vfprintf_internal_r+0x1d58>
 80043b4:	d8c02a17 	ldw	r3,168(sp)
 80043b8:	1803e416 	blt	r3,zero,800534c <___vfprintf_internal_r+0x1c3c>
 80043bc:	180d883a 	mov	r6,r3
 80043c0:	000b883a 	mov	r5,zero
 80043c4:	8009883a 	mov	r4,r16
 80043c8:	df003d15 	stw	fp,244(sp)
 80043cc:	8008b800 	call	8008b80 <memchr>
 80043d0:	da003d17 	ldw	r8,244(sp)
 80043d4:	10046826 	beq	r2,zero,8005578 <___vfprintf_internal_r+0x1e68>
 80043d8:	1405c83a 	sub	r2,r2,r16
 80043dc:	d8802b15 	stw	r2,172(sp)
 80043e0:	1003e016 	blt	r2,zero,8005364 <___vfprintf_internal_r+0x1c54>
 80043e4:	df002783 	ldbu	fp,158(sp)
 80043e8:	d8802915 	stw	r2,164(sp)
 80043ec:	dcc02e15 	stw	r19,184(sp)
 80043f0:	d8002a15 	stw	zero,168(sp)
 80043f4:	d8003215 	stw	zero,200(sp)
 80043f8:	003ea206 	br	8003e84 <__alt_data_end+0xfc003e84>
 80043fc:	8025883a 	mov	r18,r16
 8004400:	dc002903 	ldbu	r16,164(sp)
 8004404:	e011883a 	mov	r8,fp
 8004408:	84003fcc 	andi	r16,r16,255
 800440c:	803f8d26 	beq	r16,zero,8004244 <__alt_data_end+0xfc004244>
 8004410:	d8c02b03 	ldbu	r3,172(sp)
 8004414:	d8c02785 	stb	r3,158(sp)
 8004418:	003f8a06 	br	8004244 <__alt_data_end+0xfc004244>
 800441c:	8025883a 	mov	r18,r16
 8004420:	dc002903 	ldbu	r16,164(sp)
 8004424:	e011883a 	mov	r8,fp
 8004428:	84003fcc 	andi	r16,r16,255
 800442c:	8005661e 	bne	r16,zero,80059c8 <___vfprintf_internal_r+0x22b8>
 8004430:	01020074 	movhi	r4,2049
 8004434:	21109804 	addi	r4,r4,16992
 8004438:	d9003915 	stw	r4,228(sp)
 800443c:	9080080c 	andi	r2,r18,32
 8004440:	103f9f1e 	bne	r2,zero,80042c0 <__alt_data_end+0xfc0042c0>
 8004444:	9080040c 	andi	r2,r18,16
 8004448:	1002eb26 	beq	r2,zero,8004ff8 <___vfprintf_internal_r+0x18e8>
 800444c:	d8802e17 	ldw	r2,184(sp)
 8004450:	002d883a 	mov	r22,zero
 8004454:	14c00017 	ldw	r19,0(r2)
 8004458:	10800104 	addi	r2,r2,4
 800445c:	d8802e15 	stw	r2,184(sp)
 8004460:	003f9c06 	br	80042d4 <__alt_data_end+0xfc0042d4>
 8004464:	d8802b07 	ldb	r2,172(sp)
 8004468:	1002e11e 	bne	r2,zero,8004ff0 <___vfprintf_internal_r+0x18e0>
 800446c:	00c00044 	movi	r3,1
 8004470:	d8c02905 	stb	r3,164(sp)
 8004474:	00c00804 	movi	r3,32
 8004478:	d8c02b05 	stb	r3,172(sp)
 800447c:	ac400007 	ldb	r17,0(r21)
 8004480:	003d0506 	br	8003898 <__alt_data_end+0xfc003898>
 8004484:	84000054 	ori	r16,r16,1
 8004488:	ac400007 	ldb	r17,0(r21)
 800448c:	003d0206 	br	8003898 <__alt_data_end+0xfc003898>
 8004490:	8025883a 	mov	r18,r16
 8004494:	dc002903 	ldbu	r16,164(sp)
 8004498:	e011883a 	mov	r8,fp
 800449c:	84003fcc 	andi	r16,r16,255
 80044a0:	803de726 	beq	r16,zero,8003c40 <__alt_data_end+0xfc003c40>
 80044a4:	d8c02b03 	ldbu	r3,172(sp)
 80044a8:	d8c02785 	stb	r3,158(sp)
 80044ac:	003de406 	br	8003c40 <__alt_data_end+0xfc003c40>
 80044b0:	84001014 	ori	r16,r16,64
 80044b4:	ac400007 	ldb	r17,0(r21)
 80044b8:	003cf706 	br	8003898 <__alt_data_end+0xfc003898>
 80044bc:	ac400007 	ldb	r17,0(r21)
 80044c0:	00801b04 	movi	r2,108
 80044c4:	88838f26 	beq	r17,r2,8005304 <___vfprintf_internal_r+0x1bf4>
 80044c8:	84000414 	ori	r16,r16,16
 80044cc:	003cf206 	br	8003898 <__alt_data_end+0xfc003898>
 80044d0:	8025883a 	mov	r18,r16
 80044d4:	dc002903 	ldbu	r16,164(sp)
 80044d8:	e011883a 	mov	r8,fp
 80044dc:	84003fcc 	andi	r16,r16,255
 80044e0:	80053f1e 	bne	r16,zero,80059e0 <___vfprintf_internal_r+0x22d0>
 80044e4:	9080080c 	andi	r2,r18,32
 80044e8:	1002d226 	beq	r2,zero,8005034 <___vfprintf_internal_r+0x1924>
 80044ec:	d9002e17 	ldw	r4,184(sp)
 80044f0:	d9402f17 	ldw	r5,188(sp)
 80044f4:	20800017 	ldw	r2,0(r4)
 80044f8:	2807d7fa 	srai	r3,r5,31
 80044fc:	21000104 	addi	r4,r4,4
 8004500:	d9002e15 	stw	r4,184(sp)
 8004504:	11400015 	stw	r5,0(r2)
 8004508:	10c00115 	stw	r3,4(r2)
 800450c:	003cb806 	br	80037f0 <__alt_data_end+0xfc0037f0>
 8004510:	d8c02e17 	ldw	r3,184(sp)
 8004514:	d9002e17 	ldw	r4,184(sp)
 8004518:	8025883a 	mov	r18,r16
 800451c:	18800017 	ldw	r2,0(r3)
 8004520:	21000104 	addi	r4,r4,4
 8004524:	00c00044 	movi	r3,1
 8004528:	e011883a 	mov	r8,fp
 800452c:	d8c02915 	stw	r3,164(sp)
 8004530:	d8002785 	stb	zero,158(sp)
 8004534:	d8801405 	stb	r2,80(sp)
 8004538:	d9002e15 	stw	r4,184(sp)
 800453c:	d8c02b15 	stw	r3,172(sp)
 8004540:	d8002a15 	stw	zero,168(sp)
 8004544:	d8003215 	stw	zero,200(sp)
 8004548:	dc001404 	addi	r16,sp,80
 800454c:	0039883a 	mov	fp,zero
 8004550:	003e5306 	br	8003ea0 <__alt_data_end+0xfc003ea0>
 8004554:	01020074 	movhi	r4,2049
 8004558:	21109804 	addi	r4,r4,16992
 800455c:	0039883a 	mov	fp,zero
 8004560:	d9003915 	stw	r4,228(sp)
 8004564:	04401e04 	movi	r17,120
 8004568:	003f6906 	br	8004310 <__alt_data_end+0xfc004310>
 800456c:	8025883a 	mov	r18,r16
 8004570:	dc002903 	ldbu	r16,164(sp)
 8004574:	e011883a 	mov	r8,fp
 8004578:	84003fcc 	andi	r16,r16,255
 800457c:	8005081e 	bne	r16,zero,80059a0 <___vfprintf_internal_r+0x2290>
 8004580:	883d6126 	beq	r17,zero,8003b08 <__alt_data_end+0xfc003b08>
 8004584:	00c00044 	movi	r3,1
 8004588:	d8c02915 	stw	r3,164(sp)
 800458c:	dc401405 	stb	r17,80(sp)
 8004590:	d8002785 	stb	zero,158(sp)
 8004594:	003fe906 	br	800453c <__alt_data_end+0xfc00453c>
 8004598:	01420074 	movhi	r5,2049
 800459c:	29509804 	addi	r5,r5,16992
 80045a0:	d9403915 	stw	r5,228(sp)
 80045a4:	d8c02e15 	stw	r3,184(sp)
 80045a8:	1025883a 	mov	r18,r2
 80045ac:	04401e04 	movi	r17,120
 80045b0:	9d84b03a 	or	r2,r19,r22
 80045b4:	1000fc1e 	bne	r2,zero,80049a8 <___vfprintf_internal_r+0x1298>
 80045b8:	0039883a 	mov	fp,zero
 80045bc:	00800084 	movi	r2,2
 80045c0:	10803fcc 	andi	r2,r2,255
 80045c4:	00c00044 	movi	r3,1
 80045c8:	10c20f26 	beq	r2,r3,8004e08 <___vfprintf_internal_r+0x16f8>
 80045cc:	00c00084 	movi	r3,2
 80045d0:	10fd3326 	beq	r2,r3,8003aa0 <__alt_data_end+0xfc003aa0>
 80045d4:	003e0b06 	br	8003e04 <__alt_data_end+0xfc003e04>
 80045d8:	d8c02017 	ldw	r3,128(sp)
 80045dc:	003e7106 	br	8003fa4 <__alt_data_end+0xfc003fa4>
 80045e0:	00801944 	movi	r2,101
 80045e4:	14407e0e 	bge	r2,r17,80047e0 <___vfprintf_internal_r+0x10d0>
 80045e8:	d9003617 	ldw	r4,216(sp)
 80045ec:	d9403817 	ldw	r5,224(sp)
 80045f0:	000d883a 	mov	r6,zero
 80045f4:	000f883a 	mov	r7,zero
 80045f8:	d8c03c15 	stw	r3,240(sp)
 80045fc:	da003d15 	stw	r8,244(sp)
 8004600:	80101a80 	call	80101a8 <__eqdf2>
 8004604:	d8c03c17 	ldw	r3,240(sp)
 8004608:	da003d17 	ldw	r8,244(sp)
 800460c:	1000f71e 	bne	r2,zero,80049ec <___vfprintf_internal_r+0x12dc>
 8004610:	d8801f17 	ldw	r2,124(sp)
 8004614:	01020074 	movhi	r4,2049
 8004618:	21109f04 	addi	r4,r4,17020
 800461c:	18c00044 	addi	r3,r3,1
 8004620:	10800044 	addi	r2,r2,1
 8004624:	41000015 	stw	r4,0(r8)
 8004628:	01000044 	movi	r4,1
 800462c:	41000115 	stw	r4,4(r8)
 8004630:	d8c02015 	stw	r3,128(sp)
 8004634:	d8801f15 	stw	r2,124(sp)
 8004638:	010001c4 	movi	r4,7
 800463c:	2082b816 	blt	r4,r2,8005120 <___vfprintf_internal_r+0x1a10>
 8004640:	42000204 	addi	r8,r8,8
 8004644:	d8802617 	ldw	r2,152(sp)
 8004648:	d9403317 	ldw	r5,204(sp)
 800464c:	11400216 	blt	r2,r5,8004658 <___vfprintf_internal_r+0xf48>
 8004650:	9080004c 	andi	r2,r18,1
 8004654:	103eb326 	beq	r2,zero,8004124 <__alt_data_end+0xfc004124>
 8004658:	d8803717 	ldw	r2,220(sp)
 800465c:	d9003417 	ldw	r4,208(sp)
 8004660:	d9403717 	ldw	r5,220(sp)
 8004664:	1887883a 	add	r3,r3,r2
 8004668:	d8801f17 	ldw	r2,124(sp)
 800466c:	41000015 	stw	r4,0(r8)
 8004670:	41400115 	stw	r5,4(r8)
 8004674:	10800044 	addi	r2,r2,1
 8004678:	d8c02015 	stw	r3,128(sp)
 800467c:	d8801f15 	stw	r2,124(sp)
 8004680:	010001c4 	movi	r4,7
 8004684:	20832916 	blt	r4,r2,800532c <___vfprintf_internal_r+0x1c1c>
 8004688:	42000204 	addi	r8,r8,8
 800468c:	d8803317 	ldw	r2,204(sp)
 8004690:	143fffc4 	addi	r16,r2,-1
 8004694:	043ea30e 	bge	zero,r16,8004124 <__alt_data_end+0xfc004124>
 8004698:	04400404 	movi	r17,16
 800469c:	d8801f17 	ldw	r2,124(sp)
 80046a0:	8c00880e 	bge	r17,r16,80048c4 <___vfprintf_internal_r+0x11b4>
 80046a4:	01420074 	movhi	r5,2049
 80046a8:	2950a784 	addi	r5,r5,17054
 80046ac:	d9402c15 	stw	r5,176(sp)
 80046b0:	058001c4 	movi	r22,7
 80046b4:	dcc02d17 	ldw	r19,180(sp)
 80046b8:	00000306 	br	80046c8 <___vfprintf_internal_r+0xfb8>
 80046bc:	42000204 	addi	r8,r8,8
 80046c0:	843ffc04 	addi	r16,r16,-16
 80046c4:	8c00820e 	bge	r17,r16,80048d0 <___vfprintf_internal_r+0x11c0>
 80046c8:	18c00404 	addi	r3,r3,16
 80046cc:	10800044 	addi	r2,r2,1
 80046d0:	45000015 	stw	r20,0(r8)
 80046d4:	44400115 	stw	r17,4(r8)
 80046d8:	d8c02015 	stw	r3,128(sp)
 80046dc:	d8801f15 	stw	r2,124(sp)
 80046e0:	b0bff60e 	bge	r22,r2,80046bc <__alt_data_end+0xfc0046bc>
 80046e4:	d9801e04 	addi	r6,sp,120
 80046e8:	b80b883a 	mov	r5,r23
 80046ec:	9809883a 	mov	r4,r19
 80046f0:	800b7900 	call	800b790 <__sprint_r>
 80046f4:	103d0a1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80046f8:	d8c02017 	ldw	r3,128(sp)
 80046fc:	d8801f17 	ldw	r2,124(sp)
 8004700:	da000404 	addi	r8,sp,16
 8004704:	003fee06 	br	80046c0 <__alt_data_end+0xfc0046c0>
 8004708:	d9403117 	ldw	r5,196(sp)
 800470c:	d8802917 	ldw	r2,164(sp)
 8004710:	28adc83a 	sub	r22,r5,r2
 8004714:	05be410e 	bge	zero,r22,800401c <__alt_data_end+0xfc00401c>
 8004718:	07000404 	movi	fp,16
 800471c:	d8801f17 	ldw	r2,124(sp)
 8004720:	e5838f0e 	bge	fp,r22,8005560 <___vfprintf_internal_r+0x1e50>
 8004724:	01420074 	movhi	r5,2049
 8004728:	2950a784 	addi	r5,r5,17054
 800472c:	dc403015 	stw	r17,192(sp)
 8004730:	d9402c15 	stw	r5,176(sp)
 8004734:	b023883a 	mov	r17,r22
 8004738:	04c001c4 	movi	r19,7
 800473c:	a82d883a 	mov	r22,r21
 8004740:	902b883a 	mov	r21,r18
 8004744:	8025883a 	mov	r18,r16
 8004748:	dc002d17 	ldw	r16,180(sp)
 800474c:	00000306 	br	800475c <___vfprintf_internal_r+0x104c>
 8004750:	8c7ffc04 	addi	r17,r17,-16
 8004754:	42000204 	addi	r8,r8,8
 8004758:	e440110e 	bge	fp,r17,80047a0 <___vfprintf_internal_r+0x1090>
 800475c:	18c00404 	addi	r3,r3,16
 8004760:	10800044 	addi	r2,r2,1
 8004764:	45000015 	stw	r20,0(r8)
 8004768:	47000115 	stw	fp,4(r8)
 800476c:	d8c02015 	stw	r3,128(sp)
 8004770:	d8801f15 	stw	r2,124(sp)
 8004774:	98bff60e 	bge	r19,r2,8004750 <__alt_data_end+0xfc004750>
 8004778:	d9801e04 	addi	r6,sp,120
 800477c:	b80b883a 	mov	r5,r23
 8004780:	8009883a 	mov	r4,r16
 8004784:	800b7900 	call	800b790 <__sprint_r>
 8004788:	103ce51e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 800478c:	8c7ffc04 	addi	r17,r17,-16
 8004790:	d8c02017 	ldw	r3,128(sp)
 8004794:	d8801f17 	ldw	r2,124(sp)
 8004798:	da000404 	addi	r8,sp,16
 800479c:	e47fef16 	blt	fp,r17,800475c <__alt_data_end+0xfc00475c>
 80047a0:	9021883a 	mov	r16,r18
 80047a4:	a825883a 	mov	r18,r21
 80047a8:	b02b883a 	mov	r21,r22
 80047ac:	882d883a 	mov	r22,r17
 80047b0:	dc403017 	ldw	r17,192(sp)
 80047b4:	d9002c17 	ldw	r4,176(sp)
 80047b8:	1d87883a 	add	r3,r3,r22
 80047bc:	10800044 	addi	r2,r2,1
 80047c0:	41000015 	stw	r4,0(r8)
 80047c4:	45800115 	stw	r22,4(r8)
 80047c8:	d8c02015 	stw	r3,128(sp)
 80047cc:	d8801f15 	stw	r2,124(sp)
 80047d0:	010001c4 	movi	r4,7
 80047d4:	20818e16 	blt	r4,r2,8004e10 <___vfprintf_internal_r+0x1700>
 80047d8:	42000204 	addi	r8,r8,8
 80047dc:	003e0f06 	br	800401c <__alt_data_end+0xfc00401c>
 80047e0:	d9403317 	ldw	r5,204(sp)
 80047e4:	00800044 	movi	r2,1
 80047e8:	18c00044 	addi	r3,r3,1
 80047ec:	1141530e 	bge	r2,r5,8004d3c <___vfprintf_internal_r+0x162c>
 80047f0:	dc401f17 	ldw	r17,124(sp)
 80047f4:	00800044 	movi	r2,1
 80047f8:	40800115 	stw	r2,4(r8)
 80047fc:	8c400044 	addi	r17,r17,1
 8004800:	44000015 	stw	r16,0(r8)
 8004804:	d8c02015 	stw	r3,128(sp)
 8004808:	dc401f15 	stw	r17,124(sp)
 800480c:	008001c4 	movi	r2,7
 8004810:	14416b16 	blt	r2,r17,8004dc0 <___vfprintf_internal_r+0x16b0>
 8004814:	42000204 	addi	r8,r8,8
 8004818:	d8803717 	ldw	r2,220(sp)
 800481c:	d9003417 	ldw	r4,208(sp)
 8004820:	8c400044 	addi	r17,r17,1
 8004824:	10c7883a 	add	r3,r2,r3
 8004828:	40800115 	stw	r2,4(r8)
 800482c:	41000015 	stw	r4,0(r8)
 8004830:	d8c02015 	stw	r3,128(sp)
 8004834:	dc401f15 	stw	r17,124(sp)
 8004838:	008001c4 	movi	r2,7
 800483c:	14416916 	blt	r2,r17,8004de4 <___vfprintf_internal_r+0x16d4>
 8004840:	45800204 	addi	r22,r8,8
 8004844:	d9003617 	ldw	r4,216(sp)
 8004848:	d9403817 	ldw	r5,224(sp)
 800484c:	000d883a 	mov	r6,zero
 8004850:	000f883a 	mov	r7,zero
 8004854:	d8c03c15 	stw	r3,240(sp)
 8004858:	80101a80 	call	80101a8 <__eqdf2>
 800485c:	d8c03c17 	ldw	r3,240(sp)
 8004860:	1000bc26 	beq	r2,zero,8004b54 <___vfprintf_internal_r+0x1444>
 8004864:	d9403317 	ldw	r5,204(sp)
 8004868:	84000044 	addi	r16,r16,1
 800486c:	8c400044 	addi	r17,r17,1
 8004870:	28bfffc4 	addi	r2,r5,-1
 8004874:	1887883a 	add	r3,r3,r2
 8004878:	b0800115 	stw	r2,4(r22)
 800487c:	b4000015 	stw	r16,0(r22)
 8004880:	d8c02015 	stw	r3,128(sp)
 8004884:	dc401f15 	stw	r17,124(sp)
 8004888:	008001c4 	movi	r2,7
 800488c:	14414316 	blt	r2,r17,8004d9c <___vfprintf_internal_r+0x168c>
 8004890:	b5800204 	addi	r22,r22,8
 8004894:	d9003a17 	ldw	r4,232(sp)
 8004898:	df0022c4 	addi	fp,sp,139
 800489c:	8c400044 	addi	r17,r17,1
 80048a0:	20c7883a 	add	r3,r4,r3
 80048a4:	b7000015 	stw	fp,0(r22)
 80048a8:	b1000115 	stw	r4,4(r22)
 80048ac:	d8c02015 	stw	r3,128(sp)
 80048b0:	dc401f15 	stw	r17,124(sp)
 80048b4:	008001c4 	movi	r2,7
 80048b8:	14400e16 	blt	r2,r17,80048f4 <___vfprintf_internal_r+0x11e4>
 80048bc:	b2000204 	addi	r8,r22,8
 80048c0:	003e1806 	br	8004124 <__alt_data_end+0xfc004124>
 80048c4:	01020074 	movhi	r4,2049
 80048c8:	2110a784 	addi	r4,r4,17054
 80048cc:	d9002c15 	stw	r4,176(sp)
 80048d0:	d9002c17 	ldw	r4,176(sp)
 80048d4:	1c07883a 	add	r3,r3,r16
 80048d8:	44000115 	stw	r16,4(r8)
 80048dc:	41000015 	stw	r4,0(r8)
 80048e0:	10800044 	addi	r2,r2,1
 80048e4:	d8c02015 	stw	r3,128(sp)
 80048e8:	d8801f15 	stw	r2,124(sp)
 80048ec:	010001c4 	movi	r4,7
 80048f0:	20be0b0e 	bge	r4,r2,8004120 <__alt_data_end+0xfc004120>
 80048f4:	d9002d17 	ldw	r4,180(sp)
 80048f8:	d9801e04 	addi	r6,sp,120
 80048fc:	b80b883a 	mov	r5,r23
 8004900:	800b7900 	call	800b790 <__sprint_r>
 8004904:	103c861e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004908:	d8c02017 	ldw	r3,128(sp)
 800490c:	da000404 	addi	r8,sp,16
 8004910:	003e0406 	br	8004124 <__alt_data_end+0xfc004124>
 8004914:	d9002d17 	ldw	r4,180(sp)
 8004918:	d9801e04 	addi	r6,sp,120
 800491c:	b80b883a 	mov	r5,r23
 8004920:	800b7900 	call	800b790 <__sprint_r>
 8004924:	103e3b26 	beq	r2,zero,8004214 <__alt_data_end+0xfc004214>
 8004928:	003c7d06 	br	8003b20 <__alt_data_end+0xfc003b20>
 800492c:	d9002d17 	ldw	r4,180(sp)
 8004930:	d9801e04 	addi	r6,sp,120
 8004934:	b80b883a 	mov	r5,r23
 8004938:	800b7900 	call	800b790 <__sprint_r>
 800493c:	103c781e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004940:	d8c02017 	ldw	r3,128(sp)
 8004944:	da000404 	addi	r8,sp,16
 8004948:	003de906 	br	80040f0 <__alt_data_end+0xfc0040f0>
 800494c:	d9002d17 	ldw	r4,180(sp)
 8004950:	d9801e04 	addi	r6,sp,120
 8004954:	b80b883a 	mov	r5,r23
 8004958:	800b7900 	call	800b790 <__sprint_r>
 800495c:	103c701e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004960:	d8c02017 	ldw	r3,128(sp)
 8004964:	da000404 	addi	r8,sp,16
 8004968:	003d9b06 	br	8003fd8 <__alt_data_end+0xfc003fd8>
 800496c:	d9002d17 	ldw	r4,180(sp)
 8004970:	d9801e04 	addi	r6,sp,120
 8004974:	b80b883a 	mov	r5,r23
 8004978:	800b7900 	call	800b790 <__sprint_r>
 800497c:	103c681e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004980:	d8c02017 	ldw	r3,128(sp)
 8004984:	da000404 	addi	r8,sp,16
 8004988:	003da106 	br	8004010 <__alt_data_end+0xfc004010>
 800498c:	d9402a17 	ldw	r5,168(sp)
 8004990:	d8002785 	stb	zero,158(sp)
 8004994:	283f0616 	blt	r5,zero,80045b0 <__alt_data_end+0xfc0045b0>
 8004998:	00ffdfc4 	movi	r3,-129
 800499c:	9d84b03a 	or	r2,r19,r22
 80049a0:	90e4703a 	and	r18,r18,r3
 80049a4:	103c3b26 	beq	r2,zero,8003a94 <__alt_data_end+0xfc003a94>
 80049a8:	0039883a 	mov	fp,zero
 80049ac:	003e5806 	br	8004310 <__alt_data_end+0xfc004310>
 80049b0:	9080040c 	andi	r2,r18,16
 80049b4:	1001b326 	beq	r2,zero,8005084 <___vfprintf_internal_r+0x1974>
 80049b8:	d8c02e17 	ldw	r3,184(sp)
 80049bc:	d9002a17 	ldw	r4,168(sp)
 80049c0:	d8002785 	stb	zero,158(sp)
 80049c4:	18800104 	addi	r2,r3,4
 80049c8:	1cc00017 	ldw	r19,0(r3)
 80049cc:	002d883a 	mov	r22,zero
 80049d0:	2001b516 	blt	r4,zero,80050a8 <___vfprintf_internal_r+0x1998>
 80049d4:	00ffdfc4 	movi	r3,-129
 80049d8:	d8802e15 	stw	r2,184(sp)
 80049dc:	90e4703a 	and	r18,r18,r3
 80049e0:	983d0526 	beq	r19,zero,8003df8 <__alt_data_end+0xfc003df8>
 80049e4:	0039883a 	mov	fp,zero
 80049e8:	003d0806 	br	8003e0c <__alt_data_end+0xfc003e0c>
 80049ec:	dc402617 	ldw	r17,152(sp)
 80049f0:	0441d30e 	bge	zero,r17,8005140 <___vfprintf_internal_r+0x1a30>
 80049f4:	dc403217 	ldw	r17,200(sp)
 80049f8:	d8803317 	ldw	r2,204(sp)
 80049fc:	1440010e 	bge	r2,r17,8004a04 <___vfprintf_internal_r+0x12f4>
 8004a00:	1023883a 	mov	r17,r2
 8004a04:	04400a0e 	bge	zero,r17,8004a30 <___vfprintf_internal_r+0x1320>
 8004a08:	d8801f17 	ldw	r2,124(sp)
 8004a0c:	1c47883a 	add	r3,r3,r17
 8004a10:	44000015 	stw	r16,0(r8)
 8004a14:	10800044 	addi	r2,r2,1
 8004a18:	44400115 	stw	r17,4(r8)
 8004a1c:	d8c02015 	stw	r3,128(sp)
 8004a20:	d8801f15 	stw	r2,124(sp)
 8004a24:	010001c4 	movi	r4,7
 8004a28:	20826516 	blt	r4,r2,80053c0 <___vfprintf_internal_r+0x1cb0>
 8004a2c:	42000204 	addi	r8,r8,8
 8004a30:	88026116 	blt	r17,zero,80053b8 <___vfprintf_internal_r+0x1ca8>
 8004a34:	d9003217 	ldw	r4,200(sp)
 8004a38:	2463c83a 	sub	r17,r4,r17
 8004a3c:	04407b0e 	bge	zero,r17,8004c2c <___vfprintf_internal_r+0x151c>
 8004a40:	05800404 	movi	r22,16
 8004a44:	d8801f17 	ldw	r2,124(sp)
 8004a48:	b4419d0e 	bge	r22,r17,80050c0 <___vfprintf_internal_r+0x19b0>
 8004a4c:	01020074 	movhi	r4,2049
 8004a50:	2110a784 	addi	r4,r4,17054
 8004a54:	d9002c15 	stw	r4,176(sp)
 8004a58:	070001c4 	movi	fp,7
 8004a5c:	dcc02d17 	ldw	r19,180(sp)
 8004a60:	00000306 	br	8004a70 <___vfprintf_internal_r+0x1360>
 8004a64:	42000204 	addi	r8,r8,8
 8004a68:	8c7ffc04 	addi	r17,r17,-16
 8004a6c:	b441970e 	bge	r22,r17,80050cc <___vfprintf_internal_r+0x19bc>
 8004a70:	18c00404 	addi	r3,r3,16
 8004a74:	10800044 	addi	r2,r2,1
 8004a78:	45000015 	stw	r20,0(r8)
 8004a7c:	45800115 	stw	r22,4(r8)
 8004a80:	d8c02015 	stw	r3,128(sp)
 8004a84:	d8801f15 	stw	r2,124(sp)
 8004a88:	e0bff60e 	bge	fp,r2,8004a64 <__alt_data_end+0xfc004a64>
 8004a8c:	d9801e04 	addi	r6,sp,120
 8004a90:	b80b883a 	mov	r5,r23
 8004a94:	9809883a 	mov	r4,r19
 8004a98:	800b7900 	call	800b790 <__sprint_r>
 8004a9c:	103c201e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004aa0:	d8c02017 	ldw	r3,128(sp)
 8004aa4:	d8801f17 	ldw	r2,124(sp)
 8004aa8:	da000404 	addi	r8,sp,16
 8004aac:	003fee06 	br	8004a68 <__alt_data_end+0xfc004a68>
 8004ab0:	d9002d17 	ldw	r4,180(sp)
 8004ab4:	d9801e04 	addi	r6,sp,120
 8004ab8:	b80b883a 	mov	r5,r23
 8004abc:	800b7900 	call	800b790 <__sprint_r>
 8004ac0:	103c171e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004ac4:	d8c02017 	ldw	r3,128(sp)
 8004ac8:	df002787 	ldb	fp,158(sp)
 8004acc:	da000404 	addi	r8,sp,16
 8004ad0:	003d3406 	br	8003fa4 <__alt_data_end+0xfc003fa4>
 8004ad4:	9080040c 	andi	r2,r18,16
 8004ad8:	10016126 	beq	r2,zero,8005060 <___vfprintf_internal_r+0x1950>
 8004adc:	d9402e17 	ldw	r5,184(sp)
 8004ae0:	2cc00017 	ldw	r19,0(r5)
 8004ae4:	29400104 	addi	r5,r5,4
 8004ae8:	d9402e15 	stw	r5,184(sp)
 8004aec:	982dd7fa 	srai	r22,r19,31
 8004af0:	b005883a 	mov	r2,r22
 8004af4:	003c5a06 	br	8003c60 <__alt_data_end+0xfc003c60>
 8004af8:	9080040c 	andi	r2,r18,16
 8004afc:	10003526 	beq	r2,zero,8004bd4 <___vfprintf_internal_r+0x14c4>
 8004b00:	d8c02e17 	ldw	r3,184(sp)
 8004b04:	d9002a17 	ldw	r4,168(sp)
 8004b08:	d8002785 	stb	zero,158(sp)
 8004b0c:	18800104 	addi	r2,r3,4
 8004b10:	1cc00017 	ldw	r19,0(r3)
 8004b14:	002d883a 	mov	r22,zero
 8004b18:	20003716 	blt	r4,zero,8004bf8 <___vfprintf_internal_r+0x14e8>
 8004b1c:	00ffdfc4 	movi	r3,-129
 8004b20:	d8802e15 	stw	r2,184(sp)
 8004b24:	90e4703a 	and	r18,r18,r3
 8004b28:	0039883a 	mov	fp,zero
 8004b2c:	983dd426 	beq	r19,zero,8004280 <__alt_data_end+0xfc004280>
 8004b30:	00800244 	movi	r2,9
 8004b34:	14fc5336 	bltu	r2,r19,8003c84 <__alt_data_end+0xfc003c84>
 8004b38:	d8c02817 	ldw	r3,160(sp)
 8004b3c:	dc001dc4 	addi	r16,sp,119
 8004b40:	9cc00c04 	addi	r19,r19,48
 8004b44:	1c07c83a 	sub	r3,r3,r16
 8004b48:	dcc01dc5 	stb	r19,119(sp)
 8004b4c:	d8c02b15 	stw	r3,172(sp)
 8004b50:	003cc606 	br	8003e6c <__alt_data_end+0xfc003e6c>
 8004b54:	d8803317 	ldw	r2,204(sp)
 8004b58:	143fffc4 	addi	r16,r2,-1
 8004b5c:	043f4d0e 	bge	zero,r16,8004894 <__alt_data_end+0xfc004894>
 8004b60:	07000404 	movi	fp,16
 8004b64:	e400810e 	bge	fp,r16,8004d6c <___vfprintf_internal_r+0x165c>
 8004b68:	01420074 	movhi	r5,2049
 8004b6c:	2950a784 	addi	r5,r5,17054
 8004b70:	d9402c15 	stw	r5,176(sp)
 8004b74:	01c001c4 	movi	r7,7
 8004b78:	dcc02d17 	ldw	r19,180(sp)
 8004b7c:	00000306 	br	8004b8c <___vfprintf_internal_r+0x147c>
 8004b80:	b5800204 	addi	r22,r22,8
 8004b84:	843ffc04 	addi	r16,r16,-16
 8004b88:	e4007b0e 	bge	fp,r16,8004d78 <___vfprintf_internal_r+0x1668>
 8004b8c:	18c00404 	addi	r3,r3,16
 8004b90:	8c400044 	addi	r17,r17,1
 8004b94:	b5000015 	stw	r20,0(r22)
 8004b98:	b7000115 	stw	fp,4(r22)
 8004b9c:	d8c02015 	stw	r3,128(sp)
 8004ba0:	dc401f15 	stw	r17,124(sp)
 8004ba4:	3c7ff60e 	bge	r7,r17,8004b80 <__alt_data_end+0xfc004b80>
 8004ba8:	d9801e04 	addi	r6,sp,120
 8004bac:	b80b883a 	mov	r5,r23
 8004bb0:	9809883a 	mov	r4,r19
 8004bb4:	d9c03c15 	stw	r7,240(sp)
 8004bb8:	800b7900 	call	800b790 <__sprint_r>
 8004bbc:	d9c03c17 	ldw	r7,240(sp)
 8004bc0:	103bd71e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004bc4:	d8c02017 	ldw	r3,128(sp)
 8004bc8:	dc401f17 	ldw	r17,124(sp)
 8004bcc:	dd800404 	addi	r22,sp,16
 8004bd0:	003fec06 	br	8004b84 <__alt_data_end+0xfc004b84>
 8004bd4:	9080100c 	andi	r2,r18,64
 8004bd8:	d8002785 	stb	zero,158(sp)
 8004bdc:	10010e26 	beq	r2,zero,8005018 <___vfprintf_internal_r+0x1908>
 8004be0:	d9402e17 	ldw	r5,184(sp)
 8004be4:	d8c02a17 	ldw	r3,168(sp)
 8004be8:	002d883a 	mov	r22,zero
 8004bec:	28800104 	addi	r2,r5,4
 8004bf0:	2cc0000b 	ldhu	r19,0(r5)
 8004bf4:	183fc90e 	bge	r3,zero,8004b1c <__alt_data_end+0xfc004b1c>
 8004bf8:	d8802e15 	stw	r2,184(sp)
 8004bfc:	0039883a 	mov	fp,zero
 8004c00:	9d84b03a 	or	r2,r19,r22
 8004c04:	103c1e1e 	bne	r2,zero,8003c80 <__alt_data_end+0xfc003c80>
 8004c08:	00800044 	movi	r2,1
 8004c0c:	003e6c06 	br	80045c0 <__alt_data_end+0xfc0045c0>
 8004c10:	d9002d17 	ldw	r4,180(sp)
 8004c14:	d9801e04 	addi	r6,sp,120
 8004c18:	b80b883a 	mov	r5,r23
 8004c1c:	800b7900 	call	800b790 <__sprint_r>
 8004c20:	103bbf1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004c24:	d8c02017 	ldw	r3,128(sp)
 8004c28:	da000404 	addi	r8,sp,16
 8004c2c:	d9003217 	ldw	r4,200(sp)
 8004c30:	d8802617 	ldw	r2,152(sp)
 8004c34:	d9403317 	ldw	r5,204(sp)
 8004c38:	8123883a 	add	r17,r16,r4
 8004c3c:	11400216 	blt	r2,r5,8004c48 <___vfprintf_internal_r+0x1538>
 8004c40:	9100004c 	andi	r4,r18,1
 8004c44:	20000d26 	beq	r4,zero,8004c7c <___vfprintf_internal_r+0x156c>
 8004c48:	d9003717 	ldw	r4,220(sp)
 8004c4c:	d9403417 	ldw	r5,208(sp)
 8004c50:	1907883a 	add	r3,r3,r4
 8004c54:	d9001f17 	ldw	r4,124(sp)
 8004c58:	41400015 	stw	r5,0(r8)
 8004c5c:	d9403717 	ldw	r5,220(sp)
 8004c60:	21000044 	addi	r4,r4,1
 8004c64:	d8c02015 	stw	r3,128(sp)
 8004c68:	41400115 	stw	r5,4(r8)
 8004c6c:	d9001f15 	stw	r4,124(sp)
 8004c70:	014001c4 	movi	r5,7
 8004c74:	2901e816 	blt	r5,r4,8005418 <___vfprintf_internal_r+0x1d08>
 8004c78:	42000204 	addi	r8,r8,8
 8004c7c:	d9003317 	ldw	r4,204(sp)
 8004c80:	8121883a 	add	r16,r16,r4
 8004c84:	2085c83a 	sub	r2,r4,r2
 8004c88:	8461c83a 	sub	r16,r16,r17
 8004c8c:	1400010e 	bge	r2,r16,8004c94 <___vfprintf_internal_r+0x1584>
 8004c90:	1021883a 	mov	r16,r2
 8004c94:	04000a0e 	bge	zero,r16,8004cc0 <___vfprintf_internal_r+0x15b0>
 8004c98:	d9001f17 	ldw	r4,124(sp)
 8004c9c:	1c07883a 	add	r3,r3,r16
 8004ca0:	44400015 	stw	r17,0(r8)
 8004ca4:	21000044 	addi	r4,r4,1
 8004ca8:	44000115 	stw	r16,4(r8)
 8004cac:	d8c02015 	stw	r3,128(sp)
 8004cb0:	d9001f15 	stw	r4,124(sp)
 8004cb4:	014001c4 	movi	r5,7
 8004cb8:	2901fb16 	blt	r5,r4,80054a8 <___vfprintf_internal_r+0x1d98>
 8004cbc:	42000204 	addi	r8,r8,8
 8004cc0:	8001f716 	blt	r16,zero,80054a0 <___vfprintf_internal_r+0x1d90>
 8004cc4:	1421c83a 	sub	r16,r2,r16
 8004cc8:	043d160e 	bge	zero,r16,8004124 <__alt_data_end+0xfc004124>
 8004ccc:	04400404 	movi	r17,16
 8004cd0:	d8801f17 	ldw	r2,124(sp)
 8004cd4:	8c3efb0e 	bge	r17,r16,80048c4 <__alt_data_end+0xfc0048c4>
 8004cd8:	01420074 	movhi	r5,2049
 8004cdc:	2950a784 	addi	r5,r5,17054
 8004ce0:	d9402c15 	stw	r5,176(sp)
 8004ce4:	058001c4 	movi	r22,7
 8004ce8:	dcc02d17 	ldw	r19,180(sp)
 8004cec:	00000306 	br	8004cfc <___vfprintf_internal_r+0x15ec>
 8004cf0:	42000204 	addi	r8,r8,8
 8004cf4:	843ffc04 	addi	r16,r16,-16
 8004cf8:	8c3ef50e 	bge	r17,r16,80048d0 <__alt_data_end+0xfc0048d0>
 8004cfc:	18c00404 	addi	r3,r3,16
 8004d00:	10800044 	addi	r2,r2,1
 8004d04:	45000015 	stw	r20,0(r8)
 8004d08:	44400115 	stw	r17,4(r8)
 8004d0c:	d8c02015 	stw	r3,128(sp)
 8004d10:	d8801f15 	stw	r2,124(sp)
 8004d14:	b0bff60e 	bge	r22,r2,8004cf0 <__alt_data_end+0xfc004cf0>
 8004d18:	d9801e04 	addi	r6,sp,120
 8004d1c:	b80b883a 	mov	r5,r23
 8004d20:	9809883a 	mov	r4,r19
 8004d24:	800b7900 	call	800b790 <__sprint_r>
 8004d28:	103b7d1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004d2c:	d8c02017 	ldw	r3,128(sp)
 8004d30:	d8801f17 	ldw	r2,124(sp)
 8004d34:	da000404 	addi	r8,sp,16
 8004d38:	003fee06 	br	8004cf4 <__alt_data_end+0xfc004cf4>
 8004d3c:	9088703a 	and	r4,r18,r2
 8004d40:	203eab1e 	bne	r4,zero,80047f0 <__alt_data_end+0xfc0047f0>
 8004d44:	dc401f17 	ldw	r17,124(sp)
 8004d48:	40800115 	stw	r2,4(r8)
 8004d4c:	44000015 	stw	r16,0(r8)
 8004d50:	8c400044 	addi	r17,r17,1
 8004d54:	d8c02015 	stw	r3,128(sp)
 8004d58:	dc401f15 	stw	r17,124(sp)
 8004d5c:	008001c4 	movi	r2,7
 8004d60:	14400e16 	blt	r2,r17,8004d9c <___vfprintf_internal_r+0x168c>
 8004d64:	45800204 	addi	r22,r8,8
 8004d68:	003eca06 	br	8004894 <__alt_data_end+0xfc004894>
 8004d6c:	01020074 	movhi	r4,2049
 8004d70:	2110a784 	addi	r4,r4,17054
 8004d74:	d9002c15 	stw	r4,176(sp)
 8004d78:	d8802c17 	ldw	r2,176(sp)
 8004d7c:	1c07883a 	add	r3,r3,r16
 8004d80:	8c400044 	addi	r17,r17,1
 8004d84:	b0800015 	stw	r2,0(r22)
 8004d88:	b4000115 	stw	r16,4(r22)
 8004d8c:	d8c02015 	stw	r3,128(sp)
 8004d90:	dc401f15 	stw	r17,124(sp)
 8004d94:	008001c4 	movi	r2,7
 8004d98:	147ebd0e 	bge	r2,r17,8004890 <__alt_data_end+0xfc004890>
 8004d9c:	d9002d17 	ldw	r4,180(sp)
 8004da0:	d9801e04 	addi	r6,sp,120
 8004da4:	b80b883a 	mov	r5,r23
 8004da8:	800b7900 	call	800b790 <__sprint_r>
 8004dac:	103b5c1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004db0:	d8c02017 	ldw	r3,128(sp)
 8004db4:	dc401f17 	ldw	r17,124(sp)
 8004db8:	dd800404 	addi	r22,sp,16
 8004dbc:	003eb506 	br	8004894 <__alt_data_end+0xfc004894>
 8004dc0:	d9002d17 	ldw	r4,180(sp)
 8004dc4:	d9801e04 	addi	r6,sp,120
 8004dc8:	b80b883a 	mov	r5,r23
 8004dcc:	800b7900 	call	800b790 <__sprint_r>
 8004dd0:	103b531e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004dd4:	d8c02017 	ldw	r3,128(sp)
 8004dd8:	dc401f17 	ldw	r17,124(sp)
 8004ddc:	da000404 	addi	r8,sp,16
 8004de0:	003e8d06 	br	8004818 <__alt_data_end+0xfc004818>
 8004de4:	d9002d17 	ldw	r4,180(sp)
 8004de8:	d9801e04 	addi	r6,sp,120
 8004dec:	b80b883a 	mov	r5,r23
 8004df0:	800b7900 	call	800b790 <__sprint_r>
 8004df4:	103b4a1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004df8:	d8c02017 	ldw	r3,128(sp)
 8004dfc:	dc401f17 	ldw	r17,124(sp)
 8004e00:	dd800404 	addi	r22,sp,16
 8004e04:	003e8f06 	br	8004844 <__alt_data_end+0xfc004844>
 8004e08:	0027883a 	mov	r19,zero
 8004e0c:	003f4a06 	br	8004b38 <__alt_data_end+0xfc004b38>
 8004e10:	d9002d17 	ldw	r4,180(sp)
 8004e14:	d9801e04 	addi	r6,sp,120
 8004e18:	b80b883a 	mov	r5,r23
 8004e1c:	800b7900 	call	800b790 <__sprint_r>
 8004e20:	103b3f1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8004e24:	d8c02017 	ldw	r3,128(sp)
 8004e28:	da000404 	addi	r8,sp,16
 8004e2c:	003c7b06 	br	800401c <__alt_data_end+0xfc00401c>
 8004e30:	d9402a17 	ldw	r5,168(sp)
 8004e34:	04e7c83a 	sub	r19,zero,r19
 8004e38:	07000b44 	movi	fp,45
 8004e3c:	9804c03a 	cmpne	r2,r19,zero
 8004e40:	05adc83a 	sub	r22,zero,r22
 8004e44:	df002785 	stb	fp,158(sp)
 8004e48:	b0adc83a 	sub	r22,r22,r2
 8004e4c:	28017b16 	blt	r5,zero,800543c <___vfprintf_internal_r+0x1d2c>
 8004e50:	00bfdfc4 	movi	r2,-129
 8004e54:	90a4703a 	and	r18,r18,r2
 8004e58:	003b8906 	br	8003c80 <__alt_data_end+0xfc003c80>
 8004e5c:	d9003617 	ldw	r4,216(sp)
 8004e60:	d9403817 	ldw	r5,224(sp)
 8004e64:	da003d15 	stw	r8,244(sp)
 8004e68:	8009e440 	call	8009e44 <__fpclassifyd>
 8004e6c:	da003d17 	ldw	r8,244(sp)
 8004e70:	1000f026 	beq	r2,zero,8005234 <___vfprintf_internal_r+0x1b24>
 8004e74:	d9002a17 	ldw	r4,168(sp)
 8004e78:	05bff7c4 	movi	r22,-33
 8004e7c:	00bfffc4 	movi	r2,-1
 8004e80:	8dac703a 	and	r22,r17,r22
 8004e84:	20820026 	beq	r4,r2,8005688 <___vfprintf_internal_r+0x1f78>
 8004e88:	008011c4 	movi	r2,71
 8004e8c:	b081f726 	beq	r22,r2,800566c <___vfprintf_internal_r+0x1f5c>
 8004e90:	d9003817 	ldw	r4,224(sp)
 8004e94:	90c04014 	ori	r3,r18,256
 8004e98:	d8c02c15 	stw	r3,176(sp)
 8004e9c:	20021516 	blt	r4,zero,80056f4 <___vfprintf_internal_r+0x1fe4>
 8004ea0:	dcc03817 	ldw	r19,224(sp)
 8004ea4:	d8002905 	stb	zero,164(sp)
 8004ea8:	00801984 	movi	r2,102
 8004eac:	8881f926 	beq	r17,r2,8005694 <___vfprintf_internal_r+0x1f84>
 8004eb0:	00801184 	movi	r2,70
 8004eb4:	88821c26 	beq	r17,r2,8005728 <___vfprintf_internal_r+0x2018>
 8004eb8:	00801144 	movi	r2,69
 8004ebc:	b081ef26 	beq	r22,r2,800567c <___vfprintf_internal_r+0x1f6c>
 8004ec0:	d8c02a17 	ldw	r3,168(sp)
 8004ec4:	d8802104 	addi	r2,sp,132
 8004ec8:	d8800315 	stw	r2,12(sp)
 8004ecc:	d9403617 	ldw	r5,216(sp)
 8004ed0:	d8802504 	addi	r2,sp,148
 8004ed4:	d9002d17 	ldw	r4,180(sp)
 8004ed8:	d8800215 	stw	r2,8(sp)
 8004edc:	d8802604 	addi	r2,sp,152
 8004ee0:	d8c00015 	stw	r3,0(sp)
 8004ee4:	d8800115 	stw	r2,4(sp)
 8004ee8:	01c00084 	movi	r7,2
 8004eec:	980d883a 	mov	r6,r19
 8004ef0:	d8c03c15 	stw	r3,240(sp)
 8004ef4:	da003d15 	stw	r8,244(sp)
 8004ef8:	8005e400 	call	8005e40 <_dtoa_r>
 8004efc:	1021883a 	mov	r16,r2
 8004f00:	008019c4 	movi	r2,103
 8004f04:	d8c03c17 	ldw	r3,240(sp)
 8004f08:	da003d17 	ldw	r8,244(sp)
 8004f0c:	88817126 	beq	r17,r2,80054d4 <___vfprintf_internal_r+0x1dc4>
 8004f10:	008011c4 	movi	r2,71
 8004f14:	88829126 	beq	r17,r2,800595c <___vfprintf_internal_r+0x224c>
 8004f18:	80f9883a 	add	fp,r16,r3
 8004f1c:	d9003617 	ldw	r4,216(sp)
 8004f20:	000d883a 	mov	r6,zero
 8004f24:	000f883a 	mov	r7,zero
 8004f28:	980b883a 	mov	r5,r19
 8004f2c:	da003d15 	stw	r8,244(sp)
 8004f30:	80101a80 	call	80101a8 <__eqdf2>
 8004f34:	da003d17 	ldw	r8,244(sp)
 8004f38:	10018d26 	beq	r2,zero,8005570 <___vfprintf_internal_r+0x1e60>
 8004f3c:	d8802117 	ldw	r2,132(sp)
 8004f40:	1700062e 	bgeu	r2,fp,8004f5c <___vfprintf_internal_r+0x184c>
 8004f44:	01000c04 	movi	r4,48
 8004f48:	10c00044 	addi	r3,r2,1
 8004f4c:	d8c02115 	stw	r3,132(sp)
 8004f50:	11000005 	stb	r4,0(r2)
 8004f54:	d8802117 	ldw	r2,132(sp)
 8004f58:	173ffb36 	bltu	r2,fp,8004f48 <__alt_data_end+0xfc004f48>
 8004f5c:	1405c83a 	sub	r2,r2,r16
 8004f60:	d8803315 	stw	r2,204(sp)
 8004f64:	008011c4 	movi	r2,71
 8004f68:	b0817626 	beq	r22,r2,8005544 <___vfprintf_internal_r+0x1e34>
 8004f6c:	00801944 	movi	r2,101
 8004f70:	1442800e 	bge	r2,r17,8005974 <___vfprintf_internal_r+0x2264>
 8004f74:	d8c02617 	ldw	r3,152(sp)
 8004f78:	00801984 	movi	r2,102
 8004f7c:	d8c03215 	stw	r3,200(sp)
 8004f80:	8881fe26 	beq	r17,r2,800577c <___vfprintf_internal_r+0x206c>
 8004f84:	d8c03217 	ldw	r3,200(sp)
 8004f88:	d9003317 	ldw	r4,204(sp)
 8004f8c:	1901dd16 	blt	r3,r4,8005704 <___vfprintf_internal_r+0x1ff4>
 8004f90:	9480004c 	andi	r18,r18,1
 8004f94:	90022b1e 	bne	r18,zero,8005844 <___vfprintf_internal_r+0x2134>
 8004f98:	1805883a 	mov	r2,r3
 8004f9c:	18028316 	blt	r3,zero,80059ac <___vfprintf_internal_r+0x229c>
 8004fa0:	d8c03217 	ldw	r3,200(sp)
 8004fa4:	044019c4 	movi	r17,103
 8004fa8:	d8c02b15 	stw	r3,172(sp)
 8004fac:	df002907 	ldb	fp,164(sp)
 8004fb0:	e001531e 	bne	fp,zero,8005500 <___vfprintf_internal_r+0x1df0>
 8004fb4:	df002783 	ldbu	fp,158(sp)
 8004fb8:	d8802915 	stw	r2,164(sp)
 8004fbc:	dc802c17 	ldw	r18,176(sp)
 8004fc0:	d8002a15 	stw	zero,168(sp)
 8004fc4:	003baf06 	br	8003e84 <__alt_data_end+0xfc003e84>
 8004fc8:	d8c02e17 	ldw	r3,184(sp)
 8004fcc:	d9002e17 	ldw	r4,184(sp)
 8004fd0:	d9402e17 	ldw	r5,184(sp)
 8004fd4:	18c00017 	ldw	r3,0(r3)
 8004fd8:	21000117 	ldw	r4,4(r4)
 8004fdc:	29400204 	addi	r5,r5,8
 8004fe0:	d8c03615 	stw	r3,216(sp)
 8004fe4:	d9003815 	stw	r4,224(sp)
 8004fe8:	d9402e15 	stw	r5,184(sp)
 8004fec:	003b5006 	br	8003d30 <__alt_data_end+0xfc003d30>
 8004ff0:	ac400007 	ldb	r17,0(r21)
 8004ff4:	003a2806 	br	8003898 <__alt_data_end+0xfc003898>
 8004ff8:	9080100c 	andi	r2,r18,64
 8004ffc:	1000a826 	beq	r2,zero,80052a0 <___vfprintf_internal_r+0x1b90>
 8005000:	d8c02e17 	ldw	r3,184(sp)
 8005004:	002d883a 	mov	r22,zero
 8005008:	1cc0000b 	ldhu	r19,0(r3)
 800500c:	18c00104 	addi	r3,r3,4
 8005010:	d8c02e15 	stw	r3,184(sp)
 8005014:	003caf06 	br	80042d4 <__alt_data_end+0xfc0042d4>
 8005018:	d9002e17 	ldw	r4,184(sp)
 800501c:	d9402a17 	ldw	r5,168(sp)
 8005020:	002d883a 	mov	r22,zero
 8005024:	20800104 	addi	r2,r4,4
 8005028:	24c00017 	ldw	r19,0(r4)
 800502c:	283ebb0e 	bge	r5,zero,8004b1c <__alt_data_end+0xfc004b1c>
 8005030:	003ef106 	br	8004bf8 <__alt_data_end+0xfc004bf8>
 8005034:	9080040c 	andi	r2,r18,16
 8005038:	1000921e 	bne	r2,zero,8005284 <___vfprintf_internal_r+0x1b74>
 800503c:	9480100c 	andi	r18,r18,64
 8005040:	90013926 	beq	r18,zero,8005528 <___vfprintf_internal_r+0x1e18>
 8005044:	d9402e17 	ldw	r5,184(sp)
 8005048:	d8c02f17 	ldw	r3,188(sp)
 800504c:	28800017 	ldw	r2,0(r5)
 8005050:	29400104 	addi	r5,r5,4
 8005054:	d9402e15 	stw	r5,184(sp)
 8005058:	10c0000d 	sth	r3,0(r2)
 800505c:	0039e406 	br	80037f0 <__alt_data_end+0xfc0037f0>
 8005060:	9080100c 	andi	r2,r18,64
 8005064:	10008026 	beq	r2,zero,8005268 <___vfprintf_internal_r+0x1b58>
 8005068:	d8802e17 	ldw	r2,184(sp)
 800506c:	14c0000f 	ldh	r19,0(r2)
 8005070:	10800104 	addi	r2,r2,4
 8005074:	d8802e15 	stw	r2,184(sp)
 8005078:	982dd7fa 	srai	r22,r19,31
 800507c:	b005883a 	mov	r2,r22
 8005080:	003af706 	br	8003c60 <__alt_data_end+0xfc003c60>
 8005084:	9080100c 	andi	r2,r18,64
 8005088:	d8002785 	stb	zero,158(sp)
 800508c:	10008a1e 	bne	r2,zero,80052b8 <___vfprintf_internal_r+0x1ba8>
 8005090:	d9002e17 	ldw	r4,184(sp)
 8005094:	d9402a17 	ldw	r5,168(sp)
 8005098:	002d883a 	mov	r22,zero
 800509c:	20800104 	addi	r2,r4,4
 80050a0:	24c00017 	ldw	r19,0(r4)
 80050a4:	283e4b0e 	bge	r5,zero,80049d4 <__alt_data_end+0xfc0049d4>
 80050a8:	9d86b03a 	or	r3,r19,r22
 80050ac:	d8802e15 	stw	r2,184(sp)
 80050b0:	183e4c1e 	bne	r3,zero,80049e4 <__alt_data_end+0xfc0049e4>
 80050b4:	0039883a 	mov	fp,zero
 80050b8:	0005883a 	mov	r2,zero
 80050bc:	003d4006 	br	80045c0 <__alt_data_end+0xfc0045c0>
 80050c0:	01420074 	movhi	r5,2049
 80050c4:	2950a784 	addi	r5,r5,17054
 80050c8:	d9402c15 	stw	r5,176(sp)
 80050cc:	d9402c17 	ldw	r5,176(sp)
 80050d0:	1c47883a 	add	r3,r3,r17
 80050d4:	10800044 	addi	r2,r2,1
 80050d8:	41400015 	stw	r5,0(r8)
 80050dc:	44400115 	stw	r17,4(r8)
 80050e0:	d8c02015 	stw	r3,128(sp)
 80050e4:	d8801f15 	stw	r2,124(sp)
 80050e8:	010001c4 	movi	r4,7
 80050ec:	20bec816 	blt	r4,r2,8004c10 <__alt_data_end+0xfc004c10>
 80050f0:	42000204 	addi	r8,r8,8
 80050f4:	003ecd06 	br	8004c2c <__alt_data_end+0xfc004c2c>
 80050f8:	d9002a17 	ldw	r4,168(sp)
 80050fc:	d8002785 	stb	zero,158(sp)
 8005100:	203d2d16 	blt	r4,zero,80045b8 <__alt_data_end+0xfc0045b8>
 8005104:	00bfdfc4 	movi	r2,-129
 8005108:	90a4703a 	and	r18,r18,r2
 800510c:	003a6106 	br	8003a94 <__alt_data_end+0xfc003a94>
 8005110:	01020074 	movhi	r4,2049
 8005114:	2110a784 	addi	r4,r4,17054
 8005118:	d9002c15 	stw	r4,176(sp)
 800511c:	003bea06 	br	80040c8 <__alt_data_end+0xfc0040c8>
 8005120:	d9002d17 	ldw	r4,180(sp)
 8005124:	d9801e04 	addi	r6,sp,120
 8005128:	b80b883a 	mov	r5,r23
 800512c:	800b7900 	call	800b790 <__sprint_r>
 8005130:	103a7b1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8005134:	d8c02017 	ldw	r3,128(sp)
 8005138:	da000404 	addi	r8,sp,16
 800513c:	003d4106 	br	8004644 <__alt_data_end+0xfc004644>
 8005140:	d8801f17 	ldw	r2,124(sp)
 8005144:	01420074 	movhi	r5,2049
 8005148:	01000044 	movi	r4,1
 800514c:	18c00044 	addi	r3,r3,1
 8005150:	10800044 	addi	r2,r2,1
 8005154:	29509f04 	addi	r5,r5,17020
 8005158:	41000115 	stw	r4,4(r8)
 800515c:	41400015 	stw	r5,0(r8)
 8005160:	d8c02015 	stw	r3,128(sp)
 8005164:	d8801f15 	stw	r2,124(sp)
 8005168:	010001c4 	movi	r4,7
 800516c:	20805c16 	blt	r4,r2,80052e0 <___vfprintf_internal_r+0x1bd0>
 8005170:	42000204 	addi	r8,r8,8
 8005174:	8800041e 	bne	r17,zero,8005188 <___vfprintf_internal_r+0x1a78>
 8005178:	d8803317 	ldw	r2,204(sp)
 800517c:	1000021e 	bne	r2,zero,8005188 <___vfprintf_internal_r+0x1a78>
 8005180:	9080004c 	andi	r2,r18,1
 8005184:	103be726 	beq	r2,zero,8004124 <__alt_data_end+0xfc004124>
 8005188:	d9003717 	ldw	r4,220(sp)
 800518c:	d8801f17 	ldw	r2,124(sp)
 8005190:	d9403417 	ldw	r5,208(sp)
 8005194:	20c7883a 	add	r3,r4,r3
 8005198:	10800044 	addi	r2,r2,1
 800519c:	41000115 	stw	r4,4(r8)
 80051a0:	41400015 	stw	r5,0(r8)
 80051a4:	d8c02015 	stw	r3,128(sp)
 80051a8:	d8801f15 	stw	r2,124(sp)
 80051ac:	010001c4 	movi	r4,7
 80051b0:	20812116 	blt	r4,r2,8005638 <___vfprintf_internal_r+0x1f28>
 80051b4:	42000204 	addi	r8,r8,8
 80051b8:	0463c83a 	sub	r17,zero,r17
 80051bc:	0440730e 	bge	zero,r17,800538c <___vfprintf_internal_r+0x1c7c>
 80051c0:	05800404 	movi	r22,16
 80051c4:	b440860e 	bge	r22,r17,80053e0 <___vfprintf_internal_r+0x1cd0>
 80051c8:	01420074 	movhi	r5,2049
 80051cc:	2950a784 	addi	r5,r5,17054
 80051d0:	d9402c15 	stw	r5,176(sp)
 80051d4:	070001c4 	movi	fp,7
 80051d8:	dcc02d17 	ldw	r19,180(sp)
 80051dc:	00000306 	br	80051ec <___vfprintf_internal_r+0x1adc>
 80051e0:	42000204 	addi	r8,r8,8
 80051e4:	8c7ffc04 	addi	r17,r17,-16
 80051e8:	b440800e 	bge	r22,r17,80053ec <___vfprintf_internal_r+0x1cdc>
 80051ec:	18c00404 	addi	r3,r3,16
 80051f0:	10800044 	addi	r2,r2,1
 80051f4:	45000015 	stw	r20,0(r8)
 80051f8:	45800115 	stw	r22,4(r8)
 80051fc:	d8c02015 	stw	r3,128(sp)
 8005200:	d8801f15 	stw	r2,124(sp)
 8005204:	e0bff60e 	bge	fp,r2,80051e0 <__alt_data_end+0xfc0051e0>
 8005208:	d9801e04 	addi	r6,sp,120
 800520c:	b80b883a 	mov	r5,r23
 8005210:	9809883a 	mov	r4,r19
 8005214:	800b7900 	call	800b790 <__sprint_r>
 8005218:	103a411e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 800521c:	d8c02017 	ldw	r3,128(sp)
 8005220:	d8801f17 	ldw	r2,124(sp)
 8005224:	da000404 	addi	r8,sp,16
 8005228:	003fee06 	br	80051e4 <__alt_data_end+0xfc0051e4>
 800522c:	00bfffc4 	movi	r2,-1
 8005230:	003a3f06 	br	8003b30 <__alt_data_end+0xfc003b30>
 8005234:	008011c4 	movi	r2,71
 8005238:	1440b816 	blt	r2,r17,800551c <___vfprintf_internal_r+0x1e0c>
 800523c:	04020074 	movhi	r16,2049
 8005240:	84109104 	addi	r16,r16,16964
 8005244:	00c000c4 	movi	r3,3
 8005248:	00bfdfc4 	movi	r2,-129
 800524c:	d8c02915 	stw	r3,164(sp)
 8005250:	90a4703a 	and	r18,r18,r2
 8005254:	df002783 	ldbu	fp,158(sp)
 8005258:	d8c02b15 	stw	r3,172(sp)
 800525c:	d8002a15 	stw	zero,168(sp)
 8005260:	d8003215 	stw	zero,200(sp)
 8005264:	003b0706 	br	8003e84 <__alt_data_end+0xfc003e84>
 8005268:	d8c02e17 	ldw	r3,184(sp)
 800526c:	1cc00017 	ldw	r19,0(r3)
 8005270:	18c00104 	addi	r3,r3,4
 8005274:	d8c02e15 	stw	r3,184(sp)
 8005278:	982dd7fa 	srai	r22,r19,31
 800527c:	b005883a 	mov	r2,r22
 8005280:	003a7706 	br	8003c60 <__alt_data_end+0xfc003c60>
 8005284:	d8c02e17 	ldw	r3,184(sp)
 8005288:	d9002f17 	ldw	r4,188(sp)
 800528c:	18800017 	ldw	r2,0(r3)
 8005290:	18c00104 	addi	r3,r3,4
 8005294:	d8c02e15 	stw	r3,184(sp)
 8005298:	11000015 	stw	r4,0(r2)
 800529c:	00395406 	br	80037f0 <__alt_data_end+0xfc0037f0>
 80052a0:	d9002e17 	ldw	r4,184(sp)
 80052a4:	002d883a 	mov	r22,zero
 80052a8:	24c00017 	ldw	r19,0(r4)
 80052ac:	21000104 	addi	r4,r4,4
 80052b0:	d9002e15 	stw	r4,184(sp)
 80052b4:	003c0706 	br	80042d4 <__alt_data_end+0xfc0042d4>
 80052b8:	d9402e17 	ldw	r5,184(sp)
 80052bc:	d8c02a17 	ldw	r3,168(sp)
 80052c0:	002d883a 	mov	r22,zero
 80052c4:	28800104 	addi	r2,r5,4
 80052c8:	2cc0000b 	ldhu	r19,0(r5)
 80052cc:	183dc10e 	bge	r3,zero,80049d4 <__alt_data_end+0xfc0049d4>
 80052d0:	003f7506 	br	80050a8 <__alt_data_end+0xfc0050a8>
 80052d4:	04020074 	movhi	r16,2049
 80052d8:	84108f04 	addi	r16,r16,16956
 80052dc:	003aa706 	br	8003d7c <__alt_data_end+0xfc003d7c>
 80052e0:	d9002d17 	ldw	r4,180(sp)
 80052e4:	d9801e04 	addi	r6,sp,120
 80052e8:	b80b883a 	mov	r5,r23
 80052ec:	800b7900 	call	800b790 <__sprint_r>
 80052f0:	103a0b1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80052f4:	dc402617 	ldw	r17,152(sp)
 80052f8:	d8c02017 	ldw	r3,128(sp)
 80052fc:	da000404 	addi	r8,sp,16
 8005300:	003f9c06 	br	8005174 <__alt_data_end+0xfc005174>
 8005304:	ac400043 	ldbu	r17,1(r21)
 8005308:	84000814 	ori	r16,r16,32
 800530c:	ad400044 	addi	r21,r21,1
 8005310:	8c403fcc 	andi	r17,r17,255
 8005314:	8c40201c 	xori	r17,r17,128
 8005318:	8c7fe004 	addi	r17,r17,-128
 800531c:	00395e06 	br	8003898 <__alt_data_end+0xfc003898>
 8005320:	d8c02e15 	stw	r3,184(sp)
 8005324:	0039883a 	mov	fp,zero
 8005328:	003e3506 	br	8004c00 <__alt_data_end+0xfc004c00>
 800532c:	d9002d17 	ldw	r4,180(sp)
 8005330:	d9801e04 	addi	r6,sp,120
 8005334:	b80b883a 	mov	r5,r23
 8005338:	800b7900 	call	800b790 <__sprint_r>
 800533c:	1039f81e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8005340:	d8c02017 	ldw	r3,128(sp)
 8005344:	da000404 	addi	r8,sp,16
 8005348:	003cd006 	br	800468c <__alt_data_end+0xfc00468c>
 800534c:	8009883a 	mov	r4,r16
 8005350:	df003d15 	stw	fp,244(sp)
 8005354:	80013bc0 	call	80013bc <strlen>
 8005358:	d8802b15 	stw	r2,172(sp)
 800535c:	da003d17 	ldw	r8,244(sp)
 8005360:	103c200e 	bge	r2,zero,80043e4 <__alt_data_end+0xfc0043e4>
 8005364:	0005883a 	mov	r2,zero
 8005368:	003c1e06 	br	80043e4 <__alt_data_end+0xfc0043e4>
 800536c:	d9002d17 	ldw	r4,180(sp)
 8005370:	d9801e04 	addi	r6,sp,120
 8005374:	b80b883a 	mov	r5,r23
 8005378:	800b7900 	call	800b790 <__sprint_r>
 800537c:	1039e81e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 8005380:	d8c02017 	ldw	r3,128(sp)
 8005384:	d8801f17 	ldw	r2,124(sp)
 8005388:	da000404 	addi	r8,sp,16
 800538c:	d9403317 	ldw	r5,204(sp)
 8005390:	10800044 	addi	r2,r2,1
 8005394:	44000015 	stw	r16,0(r8)
 8005398:	28c7883a 	add	r3,r5,r3
 800539c:	003b5b06 	br	800410c <__alt_data_end+0xfc00410c>
 80053a0:	01020074 	movhi	r4,2049
 80053a4:	2110ab84 	addi	r4,r4,17070
 80053a8:	d9003515 	stw	r4,212(sp)
 80053ac:	003af206 	br	8003f78 <__alt_data_end+0xfc003f78>
 80053b0:	013fffc4 	movi	r4,-1
 80053b4:	003a0806 	br	8003bd8 <__alt_data_end+0xfc003bd8>
 80053b8:	0023883a 	mov	r17,zero
 80053bc:	003d9d06 	br	8004a34 <__alt_data_end+0xfc004a34>
 80053c0:	d9002d17 	ldw	r4,180(sp)
 80053c4:	d9801e04 	addi	r6,sp,120
 80053c8:	b80b883a 	mov	r5,r23
 80053cc:	800b7900 	call	800b790 <__sprint_r>
 80053d0:	1039d31e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80053d4:	d8c02017 	ldw	r3,128(sp)
 80053d8:	da000404 	addi	r8,sp,16
 80053dc:	003d9406 	br	8004a30 <__alt_data_end+0xfc004a30>
 80053e0:	01020074 	movhi	r4,2049
 80053e4:	2110a784 	addi	r4,r4,17054
 80053e8:	d9002c15 	stw	r4,176(sp)
 80053ec:	d9002c17 	ldw	r4,176(sp)
 80053f0:	1c47883a 	add	r3,r3,r17
 80053f4:	10800044 	addi	r2,r2,1
 80053f8:	41000015 	stw	r4,0(r8)
 80053fc:	44400115 	stw	r17,4(r8)
 8005400:	d8c02015 	stw	r3,128(sp)
 8005404:	d8801f15 	stw	r2,124(sp)
 8005408:	010001c4 	movi	r4,7
 800540c:	20bfd716 	blt	r4,r2,800536c <__alt_data_end+0xfc00536c>
 8005410:	42000204 	addi	r8,r8,8
 8005414:	003fdd06 	br	800538c <__alt_data_end+0xfc00538c>
 8005418:	d9002d17 	ldw	r4,180(sp)
 800541c:	d9801e04 	addi	r6,sp,120
 8005420:	b80b883a 	mov	r5,r23
 8005424:	800b7900 	call	800b790 <__sprint_r>
 8005428:	1039bd1e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 800542c:	d8802617 	ldw	r2,152(sp)
 8005430:	d8c02017 	ldw	r3,128(sp)
 8005434:	da000404 	addi	r8,sp,16
 8005438:	003e1006 	br	8004c7c <__alt_data_end+0xfc004c7c>
 800543c:	00800044 	movi	r2,1
 8005440:	10803fcc 	andi	r2,r2,255
 8005444:	00c00044 	movi	r3,1
 8005448:	10fa0d26 	beq	r2,r3,8003c80 <__alt_data_end+0xfc003c80>
 800544c:	00c00084 	movi	r3,2
 8005450:	10fbaf26 	beq	r2,r3,8004310 <__alt_data_end+0xfc004310>
 8005454:	003a6d06 	br	8003e0c <__alt_data_end+0xfc003e0c>
 8005458:	01020074 	movhi	r4,2049
 800545c:	2110ab84 	addi	r4,r4,17070
 8005460:	d9003515 	stw	r4,212(sp)
 8005464:	003b5406 	br	80041b8 <__alt_data_end+0xfc0041b8>
 8005468:	d8802a17 	ldw	r2,168(sp)
 800546c:	00c00184 	movi	r3,6
 8005470:	1880012e 	bgeu	r3,r2,8005478 <___vfprintf_internal_r+0x1d68>
 8005474:	1805883a 	mov	r2,r3
 8005478:	d8802b15 	stw	r2,172(sp)
 800547c:	1000ef16 	blt	r2,zero,800583c <___vfprintf_internal_r+0x212c>
 8005480:	04020074 	movhi	r16,2049
 8005484:	d8802915 	stw	r2,164(sp)
 8005488:	dcc02e15 	stw	r19,184(sp)
 800548c:	d8002a15 	stw	zero,168(sp)
 8005490:	d8003215 	stw	zero,200(sp)
 8005494:	84109d04 	addi	r16,r16,17012
 8005498:	0039883a 	mov	fp,zero
 800549c:	003a8006 	br	8003ea0 <__alt_data_end+0xfc003ea0>
 80054a0:	0021883a 	mov	r16,zero
 80054a4:	003e0706 	br	8004cc4 <__alt_data_end+0xfc004cc4>
 80054a8:	d9002d17 	ldw	r4,180(sp)
 80054ac:	d9801e04 	addi	r6,sp,120
 80054b0:	b80b883a 	mov	r5,r23
 80054b4:	800b7900 	call	800b790 <__sprint_r>
 80054b8:	1039991e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 80054bc:	d8802617 	ldw	r2,152(sp)
 80054c0:	d9403317 	ldw	r5,204(sp)
 80054c4:	d8c02017 	ldw	r3,128(sp)
 80054c8:	da000404 	addi	r8,sp,16
 80054cc:	2885c83a 	sub	r2,r5,r2
 80054d0:	003dfb06 	br	8004cc0 <__alt_data_end+0xfc004cc0>
 80054d4:	9080004c 	andi	r2,r18,1
 80054d8:	103e8f1e 	bne	r2,zero,8004f18 <__alt_data_end+0xfc004f18>
 80054dc:	d8802117 	ldw	r2,132(sp)
 80054e0:	003e9e06 	br	8004f5c <__alt_data_end+0xfc004f5c>
 80054e4:	1025883a 	mov	r18,r2
 80054e8:	0039883a 	mov	fp,zero
 80054ec:	00800084 	movi	r2,2
 80054f0:	003fd306 	br	8005440 <__alt_data_end+0xfc005440>
 80054f4:	07000b44 	movi	fp,45
 80054f8:	df002785 	stb	fp,158(sp)
 80054fc:	003a1b06 	br	8003d6c <__alt_data_end+0xfc003d6c>
 8005500:	00c00b44 	movi	r3,45
 8005504:	d8c02785 	stb	r3,158(sp)
 8005508:	d8802915 	stw	r2,164(sp)
 800550c:	dc802c17 	ldw	r18,176(sp)
 8005510:	d8002a15 	stw	zero,168(sp)
 8005514:	07000b44 	movi	fp,45
 8005518:	003a5e06 	br	8003e94 <__alt_data_end+0xfc003e94>
 800551c:	04020074 	movhi	r16,2049
 8005520:	84109204 	addi	r16,r16,16968
 8005524:	003f4706 	br	8005244 <__alt_data_end+0xfc005244>
 8005528:	d9002e17 	ldw	r4,184(sp)
 800552c:	d9402f17 	ldw	r5,188(sp)
 8005530:	20800017 	ldw	r2,0(r4)
 8005534:	21000104 	addi	r4,r4,4
 8005538:	d9002e15 	stw	r4,184(sp)
 800553c:	11400015 	stw	r5,0(r2)
 8005540:	0038ab06 	br	80037f0 <__alt_data_end+0xfc0037f0>
 8005544:	dd802617 	ldw	r22,152(sp)
 8005548:	00bfff44 	movi	r2,-3
 800554c:	b0801c16 	blt	r22,r2,80055c0 <___vfprintf_internal_r+0x1eb0>
 8005550:	d9402a17 	ldw	r5,168(sp)
 8005554:	2d801a16 	blt	r5,r22,80055c0 <___vfprintf_internal_r+0x1eb0>
 8005558:	dd803215 	stw	r22,200(sp)
 800555c:	003e8906 	br	8004f84 <__alt_data_end+0xfc004f84>
 8005560:	01020074 	movhi	r4,2049
 8005564:	2110a784 	addi	r4,r4,17054
 8005568:	d9002c15 	stw	r4,176(sp)
 800556c:	003c9106 	br	80047b4 <__alt_data_end+0xfc0047b4>
 8005570:	e005883a 	mov	r2,fp
 8005574:	003e7906 	br	8004f5c <__alt_data_end+0xfc004f5c>
 8005578:	d9002a17 	ldw	r4,168(sp)
 800557c:	df002783 	ldbu	fp,158(sp)
 8005580:	dcc02e15 	stw	r19,184(sp)
 8005584:	d9002915 	stw	r4,164(sp)
 8005588:	d9002b15 	stw	r4,172(sp)
 800558c:	d8002a15 	stw	zero,168(sp)
 8005590:	d8003215 	stw	zero,200(sp)
 8005594:	003a3b06 	br	8003e84 <__alt_data_end+0xfc003e84>
 8005598:	9080004c 	andi	r2,r18,1
 800559c:	0039883a 	mov	fp,zero
 80055a0:	10000426 	beq	r2,zero,80055b4 <___vfprintf_internal_r+0x1ea4>
 80055a4:	00800c04 	movi	r2,48
 80055a8:	dc001dc4 	addi	r16,sp,119
 80055ac:	d8801dc5 	stb	r2,119(sp)
 80055b0:	003b6406 	br	8004344 <__alt_data_end+0xfc004344>
 80055b4:	d8002b15 	stw	zero,172(sp)
 80055b8:	dc001e04 	addi	r16,sp,120
 80055bc:	003a2b06 	br	8003e6c <__alt_data_end+0xfc003e6c>
 80055c0:	8c7fff84 	addi	r17,r17,-2
 80055c4:	b5bfffc4 	addi	r22,r22,-1
 80055c8:	dd802615 	stw	r22,152(sp)
 80055cc:	dc4022c5 	stb	r17,139(sp)
 80055d0:	b000bf16 	blt	r22,zero,80058d0 <___vfprintf_internal_r+0x21c0>
 80055d4:	00800ac4 	movi	r2,43
 80055d8:	d8802305 	stb	r2,140(sp)
 80055dc:	00800244 	movi	r2,9
 80055e0:	15807016 	blt	r2,r22,80057a4 <___vfprintf_internal_r+0x2094>
 80055e4:	00800c04 	movi	r2,48
 80055e8:	b5800c04 	addi	r22,r22,48
 80055ec:	d8802345 	stb	r2,141(sp)
 80055f0:	dd802385 	stb	r22,142(sp)
 80055f4:	d88023c4 	addi	r2,sp,143
 80055f8:	df0022c4 	addi	fp,sp,139
 80055fc:	d8c03317 	ldw	r3,204(sp)
 8005600:	1739c83a 	sub	fp,r2,fp
 8005604:	d9003317 	ldw	r4,204(sp)
 8005608:	e0c7883a 	add	r3,fp,r3
 800560c:	df003a15 	stw	fp,232(sp)
 8005610:	d8c02b15 	stw	r3,172(sp)
 8005614:	00800044 	movi	r2,1
 8005618:	1100b30e 	bge	r2,r4,80058e8 <___vfprintf_internal_r+0x21d8>
 800561c:	d8c02b17 	ldw	r3,172(sp)
 8005620:	18c00044 	addi	r3,r3,1
 8005624:	d8c02b15 	stw	r3,172(sp)
 8005628:	1805883a 	mov	r2,r3
 800562c:	1800ac16 	blt	r3,zero,80058e0 <___vfprintf_internal_r+0x21d0>
 8005630:	d8003215 	stw	zero,200(sp)
 8005634:	003e5d06 	br	8004fac <__alt_data_end+0xfc004fac>
 8005638:	d9002d17 	ldw	r4,180(sp)
 800563c:	d9801e04 	addi	r6,sp,120
 8005640:	b80b883a 	mov	r5,r23
 8005644:	800b7900 	call	800b790 <__sprint_r>
 8005648:	1039351e 	bne	r2,zero,8003b20 <__alt_data_end+0xfc003b20>
 800564c:	dc402617 	ldw	r17,152(sp)
 8005650:	d8c02017 	ldw	r3,128(sp)
 8005654:	d8801f17 	ldw	r2,124(sp)
 8005658:	da000404 	addi	r8,sp,16
 800565c:	003ed606 	br	80051b8 <__alt_data_end+0xfc0051b8>
 8005660:	182b883a 	mov	r21,r3
 8005664:	d8002a15 	stw	zero,168(sp)
 8005668:	00388c06 	br	800389c <__alt_data_end+0xfc00389c>
 800566c:	d8802a17 	ldw	r2,168(sp)
 8005670:	103e071e 	bne	r2,zero,8004e90 <__alt_data_end+0xfc004e90>
 8005674:	dc002a15 	stw	r16,168(sp)
 8005678:	003e0506 	br	8004e90 <__alt_data_end+0xfc004e90>
 800567c:	d9002a17 	ldw	r4,168(sp)
 8005680:	20c00044 	addi	r3,r4,1
 8005684:	003e0f06 	br	8004ec4 <__alt_data_end+0xfc004ec4>
 8005688:	01400184 	movi	r5,6
 800568c:	d9402a15 	stw	r5,168(sp)
 8005690:	003dff06 	br	8004e90 <__alt_data_end+0xfc004e90>
 8005694:	d8802104 	addi	r2,sp,132
 8005698:	d8800315 	stw	r2,12(sp)
 800569c:	d8802504 	addi	r2,sp,148
 80056a0:	d8800215 	stw	r2,8(sp)
 80056a4:	d8802604 	addi	r2,sp,152
 80056a8:	d8800115 	stw	r2,4(sp)
 80056ac:	d8802a17 	ldw	r2,168(sp)
 80056b0:	d9403617 	ldw	r5,216(sp)
 80056b4:	d9002d17 	ldw	r4,180(sp)
 80056b8:	d8800015 	stw	r2,0(sp)
 80056bc:	01c000c4 	movi	r7,3
 80056c0:	980d883a 	mov	r6,r19
 80056c4:	da003d15 	stw	r8,244(sp)
 80056c8:	8005e400 	call	8005e40 <_dtoa_r>
 80056cc:	d8c02a17 	ldw	r3,168(sp)
 80056d0:	da003d17 	ldw	r8,244(sp)
 80056d4:	1021883a 	mov	r16,r2
 80056d8:	10f9883a 	add	fp,r2,r3
 80056dc:	81000007 	ldb	r4,0(r16)
 80056e0:	00800c04 	movi	r2,48
 80056e4:	20805e26 	beq	r4,r2,8005860 <___vfprintf_internal_r+0x2150>
 80056e8:	d8c02617 	ldw	r3,152(sp)
 80056ec:	e0f9883a 	add	fp,fp,r3
 80056f0:	003e0a06 	br	8004f1c <__alt_data_end+0xfc004f1c>
 80056f4:	00c00b44 	movi	r3,45
 80056f8:	24e0003c 	xorhi	r19,r4,32768
 80056fc:	d8c02905 	stb	r3,164(sp)
 8005700:	003de906 	br	8004ea8 <__alt_data_end+0xfc004ea8>
 8005704:	d8c03217 	ldw	r3,200(sp)
 8005708:	00c07a0e 	bge	zero,r3,80058f4 <___vfprintf_internal_r+0x21e4>
 800570c:	00800044 	movi	r2,1
 8005710:	d9003317 	ldw	r4,204(sp)
 8005714:	1105883a 	add	r2,r2,r4
 8005718:	d8802b15 	stw	r2,172(sp)
 800571c:	10004e16 	blt	r2,zero,8005858 <___vfprintf_internal_r+0x2148>
 8005720:	044019c4 	movi	r17,103
 8005724:	003e2106 	br	8004fac <__alt_data_end+0xfc004fac>
 8005728:	d9002a17 	ldw	r4,168(sp)
 800572c:	d8802104 	addi	r2,sp,132
 8005730:	d8800315 	stw	r2,12(sp)
 8005734:	d9000015 	stw	r4,0(sp)
 8005738:	d8802504 	addi	r2,sp,148
 800573c:	d9403617 	ldw	r5,216(sp)
 8005740:	d9002d17 	ldw	r4,180(sp)
 8005744:	d8800215 	stw	r2,8(sp)
 8005748:	d8802604 	addi	r2,sp,152
 800574c:	d8800115 	stw	r2,4(sp)
 8005750:	01c000c4 	movi	r7,3
 8005754:	980d883a 	mov	r6,r19
 8005758:	da003d15 	stw	r8,244(sp)
 800575c:	8005e400 	call	8005e40 <_dtoa_r>
 8005760:	d8c02a17 	ldw	r3,168(sp)
 8005764:	da003d17 	ldw	r8,244(sp)
 8005768:	1021883a 	mov	r16,r2
 800576c:	00801184 	movi	r2,70
 8005770:	80f9883a 	add	fp,r16,r3
 8005774:	88bfd926 	beq	r17,r2,80056dc <__alt_data_end+0xfc0056dc>
 8005778:	003de806 	br	8004f1c <__alt_data_end+0xfc004f1c>
 800577c:	d9002a17 	ldw	r4,168(sp)
 8005780:	00c04d0e 	bge	zero,r3,80058b8 <___vfprintf_internal_r+0x21a8>
 8005784:	2000441e 	bne	r4,zero,8005898 <___vfprintf_internal_r+0x2188>
 8005788:	9480004c 	andi	r18,r18,1
 800578c:	9000421e 	bne	r18,zero,8005898 <___vfprintf_internal_r+0x2188>
 8005790:	1805883a 	mov	r2,r3
 8005794:	18006f16 	blt	r3,zero,8005954 <___vfprintf_internal_r+0x2244>
 8005798:	d8c03217 	ldw	r3,200(sp)
 800579c:	d8c02b15 	stw	r3,172(sp)
 80057a0:	003e0206 	br	8004fac <__alt_data_end+0xfc004fac>
 80057a4:	df0022c4 	addi	fp,sp,139
 80057a8:	dc002a15 	stw	r16,168(sp)
 80057ac:	4027883a 	mov	r19,r8
 80057b0:	e021883a 	mov	r16,fp
 80057b4:	b009883a 	mov	r4,r22
 80057b8:	01400284 	movi	r5,10
 80057bc:	8000f700 	call	8000f70 <__modsi3>
 80057c0:	10800c04 	addi	r2,r2,48
 80057c4:	843fffc4 	addi	r16,r16,-1
 80057c8:	b009883a 	mov	r4,r22
 80057cc:	01400284 	movi	r5,10
 80057d0:	80800005 	stb	r2,0(r16)
 80057d4:	8000eec0 	call	8000eec <__divsi3>
 80057d8:	102d883a 	mov	r22,r2
 80057dc:	00800244 	movi	r2,9
 80057e0:	15bff416 	blt	r2,r22,80057b4 <__alt_data_end+0xfc0057b4>
 80057e4:	9811883a 	mov	r8,r19
 80057e8:	b0800c04 	addi	r2,r22,48
 80057ec:	8027883a 	mov	r19,r16
 80057f0:	997fffc4 	addi	r5,r19,-1
 80057f4:	98bfffc5 	stb	r2,-1(r19)
 80057f8:	dc002a17 	ldw	r16,168(sp)
 80057fc:	2f006d2e 	bgeu	r5,fp,80059b4 <___vfprintf_internal_r+0x22a4>
 8005800:	d9c02384 	addi	r7,sp,142
 8005804:	3ccfc83a 	sub	r7,r7,r19
 8005808:	d9002344 	addi	r4,sp,141
 800580c:	e1cf883a 	add	r7,fp,r7
 8005810:	00000106 	br	8005818 <___vfprintf_internal_r+0x2108>
 8005814:	28800003 	ldbu	r2,0(r5)
 8005818:	20800005 	stb	r2,0(r4)
 800581c:	21000044 	addi	r4,r4,1
 8005820:	29400044 	addi	r5,r5,1
 8005824:	393ffb1e 	bne	r7,r4,8005814 <__alt_data_end+0xfc005814>
 8005828:	d8802304 	addi	r2,sp,140
 800582c:	14c5c83a 	sub	r2,r2,r19
 8005830:	d8c02344 	addi	r3,sp,141
 8005834:	1885883a 	add	r2,r3,r2
 8005838:	003f7006 	br	80055fc <__alt_data_end+0xfc0055fc>
 800583c:	0005883a 	mov	r2,zero
 8005840:	003f0f06 	br	8005480 <__alt_data_end+0xfc005480>
 8005844:	d8c03217 	ldw	r3,200(sp)
 8005848:	18c00044 	addi	r3,r3,1
 800584c:	d8c02b15 	stw	r3,172(sp)
 8005850:	1805883a 	mov	r2,r3
 8005854:	183fb20e 	bge	r3,zero,8005720 <__alt_data_end+0xfc005720>
 8005858:	0005883a 	mov	r2,zero
 800585c:	003fb006 	br	8005720 <__alt_data_end+0xfc005720>
 8005860:	d9003617 	ldw	r4,216(sp)
 8005864:	000d883a 	mov	r6,zero
 8005868:	000f883a 	mov	r7,zero
 800586c:	980b883a 	mov	r5,r19
 8005870:	d8c03c15 	stw	r3,240(sp)
 8005874:	da003d15 	stw	r8,244(sp)
 8005878:	80101a80 	call	80101a8 <__eqdf2>
 800587c:	d8c03c17 	ldw	r3,240(sp)
 8005880:	da003d17 	ldw	r8,244(sp)
 8005884:	103f9826 	beq	r2,zero,80056e8 <__alt_data_end+0xfc0056e8>
 8005888:	00800044 	movi	r2,1
 800588c:	10c7c83a 	sub	r3,r2,r3
 8005890:	d8c02615 	stw	r3,152(sp)
 8005894:	003f9506 	br	80056ec <__alt_data_end+0xfc0056ec>
 8005898:	d9002a17 	ldw	r4,168(sp)
 800589c:	d8c03217 	ldw	r3,200(sp)
 80058a0:	20800044 	addi	r2,r4,1
 80058a4:	1885883a 	add	r2,r3,r2
 80058a8:	d8802b15 	stw	r2,172(sp)
 80058ac:	103dbf0e 	bge	r2,zero,8004fac <__alt_data_end+0xfc004fac>
 80058b0:	0005883a 	mov	r2,zero
 80058b4:	003dbd06 	br	8004fac <__alt_data_end+0xfc004fac>
 80058b8:	2000201e 	bne	r4,zero,800593c <___vfprintf_internal_r+0x222c>
 80058bc:	9480004c 	andi	r18,r18,1
 80058c0:	90001e1e 	bne	r18,zero,800593c <___vfprintf_internal_r+0x222c>
 80058c4:	00800044 	movi	r2,1
 80058c8:	d8802b15 	stw	r2,172(sp)
 80058cc:	003db706 	br	8004fac <__alt_data_end+0xfc004fac>
 80058d0:	00800b44 	movi	r2,45
 80058d4:	05adc83a 	sub	r22,zero,r22
 80058d8:	d8802305 	stb	r2,140(sp)
 80058dc:	003f3f06 	br	80055dc <__alt_data_end+0xfc0055dc>
 80058e0:	0005883a 	mov	r2,zero
 80058e4:	003f5206 	br	8005630 <__alt_data_end+0xfc005630>
 80058e8:	90a4703a 	and	r18,r18,r2
 80058ec:	903f4e26 	beq	r18,zero,8005628 <__alt_data_end+0xfc005628>
 80058f0:	003f4a06 	br	800561c <__alt_data_end+0xfc00561c>
 80058f4:	00800084 	movi	r2,2
 80058f8:	10c5c83a 	sub	r2,r2,r3
 80058fc:	003f8406 	br	8005710 <__alt_data_end+0xfc005710>
 8005900:	d9402e17 	ldw	r5,184(sp)
 8005904:	d9002e17 	ldw	r4,184(sp)
 8005908:	ac400043 	ldbu	r17,1(r21)
 800590c:	29400017 	ldw	r5,0(r5)
 8005910:	20800104 	addi	r2,r4,4
 8005914:	d8802e15 	stw	r2,184(sp)
 8005918:	d9402a15 	stw	r5,168(sp)
 800591c:	182b883a 	mov	r21,r3
 8005920:	283e7b0e 	bge	r5,zero,8005310 <__alt_data_end+0xfc005310>
 8005924:	8c403fcc 	andi	r17,r17,255
 8005928:	017fffc4 	movi	r5,-1
 800592c:	8c40201c 	xori	r17,r17,128
 8005930:	d9402a15 	stw	r5,168(sp)
 8005934:	8c7fe004 	addi	r17,r17,-128
 8005938:	0037d706 	br	8003898 <__alt_data_end+0xfc003898>
 800593c:	d8c02a17 	ldw	r3,168(sp)
 8005940:	18c00084 	addi	r3,r3,2
 8005944:	d8c02b15 	stw	r3,172(sp)
 8005948:	1805883a 	mov	r2,r3
 800594c:	183d970e 	bge	r3,zero,8004fac <__alt_data_end+0xfc004fac>
 8005950:	003fd706 	br	80058b0 <__alt_data_end+0xfc0058b0>
 8005954:	0005883a 	mov	r2,zero
 8005958:	003f8f06 	br	8005798 <__alt_data_end+0xfc005798>
 800595c:	9080004c 	andi	r2,r18,1
 8005960:	103f821e 	bne	r2,zero,800576c <__alt_data_end+0xfc00576c>
 8005964:	d8802117 	ldw	r2,132(sp)
 8005968:	1405c83a 	sub	r2,r2,r16
 800596c:	d8803315 	stw	r2,204(sp)
 8005970:	b47ef426 	beq	r22,r17,8005544 <__alt_data_end+0xfc005544>
 8005974:	dd802617 	ldw	r22,152(sp)
 8005978:	003f1206 	br	80055c4 <__alt_data_end+0xfc0055c4>
 800597c:	d8c02b03 	ldbu	r3,172(sp)
 8005980:	d8c02785 	stb	r3,158(sp)
 8005984:	0038df06 	br	8003d04 <__alt_data_end+0xfc003d04>
 8005988:	d8c02b03 	ldbu	r3,172(sp)
 800598c:	d8c02785 	stb	r3,158(sp)
 8005990:	0038aa06 	br	8003c3c <__alt_data_end+0xfc003c3c>
 8005994:	d8c02b03 	ldbu	r3,172(sp)
 8005998:	d8c02785 	stb	r3,158(sp)
 800599c:	003a4306 	br	80042ac <__alt_data_end+0xfc0042ac>
 80059a0:	d8c02b03 	ldbu	r3,172(sp)
 80059a4:	d8c02785 	stb	r3,158(sp)
 80059a8:	003af506 	br	8004580 <__alt_data_end+0xfc004580>
 80059ac:	0005883a 	mov	r2,zero
 80059b0:	003d7b06 	br	8004fa0 <__alt_data_end+0xfc004fa0>
 80059b4:	d8802344 	addi	r2,sp,141
 80059b8:	003f1006 	br	80055fc <__alt_data_end+0xfc0055fc>
 80059bc:	d8c02b03 	ldbu	r3,172(sp)
 80059c0:	d8c02785 	stb	r3,158(sp)
 80059c4:	0038fd06 	br	8003dbc <__alt_data_end+0xfc003dbc>
 80059c8:	d8c02b03 	ldbu	r3,172(sp)
 80059cc:	d8c02785 	stb	r3,158(sp)
 80059d0:	003a9706 	br	8004430 <__alt_data_end+0xfc004430>
 80059d4:	d8c02b03 	ldbu	r3,172(sp)
 80059d8:	d8c02785 	stb	r3,158(sp)
 80059dc:	003a1806 	br	8004240 <__alt_data_end+0xfc004240>
 80059e0:	d8c02b03 	ldbu	r3,172(sp)
 80059e4:	d8c02785 	stb	r3,158(sp)
 80059e8:	003abe06 	br	80044e4 <__alt_data_end+0xfc0044e4>

080059ec <__vfprintf_internal>:
 80059ec:	00820074 	movhi	r2,2049
 80059f0:	1098c504 	addi	r2,r2,25364
 80059f4:	300f883a 	mov	r7,r6
 80059f8:	280d883a 	mov	r6,r5
 80059fc:	200b883a 	mov	r5,r4
 8005a00:	11000017 	ldw	r4,0(r2)
 8005a04:	80037101 	jmpi	8003710 <___vfprintf_internal_r>

08005a08 <__sbprintf>:
 8005a08:	2880030b 	ldhu	r2,12(r5)
 8005a0c:	2ac01917 	ldw	r11,100(r5)
 8005a10:	2a80038b 	ldhu	r10,14(r5)
 8005a14:	2a400717 	ldw	r9,28(r5)
 8005a18:	2a000917 	ldw	r8,36(r5)
 8005a1c:	defee204 	addi	sp,sp,-1144
 8005a20:	00c10004 	movi	r3,1024
 8005a24:	dc011a15 	stw	r16,1128(sp)
 8005a28:	10bfff4c 	andi	r2,r2,65533
 8005a2c:	2821883a 	mov	r16,r5
 8005a30:	d8cb883a 	add	r5,sp,r3
 8005a34:	dc811c15 	stw	r18,1136(sp)
 8005a38:	dc411b15 	stw	r17,1132(sp)
 8005a3c:	dfc11d15 	stw	ra,1140(sp)
 8005a40:	2025883a 	mov	r18,r4
 8005a44:	d881030d 	sth	r2,1036(sp)
 8005a48:	dac11915 	stw	r11,1124(sp)
 8005a4c:	da81038d 	sth	r10,1038(sp)
 8005a50:	da410715 	stw	r9,1052(sp)
 8005a54:	da010915 	stw	r8,1060(sp)
 8005a58:	dec10015 	stw	sp,1024(sp)
 8005a5c:	dec10415 	stw	sp,1040(sp)
 8005a60:	d8c10215 	stw	r3,1032(sp)
 8005a64:	d8c10515 	stw	r3,1044(sp)
 8005a68:	d8010615 	stw	zero,1048(sp)
 8005a6c:	80037100 	call	8003710 <___vfprintf_internal_r>
 8005a70:	1023883a 	mov	r17,r2
 8005a74:	10000416 	blt	r2,zero,8005a88 <__sbprintf+0x80>
 8005a78:	d9410004 	addi	r5,sp,1024
 8005a7c:	9009883a 	mov	r4,r18
 8005a80:	80076e40 	call	80076e4 <_fflush_r>
 8005a84:	10000d1e 	bne	r2,zero,8005abc <__sbprintf+0xb4>
 8005a88:	d881030b 	ldhu	r2,1036(sp)
 8005a8c:	1080100c 	andi	r2,r2,64
 8005a90:	10000326 	beq	r2,zero,8005aa0 <__sbprintf+0x98>
 8005a94:	8080030b 	ldhu	r2,12(r16)
 8005a98:	10801014 	ori	r2,r2,64
 8005a9c:	8080030d 	sth	r2,12(r16)
 8005aa0:	8805883a 	mov	r2,r17
 8005aa4:	dfc11d17 	ldw	ra,1140(sp)
 8005aa8:	dc811c17 	ldw	r18,1136(sp)
 8005aac:	dc411b17 	ldw	r17,1132(sp)
 8005ab0:	dc011a17 	ldw	r16,1128(sp)
 8005ab4:	dec11e04 	addi	sp,sp,1144
 8005ab8:	f800283a 	ret
 8005abc:	047fffc4 	movi	r17,-1
 8005ac0:	003ff106 	br	8005a88 <__alt_data_end+0xfc005a88>

08005ac4 <__swsetup_r>:
 8005ac4:	00820074 	movhi	r2,2049
 8005ac8:	defffd04 	addi	sp,sp,-12
 8005acc:	1098c504 	addi	r2,r2,25364
 8005ad0:	dc400115 	stw	r17,4(sp)
 8005ad4:	2023883a 	mov	r17,r4
 8005ad8:	11000017 	ldw	r4,0(r2)
 8005adc:	dc000015 	stw	r16,0(sp)
 8005ae0:	dfc00215 	stw	ra,8(sp)
 8005ae4:	2821883a 	mov	r16,r5
 8005ae8:	20000226 	beq	r4,zero,8005af4 <__swsetup_r+0x30>
 8005aec:	20800e17 	ldw	r2,56(r4)
 8005af0:	10003126 	beq	r2,zero,8005bb8 <__swsetup_r+0xf4>
 8005af4:	8080030b 	ldhu	r2,12(r16)
 8005af8:	10c0020c 	andi	r3,r2,8
 8005afc:	1009883a 	mov	r4,r2
 8005b00:	18000f26 	beq	r3,zero,8005b40 <__swsetup_r+0x7c>
 8005b04:	80c00417 	ldw	r3,16(r16)
 8005b08:	18001526 	beq	r3,zero,8005b60 <__swsetup_r+0x9c>
 8005b0c:	1100004c 	andi	r4,r2,1
 8005b10:	20001c1e 	bne	r4,zero,8005b84 <__swsetup_r+0xc0>
 8005b14:	1080008c 	andi	r2,r2,2
 8005b18:	1000291e 	bne	r2,zero,8005bc0 <__swsetup_r+0xfc>
 8005b1c:	80800517 	ldw	r2,20(r16)
 8005b20:	80800215 	stw	r2,8(r16)
 8005b24:	18001c26 	beq	r3,zero,8005b98 <__swsetup_r+0xd4>
 8005b28:	0005883a 	mov	r2,zero
 8005b2c:	dfc00217 	ldw	ra,8(sp)
 8005b30:	dc400117 	ldw	r17,4(sp)
 8005b34:	dc000017 	ldw	r16,0(sp)
 8005b38:	dec00304 	addi	sp,sp,12
 8005b3c:	f800283a 	ret
 8005b40:	2080040c 	andi	r2,r4,16
 8005b44:	10002e26 	beq	r2,zero,8005c00 <__swsetup_r+0x13c>
 8005b48:	2080010c 	andi	r2,r4,4
 8005b4c:	10001e1e 	bne	r2,zero,8005bc8 <__swsetup_r+0x104>
 8005b50:	80c00417 	ldw	r3,16(r16)
 8005b54:	20800214 	ori	r2,r4,8
 8005b58:	8080030d 	sth	r2,12(r16)
 8005b5c:	183feb1e 	bne	r3,zero,8005b0c <__alt_data_end+0xfc005b0c>
 8005b60:	1100a00c 	andi	r4,r2,640
 8005b64:	01408004 	movi	r5,512
 8005b68:	217fe826 	beq	r4,r5,8005b0c <__alt_data_end+0xfc005b0c>
 8005b6c:	800b883a 	mov	r5,r16
 8005b70:	8809883a 	mov	r4,r17
 8005b74:	80081b80 	call	80081b8 <__smakebuf_r>
 8005b78:	8080030b 	ldhu	r2,12(r16)
 8005b7c:	80c00417 	ldw	r3,16(r16)
 8005b80:	003fe206 	br	8005b0c <__alt_data_end+0xfc005b0c>
 8005b84:	80800517 	ldw	r2,20(r16)
 8005b88:	80000215 	stw	zero,8(r16)
 8005b8c:	0085c83a 	sub	r2,zero,r2
 8005b90:	80800615 	stw	r2,24(r16)
 8005b94:	183fe41e 	bne	r3,zero,8005b28 <__alt_data_end+0xfc005b28>
 8005b98:	80c0030b 	ldhu	r3,12(r16)
 8005b9c:	0005883a 	mov	r2,zero
 8005ba0:	1900200c 	andi	r4,r3,128
 8005ba4:	203fe126 	beq	r4,zero,8005b2c <__alt_data_end+0xfc005b2c>
 8005ba8:	18c01014 	ori	r3,r3,64
 8005bac:	80c0030d 	sth	r3,12(r16)
 8005bb0:	00bfffc4 	movi	r2,-1
 8005bb4:	003fdd06 	br	8005b2c <__alt_data_end+0xfc005b2c>
 8005bb8:	8007ad00 	call	8007ad0 <__sinit>
 8005bbc:	003fcd06 	br	8005af4 <__alt_data_end+0xfc005af4>
 8005bc0:	0005883a 	mov	r2,zero
 8005bc4:	003fd606 	br	8005b20 <__alt_data_end+0xfc005b20>
 8005bc8:	81400c17 	ldw	r5,48(r16)
 8005bcc:	28000626 	beq	r5,zero,8005be8 <__swsetup_r+0x124>
 8005bd0:	80801004 	addi	r2,r16,64
 8005bd4:	28800326 	beq	r5,r2,8005be4 <__swsetup_r+0x120>
 8005bd8:	8809883a 	mov	r4,r17
 8005bdc:	8007c440 	call	8007c44 <_free_r>
 8005be0:	8100030b 	ldhu	r4,12(r16)
 8005be4:	80000c15 	stw	zero,48(r16)
 8005be8:	80c00417 	ldw	r3,16(r16)
 8005bec:	00bff6c4 	movi	r2,-37
 8005bf0:	1108703a 	and	r4,r2,r4
 8005bf4:	80000115 	stw	zero,4(r16)
 8005bf8:	80c00015 	stw	r3,0(r16)
 8005bfc:	003fd506 	br	8005b54 <__alt_data_end+0xfc005b54>
 8005c00:	00800244 	movi	r2,9
 8005c04:	88800015 	stw	r2,0(r17)
 8005c08:	20801014 	ori	r2,r4,64
 8005c0c:	8080030d 	sth	r2,12(r16)
 8005c10:	00bfffc4 	movi	r2,-1
 8005c14:	003fc506 	br	8005b2c <__alt_data_end+0xfc005b2c>

08005c18 <quorem>:
 8005c18:	defff204 	addi	sp,sp,-56
 8005c1c:	ddc00b15 	stw	r23,44(sp)
 8005c20:	20800417 	ldw	r2,16(r4)
 8005c24:	2dc00417 	ldw	r23,16(r5)
 8005c28:	dfc00d15 	stw	ra,52(sp)
 8005c2c:	df000c15 	stw	fp,48(sp)
 8005c30:	dd800a15 	stw	r22,40(sp)
 8005c34:	dd400915 	stw	r21,36(sp)
 8005c38:	dd000815 	stw	r20,32(sp)
 8005c3c:	dcc00715 	stw	r19,28(sp)
 8005c40:	dc800615 	stw	r18,24(sp)
 8005c44:	dc400515 	stw	r17,20(sp)
 8005c48:	dc000415 	stw	r16,16(sp)
 8005c4c:	15c07a16 	blt	r2,r23,8005e38 <quorem+0x220>
 8005c50:	bdffffc4 	addi	r23,r23,-1
 8005c54:	bde9883a 	add	r20,r23,r23
 8005c58:	28c00504 	addi	r3,r5,20
 8005c5c:	a529883a 	add	r20,r20,r20
 8005c60:	1d39883a 	add	fp,r3,r20
 8005c64:	24c00504 	addi	r19,r4,20
 8005c68:	d9400215 	stw	r5,8(sp)
 8005c6c:	9d29883a 	add	r20,r19,r20
 8005c70:	e1400017 	ldw	r5,0(fp)
 8005c74:	d9000015 	stw	r4,0(sp)
 8005c78:	a1000017 	ldw	r4,0(r20)
 8005c7c:	29400044 	addi	r5,r5,1
 8005c80:	d8c00115 	stw	r3,4(sp)
 8005c84:	dd000315 	stw	r20,12(sp)
 8005c88:	8000fe40 	call	8000fe4 <__udivsi3>
 8005c8c:	1025883a 	mov	r18,r2
 8005c90:	10003026 	beq	r2,zero,8005d54 <quorem+0x13c>
 8005c94:	dc400117 	ldw	r17,4(sp)
 8005c98:	9829883a 	mov	r20,r19
 8005c9c:	002d883a 	mov	r22,zero
 8005ca0:	0021883a 	mov	r16,zero
 8005ca4:	8d400017 	ldw	r21,0(r17)
 8005ca8:	900b883a 	mov	r5,r18
 8005cac:	8c400104 	addi	r17,r17,4
 8005cb0:	a93fffcc 	andi	r4,r21,65535
 8005cb4:	80010a00 	call	80010a0 <__mulsi3>
 8005cb8:	a808d43a 	srli	r4,r21,16
 8005cbc:	900b883a 	mov	r5,r18
 8005cc0:	15ad883a 	add	r22,r2,r22
 8005cc4:	80010a00 	call	80010a0 <__mulsi3>
 8005cc8:	a1000017 	ldw	r4,0(r20)
 8005ccc:	b00cd43a 	srli	r6,r22,16
 8005cd0:	b0ffffcc 	andi	r3,r22,65535
 8005cd4:	217fffcc 	andi	r5,r4,65535
 8005cd8:	2c21883a 	add	r16,r5,r16
 8005cdc:	80c7c83a 	sub	r3,r16,r3
 8005ce0:	2008d43a 	srli	r4,r4,16
 8005ce4:	1185883a 	add	r2,r2,r6
 8005ce8:	1821d43a 	srai	r16,r3,16
 8005cec:	117fffcc 	andi	r5,r2,65535
 8005cf0:	2149c83a 	sub	r4,r4,r5
 8005cf4:	2421883a 	add	r16,r4,r16
 8005cf8:	8008943a 	slli	r4,r16,16
 8005cfc:	18ffffcc 	andi	r3,r3,65535
 8005d00:	102cd43a 	srli	r22,r2,16
 8005d04:	20c8b03a 	or	r4,r4,r3
 8005d08:	a1000015 	stw	r4,0(r20)
 8005d0c:	8021d43a 	srai	r16,r16,16
 8005d10:	a5000104 	addi	r20,r20,4
 8005d14:	e47fe32e 	bgeu	fp,r17,8005ca4 <__alt_data_end+0xfc005ca4>
 8005d18:	d8c00317 	ldw	r3,12(sp)
 8005d1c:	18800017 	ldw	r2,0(r3)
 8005d20:	10000c1e 	bne	r2,zero,8005d54 <quorem+0x13c>
 8005d24:	18bfff04 	addi	r2,r3,-4
 8005d28:	9880082e 	bgeu	r19,r2,8005d4c <quorem+0x134>
 8005d2c:	18ffff17 	ldw	r3,-4(r3)
 8005d30:	18000326 	beq	r3,zero,8005d40 <quorem+0x128>
 8005d34:	00000506 	br	8005d4c <quorem+0x134>
 8005d38:	10c00017 	ldw	r3,0(r2)
 8005d3c:	1800031e 	bne	r3,zero,8005d4c <quorem+0x134>
 8005d40:	10bfff04 	addi	r2,r2,-4
 8005d44:	bdffffc4 	addi	r23,r23,-1
 8005d48:	98bffb36 	bltu	r19,r2,8005d38 <__alt_data_end+0xfc005d38>
 8005d4c:	d8c00017 	ldw	r3,0(sp)
 8005d50:	1dc00415 	stw	r23,16(r3)
 8005d54:	d9400217 	ldw	r5,8(sp)
 8005d58:	d9000017 	ldw	r4,0(sp)
 8005d5c:	80097100 	call	8009710 <__mcmp>
 8005d60:	10002816 	blt	r2,zero,8005e04 <quorem+0x1ec>
 8005d64:	dc400117 	ldw	r17,4(sp)
 8005d68:	94800044 	addi	r18,r18,1
 8005d6c:	980d883a 	mov	r6,r19
 8005d70:	0007883a 	mov	r3,zero
 8005d74:	31000017 	ldw	r4,0(r6)
 8005d78:	89400017 	ldw	r5,0(r17)
 8005d7c:	31800104 	addi	r6,r6,4
 8005d80:	20bfffcc 	andi	r2,r4,65535
 8005d84:	10c7883a 	add	r3,r2,r3
 8005d88:	28bfffcc 	andi	r2,r5,65535
 8005d8c:	1885c83a 	sub	r2,r3,r2
 8005d90:	280ad43a 	srli	r5,r5,16
 8005d94:	2008d43a 	srli	r4,r4,16
 8005d98:	1007d43a 	srai	r3,r2,16
 8005d9c:	10bfffcc 	andi	r2,r2,65535
 8005da0:	2149c83a 	sub	r4,r4,r5
 8005da4:	20c9883a 	add	r4,r4,r3
 8005da8:	200a943a 	slli	r5,r4,16
 8005dac:	8c400104 	addi	r17,r17,4
 8005db0:	2007d43a 	srai	r3,r4,16
 8005db4:	2884b03a 	or	r2,r5,r2
 8005db8:	30bfff15 	stw	r2,-4(r6)
 8005dbc:	e47fed2e 	bgeu	fp,r17,8005d74 <__alt_data_end+0xfc005d74>
 8005dc0:	bdc5883a 	add	r2,r23,r23
 8005dc4:	1085883a 	add	r2,r2,r2
 8005dc8:	9887883a 	add	r3,r19,r2
 8005dcc:	18800017 	ldw	r2,0(r3)
 8005dd0:	10000c1e 	bne	r2,zero,8005e04 <quorem+0x1ec>
 8005dd4:	18bfff04 	addi	r2,r3,-4
 8005dd8:	9880082e 	bgeu	r19,r2,8005dfc <quorem+0x1e4>
 8005ddc:	18ffff17 	ldw	r3,-4(r3)
 8005de0:	18000326 	beq	r3,zero,8005df0 <quorem+0x1d8>
 8005de4:	00000506 	br	8005dfc <quorem+0x1e4>
 8005de8:	10c00017 	ldw	r3,0(r2)
 8005dec:	1800031e 	bne	r3,zero,8005dfc <quorem+0x1e4>
 8005df0:	10bfff04 	addi	r2,r2,-4
 8005df4:	bdffffc4 	addi	r23,r23,-1
 8005df8:	98bffb36 	bltu	r19,r2,8005de8 <__alt_data_end+0xfc005de8>
 8005dfc:	d8c00017 	ldw	r3,0(sp)
 8005e00:	1dc00415 	stw	r23,16(r3)
 8005e04:	9005883a 	mov	r2,r18
 8005e08:	dfc00d17 	ldw	ra,52(sp)
 8005e0c:	df000c17 	ldw	fp,48(sp)
 8005e10:	ddc00b17 	ldw	r23,44(sp)
 8005e14:	dd800a17 	ldw	r22,40(sp)
 8005e18:	dd400917 	ldw	r21,36(sp)
 8005e1c:	dd000817 	ldw	r20,32(sp)
 8005e20:	dcc00717 	ldw	r19,28(sp)
 8005e24:	dc800617 	ldw	r18,24(sp)
 8005e28:	dc400517 	ldw	r17,20(sp)
 8005e2c:	dc000417 	ldw	r16,16(sp)
 8005e30:	dec00e04 	addi	sp,sp,56
 8005e34:	f800283a 	ret
 8005e38:	0005883a 	mov	r2,zero
 8005e3c:	003ff206 	br	8005e08 <__alt_data_end+0xfc005e08>

08005e40 <_dtoa_r>:
 8005e40:	20801017 	ldw	r2,64(r4)
 8005e44:	deffde04 	addi	sp,sp,-136
 8005e48:	df002015 	stw	fp,128(sp)
 8005e4c:	dcc01b15 	stw	r19,108(sp)
 8005e50:	dc801a15 	stw	r18,104(sp)
 8005e54:	dc401915 	stw	r17,100(sp)
 8005e58:	dc001815 	stw	r16,96(sp)
 8005e5c:	dfc02115 	stw	ra,132(sp)
 8005e60:	ddc01f15 	stw	r23,124(sp)
 8005e64:	dd801e15 	stw	r22,120(sp)
 8005e68:	dd401d15 	stw	r21,116(sp)
 8005e6c:	dd001c15 	stw	r20,112(sp)
 8005e70:	d9c00315 	stw	r7,12(sp)
 8005e74:	2039883a 	mov	fp,r4
 8005e78:	3023883a 	mov	r17,r6
 8005e7c:	2825883a 	mov	r18,r5
 8005e80:	dc002417 	ldw	r16,144(sp)
 8005e84:	3027883a 	mov	r19,r6
 8005e88:	10000826 	beq	r2,zero,8005eac <_dtoa_r+0x6c>
 8005e8c:	21801117 	ldw	r6,68(r4)
 8005e90:	00c00044 	movi	r3,1
 8005e94:	100b883a 	mov	r5,r2
 8005e98:	1986983a 	sll	r3,r3,r6
 8005e9c:	11800115 	stw	r6,4(r2)
 8005ea0:	10c00215 	stw	r3,8(r2)
 8005ea4:	8008e340 	call	8008e34 <_Bfree>
 8005ea8:	e0001015 	stw	zero,64(fp)
 8005eac:	88002e16 	blt	r17,zero,8005f68 <_dtoa_r+0x128>
 8005eb0:	80000015 	stw	zero,0(r16)
 8005eb4:	889ffc2c 	andhi	r2,r17,32752
 8005eb8:	00dffc34 	movhi	r3,32752
 8005ebc:	10c01c26 	beq	r2,r3,8005f30 <_dtoa_r+0xf0>
 8005ec0:	000d883a 	mov	r6,zero
 8005ec4:	000f883a 	mov	r7,zero
 8005ec8:	9009883a 	mov	r4,r18
 8005ecc:	980b883a 	mov	r5,r19
 8005ed0:	80101a80 	call	80101a8 <__eqdf2>
 8005ed4:	10002b1e 	bne	r2,zero,8005f84 <_dtoa_r+0x144>
 8005ed8:	d9c02317 	ldw	r7,140(sp)
 8005edc:	00800044 	movi	r2,1
 8005ee0:	38800015 	stw	r2,0(r7)
 8005ee4:	d8802517 	ldw	r2,148(sp)
 8005ee8:	10019e26 	beq	r2,zero,8006564 <_dtoa_r+0x724>
 8005eec:	d8c02517 	ldw	r3,148(sp)
 8005ef0:	00820074 	movhi	r2,2049
 8005ef4:	10909f44 	addi	r2,r2,17021
 8005ef8:	18800015 	stw	r2,0(r3)
 8005efc:	10bfffc4 	addi	r2,r2,-1
 8005f00:	dfc02117 	ldw	ra,132(sp)
 8005f04:	df002017 	ldw	fp,128(sp)
 8005f08:	ddc01f17 	ldw	r23,124(sp)
 8005f0c:	dd801e17 	ldw	r22,120(sp)
 8005f10:	dd401d17 	ldw	r21,116(sp)
 8005f14:	dd001c17 	ldw	r20,112(sp)
 8005f18:	dcc01b17 	ldw	r19,108(sp)
 8005f1c:	dc801a17 	ldw	r18,104(sp)
 8005f20:	dc401917 	ldw	r17,100(sp)
 8005f24:	dc001817 	ldw	r16,96(sp)
 8005f28:	dec02204 	addi	sp,sp,136
 8005f2c:	f800283a 	ret
 8005f30:	d8c02317 	ldw	r3,140(sp)
 8005f34:	0089c3c4 	movi	r2,9999
 8005f38:	18800015 	stw	r2,0(r3)
 8005f3c:	90017726 	beq	r18,zero,800651c <_dtoa_r+0x6dc>
 8005f40:	00820074 	movhi	r2,2049
 8005f44:	1090b304 	addi	r2,r2,17100
 8005f48:	d9002517 	ldw	r4,148(sp)
 8005f4c:	203fec26 	beq	r4,zero,8005f00 <__alt_data_end+0xfc005f00>
 8005f50:	10c000c7 	ldb	r3,3(r2)
 8005f54:	1801781e 	bne	r3,zero,8006538 <_dtoa_r+0x6f8>
 8005f58:	10c000c4 	addi	r3,r2,3
 8005f5c:	d9802517 	ldw	r6,148(sp)
 8005f60:	30c00015 	stw	r3,0(r6)
 8005f64:	003fe606 	br	8005f00 <__alt_data_end+0xfc005f00>
 8005f68:	04e00034 	movhi	r19,32768
 8005f6c:	9cffffc4 	addi	r19,r19,-1
 8005f70:	00800044 	movi	r2,1
 8005f74:	8ce6703a 	and	r19,r17,r19
 8005f78:	80800015 	stw	r2,0(r16)
 8005f7c:	9823883a 	mov	r17,r19
 8005f80:	003fcc06 	br	8005eb4 <__alt_data_end+0xfc005eb4>
 8005f84:	d8800204 	addi	r2,sp,8
 8005f88:	d8800015 	stw	r2,0(sp)
 8005f8c:	d9c00104 	addi	r7,sp,4
 8005f90:	900b883a 	mov	r5,r18
 8005f94:	980d883a 	mov	r6,r19
 8005f98:	e009883a 	mov	r4,fp
 8005f9c:	8820d53a 	srli	r16,r17,20
 8005fa0:	8009adc0 	call	8009adc <__d2b>
 8005fa4:	d8800915 	stw	r2,36(sp)
 8005fa8:	8001651e 	bne	r16,zero,8006540 <_dtoa_r+0x700>
 8005fac:	dd800217 	ldw	r22,8(sp)
 8005fb0:	dc000117 	ldw	r16,4(sp)
 8005fb4:	00800804 	movi	r2,32
 8005fb8:	b421883a 	add	r16,r22,r16
 8005fbc:	80c10c84 	addi	r3,r16,1074
 8005fc0:	10c2d10e 	bge	r2,r3,8006b08 <_dtoa_r+0xcc8>
 8005fc4:	00801004 	movi	r2,64
 8005fc8:	81010484 	addi	r4,r16,1042
 8005fcc:	10c7c83a 	sub	r3,r2,r3
 8005fd0:	9108d83a 	srl	r4,r18,r4
 8005fd4:	88e2983a 	sll	r17,r17,r3
 8005fd8:	2448b03a 	or	r4,r4,r17
 8005fdc:	80116c40 	call	80116c4 <__floatunsidf>
 8005fe0:	017f8434 	movhi	r5,65040
 8005fe4:	01800044 	movi	r6,1
 8005fe8:	1009883a 	mov	r4,r2
 8005fec:	194b883a 	add	r5,r3,r5
 8005ff0:	843fffc4 	addi	r16,r16,-1
 8005ff4:	d9801115 	stw	r6,68(sp)
 8005ff8:	000d883a 	mov	r6,zero
 8005ffc:	01cffe34 	movhi	r7,16376
 8006000:	8010c6c0 	call	8010c6c <__subdf3>
 8006004:	0198dbf4 	movhi	r6,25455
 8006008:	01cff4f4 	movhi	r7,16339
 800600c:	3190d844 	addi	r6,r6,17249
 8006010:	39e1e9c4 	addi	r7,r7,-30809
 8006014:	1009883a 	mov	r4,r2
 8006018:	180b883a 	mov	r5,r3
 800601c:	80104000 	call	8010400 <__muldf3>
 8006020:	01a2d874 	movhi	r6,35681
 8006024:	01cff1f4 	movhi	r7,16327
 8006028:	31b22cc4 	addi	r6,r6,-14157
 800602c:	39e28a04 	addi	r7,r7,-30168
 8006030:	180b883a 	mov	r5,r3
 8006034:	1009883a 	mov	r4,r2
 8006038:	800ef2c0 	call	800ef2c <__adddf3>
 800603c:	8009883a 	mov	r4,r16
 8006040:	1029883a 	mov	r20,r2
 8006044:	1823883a 	mov	r17,r3
 8006048:	80115e80 	call	80115e8 <__floatsidf>
 800604c:	019427f4 	movhi	r6,20639
 8006050:	01cff4f4 	movhi	r7,16339
 8006054:	319e7ec4 	addi	r6,r6,31227
 8006058:	39d104c4 	addi	r7,r7,17427
 800605c:	1009883a 	mov	r4,r2
 8006060:	180b883a 	mov	r5,r3
 8006064:	80104000 	call	8010400 <__muldf3>
 8006068:	100d883a 	mov	r6,r2
 800606c:	180f883a 	mov	r7,r3
 8006070:	a009883a 	mov	r4,r20
 8006074:	880b883a 	mov	r5,r17
 8006078:	800ef2c0 	call	800ef2c <__adddf3>
 800607c:	1009883a 	mov	r4,r2
 8006080:	180b883a 	mov	r5,r3
 8006084:	1029883a 	mov	r20,r2
 8006088:	1823883a 	mov	r17,r3
 800608c:	80115680 	call	8011568 <__fixdfsi>
 8006090:	000d883a 	mov	r6,zero
 8006094:	000f883a 	mov	r7,zero
 8006098:	a009883a 	mov	r4,r20
 800609c:	880b883a 	mov	r5,r17
 80060a0:	d8800515 	stw	r2,20(sp)
 80060a4:	801030c0 	call	801030c <__ledf2>
 80060a8:	10028716 	blt	r2,zero,8006ac8 <_dtoa_r+0xc88>
 80060ac:	d8c00517 	ldw	r3,20(sp)
 80060b0:	00800584 	movi	r2,22
 80060b4:	10c27536 	bltu	r2,r3,8006a8c <_dtoa_r+0xc4c>
 80060b8:	180490fa 	slli	r2,r3,3
 80060bc:	00c20074 	movhi	r3,2049
 80060c0:	18d0cf04 	addi	r3,r3,17212
 80060c4:	1885883a 	add	r2,r3,r2
 80060c8:	11000017 	ldw	r4,0(r2)
 80060cc:	11400117 	ldw	r5,4(r2)
 80060d0:	900d883a 	mov	r6,r18
 80060d4:	980f883a 	mov	r7,r19
 80060d8:	80102300 	call	8010230 <__gedf2>
 80060dc:	00828d0e 	bge	zero,r2,8006b14 <_dtoa_r+0xcd4>
 80060e0:	d9000517 	ldw	r4,20(sp)
 80060e4:	d8000e15 	stw	zero,56(sp)
 80060e8:	213fffc4 	addi	r4,r4,-1
 80060ec:	d9000515 	stw	r4,20(sp)
 80060f0:	b42dc83a 	sub	r22,r22,r16
 80060f4:	b5bfffc4 	addi	r22,r22,-1
 80060f8:	b0026f16 	blt	r22,zero,8006ab8 <_dtoa_r+0xc78>
 80060fc:	d8000815 	stw	zero,32(sp)
 8006100:	d9c00517 	ldw	r7,20(sp)
 8006104:	38026416 	blt	r7,zero,8006a98 <_dtoa_r+0xc58>
 8006108:	b1ed883a 	add	r22,r22,r7
 800610c:	d9c00d15 	stw	r7,52(sp)
 8006110:	d8000a15 	stw	zero,40(sp)
 8006114:	d9800317 	ldw	r6,12(sp)
 8006118:	00800244 	movi	r2,9
 800611c:	11811436 	bltu	r2,r6,8006570 <_dtoa_r+0x730>
 8006120:	00800144 	movi	r2,5
 8006124:	1184e10e 	bge	r2,r6,80074ac <_dtoa_r+0x166c>
 8006128:	31bfff04 	addi	r6,r6,-4
 800612c:	d9800315 	stw	r6,12(sp)
 8006130:	0023883a 	mov	r17,zero
 8006134:	d9800317 	ldw	r6,12(sp)
 8006138:	008000c4 	movi	r2,3
 800613c:	30836726 	beq	r6,r2,8006edc <_dtoa_r+0x109c>
 8006140:	1183410e 	bge	r2,r6,8006e48 <_dtoa_r+0x1008>
 8006144:	d9c00317 	ldw	r7,12(sp)
 8006148:	00800104 	movi	r2,4
 800614c:	38827c26 	beq	r7,r2,8006b40 <_dtoa_r+0xd00>
 8006150:	00800144 	movi	r2,5
 8006154:	3884c41e 	bne	r7,r2,8007468 <_dtoa_r+0x1628>
 8006158:	00800044 	movi	r2,1
 800615c:	d8800b15 	stw	r2,44(sp)
 8006160:	d8c00517 	ldw	r3,20(sp)
 8006164:	d9002217 	ldw	r4,136(sp)
 8006168:	1907883a 	add	r3,r3,r4
 800616c:	19800044 	addi	r6,r3,1
 8006170:	d8c00c15 	stw	r3,48(sp)
 8006174:	d9800615 	stw	r6,24(sp)
 8006178:	0183a40e 	bge	zero,r6,800700c <_dtoa_r+0x11cc>
 800617c:	d9800617 	ldw	r6,24(sp)
 8006180:	3021883a 	mov	r16,r6
 8006184:	e0001115 	stw	zero,68(fp)
 8006188:	008005c4 	movi	r2,23
 800618c:	1184c92e 	bgeu	r2,r6,80074b4 <_dtoa_r+0x1674>
 8006190:	00c00044 	movi	r3,1
 8006194:	00800104 	movi	r2,4
 8006198:	1085883a 	add	r2,r2,r2
 800619c:	11000504 	addi	r4,r2,20
 80061a0:	180b883a 	mov	r5,r3
 80061a4:	18c00044 	addi	r3,r3,1
 80061a8:	313ffb2e 	bgeu	r6,r4,8006198 <__alt_data_end+0xfc006198>
 80061ac:	e1401115 	stw	r5,68(fp)
 80061b0:	e009883a 	mov	r4,fp
 80061b4:	8008d8c0 	call	8008d8c <_Balloc>
 80061b8:	d8800715 	stw	r2,28(sp)
 80061bc:	e0801015 	stw	r2,64(fp)
 80061c0:	00800384 	movi	r2,14
 80061c4:	1400f736 	bltu	r2,r16,80065a4 <_dtoa_r+0x764>
 80061c8:	8800f626 	beq	r17,zero,80065a4 <_dtoa_r+0x764>
 80061cc:	d9c00517 	ldw	r7,20(sp)
 80061d0:	01c39a0e 	bge	zero,r7,800703c <_dtoa_r+0x11fc>
 80061d4:	388003cc 	andi	r2,r7,15
 80061d8:	100490fa 	slli	r2,r2,3
 80061dc:	382bd13a 	srai	r21,r7,4
 80061e0:	00c20074 	movhi	r3,2049
 80061e4:	18d0cf04 	addi	r3,r3,17212
 80061e8:	1885883a 	add	r2,r3,r2
 80061ec:	a8c0040c 	andi	r3,r21,16
 80061f0:	12400017 	ldw	r9,0(r2)
 80061f4:	12000117 	ldw	r8,4(r2)
 80061f8:	18037926 	beq	r3,zero,8006fe0 <_dtoa_r+0x11a0>
 80061fc:	00820074 	movhi	r2,2049
 8006200:	1090c504 	addi	r2,r2,17172
 8006204:	11800817 	ldw	r6,32(r2)
 8006208:	11c00917 	ldw	r7,36(r2)
 800620c:	9009883a 	mov	r4,r18
 8006210:	980b883a 	mov	r5,r19
 8006214:	da001715 	stw	r8,92(sp)
 8006218:	da401615 	stw	r9,88(sp)
 800621c:	800f7d80 	call	800f7d8 <__divdf3>
 8006220:	da001717 	ldw	r8,92(sp)
 8006224:	da401617 	ldw	r9,88(sp)
 8006228:	ad4003cc 	andi	r21,r21,15
 800622c:	040000c4 	movi	r16,3
 8006230:	1023883a 	mov	r17,r2
 8006234:	1829883a 	mov	r20,r3
 8006238:	a8001126 	beq	r21,zero,8006280 <_dtoa_r+0x440>
 800623c:	05c20074 	movhi	r23,2049
 8006240:	bdd0c504 	addi	r23,r23,17172
 8006244:	4805883a 	mov	r2,r9
 8006248:	4007883a 	mov	r3,r8
 800624c:	a980004c 	andi	r6,r21,1
 8006250:	1009883a 	mov	r4,r2
 8006254:	a82bd07a 	srai	r21,r21,1
 8006258:	180b883a 	mov	r5,r3
 800625c:	30000426 	beq	r6,zero,8006270 <_dtoa_r+0x430>
 8006260:	b9800017 	ldw	r6,0(r23)
 8006264:	b9c00117 	ldw	r7,4(r23)
 8006268:	84000044 	addi	r16,r16,1
 800626c:	80104000 	call	8010400 <__muldf3>
 8006270:	bdc00204 	addi	r23,r23,8
 8006274:	a83ff51e 	bne	r21,zero,800624c <__alt_data_end+0xfc00624c>
 8006278:	1013883a 	mov	r9,r2
 800627c:	1811883a 	mov	r8,r3
 8006280:	480d883a 	mov	r6,r9
 8006284:	400f883a 	mov	r7,r8
 8006288:	8809883a 	mov	r4,r17
 800628c:	a00b883a 	mov	r5,r20
 8006290:	800f7d80 	call	800f7d8 <__divdf3>
 8006294:	d8800f15 	stw	r2,60(sp)
 8006298:	d8c01015 	stw	r3,64(sp)
 800629c:	d8c00e17 	ldw	r3,56(sp)
 80062a0:	18000626 	beq	r3,zero,80062bc <_dtoa_r+0x47c>
 80062a4:	d9000f17 	ldw	r4,60(sp)
 80062a8:	d9401017 	ldw	r5,64(sp)
 80062ac:	000d883a 	mov	r6,zero
 80062b0:	01cffc34 	movhi	r7,16368
 80062b4:	801030c0 	call	801030c <__ledf2>
 80062b8:	10040b16 	blt	r2,zero,80072e8 <_dtoa_r+0x14a8>
 80062bc:	8009883a 	mov	r4,r16
 80062c0:	80115e80 	call	80115e8 <__floatsidf>
 80062c4:	d9800f17 	ldw	r6,60(sp)
 80062c8:	d9c01017 	ldw	r7,64(sp)
 80062cc:	1009883a 	mov	r4,r2
 80062d0:	180b883a 	mov	r5,r3
 80062d4:	80104000 	call	8010400 <__muldf3>
 80062d8:	000d883a 	mov	r6,zero
 80062dc:	01d00734 	movhi	r7,16412
 80062e0:	1009883a 	mov	r4,r2
 80062e4:	180b883a 	mov	r5,r3
 80062e8:	800ef2c0 	call	800ef2c <__adddf3>
 80062ec:	1021883a 	mov	r16,r2
 80062f0:	d8800617 	ldw	r2,24(sp)
 80062f4:	047f3034 	movhi	r17,64704
 80062f8:	1c63883a 	add	r17,r3,r17
 80062fc:	10031826 	beq	r2,zero,8006f60 <_dtoa_r+0x1120>
 8006300:	d8c00517 	ldw	r3,20(sp)
 8006304:	db000617 	ldw	r12,24(sp)
 8006308:	d8c01315 	stw	r3,76(sp)
 800630c:	d9000b17 	ldw	r4,44(sp)
 8006310:	20038f26 	beq	r4,zero,8007150 <_dtoa_r+0x1310>
 8006314:	60bfffc4 	addi	r2,r12,-1
 8006318:	100490fa 	slli	r2,r2,3
 800631c:	00c20074 	movhi	r3,2049
 8006320:	18d0cf04 	addi	r3,r3,17212
 8006324:	1885883a 	add	r2,r3,r2
 8006328:	11800017 	ldw	r6,0(r2)
 800632c:	11c00117 	ldw	r7,4(r2)
 8006330:	d8800717 	ldw	r2,28(sp)
 8006334:	0009883a 	mov	r4,zero
 8006338:	014ff834 	movhi	r5,16352
 800633c:	db001615 	stw	r12,88(sp)
 8006340:	15c00044 	addi	r23,r2,1
 8006344:	800f7d80 	call	800f7d8 <__divdf3>
 8006348:	800d883a 	mov	r6,r16
 800634c:	880f883a 	mov	r7,r17
 8006350:	1009883a 	mov	r4,r2
 8006354:	180b883a 	mov	r5,r3
 8006358:	8010c6c0 	call	8010c6c <__subdf3>
 800635c:	d9401017 	ldw	r5,64(sp)
 8006360:	d9000f17 	ldw	r4,60(sp)
 8006364:	102b883a 	mov	r21,r2
 8006368:	d8c01215 	stw	r3,72(sp)
 800636c:	80115680 	call	8011568 <__fixdfsi>
 8006370:	1009883a 	mov	r4,r2
 8006374:	1029883a 	mov	r20,r2
 8006378:	80115e80 	call	80115e8 <__floatsidf>
 800637c:	d9000f17 	ldw	r4,60(sp)
 8006380:	d9401017 	ldw	r5,64(sp)
 8006384:	100d883a 	mov	r6,r2
 8006388:	180f883a 	mov	r7,r3
 800638c:	8010c6c0 	call	8010c6c <__subdf3>
 8006390:	1823883a 	mov	r17,r3
 8006394:	d8c00717 	ldw	r3,28(sp)
 8006398:	d9401217 	ldw	r5,72(sp)
 800639c:	a2000c04 	addi	r8,r20,48
 80063a0:	1021883a 	mov	r16,r2
 80063a4:	1a000005 	stb	r8,0(r3)
 80063a8:	800d883a 	mov	r6,r16
 80063ac:	880f883a 	mov	r7,r17
 80063b0:	a809883a 	mov	r4,r21
 80063b4:	4029883a 	mov	r20,r8
 80063b8:	80102300 	call	8010230 <__gedf2>
 80063bc:	00841d16 	blt	zero,r2,8007434 <_dtoa_r+0x15f4>
 80063c0:	800d883a 	mov	r6,r16
 80063c4:	880f883a 	mov	r7,r17
 80063c8:	0009883a 	mov	r4,zero
 80063cc:	014ffc34 	movhi	r5,16368
 80063d0:	8010c6c0 	call	8010c6c <__subdf3>
 80063d4:	d9401217 	ldw	r5,72(sp)
 80063d8:	100d883a 	mov	r6,r2
 80063dc:	180f883a 	mov	r7,r3
 80063e0:	a809883a 	mov	r4,r21
 80063e4:	80102300 	call	8010230 <__gedf2>
 80063e8:	db001617 	ldw	r12,88(sp)
 80063ec:	00840e16 	blt	zero,r2,8007428 <_dtoa_r+0x15e8>
 80063f0:	00800044 	movi	r2,1
 80063f4:	13006b0e 	bge	r2,r12,80065a4 <_dtoa_r+0x764>
 80063f8:	d9000717 	ldw	r4,28(sp)
 80063fc:	dd800f15 	stw	r22,60(sp)
 8006400:	dcc01015 	stw	r19,64(sp)
 8006404:	2319883a 	add	r12,r4,r12
 8006408:	dcc01217 	ldw	r19,72(sp)
 800640c:	602d883a 	mov	r22,r12
 8006410:	dc801215 	stw	r18,72(sp)
 8006414:	b825883a 	mov	r18,r23
 8006418:	00000906 	br	8006440 <_dtoa_r+0x600>
 800641c:	8010c6c0 	call	8010c6c <__subdf3>
 8006420:	a80d883a 	mov	r6,r21
 8006424:	980f883a 	mov	r7,r19
 8006428:	1009883a 	mov	r4,r2
 800642c:	180b883a 	mov	r5,r3
 8006430:	801030c0 	call	801030c <__ledf2>
 8006434:	1003e816 	blt	r2,zero,80073d8 <_dtoa_r+0x1598>
 8006438:	b825883a 	mov	r18,r23
 800643c:	bd83e926 	beq	r23,r22,80073e4 <_dtoa_r+0x15a4>
 8006440:	a809883a 	mov	r4,r21
 8006444:	980b883a 	mov	r5,r19
 8006448:	000d883a 	mov	r6,zero
 800644c:	01d00934 	movhi	r7,16420
 8006450:	80104000 	call	8010400 <__muldf3>
 8006454:	000d883a 	mov	r6,zero
 8006458:	01d00934 	movhi	r7,16420
 800645c:	8009883a 	mov	r4,r16
 8006460:	880b883a 	mov	r5,r17
 8006464:	102b883a 	mov	r21,r2
 8006468:	1827883a 	mov	r19,r3
 800646c:	80104000 	call	8010400 <__muldf3>
 8006470:	180b883a 	mov	r5,r3
 8006474:	1009883a 	mov	r4,r2
 8006478:	1821883a 	mov	r16,r3
 800647c:	1023883a 	mov	r17,r2
 8006480:	80115680 	call	8011568 <__fixdfsi>
 8006484:	1009883a 	mov	r4,r2
 8006488:	1029883a 	mov	r20,r2
 800648c:	80115e80 	call	80115e8 <__floatsidf>
 8006490:	8809883a 	mov	r4,r17
 8006494:	800b883a 	mov	r5,r16
 8006498:	100d883a 	mov	r6,r2
 800649c:	180f883a 	mov	r7,r3
 80064a0:	8010c6c0 	call	8010c6c <__subdf3>
 80064a4:	a5000c04 	addi	r20,r20,48
 80064a8:	a80d883a 	mov	r6,r21
 80064ac:	980f883a 	mov	r7,r19
 80064b0:	1009883a 	mov	r4,r2
 80064b4:	180b883a 	mov	r5,r3
 80064b8:	95000005 	stb	r20,0(r18)
 80064bc:	1021883a 	mov	r16,r2
 80064c0:	1823883a 	mov	r17,r3
 80064c4:	801030c0 	call	801030c <__ledf2>
 80064c8:	bdc00044 	addi	r23,r23,1
 80064cc:	800d883a 	mov	r6,r16
 80064d0:	880f883a 	mov	r7,r17
 80064d4:	0009883a 	mov	r4,zero
 80064d8:	014ffc34 	movhi	r5,16368
 80064dc:	103fcf0e 	bge	r2,zero,800641c <__alt_data_end+0xfc00641c>
 80064e0:	d8c01317 	ldw	r3,76(sp)
 80064e4:	d8c00515 	stw	r3,20(sp)
 80064e8:	d9400917 	ldw	r5,36(sp)
 80064ec:	e009883a 	mov	r4,fp
 80064f0:	8008e340 	call	8008e34 <_Bfree>
 80064f4:	d9000517 	ldw	r4,20(sp)
 80064f8:	d9802317 	ldw	r6,140(sp)
 80064fc:	d9c02517 	ldw	r7,148(sp)
 8006500:	b8000005 	stb	zero,0(r23)
 8006504:	20800044 	addi	r2,r4,1
 8006508:	30800015 	stw	r2,0(r6)
 800650c:	3802aa26 	beq	r7,zero,8006fb8 <_dtoa_r+0x1178>
 8006510:	3dc00015 	stw	r23,0(r7)
 8006514:	d8800717 	ldw	r2,28(sp)
 8006518:	003e7906 	br	8005f00 <__alt_data_end+0xfc005f00>
 800651c:	00800434 	movhi	r2,16
 8006520:	10bfffc4 	addi	r2,r2,-1
 8006524:	88a2703a 	and	r17,r17,r2
 8006528:	883e851e 	bne	r17,zero,8005f40 <__alt_data_end+0xfc005f40>
 800652c:	00820074 	movhi	r2,2049
 8006530:	1090b004 	addi	r2,r2,17088
 8006534:	003e8406 	br	8005f48 <__alt_data_end+0xfc005f48>
 8006538:	10c00204 	addi	r3,r2,8
 800653c:	003e8706 	br	8005f5c <__alt_data_end+0xfc005f5c>
 8006540:	01400434 	movhi	r5,16
 8006544:	297fffc4 	addi	r5,r5,-1
 8006548:	994a703a 	and	r5,r19,r5
 800654c:	9009883a 	mov	r4,r18
 8006550:	843f0044 	addi	r16,r16,-1023
 8006554:	294ffc34 	orhi	r5,r5,16368
 8006558:	dd800217 	ldw	r22,8(sp)
 800655c:	d8001115 	stw	zero,68(sp)
 8006560:	003ea506 	br	8005ff8 <__alt_data_end+0xfc005ff8>
 8006564:	00820074 	movhi	r2,2049
 8006568:	10909f04 	addi	r2,r2,17020
 800656c:	003e6406 	br	8005f00 <__alt_data_end+0xfc005f00>
 8006570:	e0001115 	stw	zero,68(fp)
 8006574:	000b883a 	mov	r5,zero
 8006578:	e009883a 	mov	r4,fp
 800657c:	8008d8c0 	call	8008d8c <_Balloc>
 8006580:	01bfffc4 	movi	r6,-1
 8006584:	01c00044 	movi	r7,1
 8006588:	d8800715 	stw	r2,28(sp)
 800658c:	d9800c15 	stw	r6,48(sp)
 8006590:	e0801015 	stw	r2,64(fp)
 8006594:	d8000315 	stw	zero,12(sp)
 8006598:	d9c00b15 	stw	r7,44(sp)
 800659c:	d9800615 	stw	r6,24(sp)
 80065a0:	d8002215 	stw	zero,136(sp)
 80065a4:	d8800117 	ldw	r2,4(sp)
 80065a8:	10008916 	blt	r2,zero,80067d0 <_dtoa_r+0x990>
 80065ac:	d9000517 	ldw	r4,20(sp)
 80065b0:	00c00384 	movi	r3,14
 80065b4:	19008616 	blt	r3,r4,80067d0 <_dtoa_r+0x990>
 80065b8:	200490fa 	slli	r2,r4,3
 80065bc:	00c20074 	movhi	r3,2049
 80065c0:	d9802217 	ldw	r6,136(sp)
 80065c4:	18d0cf04 	addi	r3,r3,17212
 80065c8:	1885883a 	add	r2,r3,r2
 80065cc:	14000017 	ldw	r16,0(r2)
 80065d0:	14400117 	ldw	r17,4(r2)
 80065d4:	30016316 	blt	r6,zero,8006b64 <_dtoa_r+0xd24>
 80065d8:	800d883a 	mov	r6,r16
 80065dc:	880f883a 	mov	r7,r17
 80065e0:	9009883a 	mov	r4,r18
 80065e4:	980b883a 	mov	r5,r19
 80065e8:	800f7d80 	call	800f7d8 <__divdf3>
 80065ec:	180b883a 	mov	r5,r3
 80065f0:	1009883a 	mov	r4,r2
 80065f4:	80115680 	call	8011568 <__fixdfsi>
 80065f8:	1009883a 	mov	r4,r2
 80065fc:	102b883a 	mov	r21,r2
 8006600:	80115e80 	call	80115e8 <__floatsidf>
 8006604:	800d883a 	mov	r6,r16
 8006608:	880f883a 	mov	r7,r17
 800660c:	1009883a 	mov	r4,r2
 8006610:	180b883a 	mov	r5,r3
 8006614:	80104000 	call	8010400 <__muldf3>
 8006618:	100d883a 	mov	r6,r2
 800661c:	180f883a 	mov	r7,r3
 8006620:	9009883a 	mov	r4,r18
 8006624:	980b883a 	mov	r5,r19
 8006628:	8010c6c0 	call	8010c6c <__subdf3>
 800662c:	d9c00717 	ldw	r7,28(sp)
 8006630:	1009883a 	mov	r4,r2
 8006634:	a8800c04 	addi	r2,r21,48
 8006638:	38800005 	stb	r2,0(r7)
 800663c:	3dc00044 	addi	r23,r7,1
 8006640:	d9c00617 	ldw	r7,24(sp)
 8006644:	01800044 	movi	r6,1
 8006648:	180b883a 	mov	r5,r3
 800664c:	2005883a 	mov	r2,r4
 8006650:	39803826 	beq	r7,r6,8006734 <_dtoa_r+0x8f4>
 8006654:	000d883a 	mov	r6,zero
 8006658:	01d00934 	movhi	r7,16420
 800665c:	80104000 	call	8010400 <__muldf3>
 8006660:	000d883a 	mov	r6,zero
 8006664:	000f883a 	mov	r7,zero
 8006668:	1009883a 	mov	r4,r2
 800666c:	180b883a 	mov	r5,r3
 8006670:	1025883a 	mov	r18,r2
 8006674:	1827883a 	mov	r19,r3
 8006678:	80101a80 	call	80101a8 <__eqdf2>
 800667c:	103f9a26 	beq	r2,zero,80064e8 <__alt_data_end+0xfc0064e8>
 8006680:	d9c00617 	ldw	r7,24(sp)
 8006684:	d8c00717 	ldw	r3,28(sp)
 8006688:	b829883a 	mov	r20,r23
 800668c:	38bfffc4 	addi	r2,r7,-1
 8006690:	18ad883a 	add	r22,r3,r2
 8006694:	00000a06 	br	80066c0 <_dtoa_r+0x880>
 8006698:	80104000 	call	8010400 <__muldf3>
 800669c:	000d883a 	mov	r6,zero
 80066a0:	000f883a 	mov	r7,zero
 80066a4:	1009883a 	mov	r4,r2
 80066a8:	180b883a 	mov	r5,r3
 80066ac:	1025883a 	mov	r18,r2
 80066b0:	1827883a 	mov	r19,r3
 80066b4:	b829883a 	mov	r20,r23
 80066b8:	80101a80 	call	80101a8 <__eqdf2>
 80066bc:	103f8a26 	beq	r2,zero,80064e8 <__alt_data_end+0xfc0064e8>
 80066c0:	800d883a 	mov	r6,r16
 80066c4:	880f883a 	mov	r7,r17
 80066c8:	9009883a 	mov	r4,r18
 80066cc:	980b883a 	mov	r5,r19
 80066d0:	800f7d80 	call	800f7d8 <__divdf3>
 80066d4:	180b883a 	mov	r5,r3
 80066d8:	1009883a 	mov	r4,r2
 80066dc:	80115680 	call	8011568 <__fixdfsi>
 80066e0:	1009883a 	mov	r4,r2
 80066e4:	102b883a 	mov	r21,r2
 80066e8:	80115e80 	call	80115e8 <__floatsidf>
 80066ec:	800d883a 	mov	r6,r16
 80066f0:	880f883a 	mov	r7,r17
 80066f4:	1009883a 	mov	r4,r2
 80066f8:	180b883a 	mov	r5,r3
 80066fc:	80104000 	call	8010400 <__muldf3>
 8006700:	100d883a 	mov	r6,r2
 8006704:	180f883a 	mov	r7,r3
 8006708:	9009883a 	mov	r4,r18
 800670c:	980b883a 	mov	r5,r19
 8006710:	8010c6c0 	call	8010c6c <__subdf3>
 8006714:	aa000c04 	addi	r8,r21,48
 8006718:	a2000005 	stb	r8,0(r20)
 800671c:	000d883a 	mov	r6,zero
 8006720:	01d00934 	movhi	r7,16420
 8006724:	1009883a 	mov	r4,r2
 8006728:	180b883a 	mov	r5,r3
 800672c:	a5c00044 	addi	r23,r20,1
 8006730:	b53fd91e 	bne	r22,r20,8006698 <__alt_data_end+0xfc006698>
 8006734:	100d883a 	mov	r6,r2
 8006738:	180f883a 	mov	r7,r3
 800673c:	1009883a 	mov	r4,r2
 8006740:	180b883a 	mov	r5,r3
 8006744:	800ef2c0 	call	800ef2c <__adddf3>
 8006748:	100d883a 	mov	r6,r2
 800674c:	180f883a 	mov	r7,r3
 8006750:	8009883a 	mov	r4,r16
 8006754:	880b883a 	mov	r5,r17
 8006758:	1027883a 	mov	r19,r2
 800675c:	1825883a 	mov	r18,r3
 8006760:	801030c0 	call	801030c <__ledf2>
 8006764:	10000816 	blt	r2,zero,8006788 <_dtoa_r+0x948>
 8006768:	980d883a 	mov	r6,r19
 800676c:	900f883a 	mov	r7,r18
 8006770:	8009883a 	mov	r4,r16
 8006774:	880b883a 	mov	r5,r17
 8006778:	80101a80 	call	80101a8 <__eqdf2>
 800677c:	103f5a1e 	bne	r2,zero,80064e8 <__alt_data_end+0xfc0064e8>
 8006780:	ad40004c 	andi	r21,r21,1
 8006784:	a83f5826 	beq	r21,zero,80064e8 <__alt_data_end+0xfc0064e8>
 8006788:	bd3fffc3 	ldbu	r20,-1(r23)
 800678c:	b8bfffc4 	addi	r2,r23,-1
 8006790:	1007883a 	mov	r3,r2
 8006794:	01400e44 	movi	r5,57
 8006798:	d9800717 	ldw	r6,28(sp)
 800679c:	00000506 	br	80067b4 <_dtoa_r+0x974>
 80067a0:	18ffffc4 	addi	r3,r3,-1
 80067a4:	11824726 	beq	r2,r6,80070c4 <_dtoa_r+0x1284>
 80067a8:	1d000003 	ldbu	r20,0(r3)
 80067ac:	102f883a 	mov	r23,r2
 80067b0:	10bfffc4 	addi	r2,r2,-1
 80067b4:	a1003fcc 	andi	r4,r20,255
 80067b8:	2100201c 	xori	r4,r4,128
 80067bc:	213fe004 	addi	r4,r4,-128
 80067c0:	217ff726 	beq	r4,r5,80067a0 <__alt_data_end+0xfc0067a0>
 80067c4:	a2000044 	addi	r8,r20,1
 80067c8:	12000005 	stb	r8,0(r2)
 80067cc:	003f4606 	br	80064e8 <__alt_data_end+0xfc0064e8>
 80067d0:	d9000b17 	ldw	r4,44(sp)
 80067d4:	2000c826 	beq	r4,zero,8006af8 <_dtoa_r+0xcb8>
 80067d8:	d9800317 	ldw	r6,12(sp)
 80067dc:	00c00044 	movi	r3,1
 80067e0:	1980f90e 	bge	r3,r6,8006bc8 <_dtoa_r+0xd88>
 80067e4:	d8800617 	ldw	r2,24(sp)
 80067e8:	d8c00a17 	ldw	r3,40(sp)
 80067ec:	157fffc4 	addi	r21,r2,-1
 80067f0:	1d41f316 	blt	r3,r21,8006fc0 <_dtoa_r+0x1180>
 80067f4:	1d6bc83a 	sub	r21,r3,r21
 80067f8:	d9c00617 	ldw	r7,24(sp)
 80067fc:	3802aa16 	blt	r7,zero,80072a8 <_dtoa_r+0x1468>
 8006800:	dd000817 	ldw	r20,32(sp)
 8006804:	d8800617 	ldw	r2,24(sp)
 8006808:	d8c00817 	ldw	r3,32(sp)
 800680c:	01400044 	movi	r5,1
 8006810:	e009883a 	mov	r4,fp
 8006814:	1887883a 	add	r3,r3,r2
 8006818:	d8c00815 	stw	r3,32(sp)
 800681c:	b0ad883a 	add	r22,r22,r2
 8006820:	80091c00 	call	80091c0 <__i2b>
 8006824:	1023883a 	mov	r17,r2
 8006828:	a0000826 	beq	r20,zero,800684c <_dtoa_r+0xa0c>
 800682c:	0580070e 	bge	zero,r22,800684c <_dtoa_r+0xa0c>
 8006830:	a005883a 	mov	r2,r20
 8006834:	b500b916 	blt	r22,r20,8006b1c <_dtoa_r+0xcdc>
 8006838:	d9000817 	ldw	r4,32(sp)
 800683c:	a0a9c83a 	sub	r20,r20,r2
 8006840:	b0adc83a 	sub	r22,r22,r2
 8006844:	2089c83a 	sub	r4,r4,r2
 8006848:	d9000815 	stw	r4,32(sp)
 800684c:	d9800a17 	ldw	r6,40(sp)
 8006850:	0181810e 	bge	zero,r6,8006e58 <_dtoa_r+0x1018>
 8006854:	d9c00b17 	ldw	r7,44(sp)
 8006858:	3800b326 	beq	r7,zero,8006b28 <_dtoa_r+0xce8>
 800685c:	a800b226 	beq	r21,zero,8006b28 <_dtoa_r+0xce8>
 8006860:	880b883a 	mov	r5,r17
 8006864:	a80d883a 	mov	r6,r21
 8006868:	e009883a 	mov	r4,fp
 800686c:	80094880 	call	8009488 <__pow5mult>
 8006870:	d9800917 	ldw	r6,36(sp)
 8006874:	100b883a 	mov	r5,r2
 8006878:	e009883a 	mov	r4,fp
 800687c:	1023883a 	mov	r17,r2
 8006880:	80091fc0 	call	80091fc <__multiply>
 8006884:	1021883a 	mov	r16,r2
 8006888:	d8800a17 	ldw	r2,40(sp)
 800688c:	d9400917 	ldw	r5,36(sp)
 8006890:	e009883a 	mov	r4,fp
 8006894:	1545c83a 	sub	r2,r2,r21
 8006898:	d8800a15 	stw	r2,40(sp)
 800689c:	8008e340 	call	8008e34 <_Bfree>
 80068a0:	d8c00a17 	ldw	r3,40(sp)
 80068a4:	18009f1e 	bne	r3,zero,8006b24 <_dtoa_r+0xce4>
 80068a8:	05c00044 	movi	r23,1
 80068ac:	e009883a 	mov	r4,fp
 80068b0:	b80b883a 	mov	r5,r23
 80068b4:	80091c00 	call	80091c0 <__i2b>
 80068b8:	d9000d17 	ldw	r4,52(sp)
 80068bc:	102b883a 	mov	r21,r2
 80068c0:	2000ce26 	beq	r4,zero,8006bfc <_dtoa_r+0xdbc>
 80068c4:	200d883a 	mov	r6,r4
 80068c8:	100b883a 	mov	r5,r2
 80068cc:	e009883a 	mov	r4,fp
 80068d0:	80094880 	call	8009488 <__pow5mult>
 80068d4:	d9800317 	ldw	r6,12(sp)
 80068d8:	102b883a 	mov	r21,r2
 80068dc:	b981810e 	bge	r23,r6,8006ee4 <_dtoa_r+0x10a4>
 80068e0:	0027883a 	mov	r19,zero
 80068e4:	a8800417 	ldw	r2,16(r21)
 80068e8:	05c00804 	movi	r23,32
 80068ec:	10800104 	addi	r2,r2,4
 80068f0:	1085883a 	add	r2,r2,r2
 80068f4:	1085883a 	add	r2,r2,r2
 80068f8:	a885883a 	add	r2,r21,r2
 80068fc:	11000017 	ldw	r4,0(r2)
 8006900:	80090a80 	call	80090a8 <__hi0bits>
 8006904:	b885c83a 	sub	r2,r23,r2
 8006908:	1585883a 	add	r2,r2,r22
 800690c:	108007cc 	andi	r2,r2,31
 8006910:	1000b326 	beq	r2,zero,8006be0 <_dtoa_r+0xda0>
 8006914:	00c00804 	movi	r3,32
 8006918:	1887c83a 	sub	r3,r3,r2
 800691c:	01000104 	movi	r4,4
 8006920:	20c2cd0e 	bge	r4,r3,8007458 <_dtoa_r+0x1618>
 8006924:	00c00704 	movi	r3,28
 8006928:	1885c83a 	sub	r2,r3,r2
 800692c:	d8c00817 	ldw	r3,32(sp)
 8006930:	a0a9883a 	add	r20,r20,r2
 8006934:	b0ad883a 	add	r22,r22,r2
 8006938:	1887883a 	add	r3,r3,r2
 800693c:	d8c00815 	stw	r3,32(sp)
 8006940:	d9800817 	ldw	r6,32(sp)
 8006944:	0180040e 	bge	zero,r6,8006958 <_dtoa_r+0xb18>
 8006948:	800b883a 	mov	r5,r16
 800694c:	e009883a 	mov	r4,fp
 8006950:	80095c80 	call	80095c8 <__lshift>
 8006954:	1021883a 	mov	r16,r2
 8006958:	0580050e 	bge	zero,r22,8006970 <_dtoa_r+0xb30>
 800695c:	a80b883a 	mov	r5,r21
 8006960:	b00d883a 	mov	r6,r22
 8006964:	e009883a 	mov	r4,fp
 8006968:	80095c80 	call	80095c8 <__lshift>
 800696c:	102b883a 	mov	r21,r2
 8006970:	d9c00e17 	ldw	r7,56(sp)
 8006974:	3801211e 	bne	r7,zero,8006dfc <_dtoa_r+0xfbc>
 8006978:	d9800617 	ldw	r6,24(sp)
 800697c:	0181380e 	bge	zero,r6,8006e60 <_dtoa_r+0x1020>
 8006980:	d8c00b17 	ldw	r3,44(sp)
 8006984:	1800ab1e 	bne	r3,zero,8006c34 <_dtoa_r+0xdf4>
 8006988:	dc800717 	ldw	r18,28(sp)
 800698c:	dcc00617 	ldw	r19,24(sp)
 8006990:	9029883a 	mov	r20,r18
 8006994:	00000206 	br	80069a0 <_dtoa_r+0xb60>
 8006998:	8008e5c0 	call	8008e5c <__multadd>
 800699c:	1021883a 	mov	r16,r2
 80069a0:	a80b883a 	mov	r5,r21
 80069a4:	8009883a 	mov	r4,r16
 80069a8:	8005c180 	call	8005c18 <quorem>
 80069ac:	10800c04 	addi	r2,r2,48
 80069b0:	90800005 	stb	r2,0(r18)
 80069b4:	94800044 	addi	r18,r18,1
 80069b8:	9507c83a 	sub	r3,r18,r20
 80069bc:	000f883a 	mov	r7,zero
 80069c0:	01800284 	movi	r6,10
 80069c4:	800b883a 	mov	r5,r16
 80069c8:	e009883a 	mov	r4,fp
 80069cc:	1cfff216 	blt	r3,r19,8006998 <__alt_data_end+0xfc006998>
 80069d0:	1011883a 	mov	r8,r2
 80069d4:	d8800617 	ldw	r2,24(sp)
 80069d8:	0082370e 	bge	zero,r2,80072b8 <_dtoa_r+0x1478>
 80069dc:	d9000717 	ldw	r4,28(sp)
 80069e0:	0025883a 	mov	r18,zero
 80069e4:	20af883a 	add	r23,r4,r2
 80069e8:	01800044 	movi	r6,1
 80069ec:	800b883a 	mov	r5,r16
 80069f0:	e009883a 	mov	r4,fp
 80069f4:	da001715 	stw	r8,92(sp)
 80069f8:	80095c80 	call	80095c8 <__lshift>
 80069fc:	a80b883a 	mov	r5,r21
 8006a00:	1009883a 	mov	r4,r2
 8006a04:	d8800915 	stw	r2,36(sp)
 8006a08:	80097100 	call	8009710 <__mcmp>
 8006a0c:	da001717 	ldw	r8,92(sp)
 8006a10:	0081800e 	bge	zero,r2,8007014 <_dtoa_r+0x11d4>
 8006a14:	b93fffc3 	ldbu	r4,-1(r23)
 8006a18:	b8bfffc4 	addi	r2,r23,-1
 8006a1c:	1007883a 	mov	r3,r2
 8006a20:	01800e44 	movi	r6,57
 8006a24:	d9c00717 	ldw	r7,28(sp)
 8006a28:	00000506 	br	8006a40 <_dtoa_r+0xc00>
 8006a2c:	18ffffc4 	addi	r3,r3,-1
 8006a30:	11c12326 	beq	r2,r7,8006ec0 <_dtoa_r+0x1080>
 8006a34:	19000003 	ldbu	r4,0(r3)
 8006a38:	102f883a 	mov	r23,r2
 8006a3c:	10bfffc4 	addi	r2,r2,-1
 8006a40:	21403fcc 	andi	r5,r4,255
 8006a44:	2940201c 	xori	r5,r5,128
 8006a48:	297fe004 	addi	r5,r5,-128
 8006a4c:	29bff726 	beq	r5,r6,8006a2c <__alt_data_end+0xfc006a2c>
 8006a50:	21000044 	addi	r4,r4,1
 8006a54:	11000005 	stb	r4,0(r2)
 8006a58:	a80b883a 	mov	r5,r21
 8006a5c:	e009883a 	mov	r4,fp
 8006a60:	8008e340 	call	8008e34 <_Bfree>
 8006a64:	883ea026 	beq	r17,zero,80064e8 <__alt_data_end+0xfc0064e8>
 8006a68:	90000426 	beq	r18,zero,8006a7c <_dtoa_r+0xc3c>
 8006a6c:	94400326 	beq	r18,r17,8006a7c <_dtoa_r+0xc3c>
 8006a70:	900b883a 	mov	r5,r18
 8006a74:	e009883a 	mov	r4,fp
 8006a78:	8008e340 	call	8008e34 <_Bfree>
 8006a7c:	880b883a 	mov	r5,r17
 8006a80:	e009883a 	mov	r4,fp
 8006a84:	8008e340 	call	8008e34 <_Bfree>
 8006a88:	003e9706 	br	80064e8 <__alt_data_end+0xfc0064e8>
 8006a8c:	01800044 	movi	r6,1
 8006a90:	d9800e15 	stw	r6,56(sp)
 8006a94:	003d9606 	br	80060f0 <__alt_data_end+0xfc0060f0>
 8006a98:	d8800817 	ldw	r2,32(sp)
 8006a9c:	d8c00517 	ldw	r3,20(sp)
 8006aa0:	d8000d15 	stw	zero,52(sp)
 8006aa4:	10c5c83a 	sub	r2,r2,r3
 8006aa8:	00c9c83a 	sub	r4,zero,r3
 8006aac:	d8800815 	stw	r2,32(sp)
 8006ab0:	d9000a15 	stw	r4,40(sp)
 8006ab4:	003d9706 	br	8006114 <__alt_data_end+0xfc006114>
 8006ab8:	05adc83a 	sub	r22,zero,r22
 8006abc:	dd800815 	stw	r22,32(sp)
 8006ac0:	002d883a 	mov	r22,zero
 8006ac4:	003d8e06 	br	8006100 <__alt_data_end+0xfc006100>
 8006ac8:	d9000517 	ldw	r4,20(sp)
 8006acc:	80115e80 	call	80115e8 <__floatsidf>
 8006ad0:	100d883a 	mov	r6,r2
 8006ad4:	180f883a 	mov	r7,r3
 8006ad8:	a009883a 	mov	r4,r20
 8006adc:	880b883a 	mov	r5,r17
 8006ae0:	80101a80 	call	80101a8 <__eqdf2>
 8006ae4:	103d7126 	beq	r2,zero,80060ac <__alt_data_end+0xfc0060ac>
 8006ae8:	d9c00517 	ldw	r7,20(sp)
 8006aec:	39ffffc4 	addi	r7,r7,-1
 8006af0:	d9c00515 	stw	r7,20(sp)
 8006af4:	003d6d06 	br	80060ac <__alt_data_end+0xfc0060ac>
 8006af8:	dd400a17 	ldw	r21,40(sp)
 8006afc:	dd000817 	ldw	r20,32(sp)
 8006b00:	0023883a 	mov	r17,zero
 8006b04:	003f4806 	br	8006828 <__alt_data_end+0xfc006828>
 8006b08:	10e3c83a 	sub	r17,r2,r3
 8006b0c:	9448983a 	sll	r4,r18,r17
 8006b10:	003d3206 	br	8005fdc <__alt_data_end+0xfc005fdc>
 8006b14:	d8000e15 	stw	zero,56(sp)
 8006b18:	003d7506 	br	80060f0 <__alt_data_end+0xfc0060f0>
 8006b1c:	b005883a 	mov	r2,r22
 8006b20:	003f4506 	br	8006838 <__alt_data_end+0xfc006838>
 8006b24:	dc000915 	stw	r16,36(sp)
 8006b28:	d9800a17 	ldw	r6,40(sp)
 8006b2c:	d9400917 	ldw	r5,36(sp)
 8006b30:	e009883a 	mov	r4,fp
 8006b34:	80094880 	call	8009488 <__pow5mult>
 8006b38:	1021883a 	mov	r16,r2
 8006b3c:	003f5a06 	br	80068a8 <__alt_data_end+0xfc0068a8>
 8006b40:	01c00044 	movi	r7,1
 8006b44:	d9c00b15 	stw	r7,44(sp)
 8006b48:	d8802217 	ldw	r2,136(sp)
 8006b4c:	0081280e 	bge	zero,r2,8006ff0 <_dtoa_r+0x11b0>
 8006b50:	100d883a 	mov	r6,r2
 8006b54:	1021883a 	mov	r16,r2
 8006b58:	d8800c15 	stw	r2,48(sp)
 8006b5c:	d8800615 	stw	r2,24(sp)
 8006b60:	003d8806 	br	8006184 <__alt_data_end+0xfc006184>
 8006b64:	d8800617 	ldw	r2,24(sp)
 8006b68:	00be9b16 	blt	zero,r2,80065d8 <__alt_data_end+0xfc0065d8>
 8006b6c:	10010f1e 	bne	r2,zero,8006fac <_dtoa_r+0x116c>
 8006b70:	880b883a 	mov	r5,r17
 8006b74:	000d883a 	mov	r6,zero
 8006b78:	01d00534 	movhi	r7,16404
 8006b7c:	8009883a 	mov	r4,r16
 8006b80:	80104000 	call	8010400 <__muldf3>
 8006b84:	900d883a 	mov	r6,r18
 8006b88:	980f883a 	mov	r7,r19
 8006b8c:	1009883a 	mov	r4,r2
 8006b90:	180b883a 	mov	r5,r3
 8006b94:	80102300 	call	8010230 <__gedf2>
 8006b98:	002b883a 	mov	r21,zero
 8006b9c:	0023883a 	mov	r17,zero
 8006ba0:	1000bf16 	blt	r2,zero,8006ea0 <_dtoa_r+0x1060>
 8006ba4:	d9802217 	ldw	r6,136(sp)
 8006ba8:	ddc00717 	ldw	r23,28(sp)
 8006bac:	018c303a 	nor	r6,zero,r6
 8006bb0:	d9800515 	stw	r6,20(sp)
 8006bb4:	a80b883a 	mov	r5,r21
 8006bb8:	e009883a 	mov	r4,fp
 8006bbc:	8008e340 	call	8008e34 <_Bfree>
 8006bc0:	883e4926 	beq	r17,zero,80064e8 <__alt_data_end+0xfc0064e8>
 8006bc4:	003fad06 	br	8006a7c <__alt_data_end+0xfc006a7c>
 8006bc8:	d9c01117 	ldw	r7,68(sp)
 8006bcc:	3801bc26 	beq	r7,zero,80072c0 <_dtoa_r+0x1480>
 8006bd0:	10810cc4 	addi	r2,r2,1075
 8006bd4:	dd400a17 	ldw	r21,40(sp)
 8006bd8:	dd000817 	ldw	r20,32(sp)
 8006bdc:	003f0a06 	br	8006808 <__alt_data_end+0xfc006808>
 8006be0:	00800704 	movi	r2,28
 8006be4:	d9000817 	ldw	r4,32(sp)
 8006be8:	a0a9883a 	add	r20,r20,r2
 8006bec:	b0ad883a 	add	r22,r22,r2
 8006bf0:	2089883a 	add	r4,r4,r2
 8006bf4:	d9000815 	stw	r4,32(sp)
 8006bf8:	003f5106 	br	8006940 <__alt_data_end+0xfc006940>
 8006bfc:	d8c00317 	ldw	r3,12(sp)
 8006c00:	b8c1fc0e 	bge	r23,r3,80073f4 <_dtoa_r+0x15b4>
 8006c04:	0027883a 	mov	r19,zero
 8006c08:	b805883a 	mov	r2,r23
 8006c0c:	003f3e06 	br	8006908 <__alt_data_end+0xfc006908>
 8006c10:	880b883a 	mov	r5,r17
 8006c14:	e009883a 	mov	r4,fp
 8006c18:	000f883a 	mov	r7,zero
 8006c1c:	01800284 	movi	r6,10
 8006c20:	8008e5c0 	call	8008e5c <__multadd>
 8006c24:	d9000c17 	ldw	r4,48(sp)
 8006c28:	1023883a 	mov	r17,r2
 8006c2c:	0102040e 	bge	zero,r4,8007440 <_dtoa_r+0x1600>
 8006c30:	d9000615 	stw	r4,24(sp)
 8006c34:	0500050e 	bge	zero,r20,8006c4c <_dtoa_r+0xe0c>
 8006c38:	880b883a 	mov	r5,r17
 8006c3c:	a00d883a 	mov	r6,r20
 8006c40:	e009883a 	mov	r4,fp
 8006c44:	80095c80 	call	80095c8 <__lshift>
 8006c48:	1023883a 	mov	r17,r2
 8006c4c:	9801241e 	bne	r19,zero,80070e0 <_dtoa_r+0x12a0>
 8006c50:	8829883a 	mov	r20,r17
 8006c54:	d9000617 	ldw	r4,24(sp)
 8006c58:	dcc00717 	ldw	r19,28(sp)
 8006c5c:	9480004c 	andi	r18,r18,1
 8006c60:	20bfffc4 	addi	r2,r4,-1
 8006c64:	9885883a 	add	r2,r19,r2
 8006c68:	d8800415 	stw	r2,16(sp)
 8006c6c:	dc800615 	stw	r18,24(sp)
 8006c70:	a80b883a 	mov	r5,r21
 8006c74:	8009883a 	mov	r4,r16
 8006c78:	8005c180 	call	8005c18 <quorem>
 8006c7c:	880b883a 	mov	r5,r17
 8006c80:	8009883a 	mov	r4,r16
 8006c84:	102f883a 	mov	r23,r2
 8006c88:	80097100 	call	8009710 <__mcmp>
 8006c8c:	a80b883a 	mov	r5,r21
 8006c90:	a00d883a 	mov	r6,r20
 8006c94:	e009883a 	mov	r4,fp
 8006c98:	102d883a 	mov	r22,r2
 8006c9c:	80097700 	call	8009770 <__mdiff>
 8006ca0:	1007883a 	mov	r3,r2
 8006ca4:	10800317 	ldw	r2,12(r2)
 8006ca8:	bc800c04 	addi	r18,r23,48
 8006cac:	180b883a 	mov	r5,r3
 8006cb0:	10004e1e 	bne	r2,zero,8006dec <_dtoa_r+0xfac>
 8006cb4:	8009883a 	mov	r4,r16
 8006cb8:	d8c01615 	stw	r3,88(sp)
 8006cbc:	80097100 	call	8009710 <__mcmp>
 8006cc0:	d8c01617 	ldw	r3,88(sp)
 8006cc4:	e009883a 	mov	r4,fp
 8006cc8:	d8801615 	stw	r2,88(sp)
 8006ccc:	180b883a 	mov	r5,r3
 8006cd0:	8008e340 	call	8008e34 <_Bfree>
 8006cd4:	d8801617 	ldw	r2,88(sp)
 8006cd8:	1000041e 	bne	r2,zero,8006cec <_dtoa_r+0xeac>
 8006cdc:	d9800317 	ldw	r6,12(sp)
 8006ce0:	3000021e 	bne	r6,zero,8006cec <_dtoa_r+0xeac>
 8006ce4:	d8c00617 	ldw	r3,24(sp)
 8006ce8:	18003726 	beq	r3,zero,8006dc8 <_dtoa_r+0xf88>
 8006cec:	b0002016 	blt	r22,zero,8006d70 <_dtoa_r+0xf30>
 8006cf0:	b000041e 	bne	r22,zero,8006d04 <_dtoa_r+0xec4>
 8006cf4:	d9000317 	ldw	r4,12(sp)
 8006cf8:	2000021e 	bne	r4,zero,8006d04 <_dtoa_r+0xec4>
 8006cfc:	d8c00617 	ldw	r3,24(sp)
 8006d00:	18001b26 	beq	r3,zero,8006d70 <_dtoa_r+0xf30>
 8006d04:	00810716 	blt	zero,r2,8007124 <_dtoa_r+0x12e4>
 8006d08:	d8c00417 	ldw	r3,16(sp)
 8006d0c:	9d800044 	addi	r22,r19,1
 8006d10:	9c800005 	stb	r18,0(r19)
 8006d14:	b02f883a 	mov	r23,r22
 8006d18:	98c10626 	beq	r19,r3,8007134 <_dtoa_r+0x12f4>
 8006d1c:	800b883a 	mov	r5,r16
 8006d20:	000f883a 	mov	r7,zero
 8006d24:	01800284 	movi	r6,10
 8006d28:	e009883a 	mov	r4,fp
 8006d2c:	8008e5c0 	call	8008e5c <__multadd>
 8006d30:	1021883a 	mov	r16,r2
 8006d34:	000f883a 	mov	r7,zero
 8006d38:	01800284 	movi	r6,10
 8006d3c:	880b883a 	mov	r5,r17
 8006d40:	e009883a 	mov	r4,fp
 8006d44:	8d002526 	beq	r17,r20,8006ddc <_dtoa_r+0xf9c>
 8006d48:	8008e5c0 	call	8008e5c <__multadd>
 8006d4c:	a00b883a 	mov	r5,r20
 8006d50:	000f883a 	mov	r7,zero
 8006d54:	01800284 	movi	r6,10
 8006d58:	e009883a 	mov	r4,fp
 8006d5c:	1023883a 	mov	r17,r2
 8006d60:	8008e5c0 	call	8008e5c <__multadd>
 8006d64:	1029883a 	mov	r20,r2
 8006d68:	b027883a 	mov	r19,r22
 8006d6c:	003fc006 	br	8006c70 <__alt_data_end+0xfc006c70>
 8006d70:	9011883a 	mov	r8,r18
 8006d74:	00800e0e 	bge	zero,r2,8006db0 <_dtoa_r+0xf70>
 8006d78:	800b883a 	mov	r5,r16
 8006d7c:	01800044 	movi	r6,1
 8006d80:	e009883a 	mov	r4,fp
 8006d84:	da001715 	stw	r8,92(sp)
 8006d88:	80095c80 	call	80095c8 <__lshift>
 8006d8c:	a80b883a 	mov	r5,r21
 8006d90:	1009883a 	mov	r4,r2
 8006d94:	1021883a 	mov	r16,r2
 8006d98:	80097100 	call	8009710 <__mcmp>
 8006d9c:	da001717 	ldw	r8,92(sp)
 8006da0:	0081960e 	bge	zero,r2,80073fc <_dtoa_r+0x15bc>
 8006da4:	00800e44 	movi	r2,57
 8006da8:	40817026 	beq	r8,r2,800736c <_dtoa_r+0x152c>
 8006dac:	ba000c44 	addi	r8,r23,49
 8006db0:	8825883a 	mov	r18,r17
 8006db4:	9dc00044 	addi	r23,r19,1
 8006db8:	9a000005 	stb	r8,0(r19)
 8006dbc:	a023883a 	mov	r17,r20
 8006dc0:	dc000915 	stw	r16,36(sp)
 8006dc4:	003f2406 	br	8006a58 <__alt_data_end+0xfc006a58>
 8006dc8:	00800e44 	movi	r2,57
 8006dcc:	9011883a 	mov	r8,r18
 8006dd0:	90816626 	beq	r18,r2,800736c <_dtoa_r+0x152c>
 8006dd4:	05bff516 	blt	zero,r22,8006dac <__alt_data_end+0xfc006dac>
 8006dd8:	003ff506 	br	8006db0 <__alt_data_end+0xfc006db0>
 8006ddc:	8008e5c0 	call	8008e5c <__multadd>
 8006de0:	1023883a 	mov	r17,r2
 8006de4:	1029883a 	mov	r20,r2
 8006de8:	003fdf06 	br	8006d68 <__alt_data_end+0xfc006d68>
 8006dec:	e009883a 	mov	r4,fp
 8006df0:	8008e340 	call	8008e34 <_Bfree>
 8006df4:	00800044 	movi	r2,1
 8006df8:	003fbc06 	br	8006cec <__alt_data_end+0xfc006cec>
 8006dfc:	a80b883a 	mov	r5,r21
 8006e00:	8009883a 	mov	r4,r16
 8006e04:	80097100 	call	8009710 <__mcmp>
 8006e08:	103edb0e 	bge	r2,zero,8006978 <__alt_data_end+0xfc006978>
 8006e0c:	800b883a 	mov	r5,r16
 8006e10:	000f883a 	mov	r7,zero
 8006e14:	01800284 	movi	r6,10
 8006e18:	e009883a 	mov	r4,fp
 8006e1c:	8008e5c0 	call	8008e5c <__multadd>
 8006e20:	1021883a 	mov	r16,r2
 8006e24:	d8800517 	ldw	r2,20(sp)
 8006e28:	d8c00b17 	ldw	r3,44(sp)
 8006e2c:	10bfffc4 	addi	r2,r2,-1
 8006e30:	d8800515 	stw	r2,20(sp)
 8006e34:	183f761e 	bne	r3,zero,8006c10 <__alt_data_end+0xfc006c10>
 8006e38:	d9000c17 	ldw	r4,48(sp)
 8006e3c:	0101730e 	bge	zero,r4,800740c <_dtoa_r+0x15cc>
 8006e40:	d9000615 	stw	r4,24(sp)
 8006e44:	003ed006 	br	8006988 <__alt_data_end+0xfc006988>
 8006e48:	00800084 	movi	r2,2
 8006e4c:	3081861e 	bne	r6,r2,8007468 <_dtoa_r+0x1628>
 8006e50:	d8000b15 	stw	zero,44(sp)
 8006e54:	003f3c06 	br	8006b48 <__alt_data_end+0xfc006b48>
 8006e58:	dc000917 	ldw	r16,36(sp)
 8006e5c:	003e9206 	br	80068a8 <__alt_data_end+0xfc0068a8>
 8006e60:	d9c00317 	ldw	r7,12(sp)
 8006e64:	00800084 	movi	r2,2
 8006e68:	11fec50e 	bge	r2,r7,8006980 <__alt_data_end+0xfc006980>
 8006e6c:	d9000617 	ldw	r4,24(sp)
 8006e70:	20013c1e 	bne	r4,zero,8007364 <_dtoa_r+0x1524>
 8006e74:	a80b883a 	mov	r5,r21
 8006e78:	000f883a 	mov	r7,zero
 8006e7c:	01800144 	movi	r6,5
 8006e80:	e009883a 	mov	r4,fp
 8006e84:	8008e5c0 	call	8008e5c <__multadd>
 8006e88:	100b883a 	mov	r5,r2
 8006e8c:	8009883a 	mov	r4,r16
 8006e90:	102b883a 	mov	r21,r2
 8006e94:	80097100 	call	8009710 <__mcmp>
 8006e98:	dc000915 	stw	r16,36(sp)
 8006e9c:	00bf410e 	bge	zero,r2,8006ba4 <__alt_data_end+0xfc006ba4>
 8006ea0:	d9c00717 	ldw	r7,28(sp)
 8006ea4:	00800c44 	movi	r2,49
 8006ea8:	38800005 	stb	r2,0(r7)
 8006eac:	d8800517 	ldw	r2,20(sp)
 8006eb0:	3dc00044 	addi	r23,r7,1
 8006eb4:	10800044 	addi	r2,r2,1
 8006eb8:	d8800515 	stw	r2,20(sp)
 8006ebc:	003f3d06 	br	8006bb4 <__alt_data_end+0xfc006bb4>
 8006ec0:	d9800517 	ldw	r6,20(sp)
 8006ec4:	d9c00717 	ldw	r7,28(sp)
 8006ec8:	00800c44 	movi	r2,49
 8006ecc:	31800044 	addi	r6,r6,1
 8006ed0:	d9800515 	stw	r6,20(sp)
 8006ed4:	38800005 	stb	r2,0(r7)
 8006ed8:	003edf06 	br	8006a58 <__alt_data_end+0xfc006a58>
 8006edc:	d8000b15 	stw	zero,44(sp)
 8006ee0:	003c9f06 	br	8006160 <__alt_data_end+0xfc006160>
 8006ee4:	903e7e1e 	bne	r18,zero,80068e0 <__alt_data_end+0xfc0068e0>
 8006ee8:	00800434 	movhi	r2,16
 8006eec:	10bfffc4 	addi	r2,r2,-1
 8006ef0:	9884703a 	and	r2,r19,r2
 8006ef4:	1000ea1e 	bne	r2,zero,80072a0 <_dtoa_r+0x1460>
 8006ef8:	9cdffc2c 	andhi	r19,r19,32752
 8006efc:	9800e826 	beq	r19,zero,80072a0 <_dtoa_r+0x1460>
 8006f00:	d9c00817 	ldw	r7,32(sp)
 8006f04:	b5800044 	addi	r22,r22,1
 8006f08:	04c00044 	movi	r19,1
 8006f0c:	39c00044 	addi	r7,r7,1
 8006f10:	d9c00815 	stw	r7,32(sp)
 8006f14:	d8800d17 	ldw	r2,52(sp)
 8006f18:	103e721e 	bne	r2,zero,80068e4 <__alt_data_end+0xfc0068e4>
 8006f1c:	00800044 	movi	r2,1
 8006f20:	003e7906 	br	8006908 <__alt_data_end+0xfc006908>
 8006f24:	8009883a 	mov	r4,r16
 8006f28:	80115e80 	call	80115e8 <__floatsidf>
 8006f2c:	d9800f17 	ldw	r6,60(sp)
 8006f30:	d9c01017 	ldw	r7,64(sp)
 8006f34:	1009883a 	mov	r4,r2
 8006f38:	180b883a 	mov	r5,r3
 8006f3c:	80104000 	call	8010400 <__muldf3>
 8006f40:	000d883a 	mov	r6,zero
 8006f44:	01d00734 	movhi	r7,16412
 8006f48:	1009883a 	mov	r4,r2
 8006f4c:	180b883a 	mov	r5,r3
 8006f50:	800ef2c0 	call	800ef2c <__adddf3>
 8006f54:	047f3034 	movhi	r17,64704
 8006f58:	1021883a 	mov	r16,r2
 8006f5c:	1c63883a 	add	r17,r3,r17
 8006f60:	d9000f17 	ldw	r4,60(sp)
 8006f64:	d9401017 	ldw	r5,64(sp)
 8006f68:	000d883a 	mov	r6,zero
 8006f6c:	01d00534 	movhi	r7,16404
 8006f70:	8010c6c0 	call	8010c6c <__subdf3>
 8006f74:	800d883a 	mov	r6,r16
 8006f78:	880f883a 	mov	r7,r17
 8006f7c:	1009883a 	mov	r4,r2
 8006f80:	180b883a 	mov	r5,r3
 8006f84:	102b883a 	mov	r21,r2
 8006f88:	1829883a 	mov	r20,r3
 8006f8c:	80102300 	call	8010230 <__gedf2>
 8006f90:	00806c16 	blt	zero,r2,8007144 <_dtoa_r+0x1304>
 8006f94:	89e0003c 	xorhi	r7,r17,32768
 8006f98:	800d883a 	mov	r6,r16
 8006f9c:	a809883a 	mov	r4,r21
 8006fa0:	a00b883a 	mov	r5,r20
 8006fa4:	801030c0 	call	801030c <__ledf2>
 8006fa8:	103d7e0e 	bge	r2,zero,80065a4 <__alt_data_end+0xfc0065a4>
 8006fac:	002b883a 	mov	r21,zero
 8006fb0:	0023883a 	mov	r17,zero
 8006fb4:	003efb06 	br	8006ba4 <__alt_data_end+0xfc006ba4>
 8006fb8:	d8800717 	ldw	r2,28(sp)
 8006fbc:	003bd006 	br	8005f00 <__alt_data_end+0xfc005f00>
 8006fc0:	d9000a17 	ldw	r4,40(sp)
 8006fc4:	d9800d17 	ldw	r6,52(sp)
 8006fc8:	dd400a15 	stw	r21,40(sp)
 8006fcc:	a905c83a 	sub	r2,r21,r4
 8006fd0:	308d883a 	add	r6,r6,r2
 8006fd4:	d9800d15 	stw	r6,52(sp)
 8006fd8:	002b883a 	mov	r21,zero
 8006fdc:	003e0606 	br	80067f8 <__alt_data_end+0xfc0067f8>
 8006fe0:	9023883a 	mov	r17,r18
 8006fe4:	9829883a 	mov	r20,r19
 8006fe8:	04000084 	movi	r16,2
 8006fec:	003c9206 	br	8006238 <__alt_data_end+0xfc006238>
 8006ff0:	04000044 	movi	r16,1
 8006ff4:	dc000c15 	stw	r16,48(sp)
 8006ff8:	dc000615 	stw	r16,24(sp)
 8006ffc:	dc002215 	stw	r16,136(sp)
 8007000:	e0001115 	stw	zero,68(fp)
 8007004:	000b883a 	mov	r5,zero
 8007008:	003c6906 	br	80061b0 <__alt_data_end+0xfc0061b0>
 800700c:	3021883a 	mov	r16,r6
 8007010:	003ffb06 	br	8007000 <__alt_data_end+0xfc007000>
 8007014:	1000021e 	bne	r2,zero,8007020 <_dtoa_r+0x11e0>
 8007018:	4200004c 	andi	r8,r8,1
 800701c:	403e7d1e 	bne	r8,zero,8006a14 <__alt_data_end+0xfc006a14>
 8007020:	01000c04 	movi	r4,48
 8007024:	00000106 	br	800702c <_dtoa_r+0x11ec>
 8007028:	102f883a 	mov	r23,r2
 800702c:	b8bfffc4 	addi	r2,r23,-1
 8007030:	10c00007 	ldb	r3,0(r2)
 8007034:	193ffc26 	beq	r3,r4,8007028 <__alt_data_end+0xfc007028>
 8007038:	003e8706 	br	8006a58 <__alt_data_end+0xfc006a58>
 800703c:	d8800517 	ldw	r2,20(sp)
 8007040:	00a3c83a 	sub	r17,zero,r2
 8007044:	8800a426 	beq	r17,zero,80072d8 <_dtoa_r+0x1498>
 8007048:	888003cc 	andi	r2,r17,15
 800704c:	100490fa 	slli	r2,r2,3
 8007050:	00c20074 	movhi	r3,2049
 8007054:	18d0cf04 	addi	r3,r3,17212
 8007058:	1885883a 	add	r2,r3,r2
 800705c:	11800017 	ldw	r6,0(r2)
 8007060:	11c00117 	ldw	r7,4(r2)
 8007064:	9009883a 	mov	r4,r18
 8007068:	980b883a 	mov	r5,r19
 800706c:	8823d13a 	srai	r17,r17,4
 8007070:	80104000 	call	8010400 <__muldf3>
 8007074:	d8800f15 	stw	r2,60(sp)
 8007078:	d8c01015 	stw	r3,64(sp)
 800707c:	8800e826 	beq	r17,zero,8007420 <_dtoa_r+0x15e0>
 8007080:	05020074 	movhi	r20,2049
 8007084:	a510c504 	addi	r20,r20,17172
 8007088:	04000084 	movi	r16,2
 800708c:	8980004c 	andi	r6,r17,1
 8007090:	1009883a 	mov	r4,r2
 8007094:	8823d07a 	srai	r17,r17,1
 8007098:	180b883a 	mov	r5,r3
 800709c:	30000426 	beq	r6,zero,80070b0 <_dtoa_r+0x1270>
 80070a0:	a1800017 	ldw	r6,0(r20)
 80070a4:	a1c00117 	ldw	r7,4(r20)
 80070a8:	84000044 	addi	r16,r16,1
 80070ac:	80104000 	call	8010400 <__muldf3>
 80070b0:	a5000204 	addi	r20,r20,8
 80070b4:	883ff51e 	bne	r17,zero,800708c <__alt_data_end+0xfc00708c>
 80070b8:	d8800f15 	stw	r2,60(sp)
 80070bc:	d8c01015 	stw	r3,64(sp)
 80070c0:	003c7606 	br	800629c <__alt_data_end+0xfc00629c>
 80070c4:	00c00c04 	movi	r3,48
 80070c8:	10c00005 	stb	r3,0(r2)
 80070cc:	d8c00517 	ldw	r3,20(sp)
 80070d0:	bd3fffc3 	ldbu	r20,-1(r23)
 80070d4:	18c00044 	addi	r3,r3,1
 80070d8:	d8c00515 	stw	r3,20(sp)
 80070dc:	003db906 	br	80067c4 <__alt_data_end+0xfc0067c4>
 80070e0:	89400117 	ldw	r5,4(r17)
 80070e4:	e009883a 	mov	r4,fp
 80070e8:	8008d8c0 	call	8008d8c <_Balloc>
 80070ec:	89800417 	ldw	r6,16(r17)
 80070f0:	89400304 	addi	r5,r17,12
 80070f4:	11000304 	addi	r4,r2,12
 80070f8:	31800084 	addi	r6,r6,2
 80070fc:	318d883a 	add	r6,r6,r6
 8007100:	318d883a 	add	r6,r6,r6
 8007104:	1027883a 	mov	r19,r2
 8007108:	80010c80 	call	80010c8 <memcpy>
 800710c:	01800044 	movi	r6,1
 8007110:	980b883a 	mov	r5,r19
 8007114:	e009883a 	mov	r4,fp
 8007118:	80095c80 	call	80095c8 <__lshift>
 800711c:	1029883a 	mov	r20,r2
 8007120:	003ecc06 	br	8006c54 <__alt_data_end+0xfc006c54>
 8007124:	00800e44 	movi	r2,57
 8007128:	90809026 	beq	r18,r2,800736c <_dtoa_r+0x152c>
 800712c:	92000044 	addi	r8,r18,1
 8007130:	003f1f06 	br	8006db0 <__alt_data_end+0xfc006db0>
 8007134:	9011883a 	mov	r8,r18
 8007138:	8825883a 	mov	r18,r17
 800713c:	a023883a 	mov	r17,r20
 8007140:	003e2906 	br	80069e8 <__alt_data_end+0xfc0069e8>
 8007144:	002b883a 	mov	r21,zero
 8007148:	0023883a 	mov	r17,zero
 800714c:	003f5406 	br	8006ea0 <__alt_data_end+0xfc006ea0>
 8007150:	61bfffc4 	addi	r6,r12,-1
 8007154:	300490fa 	slli	r2,r6,3
 8007158:	00c20074 	movhi	r3,2049
 800715c:	18d0cf04 	addi	r3,r3,17212
 8007160:	1885883a 	add	r2,r3,r2
 8007164:	11000017 	ldw	r4,0(r2)
 8007168:	11400117 	ldw	r5,4(r2)
 800716c:	d8800717 	ldw	r2,28(sp)
 8007170:	880f883a 	mov	r7,r17
 8007174:	d9801215 	stw	r6,72(sp)
 8007178:	800d883a 	mov	r6,r16
 800717c:	db001615 	stw	r12,88(sp)
 8007180:	15c00044 	addi	r23,r2,1
 8007184:	80104000 	call	8010400 <__muldf3>
 8007188:	d9401017 	ldw	r5,64(sp)
 800718c:	d9000f17 	ldw	r4,60(sp)
 8007190:	d8c01515 	stw	r3,84(sp)
 8007194:	d8801415 	stw	r2,80(sp)
 8007198:	80115680 	call	8011568 <__fixdfsi>
 800719c:	1009883a 	mov	r4,r2
 80071a0:	1021883a 	mov	r16,r2
 80071a4:	80115e80 	call	80115e8 <__floatsidf>
 80071a8:	d9000f17 	ldw	r4,60(sp)
 80071ac:	d9401017 	ldw	r5,64(sp)
 80071b0:	100d883a 	mov	r6,r2
 80071b4:	180f883a 	mov	r7,r3
 80071b8:	8010c6c0 	call	8010c6c <__subdf3>
 80071bc:	1829883a 	mov	r20,r3
 80071c0:	d8c00717 	ldw	r3,28(sp)
 80071c4:	84000c04 	addi	r16,r16,48
 80071c8:	1023883a 	mov	r17,r2
 80071cc:	1c000005 	stb	r16,0(r3)
 80071d0:	db001617 	ldw	r12,88(sp)
 80071d4:	00800044 	movi	r2,1
 80071d8:	60802226 	beq	r12,r2,8007264 <_dtoa_r+0x1424>
 80071dc:	d9c00717 	ldw	r7,28(sp)
 80071e0:	8805883a 	mov	r2,r17
 80071e4:	b82b883a 	mov	r21,r23
 80071e8:	3b19883a 	add	r12,r7,r12
 80071ec:	6023883a 	mov	r17,r12
 80071f0:	a007883a 	mov	r3,r20
 80071f4:	dc800f15 	stw	r18,60(sp)
 80071f8:	000d883a 	mov	r6,zero
 80071fc:	01d00934 	movhi	r7,16420
 8007200:	1009883a 	mov	r4,r2
 8007204:	180b883a 	mov	r5,r3
 8007208:	80104000 	call	8010400 <__muldf3>
 800720c:	180b883a 	mov	r5,r3
 8007210:	1009883a 	mov	r4,r2
 8007214:	1829883a 	mov	r20,r3
 8007218:	1025883a 	mov	r18,r2
 800721c:	80115680 	call	8011568 <__fixdfsi>
 8007220:	1009883a 	mov	r4,r2
 8007224:	1021883a 	mov	r16,r2
 8007228:	80115e80 	call	80115e8 <__floatsidf>
 800722c:	100d883a 	mov	r6,r2
 8007230:	180f883a 	mov	r7,r3
 8007234:	9009883a 	mov	r4,r18
 8007238:	a00b883a 	mov	r5,r20
 800723c:	84000c04 	addi	r16,r16,48
 8007240:	8010c6c0 	call	8010c6c <__subdf3>
 8007244:	ad400044 	addi	r21,r21,1
 8007248:	ac3fffc5 	stb	r16,-1(r21)
 800724c:	ac7fea1e 	bne	r21,r17,80071f8 <__alt_data_end+0xfc0071f8>
 8007250:	1023883a 	mov	r17,r2
 8007254:	d8801217 	ldw	r2,72(sp)
 8007258:	dc800f17 	ldw	r18,60(sp)
 800725c:	1829883a 	mov	r20,r3
 8007260:	b8af883a 	add	r23,r23,r2
 8007264:	d9001417 	ldw	r4,80(sp)
 8007268:	d9401517 	ldw	r5,84(sp)
 800726c:	000d883a 	mov	r6,zero
 8007270:	01cff834 	movhi	r7,16352
 8007274:	800ef2c0 	call	800ef2c <__adddf3>
 8007278:	880d883a 	mov	r6,r17
 800727c:	a00f883a 	mov	r7,r20
 8007280:	1009883a 	mov	r4,r2
 8007284:	180b883a 	mov	r5,r3
 8007288:	801030c0 	call	801030c <__ledf2>
 800728c:	10003e0e 	bge	r2,zero,8007388 <_dtoa_r+0x1548>
 8007290:	d9001317 	ldw	r4,76(sp)
 8007294:	bd3fffc3 	ldbu	r20,-1(r23)
 8007298:	d9000515 	stw	r4,20(sp)
 800729c:	003d3b06 	br	800678c <__alt_data_end+0xfc00678c>
 80072a0:	0027883a 	mov	r19,zero
 80072a4:	003f1b06 	br	8006f14 <__alt_data_end+0xfc006f14>
 80072a8:	d8800817 	ldw	r2,32(sp)
 80072ac:	11e9c83a 	sub	r20,r2,r7
 80072b0:	0005883a 	mov	r2,zero
 80072b4:	003d5406 	br	8006808 <__alt_data_end+0xfc006808>
 80072b8:	00800044 	movi	r2,1
 80072bc:	003dc706 	br	80069dc <__alt_data_end+0xfc0069dc>
 80072c0:	d8c00217 	ldw	r3,8(sp)
 80072c4:	00800d84 	movi	r2,54
 80072c8:	dd400a17 	ldw	r21,40(sp)
 80072cc:	10c5c83a 	sub	r2,r2,r3
 80072d0:	dd000817 	ldw	r20,32(sp)
 80072d4:	003d4c06 	br	8006808 <__alt_data_end+0xfc006808>
 80072d8:	dc800f15 	stw	r18,60(sp)
 80072dc:	dcc01015 	stw	r19,64(sp)
 80072e0:	04000084 	movi	r16,2
 80072e4:	003bed06 	br	800629c <__alt_data_end+0xfc00629c>
 80072e8:	d9000617 	ldw	r4,24(sp)
 80072ec:	203f0d26 	beq	r4,zero,8006f24 <__alt_data_end+0xfc006f24>
 80072f0:	d9800c17 	ldw	r6,48(sp)
 80072f4:	01bcab0e 	bge	zero,r6,80065a4 <__alt_data_end+0xfc0065a4>
 80072f8:	d9401017 	ldw	r5,64(sp)
 80072fc:	d9000f17 	ldw	r4,60(sp)
 8007300:	000d883a 	mov	r6,zero
 8007304:	01d00934 	movhi	r7,16420
 8007308:	80104000 	call	8010400 <__muldf3>
 800730c:	81000044 	addi	r4,r16,1
 8007310:	d8800f15 	stw	r2,60(sp)
 8007314:	d8c01015 	stw	r3,64(sp)
 8007318:	80115e80 	call	80115e8 <__floatsidf>
 800731c:	d9800f17 	ldw	r6,60(sp)
 8007320:	d9c01017 	ldw	r7,64(sp)
 8007324:	1009883a 	mov	r4,r2
 8007328:	180b883a 	mov	r5,r3
 800732c:	80104000 	call	8010400 <__muldf3>
 8007330:	01d00734 	movhi	r7,16412
 8007334:	000d883a 	mov	r6,zero
 8007338:	1009883a 	mov	r4,r2
 800733c:	180b883a 	mov	r5,r3
 8007340:	800ef2c0 	call	800ef2c <__adddf3>
 8007344:	d9c00517 	ldw	r7,20(sp)
 8007348:	047f3034 	movhi	r17,64704
 800734c:	1021883a 	mov	r16,r2
 8007350:	39ffffc4 	addi	r7,r7,-1
 8007354:	d9c01315 	stw	r7,76(sp)
 8007358:	1c63883a 	add	r17,r3,r17
 800735c:	db000c17 	ldw	r12,48(sp)
 8007360:	003bea06 	br	800630c <__alt_data_end+0xfc00630c>
 8007364:	dc000915 	stw	r16,36(sp)
 8007368:	003e0e06 	br	8006ba4 <__alt_data_end+0xfc006ba4>
 800736c:	01000e44 	movi	r4,57
 8007370:	8825883a 	mov	r18,r17
 8007374:	9dc00044 	addi	r23,r19,1
 8007378:	99000005 	stb	r4,0(r19)
 800737c:	a023883a 	mov	r17,r20
 8007380:	dc000915 	stw	r16,36(sp)
 8007384:	003da406 	br	8006a18 <__alt_data_end+0xfc006a18>
 8007388:	d9801417 	ldw	r6,80(sp)
 800738c:	d9c01517 	ldw	r7,84(sp)
 8007390:	0009883a 	mov	r4,zero
 8007394:	014ff834 	movhi	r5,16352
 8007398:	8010c6c0 	call	8010c6c <__subdf3>
 800739c:	880d883a 	mov	r6,r17
 80073a0:	a00f883a 	mov	r7,r20
 80073a4:	1009883a 	mov	r4,r2
 80073a8:	180b883a 	mov	r5,r3
 80073ac:	80102300 	call	8010230 <__gedf2>
 80073b0:	00bc7c0e 	bge	zero,r2,80065a4 <__alt_data_end+0xfc0065a4>
 80073b4:	01000c04 	movi	r4,48
 80073b8:	00000106 	br	80073c0 <_dtoa_r+0x1580>
 80073bc:	102f883a 	mov	r23,r2
 80073c0:	b8bfffc4 	addi	r2,r23,-1
 80073c4:	10c00007 	ldb	r3,0(r2)
 80073c8:	193ffc26 	beq	r3,r4,80073bc <__alt_data_end+0xfc0073bc>
 80073cc:	d9801317 	ldw	r6,76(sp)
 80073d0:	d9800515 	stw	r6,20(sp)
 80073d4:	003c4406 	br	80064e8 <__alt_data_end+0xfc0064e8>
 80073d8:	d9801317 	ldw	r6,76(sp)
 80073dc:	d9800515 	stw	r6,20(sp)
 80073e0:	003cea06 	br	800678c <__alt_data_end+0xfc00678c>
 80073e4:	dd800f17 	ldw	r22,60(sp)
 80073e8:	dcc01017 	ldw	r19,64(sp)
 80073ec:	dc801217 	ldw	r18,72(sp)
 80073f0:	003c6c06 	br	80065a4 <__alt_data_end+0xfc0065a4>
 80073f4:	903e031e 	bne	r18,zero,8006c04 <__alt_data_end+0xfc006c04>
 80073f8:	003ebb06 	br	8006ee8 <__alt_data_end+0xfc006ee8>
 80073fc:	103e6c1e 	bne	r2,zero,8006db0 <__alt_data_end+0xfc006db0>
 8007400:	4080004c 	andi	r2,r8,1
 8007404:	103e6a26 	beq	r2,zero,8006db0 <__alt_data_end+0xfc006db0>
 8007408:	003e6606 	br	8006da4 <__alt_data_end+0xfc006da4>
 800740c:	d8c00317 	ldw	r3,12(sp)
 8007410:	00800084 	movi	r2,2
 8007414:	10c02916 	blt	r2,r3,80074bc <_dtoa_r+0x167c>
 8007418:	d9000c17 	ldw	r4,48(sp)
 800741c:	003e8806 	br	8006e40 <__alt_data_end+0xfc006e40>
 8007420:	04000084 	movi	r16,2
 8007424:	003b9d06 	br	800629c <__alt_data_end+0xfc00629c>
 8007428:	d9001317 	ldw	r4,76(sp)
 800742c:	d9000515 	stw	r4,20(sp)
 8007430:	003cd606 	br	800678c <__alt_data_end+0xfc00678c>
 8007434:	d8801317 	ldw	r2,76(sp)
 8007438:	d8800515 	stw	r2,20(sp)
 800743c:	003c2a06 	br	80064e8 <__alt_data_end+0xfc0064e8>
 8007440:	d9800317 	ldw	r6,12(sp)
 8007444:	00800084 	movi	r2,2
 8007448:	11801516 	blt	r2,r6,80074a0 <_dtoa_r+0x1660>
 800744c:	d9c00c17 	ldw	r7,48(sp)
 8007450:	d9c00615 	stw	r7,24(sp)
 8007454:	003df706 	br	8006c34 <__alt_data_end+0xfc006c34>
 8007458:	193d3926 	beq	r3,r4,8006940 <__alt_data_end+0xfc006940>
 800745c:	00c00f04 	movi	r3,60
 8007460:	1885c83a 	sub	r2,r3,r2
 8007464:	003ddf06 	br	8006be4 <__alt_data_end+0xfc006be4>
 8007468:	e009883a 	mov	r4,fp
 800746c:	e0001115 	stw	zero,68(fp)
 8007470:	000b883a 	mov	r5,zero
 8007474:	8008d8c0 	call	8008d8c <_Balloc>
 8007478:	d8800715 	stw	r2,28(sp)
 800747c:	d8c00717 	ldw	r3,28(sp)
 8007480:	00bfffc4 	movi	r2,-1
 8007484:	01000044 	movi	r4,1
 8007488:	d8800c15 	stw	r2,48(sp)
 800748c:	e0c01015 	stw	r3,64(fp)
 8007490:	d9000b15 	stw	r4,44(sp)
 8007494:	d8800615 	stw	r2,24(sp)
 8007498:	d8002215 	stw	zero,136(sp)
 800749c:	003c4106 	br	80065a4 <__alt_data_end+0xfc0065a4>
 80074a0:	d8c00c17 	ldw	r3,48(sp)
 80074a4:	d8c00615 	stw	r3,24(sp)
 80074a8:	003e7006 	br	8006e6c <__alt_data_end+0xfc006e6c>
 80074ac:	04400044 	movi	r17,1
 80074b0:	003b2006 	br	8006134 <__alt_data_end+0xfc006134>
 80074b4:	000b883a 	mov	r5,zero
 80074b8:	003b3d06 	br	80061b0 <__alt_data_end+0xfc0061b0>
 80074bc:	d8800c17 	ldw	r2,48(sp)
 80074c0:	d8800615 	stw	r2,24(sp)
 80074c4:	003e6906 	br	8006e6c <__alt_data_end+0xfc006e6c>

080074c8 <__sflush_r>:
 80074c8:	2880030b 	ldhu	r2,12(r5)
 80074cc:	defffb04 	addi	sp,sp,-20
 80074d0:	dcc00315 	stw	r19,12(sp)
 80074d4:	dc400115 	stw	r17,4(sp)
 80074d8:	dfc00415 	stw	ra,16(sp)
 80074dc:	dc800215 	stw	r18,8(sp)
 80074e0:	dc000015 	stw	r16,0(sp)
 80074e4:	10c0020c 	andi	r3,r2,8
 80074e8:	2823883a 	mov	r17,r5
 80074ec:	2027883a 	mov	r19,r4
 80074f0:	1800311e 	bne	r3,zero,80075b8 <__sflush_r+0xf0>
 80074f4:	28c00117 	ldw	r3,4(r5)
 80074f8:	10820014 	ori	r2,r2,2048
 80074fc:	2880030d 	sth	r2,12(r5)
 8007500:	00c04b0e 	bge	zero,r3,8007630 <__sflush_r+0x168>
 8007504:	8a000a17 	ldw	r8,40(r17)
 8007508:	40002326 	beq	r8,zero,8007598 <__sflush_r+0xd0>
 800750c:	9c000017 	ldw	r16,0(r19)
 8007510:	10c4000c 	andi	r3,r2,4096
 8007514:	98000015 	stw	zero,0(r19)
 8007518:	18004826 	beq	r3,zero,800763c <__sflush_r+0x174>
 800751c:	89801417 	ldw	r6,80(r17)
 8007520:	10c0010c 	andi	r3,r2,4
 8007524:	18000626 	beq	r3,zero,8007540 <__sflush_r+0x78>
 8007528:	88c00117 	ldw	r3,4(r17)
 800752c:	88800c17 	ldw	r2,48(r17)
 8007530:	30cdc83a 	sub	r6,r6,r3
 8007534:	10000226 	beq	r2,zero,8007540 <__sflush_r+0x78>
 8007538:	88800f17 	ldw	r2,60(r17)
 800753c:	308dc83a 	sub	r6,r6,r2
 8007540:	89400717 	ldw	r5,28(r17)
 8007544:	000f883a 	mov	r7,zero
 8007548:	9809883a 	mov	r4,r19
 800754c:	403ee83a 	callr	r8
 8007550:	00ffffc4 	movi	r3,-1
 8007554:	10c04426 	beq	r2,r3,8007668 <__sflush_r+0x1a0>
 8007558:	88c0030b 	ldhu	r3,12(r17)
 800755c:	89000417 	ldw	r4,16(r17)
 8007560:	88000115 	stw	zero,4(r17)
 8007564:	197dffcc 	andi	r5,r3,63487
 8007568:	8940030d 	sth	r5,12(r17)
 800756c:	89000015 	stw	r4,0(r17)
 8007570:	18c4000c 	andi	r3,r3,4096
 8007574:	18002c1e 	bne	r3,zero,8007628 <__sflush_r+0x160>
 8007578:	89400c17 	ldw	r5,48(r17)
 800757c:	9c000015 	stw	r16,0(r19)
 8007580:	28000526 	beq	r5,zero,8007598 <__sflush_r+0xd0>
 8007584:	88801004 	addi	r2,r17,64
 8007588:	28800226 	beq	r5,r2,8007594 <__sflush_r+0xcc>
 800758c:	9809883a 	mov	r4,r19
 8007590:	8007c440 	call	8007c44 <_free_r>
 8007594:	88000c15 	stw	zero,48(r17)
 8007598:	0005883a 	mov	r2,zero
 800759c:	dfc00417 	ldw	ra,16(sp)
 80075a0:	dcc00317 	ldw	r19,12(sp)
 80075a4:	dc800217 	ldw	r18,8(sp)
 80075a8:	dc400117 	ldw	r17,4(sp)
 80075ac:	dc000017 	ldw	r16,0(sp)
 80075b0:	dec00504 	addi	sp,sp,20
 80075b4:	f800283a 	ret
 80075b8:	2c800417 	ldw	r18,16(r5)
 80075bc:	903ff626 	beq	r18,zero,8007598 <__alt_data_end+0xfc007598>
 80075c0:	2c000017 	ldw	r16,0(r5)
 80075c4:	108000cc 	andi	r2,r2,3
 80075c8:	2c800015 	stw	r18,0(r5)
 80075cc:	84a1c83a 	sub	r16,r16,r18
 80075d0:	1000131e 	bne	r2,zero,8007620 <__sflush_r+0x158>
 80075d4:	28800517 	ldw	r2,20(r5)
 80075d8:	88800215 	stw	r2,8(r17)
 80075dc:	04000316 	blt	zero,r16,80075ec <__sflush_r+0x124>
 80075e0:	003fed06 	br	8007598 <__alt_data_end+0xfc007598>
 80075e4:	90a5883a 	add	r18,r18,r2
 80075e8:	043feb0e 	bge	zero,r16,8007598 <__alt_data_end+0xfc007598>
 80075ec:	88800917 	ldw	r2,36(r17)
 80075f0:	89400717 	ldw	r5,28(r17)
 80075f4:	800f883a 	mov	r7,r16
 80075f8:	900d883a 	mov	r6,r18
 80075fc:	9809883a 	mov	r4,r19
 8007600:	103ee83a 	callr	r2
 8007604:	80a1c83a 	sub	r16,r16,r2
 8007608:	00bff616 	blt	zero,r2,80075e4 <__alt_data_end+0xfc0075e4>
 800760c:	88c0030b 	ldhu	r3,12(r17)
 8007610:	00bfffc4 	movi	r2,-1
 8007614:	18c01014 	ori	r3,r3,64
 8007618:	88c0030d 	sth	r3,12(r17)
 800761c:	003fdf06 	br	800759c <__alt_data_end+0xfc00759c>
 8007620:	0005883a 	mov	r2,zero
 8007624:	003fec06 	br	80075d8 <__alt_data_end+0xfc0075d8>
 8007628:	88801415 	stw	r2,80(r17)
 800762c:	003fd206 	br	8007578 <__alt_data_end+0xfc007578>
 8007630:	28c00f17 	ldw	r3,60(r5)
 8007634:	00ffb316 	blt	zero,r3,8007504 <__alt_data_end+0xfc007504>
 8007638:	003fd706 	br	8007598 <__alt_data_end+0xfc007598>
 800763c:	89400717 	ldw	r5,28(r17)
 8007640:	000d883a 	mov	r6,zero
 8007644:	01c00044 	movi	r7,1
 8007648:	9809883a 	mov	r4,r19
 800764c:	403ee83a 	callr	r8
 8007650:	100d883a 	mov	r6,r2
 8007654:	00bfffc4 	movi	r2,-1
 8007658:	30801426 	beq	r6,r2,80076ac <__sflush_r+0x1e4>
 800765c:	8880030b 	ldhu	r2,12(r17)
 8007660:	8a000a17 	ldw	r8,40(r17)
 8007664:	003fae06 	br	8007520 <__alt_data_end+0xfc007520>
 8007668:	98c00017 	ldw	r3,0(r19)
 800766c:	183fba26 	beq	r3,zero,8007558 <__alt_data_end+0xfc007558>
 8007670:	01000744 	movi	r4,29
 8007674:	19000626 	beq	r3,r4,8007690 <__sflush_r+0x1c8>
 8007678:	01000584 	movi	r4,22
 800767c:	19000426 	beq	r3,r4,8007690 <__sflush_r+0x1c8>
 8007680:	88c0030b 	ldhu	r3,12(r17)
 8007684:	18c01014 	ori	r3,r3,64
 8007688:	88c0030d 	sth	r3,12(r17)
 800768c:	003fc306 	br	800759c <__alt_data_end+0xfc00759c>
 8007690:	8880030b 	ldhu	r2,12(r17)
 8007694:	88c00417 	ldw	r3,16(r17)
 8007698:	88000115 	stw	zero,4(r17)
 800769c:	10bdffcc 	andi	r2,r2,63487
 80076a0:	8880030d 	sth	r2,12(r17)
 80076a4:	88c00015 	stw	r3,0(r17)
 80076a8:	003fb306 	br	8007578 <__alt_data_end+0xfc007578>
 80076ac:	98800017 	ldw	r2,0(r19)
 80076b0:	103fea26 	beq	r2,zero,800765c <__alt_data_end+0xfc00765c>
 80076b4:	00c00744 	movi	r3,29
 80076b8:	10c00226 	beq	r2,r3,80076c4 <__sflush_r+0x1fc>
 80076bc:	00c00584 	movi	r3,22
 80076c0:	10c0031e 	bne	r2,r3,80076d0 <__sflush_r+0x208>
 80076c4:	9c000015 	stw	r16,0(r19)
 80076c8:	0005883a 	mov	r2,zero
 80076cc:	003fb306 	br	800759c <__alt_data_end+0xfc00759c>
 80076d0:	88c0030b 	ldhu	r3,12(r17)
 80076d4:	3005883a 	mov	r2,r6
 80076d8:	18c01014 	ori	r3,r3,64
 80076dc:	88c0030d 	sth	r3,12(r17)
 80076e0:	003fae06 	br	800759c <__alt_data_end+0xfc00759c>

080076e4 <_fflush_r>:
 80076e4:	defffd04 	addi	sp,sp,-12
 80076e8:	dc000115 	stw	r16,4(sp)
 80076ec:	dfc00215 	stw	ra,8(sp)
 80076f0:	2021883a 	mov	r16,r4
 80076f4:	20000226 	beq	r4,zero,8007700 <_fflush_r+0x1c>
 80076f8:	20800e17 	ldw	r2,56(r4)
 80076fc:	10000c26 	beq	r2,zero,8007730 <_fflush_r+0x4c>
 8007700:	2880030f 	ldh	r2,12(r5)
 8007704:	1000051e 	bne	r2,zero,800771c <_fflush_r+0x38>
 8007708:	0005883a 	mov	r2,zero
 800770c:	dfc00217 	ldw	ra,8(sp)
 8007710:	dc000117 	ldw	r16,4(sp)
 8007714:	dec00304 	addi	sp,sp,12
 8007718:	f800283a 	ret
 800771c:	8009883a 	mov	r4,r16
 8007720:	dfc00217 	ldw	ra,8(sp)
 8007724:	dc000117 	ldw	r16,4(sp)
 8007728:	dec00304 	addi	sp,sp,12
 800772c:	80074c81 	jmpi	80074c8 <__sflush_r>
 8007730:	d9400015 	stw	r5,0(sp)
 8007734:	8007ad00 	call	8007ad0 <__sinit>
 8007738:	d9400017 	ldw	r5,0(sp)
 800773c:	003ff006 	br	8007700 <__alt_data_end+0xfc007700>

08007740 <fflush>:
 8007740:	20000526 	beq	r4,zero,8007758 <fflush+0x18>
 8007744:	00820074 	movhi	r2,2049
 8007748:	1098c504 	addi	r2,r2,25364
 800774c:	200b883a 	mov	r5,r4
 8007750:	11000017 	ldw	r4,0(r2)
 8007754:	80076e41 	jmpi	80076e4 <_fflush_r>
 8007758:	00820074 	movhi	r2,2049
 800775c:	1098c404 	addi	r2,r2,25360
 8007760:	11000017 	ldw	r4,0(r2)
 8007764:	01420034 	movhi	r5,2048
 8007768:	295db904 	addi	r5,r5,30436
 800776c:	80080181 	jmpi	8008018 <_fwalk_reent>

08007770 <__fp_unlock>:
 8007770:	0005883a 	mov	r2,zero
 8007774:	f800283a 	ret

08007778 <_cleanup_r>:
 8007778:	01420074 	movhi	r5,2049
 800777c:	2973c704 	addi	r5,r5,-12516
 8007780:	80080181 	jmpi	8008018 <_fwalk_reent>

08007784 <__sinit.part.1>:
 8007784:	defff704 	addi	sp,sp,-36
 8007788:	00c20034 	movhi	r3,2048
 800778c:	dfc00815 	stw	ra,32(sp)
 8007790:	ddc00715 	stw	r23,28(sp)
 8007794:	dd800615 	stw	r22,24(sp)
 8007798:	dd400515 	stw	r21,20(sp)
 800779c:	dd000415 	stw	r20,16(sp)
 80077a0:	dcc00315 	stw	r19,12(sp)
 80077a4:	dc800215 	stw	r18,8(sp)
 80077a8:	dc400115 	stw	r17,4(sp)
 80077ac:	dc000015 	stw	r16,0(sp)
 80077b0:	18ddde04 	addi	r3,r3,30584
 80077b4:	24000117 	ldw	r16,4(r4)
 80077b8:	20c00f15 	stw	r3,60(r4)
 80077bc:	2080bb04 	addi	r2,r4,748
 80077c0:	00c000c4 	movi	r3,3
 80077c4:	20c0b915 	stw	r3,740(r4)
 80077c8:	2080ba15 	stw	r2,744(r4)
 80077cc:	2000b815 	stw	zero,736(r4)
 80077d0:	05c00204 	movi	r23,8
 80077d4:	00800104 	movi	r2,4
 80077d8:	2025883a 	mov	r18,r4
 80077dc:	b80d883a 	mov	r6,r23
 80077e0:	81001704 	addi	r4,r16,92
 80077e4:	000b883a 	mov	r5,zero
 80077e8:	80000015 	stw	zero,0(r16)
 80077ec:	80000115 	stw	zero,4(r16)
 80077f0:	80000215 	stw	zero,8(r16)
 80077f4:	8080030d 	sth	r2,12(r16)
 80077f8:	80001915 	stw	zero,100(r16)
 80077fc:	8000038d 	sth	zero,14(r16)
 8007800:	80000415 	stw	zero,16(r16)
 8007804:	80000515 	stw	zero,20(r16)
 8007808:	80000615 	stw	zero,24(r16)
 800780c:	8008c640 	call	8008c64 <memset>
 8007810:	05820074 	movhi	r22,2049
 8007814:	94400217 	ldw	r17,8(r18)
 8007818:	05420074 	movhi	r21,2049
 800781c:	05020074 	movhi	r20,2049
 8007820:	04c20074 	movhi	r19,2049
 8007824:	b5a7c304 	addi	r22,r22,-24820
 8007828:	ad67da04 	addi	r21,r21,-24728
 800782c:	a527f904 	addi	r20,r20,-24604
 8007830:	9ce81004 	addi	r19,r19,-24512
 8007834:	85800815 	stw	r22,32(r16)
 8007838:	85400915 	stw	r21,36(r16)
 800783c:	85000a15 	stw	r20,40(r16)
 8007840:	84c00b15 	stw	r19,44(r16)
 8007844:	84000715 	stw	r16,28(r16)
 8007848:	00800284 	movi	r2,10
 800784c:	8880030d 	sth	r2,12(r17)
 8007850:	00800044 	movi	r2,1
 8007854:	b80d883a 	mov	r6,r23
 8007858:	89001704 	addi	r4,r17,92
 800785c:	000b883a 	mov	r5,zero
 8007860:	88000015 	stw	zero,0(r17)
 8007864:	88000115 	stw	zero,4(r17)
 8007868:	88000215 	stw	zero,8(r17)
 800786c:	88001915 	stw	zero,100(r17)
 8007870:	8880038d 	sth	r2,14(r17)
 8007874:	88000415 	stw	zero,16(r17)
 8007878:	88000515 	stw	zero,20(r17)
 800787c:	88000615 	stw	zero,24(r17)
 8007880:	8008c640 	call	8008c64 <memset>
 8007884:	94000317 	ldw	r16,12(r18)
 8007888:	00800484 	movi	r2,18
 800788c:	8c400715 	stw	r17,28(r17)
 8007890:	8d800815 	stw	r22,32(r17)
 8007894:	8d400915 	stw	r21,36(r17)
 8007898:	8d000a15 	stw	r20,40(r17)
 800789c:	8cc00b15 	stw	r19,44(r17)
 80078a0:	8080030d 	sth	r2,12(r16)
 80078a4:	00800084 	movi	r2,2
 80078a8:	80000015 	stw	zero,0(r16)
 80078ac:	80000115 	stw	zero,4(r16)
 80078b0:	80000215 	stw	zero,8(r16)
 80078b4:	80001915 	stw	zero,100(r16)
 80078b8:	8080038d 	sth	r2,14(r16)
 80078bc:	80000415 	stw	zero,16(r16)
 80078c0:	80000515 	stw	zero,20(r16)
 80078c4:	80000615 	stw	zero,24(r16)
 80078c8:	b80d883a 	mov	r6,r23
 80078cc:	000b883a 	mov	r5,zero
 80078d0:	81001704 	addi	r4,r16,92
 80078d4:	8008c640 	call	8008c64 <memset>
 80078d8:	00800044 	movi	r2,1
 80078dc:	84000715 	stw	r16,28(r16)
 80078e0:	85800815 	stw	r22,32(r16)
 80078e4:	85400915 	stw	r21,36(r16)
 80078e8:	85000a15 	stw	r20,40(r16)
 80078ec:	84c00b15 	stw	r19,44(r16)
 80078f0:	90800e15 	stw	r2,56(r18)
 80078f4:	dfc00817 	ldw	ra,32(sp)
 80078f8:	ddc00717 	ldw	r23,28(sp)
 80078fc:	dd800617 	ldw	r22,24(sp)
 8007900:	dd400517 	ldw	r21,20(sp)
 8007904:	dd000417 	ldw	r20,16(sp)
 8007908:	dcc00317 	ldw	r19,12(sp)
 800790c:	dc800217 	ldw	r18,8(sp)
 8007910:	dc400117 	ldw	r17,4(sp)
 8007914:	dc000017 	ldw	r16,0(sp)
 8007918:	dec00904 	addi	sp,sp,36
 800791c:	f800283a 	ret

08007920 <__fp_lock>:
 8007920:	0005883a 	mov	r2,zero
 8007924:	f800283a 	ret

08007928 <__sfmoreglue>:
 8007928:	defffc04 	addi	sp,sp,-16
 800792c:	dc800215 	stw	r18,8(sp)
 8007930:	2825883a 	mov	r18,r5
 8007934:	dc000015 	stw	r16,0(sp)
 8007938:	01401a04 	movi	r5,104
 800793c:	2021883a 	mov	r16,r4
 8007940:	913fffc4 	addi	r4,r18,-1
 8007944:	dfc00315 	stw	ra,12(sp)
 8007948:	dc400115 	stw	r17,4(sp)
 800794c:	80010a00 	call	80010a0 <__mulsi3>
 8007950:	8009883a 	mov	r4,r16
 8007954:	11401d04 	addi	r5,r2,116
 8007958:	1023883a 	mov	r17,r2
 800795c:	80083740 	call	8008374 <_malloc_r>
 8007960:	1021883a 	mov	r16,r2
 8007964:	10000726 	beq	r2,zero,8007984 <__sfmoreglue+0x5c>
 8007968:	11000304 	addi	r4,r2,12
 800796c:	10000015 	stw	zero,0(r2)
 8007970:	14800115 	stw	r18,4(r2)
 8007974:	11000215 	stw	r4,8(r2)
 8007978:	89801a04 	addi	r6,r17,104
 800797c:	000b883a 	mov	r5,zero
 8007980:	8008c640 	call	8008c64 <memset>
 8007984:	8005883a 	mov	r2,r16
 8007988:	dfc00317 	ldw	ra,12(sp)
 800798c:	dc800217 	ldw	r18,8(sp)
 8007990:	dc400117 	ldw	r17,4(sp)
 8007994:	dc000017 	ldw	r16,0(sp)
 8007998:	dec00404 	addi	sp,sp,16
 800799c:	f800283a 	ret

080079a0 <__sfp>:
 80079a0:	defffb04 	addi	sp,sp,-20
 80079a4:	dc000015 	stw	r16,0(sp)
 80079a8:	04020074 	movhi	r16,2049
 80079ac:	8418c404 	addi	r16,r16,25360
 80079b0:	dcc00315 	stw	r19,12(sp)
 80079b4:	2027883a 	mov	r19,r4
 80079b8:	81000017 	ldw	r4,0(r16)
 80079bc:	dfc00415 	stw	ra,16(sp)
 80079c0:	dc800215 	stw	r18,8(sp)
 80079c4:	20800e17 	ldw	r2,56(r4)
 80079c8:	dc400115 	stw	r17,4(sp)
 80079cc:	1000021e 	bne	r2,zero,80079d8 <__sfp+0x38>
 80079d0:	80077840 	call	8007784 <__sinit.part.1>
 80079d4:	81000017 	ldw	r4,0(r16)
 80079d8:	2480b804 	addi	r18,r4,736
 80079dc:	047fffc4 	movi	r17,-1
 80079e0:	91000117 	ldw	r4,4(r18)
 80079e4:	94000217 	ldw	r16,8(r18)
 80079e8:	213fffc4 	addi	r4,r4,-1
 80079ec:	20000a16 	blt	r4,zero,8007a18 <__sfp+0x78>
 80079f0:	8080030f 	ldh	r2,12(r16)
 80079f4:	10000c26 	beq	r2,zero,8007a28 <__sfp+0x88>
 80079f8:	80c01d04 	addi	r3,r16,116
 80079fc:	00000206 	br	8007a08 <__sfp+0x68>
 8007a00:	18bfe60f 	ldh	r2,-104(r3)
 8007a04:	10000826 	beq	r2,zero,8007a28 <__sfp+0x88>
 8007a08:	213fffc4 	addi	r4,r4,-1
 8007a0c:	1c3ffd04 	addi	r16,r3,-12
 8007a10:	18c01a04 	addi	r3,r3,104
 8007a14:	247ffa1e 	bne	r4,r17,8007a00 <__alt_data_end+0xfc007a00>
 8007a18:	90800017 	ldw	r2,0(r18)
 8007a1c:	10001d26 	beq	r2,zero,8007a94 <__sfp+0xf4>
 8007a20:	1025883a 	mov	r18,r2
 8007a24:	003fee06 	br	80079e0 <__alt_data_end+0xfc0079e0>
 8007a28:	00bfffc4 	movi	r2,-1
 8007a2c:	8080038d 	sth	r2,14(r16)
 8007a30:	00800044 	movi	r2,1
 8007a34:	8080030d 	sth	r2,12(r16)
 8007a38:	80001915 	stw	zero,100(r16)
 8007a3c:	80000015 	stw	zero,0(r16)
 8007a40:	80000215 	stw	zero,8(r16)
 8007a44:	80000115 	stw	zero,4(r16)
 8007a48:	80000415 	stw	zero,16(r16)
 8007a4c:	80000515 	stw	zero,20(r16)
 8007a50:	80000615 	stw	zero,24(r16)
 8007a54:	01800204 	movi	r6,8
 8007a58:	000b883a 	mov	r5,zero
 8007a5c:	81001704 	addi	r4,r16,92
 8007a60:	8008c640 	call	8008c64 <memset>
 8007a64:	8005883a 	mov	r2,r16
 8007a68:	80000c15 	stw	zero,48(r16)
 8007a6c:	80000d15 	stw	zero,52(r16)
 8007a70:	80001115 	stw	zero,68(r16)
 8007a74:	80001215 	stw	zero,72(r16)
 8007a78:	dfc00417 	ldw	ra,16(sp)
 8007a7c:	dcc00317 	ldw	r19,12(sp)
 8007a80:	dc800217 	ldw	r18,8(sp)
 8007a84:	dc400117 	ldw	r17,4(sp)
 8007a88:	dc000017 	ldw	r16,0(sp)
 8007a8c:	dec00504 	addi	sp,sp,20
 8007a90:	f800283a 	ret
 8007a94:	01400104 	movi	r5,4
 8007a98:	9809883a 	mov	r4,r19
 8007a9c:	80079280 	call	8007928 <__sfmoreglue>
 8007aa0:	90800015 	stw	r2,0(r18)
 8007aa4:	103fde1e 	bne	r2,zero,8007a20 <__alt_data_end+0xfc007a20>
 8007aa8:	00800304 	movi	r2,12
 8007aac:	98800015 	stw	r2,0(r19)
 8007ab0:	0005883a 	mov	r2,zero
 8007ab4:	003ff006 	br	8007a78 <__alt_data_end+0xfc007a78>

08007ab8 <_cleanup>:
 8007ab8:	00820074 	movhi	r2,2049
 8007abc:	1098c404 	addi	r2,r2,25360
 8007ac0:	11000017 	ldw	r4,0(r2)
 8007ac4:	01420074 	movhi	r5,2049
 8007ac8:	2973c704 	addi	r5,r5,-12516
 8007acc:	80080181 	jmpi	8008018 <_fwalk_reent>

08007ad0 <__sinit>:
 8007ad0:	20800e17 	ldw	r2,56(r4)
 8007ad4:	10000126 	beq	r2,zero,8007adc <__sinit+0xc>
 8007ad8:	f800283a 	ret
 8007adc:	80077841 	jmpi	8007784 <__sinit.part.1>

08007ae0 <__sfp_lock_acquire>:
 8007ae0:	f800283a 	ret

08007ae4 <__sfp_lock_release>:
 8007ae4:	f800283a 	ret

08007ae8 <__sinit_lock_acquire>:
 8007ae8:	f800283a 	ret

08007aec <__sinit_lock_release>:
 8007aec:	f800283a 	ret

08007af0 <__fp_lock_all>:
 8007af0:	00820074 	movhi	r2,2049
 8007af4:	1098c504 	addi	r2,r2,25364
 8007af8:	11000017 	ldw	r4,0(r2)
 8007afc:	01420034 	movhi	r5,2048
 8007b00:	295e4804 	addi	r5,r5,31008
 8007b04:	8007f541 	jmpi	8007f54 <_fwalk>

08007b08 <__fp_unlock_all>:
 8007b08:	00820074 	movhi	r2,2049
 8007b0c:	1098c504 	addi	r2,r2,25364
 8007b10:	11000017 	ldw	r4,0(r2)
 8007b14:	01420034 	movhi	r5,2048
 8007b18:	295ddc04 	addi	r5,r5,30576
 8007b1c:	8007f541 	jmpi	8007f54 <_fwalk>

08007b20 <_malloc_trim_r>:
 8007b20:	defffb04 	addi	sp,sp,-20
 8007b24:	dcc00315 	stw	r19,12(sp)
 8007b28:	04c20074 	movhi	r19,2049
 8007b2c:	dc800215 	stw	r18,8(sp)
 8007b30:	dc400115 	stw	r17,4(sp)
 8007b34:	dc000015 	stw	r16,0(sp)
 8007b38:	dfc00415 	stw	ra,16(sp)
 8007b3c:	2821883a 	mov	r16,r5
 8007b40:	9cd33d04 	addi	r19,r19,19700
 8007b44:	2025883a 	mov	r18,r4
 8007b48:	8011d6c0 	call	8011d6c <__malloc_lock>
 8007b4c:	98800217 	ldw	r2,8(r19)
 8007b50:	14400117 	ldw	r17,4(r2)
 8007b54:	00bfff04 	movi	r2,-4
 8007b58:	88a2703a 	and	r17,r17,r2
 8007b5c:	8c21c83a 	sub	r16,r17,r16
 8007b60:	8403fbc4 	addi	r16,r16,4079
 8007b64:	8020d33a 	srli	r16,r16,12
 8007b68:	0083ffc4 	movi	r2,4095
 8007b6c:	843fffc4 	addi	r16,r16,-1
 8007b70:	8020933a 	slli	r16,r16,12
 8007b74:	1400060e 	bge	r2,r16,8007b90 <_malloc_trim_r+0x70>
 8007b78:	000b883a 	mov	r5,zero
 8007b7c:	9009883a 	mov	r4,r18
 8007b80:	8009eb80 	call	8009eb8 <_sbrk_r>
 8007b84:	98c00217 	ldw	r3,8(r19)
 8007b88:	1c47883a 	add	r3,r3,r17
 8007b8c:	10c00a26 	beq	r2,r3,8007bb8 <_malloc_trim_r+0x98>
 8007b90:	9009883a 	mov	r4,r18
 8007b94:	8011d900 	call	8011d90 <__malloc_unlock>
 8007b98:	0005883a 	mov	r2,zero
 8007b9c:	dfc00417 	ldw	ra,16(sp)
 8007ba0:	dcc00317 	ldw	r19,12(sp)
 8007ba4:	dc800217 	ldw	r18,8(sp)
 8007ba8:	dc400117 	ldw	r17,4(sp)
 8007bac:	dc000017 	ldw	r16,0(sp)
 8007bb0:	dec00504 	addi	sp,sp,20
 8007bb4:	f800283a 	ret
 8007bb8:	040bc83a 	sub	r5,zero,r16
 8007bbc:	9009883a 	mov	r4,r18
 8007bc0:	8009eb80 	call	8009eb8 <_sbrk_r>
 8007bc4:	00ffffc4 	movi	r3,-1
 8007bc8:	10c00d26 	beq	r2,r3,8007c00 <_malloc_trim_r+0xe0>
 8007bcc:	00c200b4 	movhi	r3,2050
 8007bd0:	18e05804 	addi	r3,r3,-32416
 8007bd4:	18800017 	ldw	r2,0(r3)
 8007bd8:	99000217 	ldw	r4,8(r19)
 8007bdc:	8c23c83a 	sub	r17,r17,r16
 8007be0:	8c400054 	ori	r17,r17,1
 8007be4:	1421c83a 	sub	r16,r2,r16
 8007be8:	24400115 	stw	r17,4(r4)
 8007bec:	9009883a 	mov	r4,r18
 8007bf0:	1c000015 	stw	r16,0(r3)
 8007bf4:	8011d900 	call	8011d90 <__malloc_unlock>
 8007bf8:	00800044 	movi	r2,1
 8007bfc:	003fe706 	br	8007b9c <__alt_data_end+0xfc007b9c>
 8007c00:	000b883a 	mov	r5,zero
 8007c04:	9009883a 	mov	r4,r18
 8007c08:	8009eb80 	call	8009eb8 <_sbrk_r>
 8007c0c:	99000217 	ldw	r4,8(r19)
 8007c10:	014003c4 	movi	r5,15
 8007c14:	1107c83a 	sub	r3,r2,r4
 8007c18:	28ffdd0e 	bge	r5,r3,8007b90 <__alt_data_end+0xfc007b90>
 8007c1c:	01420074 	movhi	r5,2049
 8007c20:	2958c704 	addi	r5,r5,25372
 8007c24:	29400017 	ldw	r5,0(r5)
 8007c28:	18c00054 	ori	r3,r3,1
 8007c2c:	20c00115 	stw	r3,4(r4)
 8007c30:	00c200b4 	movhi	r3,2050
 8007c34:	1145c83a 	sub	r2,r2,r5
 8007c38:	18e05804 	addi	r3,r3,-32416
 8007c3c:	18800015 	stw	r2,0(r3)
 8007c40:	003fd306 	br	8007b90 <__alt_data_end+0xfc007b90>

08007c44 <_free_r>:
 8007c44:	28004126 	beq	r5,zero,8007d4c <_free_r+0x108>
 8007c48:	defffd04 	addi	sp,sp,-12
 8007c4c:	dc400115 	stw	r17,4(sp)
 8007c50:	dc000015 	stw	r16,0(sp)
 8007c54:	2023883a 	mov	r17,r4
 8007c58:	2821883a 	mov	r16,r5
 8007c5c:	dfc00215 	stw	ra,8(sp)
 8007c60:	8011d6c0 	call	8011d6c <__malloc_lock>
 8007c64:	81ffff17 	ldw	r7,-4(r16)
 8007c68:	00bfff84 	movi	r2,-2
 8007c6c:	01020074 	movhi	r4,2049
 8007c70:	81bffe04 	addi	r6,r16,-8
 8007c74:	3884703a 	and	r2,r7,r2
 8007c78:	21133d04 	addi	r4,r4,19700
 8007c7c:	308b883a 	add	r5,r6,r2
 8007c80:	2a400117 	ldw	r9,4(r5)
 8007c84:	22000217 	ldw	r8,8(r4)
 8007c88:	00ffff04 	movi	r3,-4
 8007c8c:	48c6703a 	and	r3,r9,r3
 8007c90:	2a005726 	beq	r5,r8,8007df0 <_free_r+0x1ac>
 8007c94:	28c00115 	stw	r3,4(r5)
 8007c98:	39c0004c 	andi	r7,r7,1
 8007c9c:	3800091e 	bne	r7,zero,8007cc4 <_free_r+0x80>
 8007ca0:	823ffe17 	ldw	r8,-8(r16)
 8007ca4:	22400204 	addi	r9,r4,8
 8007ca8:	320dc83a 	sub	r6,r6,r8
 8007cac:	31c00217 	ldw	r7,8(r6)
 8007cb0:	1205883a 	add	r2,r2,r8
 8007cb4:	3a406526 	beq	r7,r9,8007e4c <_free_r+0x208>
 8007cb8:	32000317 	ldw	r8,12(r6)
 8007cbc:	3a000315 	stw	r8,12(r7)
 8007cc0:	41c00215 	stw	r7,8(r8)
 8007cc4:	28cf883a 	add	r7,r5,r3
 8007cc8:	39c00117 	ldw	r7,4(r7)
 8007ccc:	39c0004c 	andi	r7,r7,1
 8007cd0:	38003a26 	beq	r7,zero,8007dbc <_free_r+0x178>
 8007cd4:	10c00054 	ori	r3,r2,1
 8007cd8:	30c00115 	stw	r3,4(r6)
 8007cdc:	3087883a 	add	r3,r6,r2
 8007ce0:	18800015 	stw	r2,0(r3)
 8007ce4:	00c07fc4 	movi	r3,511
 8007ce8:	18801936 	bltu	r3,r2,8007d50 <_free_r+0x10c>
 8007cec:	1004d0fa 	srli	r2,r2,3
 8007cf0:	01c00044 	movi	r7,1
 8007cf4:	21400117 	ldw	r5,4(r4)
 8007cf8:	10c00044 	addi	r3,r2,1
 8007cfc:	18c7883a 	add	r3,r3,r3
 8007d00:	1005d0ba 	srai	r2,r2,2
 8007d04:	18c7883a 	add	r3,r3,r3
 8007d08:	18c7883a 	add	r3,r3,r3
 8007d0c:	1907883a 	add	r3,r3,r4
 8007d10:	3884983a 	sll	r2,r7,r2
 8007d14:	19c00017 	ldw	r7,0(r3)
 8007d18:	1a3ffe04 	addi	r8,r3,-8
 8007d1c:	1144b03a 	or	r2,r2,r5
 8007d20:	32000315 	stw	r8,12(r6)
 8007d24:	31c00215 	stw	r7,8(r6)
 8007d28:	20800115 	stw	r2,4(r4)
 8007d2c:	19800015 	stw	r6,0(r3)
 8007d30:	39800315 	stw	r6,12(r7)
 8007d34:	8809883a 	mov	r4,r17
 8007d38:	dfc00217 	ldw	ra,8(sp)
 8007d3c:	dc400117 	ldw	r17,4(sp)
 8007d40:	dc000017 	ldw	r16,0(sp)
 8007d44:	dec00304 	addi	sp,sp,12
 8007d48:	8011d901 	jmpi	8011d90 <__malloc_unlock>
 8007d4c:	f800283a 	ret
 8007d50:	100ad27a 	srli	r5,r2,9
 8007d54:	00c00104 	movi	r3,4
 8007d58:	19404a36 	bltu	r3,r5,8007e84 <_free_r+0x240>
 8007d5c:	100ad1ba 	srli	r5,r2,6
 8007d60:	28c00e44 	addi	r3,r5,57
 8007d64:	18c7883a 	add	r3,r3,r3
 8007d68:	29400e04 	addi	r5,r5,56
 8007d6c:	18c7883a 	add	r3,r3,r3
 8007d70:	18c7883a 	add	r3,r3,r3
 8007d74:	1909883a 	add	r4,r3,r4
 8007d78:	20c00017 	ldw	r3,0(r4)
 8007d7c:	01c20074 	movhi	r7,2049
 8007d80:	213ffe04 	addi	r4,r4,-8
 8007d84:	39d33d04 	addi	r7,r7,19700
 8007d88:	20c04426 	beq	r4,r3,8007e9c <_free_r+0x258>
 8007d8c:	01ffff04 	movi	r7,-4
 8007d90:	19400117 	ldw	r5,4(r3)
 8007d94:	29ca703a 	and	r5,r5,r7
 8007d98:	1140022e 	bgeu	r2,r5,8007da4 <_free_r+0x160>
 8007d9c:	18c00217 	ldw	r3,8(r3)
 8007da0:	20fffb1e 	bne	r4,r3,8007d90 <__alt_data_end+0xfc007d90>
 8007da4:	19000317 	ldw	r4,12(r3)
 8007da8:	31000315 	stw	r4,12(r6)
 8007dac:	30c00215 	stw	r3,8(r6)
 8007db0:	21800215 	stw	r6,8(r4)
 8007db4:	19800315 	stw	r6,12(r3)
 8007db8:	003fde06 	br	8007d34 <__alt_data_end+0xfc007d34>
 8007dbc:	29c00217 	ldw	r7,8(r5)
 8007dc0:	10c5883a 	add	r2,r2,r3
 8007dc4:	00c20074 	movhi	r3,2049
 8007dc8:	18d33f04 	addi	r3,r3,19708
 8007dcc:	38c03b26 	beq	r7,r3,8007ebc <_free_r+0x278>
 8007dd0:	2a000317 	ldw	r8,12(r5)
 8007dd4:	11400054 	ori	r5,r2,1
 8007dd8:	3087883a 	add	r3,r6,r2
 8007ddc:	3a000315 	stw	r8,12(r7)
 8007de0:	41c00215 	stw	r7,8(r8)
 8007de4:	31400115 	stw	r5,4(r6)
 8007de8:	18800015 	stw	r2,0(r3)
 8007dec:	003fbd06 	br	8007ce4 <__alt_data_end+0xfc007ce4>
 8007df0:	39c0004c 	andi	r7,r7,1
 8007df4:	10c5883a 	add	r2,r2,r3
 8007df8:	3800071e 	bne	r7,zero,8007e18 <_free_r+0x1d4>
 8007dfc:	81fffe17 	ldw	r7,-8(r16)
 8007e00:	31cdc83a 	sub	r6,r6,r7
 8007e04:	30c00317 	ldw	r3,12(r6)
 8007e08:	31400217 	ldw	r5,8(r6)
 8007e0c:	11c5883a 	add	r2,r2,r7
 8007e10:	28c00315 	stw	r3,12(r5)
 8007e14:	19400215 	stw	r5,8(r3)
 8007e18:	10c00054 	ori	r3,r2,1
 8007e1c:	30c00115 	stw	r3,4(r6)
 8007e20:	00c20074 	movhi	r3,2049
 8007e24:	18d8c804 	addi	r3,r3,25376
 8007e28:	18c00017 	ldw	r3,0(r3)
 8007e2c:	21800215 	stw	r6,8(r4)
 8007e30:	10ffc036 	bltu	r2,r3,8007d34 <__alt_data_end+0xfc007d34>
 8007e34:	008200b4 	movhi	r2,2050
 8007e38:	10a04f04 	addi	r2,r2,-32452
 8007e3c:	11400017 	ldw	r5,0(r2)
 8007e40:	8809883a 	mov	r4,r17
 8007e44:	8007b200 	call	8007b20 <_malloc_trim_r>
 8007e48:	003fba06 	br	8007d34 <__alt_data_end+0xfc007d34>
 8007e4c:	28c9883a 	add	r4,r5,r3
 8007e50:	21000117 	ldw	r4,4(r4)
 8007e54:	2100004c 	andi	r4,r4,1
 8007e58:	2000391e 	bne	r4,zero,8007f40 <_free_r+0x2fc>
 8007e5c:	29c00217 	ldw	r7,8(r5)
 8007e60:	29000317 	ldw	r4,12(r5)
 8007e64:	1885883a 	add	r2,r3,r2
 8007e68:	10c00054 	ori	r3,r2,1
 8007e6c:	39000315 	stw	r4,12(r7)
 8007e70:	21c00215 	stw	r7,8(r4)
 8007e74:	30c00115 	stw	r3,4(r6)
 8007e78:	308d883a 	add	r6,r6,r2
 8007e7c:	30800015 	stw	r2,0(r6)
 8007e80:	003fac06 	br	8007d34 <__alt_data_end+0xfc007d34>
 8007e84:	00c00504 	movi	r3,20
 8007e88:	19401536 	bltu	r3,r5,8007ee0 <_free_r+0x29c>
 8007e8c:	28c01704 	addi	r3,r5,92
 8007e90:	18c7883a 	add	r3,r3,r3
 8007e94:	294016c4 	addi	r5,r5,91
 8007e98:	003fb406 	br	8007d6c <__alt_data_end+0xfc007d6c>
 8007e9c:	280bd0ba 	srai	r5,r5,2
 8007ea0:	00c00044 	movi	r3,1
 8007ea4:	38800117 	ldw	r2,4(r7)
 8007ea8:	194a983a 	sll	r5,r3,r5
 8007eac:	2007883a 	mov	r3,r4
 8007eb0:	2884b03a 	or	r2,r5,r2
 8007eb4:	38800115 	stw	r2,4(r7)
 8007eb8:	003fbb06 	br	8007da8 <__alt_data_end+0xfc007da8>
 8007ebc:	21800515 	stw	r6,20(r4)
 8007ec0:	21800415 	stw	r6,16(r4)
 8007ec4:	10c00054 	ori	r3,r2,1
 8007ec8:	31c00315 	stw	r7,12(r6)
 8007ecc:	31c00215 	stw	r7,8(r6)
 8007ed0:	30c00115 	stw	r3,4(r6)
 8007ed4:	308d883a 	add	r6,r6,r2
 8007ed8:	30800015 	stw	r2,0(r6)
 8007edc:	003f9506 	br	8007d34 <__alt_data_end+0xfc007d34>
 8007ee0:	00c01504 	movi	r3,84
 8007ee4:	19400536 	bltu	r3,r5,8007efc <_free_r+0x2b8>
 8007ee8:	100ad33a 	srli	r5,r2,12
 8007eec:	28c01bc4 	addi	r3,r5,111
 8007ef0:	18c7883a 	add	r3,r3,r3
 8007ef4:	29401b84 	addi	r5,r5,110
 8007ef8:	003f9c06 	br	8007d6c <__alt_data_end+0xfc007d6c>
 8007efc:	00c05504 	movi	r3,340
 8007f00:	19400536 	bltu	r3,r5,8007f18 <_free_r+0x2d4>
 8007f04:	100ad3fa 	srli	r5,r2,15
 8007f08:	28c01e04 	addi	r3,r5,120
 8007f0c:	18c7883a 	add	r3,r3,r3
 8007f10:	29401dc4 	addi	r5,r5,119
 8007f14:	003f9506 	br	8007d6c <__alt_data_end+0xfc007d6c>
 8007f18:	00c15504 	movi	r3,1364
 8007f1c:	19400536 	bltu	r3,r5,8007f34 <_free_r+0x2f0>
 8007f20:	100ad4ba 	srli	r5,r2,18
 8007f24:	28c01f44 	addi	r3,r5,125
 8007f28:	18c7883a 	add	r3,r3,r3
 8007f2c:	29401f04 	addi	r5,r5,124
 8007f30:	003f8e06 	br	8007d6c <__alt_data_end+0xfc007d6c>
 8007f34:	00c03f84 	movi	r3,254
 8007f38:	01401f84 	movi	r5,126
 8007f3c:	003f8b06 	br	8007d6c <__alt_data_end+0xfc007d6c>
 8007f40:	10c00054 	ori	r3,r2,1
 8007f44:	30c00115 	stw	r3,4(r6)
 8007f48:	308d883a 	add	r6,r6,r2
 8007f4c:	30800015 	stw	r2,0(r6)
 8007f50:	003f7806 	br	8007d34 <__alt_data_end+0xfc007d34>

08007f54 <_fwalk>:
 8007f54:	defff704 	addi	sp,sp,-36
 8007f58:	dd000415 	stw	r20,16(sp)
 8007f5c:	dfc00815 	stw	ra,32(sp)
 8007f60:	ddc00715 	stw	r23,28(sp)
 8007f64:	dd800615 	stw	r22,24(sp)
 8007f68:	dd400515 	stw	r21,20(sp)
 8007f6c:	dcc00315 	stw	r19,12(sp)
 8007f70:	dc800215 	stw	r18,8(sp)
 8007f74:	dc400115 	stw	r17,4(sp)
 8007f78:	dc000015 	stw	r16,0(sp)
 8007f7c:	2500b804 	addi	r20,r4,736
 8007f80:	a0002326 	beq	r20,zero,8008010 <_fwalk+0xbc>
 8007f84:	282b883a 	mov	r21,r5
 8007f88:	002f883a 	mov	r23,zero
 8007f8c:	05800044 	movi	r22,1
 8007f90:	04ffffc4 	movi	r19,-1
 8007f94:	a4400117 	ldw	r17,4(r20)
 8007f98:	a4800217 	ldw	r18,8(r20)
 8007f9c:	8c7fffc4 	addi	r17,r17,-1
 8007fa0:	88000d16 	blt	r17,zero,8007fd8 <_fwalk+0x84>
 8007fa4:	94000304 	addi	r16,r18,12
 8007fa8:	94800384 	addi	r18,r18,14
 8007fac:	8080000b 	ldhu	r2,0(r16)
 8007fb0:	8c7fffc4 	addi	r17,r17,-1
 8007fb4:	813ffd04 	addi	r4,r16,-12
 8007fb8:	b080042e 	bgeu	r22,r2,8007fcc <_fwalk+0x78>
 8007fbc:	9080000f 	ldh	r2,0(r18)
 8007fc0:	14c00226 	beq	r2,r19,8007fcc <_fwalk+0x78>
 8007fc4:	a83ee83a 	callr	r21
 8007fc8:	b8aeb03a 	or	r23,r23,r2
 8007fcc:	84001a04 	addi	r16,r16,104
 8007fd0:	94801a04 	addi	r18,r18,104
 8007fd4:	8cfff51e 	bne	r17,r19,8007fac <__alt_data_end+0xfc007fac>
 8007fd8:	a5000017 	ldw	r20,0(r20)
 8007fdc:	a03fed1e 	bne	r20,zero,8007f94 <__alt_data_end+0xfc007f94>
 8007fe0:	b805883a 	mov	r2,r23
 8007fe4:	dfc00817 	ldw	ra,32(sp)
 8007fe8:	ddc00717 	ldw	r23,28(sp)
 8007fec:	dd800617 	ldw	r22,24(sp)
 8007ff0:	dd400517 	ldw	r21,20(sp)
 8007ff4:	dd000417 	ldw	r20,16(sp)
 8007ff8:	dcc00317 	ldw	r19,12(sp)
 8007ffc:	dc800217 	ldw	r18,8(sp)
 8008000:	dc400117 	ldw	r17,4(sp)
 8008004:	dc000017 	ldw	r16,0(sp)
 8008008:	dec00904 	addi	sp,sp,36
 800800c:	f800283a 	ret
 8008010:	002f883a 	mov	r23,zero
 8008014:	003ff206 	br	8007fe0 <__alt_data_end+0xfc007fe0>

08008018 <_fwalk_reent>:
 8008018:	defff704 	addi	sp,sp,-36
 800801c:	dd000415 	stw	r20,16(sp)
 8008020:	dfc00815 	stw	ra,32(sp)
 8008024:	ddc00715 	stw	r23,28(sp)
 8008028:	dd800615 	stw	r22,24(sp)
 800802c:	dd400515 	stw	r21,20(sp)
 8008030:	dcc00315 	stw	r19,12(sp)
 8008034:	dc800215 	stw	r18,8(sp)
 8008038:	dc400115 	stw	r17,4(sp)
 800803c:	dc000015 	stw	r16,0(sp)
 8008040:	2500b804 	addi	r20,r4,736
 8008044:	a0002326 	beq	r20,zero,80080d4 <_fwalk_reent+0xbc>
 8008048:	282b883a 	mov	r21,r5
 800804c:	2027883a 	mov	r19,r4
 8008050:	002f883a 	mov	r23,zero
 8008054:	05800044 	movi	r22,1
 8008058:	04bfffc4 	movi	r18,-1
 800805c:	a4400117 	ldw	r17,4(r20)
 8008060:	a4000217 	ldw	r16,8(r20)
 8008064:	8c7fffc4 	addi	r17,r17,-1
 8008068:	88000c16 	blt	r17,zero,800809c <_fwalk_reent+0x84>
 800806c:	84000304 	addi	r16,r16,12
 8008070:	8080000b 	ldhu	r2,0(r16)
 8008074:	8c7fffc4 	addi	r17,r17,-1
 8008078:	817ffd04 	addi	r5,r16,-12
 800807c:	b080052e 	bgeu	r22,r2,8008094 <_fwalk_reent+0x7c>
 8008080:	8080008f 	ldh	r2,2(r16)
 8008084:	9809883a 	mov	r4,r19
 8008088:	14800226 	beq	r2,r18,8008094 <_fwalk_reent+0x7c>
 800808c:	a83ee83a 	callr	r21
 8008090:	b8aeb03a 	or	r23,r23,r2
 8008094:	84001a04 	addi	r16,r16,104
 8008098:	8cbff51e 	bne	r17,r18,8008070 <__alt_data_end+0xfc008070>
 800809c:	a5000017 	ldw	r20,0(r20)
 80080a0:	a03fee1e 	bne	r20,zero,800805c <__alt_data_end+0xfc00805c>
 80080a4:	b805883a 	mov	r2,r23
 80080a8:	dfc00817 	ldw	ra,32(sp)
 80080ac:	ddc00717 	ldw	r23,28(sp)
 80080b0:	dd800617 	ldw	r22,24(sp)
 80080b4:	dd400517 	ldw	r21,20(sp)
 80080b8:	dd000417 	ldw	r20,16(sp)
 80080bc:	dcc00317 	ldw	r19,12(sp)
 80080c0:	dc800217 	ldw	r18,8(sp)
 80080c4:	dc400117 	ldw	r17,4(sp)
 80080c8:	dc000017 	ldw	r16,0(sp)
 80080cc:	dec00904 	addi	sp,sp,36
 80080d0:	f800283a 	ret
 80080d4:	002f883a 	mov	r23,zero
 80080d8:	003ff206 	br	80080a4 <__alt_data_end+0xfc0080a4>

080080dc <_setlocale_r>:
 80080dc:	30001b26 	beq	r6,zero,800814c <_setlocale_r+0x70>
 80080e0:	01420074 	movhi	r5,2049
 80080e4:	defffe04 	addi	sp,sp,-8
 80080e8:	2950b504 	addi	r5,r5,17108
 80080ec:	3009883a 	mov	r4,r6
 80080f0:	dc000015 	stw	r16,0(sp)
 80080f4:	dfc00115 	stw	ra,4(sp)
 80080f8:	3021883a 	mov	r16,r6
 80080fc:	800a0480 	call	800a048 <strcmp>
 8008100:	1000061e 	bne	r2,zero,800811c <_setlocale_r+0x40>
 8008104:	00820074 	movhi	r2,2049
 8008108:	1090b404 	addi	r2,r2,17104
 800810c:	dfc00117 	ldw	ra,4(sp)
 8008110:	dc000017 	ldw	r16,0(sp)
 8008114:	dec00204 	addi	sp,sp,8
 8008118:	f800283a 	ret
 800811c:	01420074 	movhi	r5,2049
 8008120:	2950b404 	addi	r5,r5,17104
 8008124:	8009883a 	mov	r4,r16
 8008128:	800a0480 	call	800a048 <strcmp>
 800812c:	103ff526 	beq	r2,zero,8008104 <__alt_data_end+0xfc008104>
 8008130:	01420074 	movhi	r5,2049
 8008134:	29509704 	addi	r5,r5,16988
 8008138:	8009883a 	mov	r4,r16
 800813c:	800a0480 	call	800a048 <strcmp>
 8008140:	103ff026 	beq	r2,zero,8008104 <__alt_data_end+0xfc008104>
 8008144:	0005883a 	mov	r2,zero
 8008148:	003ff006 	br	800810c <__alt_data_end+0xfc00810c>
 800814c:	00820074 	movhi	r2,2049
 8008150:	1090b404 	addi	r2,r2,17104
 8008154:	f800283a 	ret

08008158 <__locale_charset>:
 8008158:	00820074 	movhi	r2,2049
 800815c:	10932704 	addi	r2,r2,19612
 8008160:	f800283a 	ret

08008164 <__locale_mb_cur_max>:
 8008164:	00820074 	movhi	r2,2049
 8008168:	1098c604 	addi	r2,r2,25368
 800816c:	10800017 	ldw	r2,0(r2)
 8008170:	f800283a 	ret

08008174 <__locale_msgcharset>:
 8008174:	00820074 	movhi	r2,2049
 8008178:	10931f04 	addi	r2,r2,19580
 800817c:	f800283a 	ret

08008180 <__locale_cjk_lang>:
 8008180:	0005883a 	mov	r2,zero
 8008184:	f800283a 	ret

08008188 <_localeconv_r>:
 8008188:	00820074 	movhi	r2,2049
 800818c:	10932f04 	addi	r2,r2,19644
 8008190:	f800283a 	ret

08008194 <setlocale>:
 8008194:	00820074 	movhi	r2,2049
 8008198:	1098c504 	addi	r2,r2,25364
 800819c:	280d883a 	mov	r6,r5
 80081a0:	200b883a 	mov	r5,r4
 80081a4:	11000017 	ldw	r4,0(r2)
 80081a8:	80080dc1 	jmpi	80080dc <_setlocale_r>

080081ac <localeconv>:
 80081ac:	00820074 	movhi	r2,2049
 80081b0:	10932f04 	addi	r2,r2,19644
 80081b4:	f800283a 	ret

080081b8 <__smakebuf_r>:
 80081b8:	2880030b 	ldhu	r2,12(r5)
 80081bc:	10c0008c 	andi	r3,r2,2
 80081c0:	1800411e 	bne	r3,zero,80082c8 <__smakebuf_r+0x110>
 80081c4:	deffec04 	addi	sp,sp,-80
 80081c8:	dc000f15 	stw	r16,60(sp)
 80081cc:	2821883a 	mov	r16,r5
 80081d0:	2940038f 	ldh	r5,14(r5)
 80081d4:	dc401015 	stw	r17,64(sp)
 80081d8:	dfc01315 	stw	ra,76(sp)
 80081dc:	dcc01215 	stw	r19,72(sp)
 80081e0:	dc801115 	stw	r18,68(sp)
 80081e4:	2023883a 	mov	r17,r4
 80081e8:	28001c16 	blt	r5,zero,800825c <__smakebuf_r+0xa4>
 80081ec:	d80d883a 	mov	r6,sp
 80081f0:	800d2280 	call	800d228 <_fstat_r>
 80081f4:	10001816 	blt	r2,zero,8008258 <__smakebuf_r+0xa0>
 80081f8:	d8800117 	ldw	r2,4(sp)
 80081fc:	00e00014 	movui	r3,32768
 8008200:	10bc000c 	andi	r2,r2,61440
 8008204:	14c80020 	cmpeqi	r19,r2,8192
 8008208:	10c03726 	beq	r2,r3,80082e8 <__smakebuf_r+0x130>
 800820c:	80c0030b 	ldhu	r3,12(r16)
 8008210:	18c20014 	ori	r3,r3,2048
 8008214:	80c0030d 	sth	r3,12(r16)
 8008218:	00c80004 	movi	r3,8192
 800821c:	10c0521e 	bne	r2,r3,8008368 <__smakebuf_r+0x1b0>
 8008220:	8140038f 	ldh	r5,14(r16)
 8008224:	8809883a 	mov	r4,r17
 8008228:	800d74c0 	call	800d74c <_isatty_r>
 800822c:	10004c26 	beq	r2,zero,8008360 <__smakebuf_r+0x1a8>
 8008230:	8080030b 	ldhu	r2,12(r16)
 8008234:	80c010c4 	addi	r3,r16,67
 8008238:	80c00015 	stw	r3,0(r16)
 800823c:	10800054 	ori	r2,r2,1
 8008240:	8080030d 	sth	r2,12(r16)
 8008244:	00800044 	movi	r2,1
 8008248:	80c00415 	stw	r3,16(r16)
 800824c:	80800515 	stw	r2,20(r16)
 8008250:	04810004 	movi	r18,1024
 8008254:	00000706 	br	8008274 <__smakebuf_r+0xbc>
 8008258:	8080030b 	ldhu	r2,12(r16)
 800825c:	10c0200c 	andi	r3,r2,128
 8008260:	18001f1e 	bne	r3,zero,80082e0 <__smakebuf_r+0x128>
 8008264:	04810004 	movi	r18,1024
 8008268:	10820014 	ori	r2,r2,2048
 800826c:	8080030d 	sth	r2,12(r16)
 8008270:	0027883a 	mov	r19,zero
 8008274:	900b883a 	mov	r5,r18
 8008278:	8809883a 	mov	r4,r17
 800827c:	80083740 	call	8008374 <_malloc_r>
 8008280:	10002c26 	beq	r2,zero,8008334 <__smakebuf_r+0x17c>
 8008284:	80c0030b 	ldhu	r3,12(r16)
 8008288:	01020034 	movhi	r4,2048
 800828c:	211dde04 	addi	r4,r4,30584
 8008290:	89000f15 	stw	r4,60(r17)
 8008294:	18c02014 	ori	r3,r3,128
 8008298:	80c0030d 	sth	r3,12(r16)
 800829c:	80800015 	stw	r2,0(r16)
 80082a0:	80800415 	stw	r2,16(r16)
 80082a4:	84800515 	stw	r18,20(r16)
 80082a8:	98001a1e 	bne	r19,zero,8008314 <__smakebuf_r+0x15c>
 80082ac:	dfc01317 	ldw	ra,76(sp)
 80082b0:	dcc01217 	ldw	r19,72(sp)
 80082b4:	dc801117 	ldw	r18,68(sp)
 80082b8:	dc401017 	ldw	r17,64(sp)
 80082bc:	dc000f17 	ldw	r16,60(sp)
 80082c0:	dec01404 	addi	sp,sp,80
 80082c4:	f800283a 	ret
 80082c8:	288010c4 	addi	r2,r5,67
 80082cc:	28800015 	stw	r2,0(r5)
 80082d0:	28800415 	stw	r2,16(r5)
 80082d4:	00800044 	movi	r2,1
 80082d8:	28800515 	stw	r2,20(r5)
 80082dc:	f800283a 	ret
 80082e0:	04801004 	movi	r18,64
 80082e4:	003fe006 	br	8008268 <__alt_data_end+0xfc008268>
 80082e8:	81000a17 	ldw	r4,40(r16)
 80082ec:	00c20074 	movhi	r3,2049
 80082f0:	18e7f904 	addi	r3,r3,-24604
 80082f4:	20ffc51e 	bne	r4,r3,800820c <__alt_data_end+0xfc00820c>
 80082f8:	8080030b 	ldhu	r2,12(r16)
 80082fc:	04810004 	movi	r18,1024
 8008300:	84801315 	stw	r18,76(r16)
 8008304:	1484b03a 	or	r2,r2,r18
 8008308:	8080030d 	sth	r2,12(r16)
 800830c:	0027883a 	mov	r19,zero
 8008310:	003fd806 	br	8008274 <__alt_data_end+0xfc008274>
 8008314:	8140038f 	ldh	r5,14(r16)
 8008318:	8809883a 	mov	r4,r17
 800831c:	800d74c0 	call	800d74c <_isatty_r>
 8008320:	103fe226 	beq	r2,zero,80082ac <__alt_data_end+0xfc0082ac>
 8008324:	8080030b 	ldhu	r2,12(r16)
 8008328:	10800054 	ori	r2,r2,1
 800832c:	8080030d 	sth	r2,12(r16)
 8008330:	003fde06 	br	80082ac <__alt_data_end+0xfc0082ac>
 8008334:	8080030b 	ldhu	r2,12(r16)
 8008338:	10c0800c 	andi	r3,r2,512
 800833c:	183fdb1e 	bne	r3,zero,80082ac <__alt_data_end+0xfc0082ac>
 8008340:	10800094 	ori	r2,r2,2
 8008344:	80c010c4 	addi	r3,r16,67
 8008348:	8080030d 	sth	r2,12(r16)
 800834c:	00800044 	movi	r2,1
 8008350:	80c00015 	stw	r3,0(r16)
 8008354:	80c00415 	stw	r3,16(r16)
 8008358:	80800515 	stw	r2,20(r16)
 800835c:	003fd306 	br	80082ac <__alt_data_end+0xfc0082ac>
 8008360:	04810004 	movi	r18,1024
 8008364:	003fc306 	br	8008274 <__alt_data_end+0xfc008274>
 8008368:	0027883a 	mov	r19,zero
 800836c:	04810004 	movi	r18,1024
 8008370:	003fc006 	br	8008274 <__alt_data_end+0xfc008274>

08008374 <_malloc_r>:
 8008374:	defff504 	addi	sp,sp,-44
 8008378:	dc800315 	stw	r18,12(sp)
 800837c:	dfc00a15 	stw	ra,40(sp)
 8008380:	df000915 	stw	fp,36(sp)
 8008384:	ddc00815 	stw	r23,32(sp)
 8008388:	dd800715 	stw	r22,28(sp)
 800838c:	dd400615 	stw	r21,24(sp)
 8008390:	dd000515 	stw	r20,20(sp)
 8008394:	dcc00415 	stw	r19,16(sp)
 8008398:	dc400215 	stw	r17,8(sp)
 800839c:	dc000115 	stw	r16,4(sp)
 80083a0:	288002c4 	addi	r2,r5,11
 80083a4:	00c00584 	movi	r3,22
 80083a8:	2025883a 	mov	r18,r4
 80083ac:	18807f2e 	bgeu	r3,r2,80085ac <_malloc_r+0x238>
 80083b0:	047ffe04 	movi	r17,-8
 80083b4:	1462703a 	and	r17,r2,r17
 80083b8:	8800a316 	blt	r17,zero,8008648 <_malloc_r+0x2d4>
 80083bc:	8940a236 	bltu	r17,r5,8008648 <_malloc_r+0x2d4>
 80083c0:	8011d6c0 	call	8011d6c <__malloc_lock>
 80083c4:	00807dc4 	movi	r2,503
 80083c8:	1441e92e 	bgeu	r2,r17,8008b70 <_malloc_r+0x7fc>
 80083cc:	8804d27a 	srli	r2,r17,9
 80083d0:	1000a126 	beq	r2,zero,8008658 <_malloc_r+0x2e4>
 80083d4:	00c00104 	movi	r3,4
 80083d8:	18811e36 	bltu	r3,r2,8008854 <_malloc_r+0x4e0>
 80083dc:	8804d1ba 	srli	r2,r17,6
 80083e0:	12000e44 	addi	r8,r2,57
 80083e4:	11c00e04 	addi	r7,r2,56
 80083e8:	4209883a 	add	r4,r8,r8
 80083ec:	04c20074 	movhi	r19,2049
 80083f0:	2109883a 	add	r4,r4,r4
 80083f4:	9cd33d04 	addi	r19,r19,19700
 80083f8:	2109883a 	add	r4,r4,r4
 80083fc:	9909883a 	add	r4,r19,r4
 8008400:	24000117 	ldw	r16,4(r4)
 8008404:	213ffe04 	addi	r4,r4,-8
 8008408:	24009726 	beq	r4,r16,8008668 <_malloc_r+0x2f4>
 800840c:	80800117 	ldw	r2,4(r16)
 8008410:	01bfff04 	movi	r6,-4
 8008414:	014003c4 	movi	r5,15
 8008418:	1184703a 	and	r2,r2,r6
 800841c:	1447c83a 	sub	r3,r2,r17
 8008420:	28c00716 	blt	r5,r3,8008440 <_malloc_r+0xcc>
 8008424:	1800920e 	bge	r3,zero,8008670 <_malloc_r+0x2fc>
 8008428:	84000317 	ldw	r16,12(r16)
 800842c:	24008e26 	beq	r4,r16,8008668 <_malloc_r+0x2f4>
 8008430:	80800117 	ldw	r2,4(r16)
 8008434:	1184703a 	and	r2,r2,r6
 8008438:	1447c83a 	sub	r3,r2,r17
 800843c:	28fff90e 	bge	r5,r3,8008424 <__alt_data_end+0xfc008424>
 8008440:	3809883a 	mov	r4,r7
 8008444:	01820074 	movhi	r6,2049
 8008448:	9c000417 	ldw	r16,16(r19)
 800844c:	31933d04 	addi	r6,r6,19700
 8008450:	32000204 	addi	r8,r6,8
 8008454:	82013426 	beq	r16,r8,8008928 <_malloc_r+0x5b4>
 8008458:	80c00117 	ldw	r3,4(r16)
 800845c:	00bfff04 	movi	r2,-4
 8008460:	188e703a 	and	r7,r3,r2
 8008464:	3c45c83a 	sub	r2,r7,r17
 8008468:	00c003c4 	movi	r3,15
 800846c:	18811f16 	blt	r3,r2,80088ec <_malloc_r+0x578>
 8008470:	32000515 	stw	r8,20(r6)
 8008474:	32000415 	stw	r8,16(r6)
 8008478:	10007f0e 	bge	r2,zero,8008678 <_malloc_r+0x304>
 800847c:	00807fc4 	movi	r2,511
 8008480:	11c0fd36 	bltu	r2,r7,8008878 <_malloc_r+0x504>
 8008484:	3806d0fa 	srli	r3,r7,3
 8008488:	01c00044 	movi	r7,1
 800848c:	30800117 	ldw	r2,4(r6)
 8008490:	19400044 	addi	r5,r3,1
 8008494:	294b883a 	add	r5,r5,r5
 8008498:	1807d0ba 	srai	r3,r3,2
 800849c:	294b883a 	add	r5,r5,r5
 80084a0:	294b883a 	add	r5,r5,r5
 80084a4:	298b883a 	add	r5,r5,r6
 80084a8:	38c6983a 	sll	r3,r7,r3
 80084ac:	29c00017 	ldw	r7,0(r5)
 80084b0:	2a7ffe04 	addi	r9,r5,-8
 80084b4:	1886b03a 	or	r3,r3,r2
 80084b8:	82400315 	stw	r9,12(r16)
 80084bc:	81c00215 	stw	r7,8(r16)
 80084c0:	30c00115 	stw	r3,4(r6)
 80084c4:	2c000015 	stw	r16,0(r5)
 80084c8:	3c000315 	stw	r16,12(r7)
 80084cc:	2005d0ba 	srai	r2,r4,2
 80084d0:	01400044 	movi	r5,1
 80084d4:	288a983a 	sll	r5,r5,r2
 80084d8:	19406f36 	bltu	r3,r5,8008698 <_malloc_r+0x324>
 80084dc:	28c4703a 	and	r2,r5,r3
 80084e0:	10000a1e 	bne	r2,zero,800850c <_malloc_r+0x198>
 80084e4:	00bfff04 	movi	r2,-4
 80084e8:	294b883a 	add	r5,r5,r5
 80084ec:	2088703a 	and	r4,r4,r2
 80084f0:	28c4703a 	and	r2,r5,r3
 80084f4:	21000104 	addi	r4,r4,4
 80084f8:	1000041e 	bne	r2,zero,800850c <_malloc_r+0x198>
 80084fc:	294b883a 	add	r5,r5,r5
 8008500:	28c4703a 	and	r2,r5,r3
 8008504:	21000104 	addi	r4,r4,4
 8008508:	103ffc26 	beq	r2,zero,80084fc <__alt_data_end+0xfc0084fc>
 800850c:	02bfff04 	movi	r10,-4
 8008510:	024003c4 	movi	r9,15
 8008514:	21800044 	addi	r6,r4,1
 8008518:	318d883a 	add	r6,r6,r6
 800851c:	318d883a 	add	r6,r6,r6
 8008520:	318d883a 	add	r6,r6,r6
 8008524:	998d883a 	add	r6,r19,r6
 8008528:	333ffe04 	addi	r12,r6,-8
 800852c:	2017883a 	mov	r11,r4
 8008530:	31800104 	addi	r6,r6,4
 8008534:	34000017 	ldw	r16,0(r6)
 8008538:	31fffd04 	addi	r7,r6,-12
 800853c:	81c0041e 	bne	r16,r7,8008550 <_malloc_r+0x1dc>
 8008540:	0000fb06 	br	8008930 <_malloc_r+0x5bc>
 8008544:	1801030e 	bge	r3,zero,8008954 <_malloc_r+0x5e0>
 8008548:	84000317 	ldw	r16,12(r16)
 800854c:	81c0f826 	beq	r16,r7,8008930 <_malloc_r+0x5bc>
 8008550:	80800117 	ldw	r2,4(r16)
 8008554:	1284703a 	and	r2,r2,r10
 8008558:	1447c83a 	sub	r3,r2,r17
 800855c:	48fff90e 	bge	r9,r3,8008544 <__alt_data_end+0xfc008544>
 8008560:	80800317 	ldw	r2,12(r16)
 8008564:	81000217 	ldw	r4,8(r16)
 8008568:	89400054 	ori	r5,r17,1
 800856c:	81400115 	stw	r5,4(r16)
 8008570:	20800315 	stw	r2,12(r4)
 8008574:	11000215 	stw	r4,8(r2)
 8008578:	8463883a 	add	r17,r16,r17
 800857c:	9c400515 	stw	r17,20(r19)
 8008580:	9c400415 	stw	r17,16(r19)
 8008584:	18800054 	ori	r2,r3,1
 8008588:	88800115 	stw	r2,4(r17)
 800858c:	8a000315 	stw	r8,12(r17)
 8008590:	8a000215 	stw	r8,8(r17)
 8008594:	88e3883a 	add	r17,r17,r3
 8008598:	88c00015 	stw	r3,0(r17)
 800859c:	9009883a 	mov	r4,r18
 80085a0:	8011d900 	call	8011d90 <__malloc_unlock>
 80085a4:	80800204 	addi	r2,r16,8
 80085a8:	00001b06 	br	8008618 <_malloc_r+0x2a4>
 80085ac:	04400404 	movi	r17,16
 80085b0:	89402536 	bltu	r17,r5,8008648 <_malloc_r+0x2d4>
 80085b4:	8011d6c0 	call	8011d6c <__malloc_lock>
 80085b8:	00800184 	movi	r2,6
 80085bc:	01000084 	movi	r4,2
 80085c0:	04c20074 	movhi	r19,2049
 80085c4:	1085883a 	add	r2,r2,r2
 80085c8:	9cd33d04 	addi	r19,r19,19700
 80085cc:	1085883a 	add	r2,r2,r2
 80085d0:	9885883a 	add	r2,r19,r2
 80085d4:	14000117 	ldw	r16,4(r2)
 80085d8:	10fffe04 	addi	r3,r2,-8
 80085dc:	80c0d926 	beq	r16,r3,8008944 <_malloc_r+0x5d0>
 80085e0:	80c00117 	ldw	r3,4(r16)
 80085e4:	81000317 	ldw	r4,12(r16)
 80085e8:	00bfff04 	movi	r2,-4
 80085ec:	1884703a 	and	r2,r3,r2
 80085f0:	81400217 	ldw	r5,8(r16)
 80085f4:	8085883a 	add	r2,r16,r2
 80085f8:	10c00117 	ldw	r3,4(r2)
 80085fc:	29000315 	stw	r4,12(r5)
 8008600:	21400215 	stw	r5,8(r4)
 8008604:	18c00054 	ori	r3,r3,1
 8008608:	10c00115 	stw	r3,4(r2)
 800860c:	9009883a 	mov	r4,r18
 8008610:	8011d900 	call	8011d90 <__malloc_unlock>
 8008614:	80800204 	addi	r2,r16,8
 8008618:	dfc00a17 	ldw	ra,40(sp)
 800861c:	df000917 	ldw	fp,36(sp)
 8008620:	ddc00817 	ldw	r23,32(sp)
 8008624:	dd800717 	ldw	r22,28(sp)
 8008628:	dd400617 	ldw	r21,24(sp)
 800862c:	dd000517 	ldw	r20,20(sp)
 8008630:	dcc00417 	ldw	r19,16(sp)
 8008634:	dc800317 	ldw	r18,12(sp)
 8008638:	dc400217 	ldw	r17,8(sp)
 800863c:	dc000117 	ldw	r16,4(sp)
 8008640:	dec00b04 	addi	sp,sp,44
 8008644:	f800283a 	ret
 8008648:	00800304 	movi	r2,12
 800864c:	90800015 	stw	r2,0(r18)
 8008650:	0005883a 	mov	r2,zero
 8008654:	003ff006 	br	8008618 <__alt_data_end+0xfc008618>
 8008658:	01002004 	movi	r4,128
 800865c:	02001004 	movi	r8,64
 8008660:	01c00fc4 	movi	r7,63
 8008664:	003f6106 	br	80083ec <__alt_data_end+0xfc0083ec>
 8008668:	4009883a 	mov	r4,r8
 800866c:	003f7506 	br	8008444 <__alt_data_end+0xfc008444>
 8008670:	81000317 	ldw	r4,12(r16)
 8008674:	003fde06 	br	80085f0 <__alt_data_end+0xfc0085f0>
 8008678:	81c5883a 	add	r2,r16,r7
 800867c:	11400117 	ldw	r5,4(r2)
 8008680:	9009883a 	mov	r4,r18
 8008684:	29400054 	ori	r5,r5,1
 8008688:	11400115 	stw	r5,4(r2)
 800868c:	8011d900 	call	8011d90 <__malloc_unlock>
 8008690:	80800204 	addi	r2,r16,8
 8008694:	003fe006 	br	8008618 <__alt_data_end+0xfc008618>
 8008698:	9c000217 	ldw	r16,8(r19)
 800869c:	00bfff04 	movi	r2,-4
 80086a0:	85800117 	ldw	r22,4(r16)
 80086a4:	b0ac703a 	and	r22,r22,r2
 80086a8:	b4400336 	bltu	r22,r17,80086b8 <_malloc_r+0x344>
 80086ac:	b445c83a 	sub	r2,r22,r17
 80086b0:	00c003c4 	movi	r3,15
 80086b4:	18805d16 	blt	r3,r2,800882c <_malloc_r+0x4b8>
 80086b8:	05c20074 	movhi	r23,2049
 80086bc:	008200b4 	movhi	r2,2050
 80086c0:	10a04f04 	addi	r2,r2,-32452
 80086c4:	bdd8c704 	addi	r23,r23,25372
 80086c8:	15400017 	ldw	r21,0(r2)
 80086cc:	b8c00017 	ldw	r3,0(r23)
 80086d0:	00bfffc4 	movi	r2,-1
 80086d4:	858d883a 	add	r6,r16,r22
 80086d8:	8d6b883a 	add	r21,r17,r21
 80086dc:	1880ea26 	beq	r3,r2,8008a88 <_malloc_r+0x714>
 80086e0:	ad4403c4 	addi	r21,r21,4111
 80086e4:	00bc0004 	movi	r2,-4096
 80086e8:	a8aa703a 	and	r21,r21,r2
 80086ec:	a80b883a 	mov	r5,r21
 80086f0:	9009883a 	mov	r4,r18
 80086f4:	d9800015 	stw	r6,0(sp)
 80086f8:	8009eb80 	call	8009eb8 <_sbrk_r>
 80086fc:	1029883a 	mov	r20,r2
 8008700:	00bfffc4 	movi	r2,-1
 8008704:	d9800017 	ldw	r6,0(sp)
 8008708:	a080e826 	beq	r20,r2,8008aac <_malloc_r+0x738>
 800870c:	a180a636 	bltu	r20,r6,80089a8 <_malloc_r+0x634>
 8008710:	070200b4 	movhi	fp,2050
 8008714:	e7205804 	addi	fp,fp,-32416
 8008718:	e0800017 	ldw	r2,0(fp)
 800871c:	a887883a 	add	r3,r21,r2
 8008720:	e0c00015 	stw	r3,0(fp)
 8008724:	3500e626 	beq	r6,r20,8008ac0 <_malloc_r+0x74c>
 8008728:	b9000017 	ldw	r4,0(r23)
 800872c:	00bfffc4 	movi	r2,-1
 8008730:	2080ee26 	beq	r4,r2,8008aec <_malloc_r+0x778>
 8008734:	a185c83a 	sub	r2,r20,r6
 8008738:	10c5883a 	add	r2,r2,r3
 800873c:	e0800015 	stw	r2,0(fp)
 8008740:	a0c001cc 	andi	r3,r20,7
 8008744:	1800bc26 	beq	r3,zero,8008a38 <_malloc_r+0x6c4>
 8008748:	a0e9c83a 	sub	r20,r20,r3
 800874c:	00840204 	movi	r2,4104
 8008750:	a5000204 	addi	r20,r20,8
 8008754:	10c7c83a 	sub	r3,r2,r3
 8008758:	a545883a 	add	r2,r20,r21
 800875c:	1083ffcc 	andi	r2,r2,4095
 8008760:	18abc83a 	sub	r21,r3,r2
 8008764:	a80b883a 	mov	r5,r21
 8008768:	9009883a 	mov	r4,r18
 800876c:	8009eb80 	call	8009eb8 <_sbrk_r>
 8008770:	00ffffc4 	movi	r3,-1
 8008774:	10c0e126 	beq	r2,r3,8008afc <_malloc_r+0x788>
 8008778:	1505c83a 	sub	r2,r2,r20
 800877c:	1545883a 	add	r2,r2,r21
 8008780:	10800054 	ori	r2,r2,1
 8008784:	e0c00017 	ldw	r3,0(fp)
 8008788:	9d000215 	stw	r20,8(r19)
 800878c:	a0800115 	stw	r2,4(r20)
 8008790:	a8c7883a 	add	r3,r21,r3
 8008794:	e0c00015 	stw	r3,0(fp)
 8008798:	84c00e26 	beq	r16,r19,80087d4 <_malloc_r+0x460>
 800879c:	018003c4 	movi	r6,15
 80087a0:	3580a72e 	bgeu	r6,r22,8008a40 <_malloc_r+0x6cc>
 80087a4:	81400117 	ldw	r5,4(r16)
 80087a8:	013ffe04 	movi	r4,-8
 80087ac:	b0bffd04 	addi	r2,r22,-12
 80087b0:	1104703a 	and	r2,r2,r4
 80087b4:	2900004c 	andi	r4,r5,1
 80087b8:	2088b03a 	or	r4,r4,r2
 80087bc:	81000115 	stw	r4,4(r16)
 80087c0:	01400144 	movi	r5,5
 80087c4:	8089883a 	add	r4,r16,r2
 80087c8:	21400115 	stw	r5,4(r4)
 80087cc:	21400215 	stw	r5,8(r4)
 80087d0:	3080cd36 	bltu	r6,r2,8008b08 <_malloc_r+0x794>
 80087d4:	008200b4 	movhi	r2,2050
 80087d8:	10a04e04 	addi	r2,r2,-32456
 80087dc:	11000017 	ldw	r4,0(r2)
 80087e0:	20c0012e 	bgeu	r4,r3,80087e8 <_malloc_r+0x474>
 80087e4:	10c00015 	stw	r3,0(r2)
 80087e8:	008200b4 	movhi	r2,2050
 80087ec:	10a04d04 	addi	r2,r2,-32460
 80087f0:	11000017 	ldw	r4,0(r2)
 80087f4:	9c000217 	ldw	r16,8(r19)
 80087f8:	20c0012e 	bgeu	r4,r3,8008800 <_malloc_r+0x48c>
 80087fc:	10c00015 	stw	r3,0(r2)
 8008800:	80c00117 	ldw	r3,4(r16)
 8008804:	00bfff04 	movi	r2,-4
 8008808:	1886703a 	and	r3,r3,r2
 800880c:	1c45c83a 	sub	r2,r3,r17
 8008810:	1c400236 	bltu	r3,r17,800881c <_malloc_r+0x4a8>
 8008814:	00c003c4 	movi	r3,15
 8008818:	18800416 	blt	r3,r2,800882c <_malloc_r+0x4b8>
 800881c:	9009883a 	mov	r4,r18
 8008820:	8011d900 	call	8011d90 <__malloc_unlock>
 8008824:	0005883a 	mov	r2,zero
 8008828:	003f7b06 	br	8008618 <__alt_data_end+0xfc008618>
 800882c:	88c00054 	ori	r3,r17,1
 8008830:	80c00115 	stw	r3,4(r16)
 8008834:	8463883a 	add	r17,r16,r17
 8008838:	10800054 	ori	r2,r2,1
 800883c:	9c400215 	stw	r17,8(r19)
 8008840:	88800115 	stw	r2,4(r17)
 8008844:	9009883a 	mov	r4,r18
 8008848:	8011d900 	call	8011d90 <__malloc_unlock>
 800884c:	80800204 	addi	r2,r16,8
 8008850:	003f7106 	br	8008618 <__alt_data_end+0xfc008618>
 8008854:	00c00504 	movi	r3,20
 8008858:	18804a2e 	bgeu	r3,r2,8008984 <_malloc_r+0x610>
 800885c:	00c01504 	movi	r3,84
 8008860:	18806e36 	bltu	r3,r2,8008a1c <_malloc_r+0x6a8>
 8008864:	8804d33a 	srli	r2,r17,12
 8008868:	12001bc4 	addi	r8,r2,111
 800886c:	11c01b84 	addi	r7,r2,110
 8008870:	4209883a 	add	r4,r8,r8
 8008874:	003edd06 	br	80083ec <__alt_data_end+0xfc0083ec>
 8008878:	3804d27a 	srli	r2,r7,9
 800887c:	00c00104 	movi	r3,4
 8008880:	1880442e 	bgeu	r3,r2,8008994 <_malloc_r+0x620>
 8008884:	00c00504 	movi	r3,20
 8008888:	18808136 	bltu	r3,r2,8008a90 <_malloc_r+0x71c>
 800888c:	11401704 	addi	r5,r2,92
 8008890:	10c016c4 	addi	r3,r2,91
 8008894:	294b883a 	add	r5,r5,r5
 8008898:	294b883a 	add	r5,r5,r5
 800889c:	294b883a 	add	r5,r5,r5
 80088a0:	994b883a 	add	r5,r19,r5
 80088a4:	28800017 	ldw	r2,0(r5)
 80088a8:	01820074 	movhi	r6,2049
 80088ac:	297ffe04 	addi	r5,r5,-8
 80088b0:	31933d04 	addi	r6,r6,19700
 80088b4:	28806526 	beq	r5,r2,8008a4c <_malloc_r+0x6d8>
 80088b8:	01bfff04 	movi	r6,-4
 80088bc:	10c00117 	ldw	r3,4(r2)
 80088c0:	1986703a 	and	r3,r3,r6
 80088c4:	38c0022e 	bgeu	r7,r3,80088d0 <_malloc_r+0x55c>
 80088c8:	10800217 	ldw	r2,8(r2)
 80088cc:	28bffb1e 	bne	r5,r2,80088bc <__alt_data_end+0xfc0088bc>
 80088d0:	11400317 	ldw	r5,12(r2)
 80088d4:	98c00117 	ldw	r3,4(r19)
 80088d8:	81400315 	stw	r5,12(r16)
 80088dc:	80800215 	stw	r2,8(r16)
 80088e0:	2c000215 	stw	r16,8(r5)
 80088e4:	14000315 	stw	r16,12(r2)
 80088e8:	003ef806 	br	80084cc <__alt_data_end+0xfc0084cc>
 80088ec:	88c00054 	ori	r3,r17,1
 80088f0:	80c00115 	stw	r3,4(r16)
 80088f4:	8463883a 	add	r17,r16,r17
 80088f8:	34400515 	stw	r17,20(r6)
 80088fc:	34400415 	stw	r17,16(r6)
 8008900:	10c00054 	ori	r3,r2,1
 8008904:	8a000315 	stw	r8,12(r17)
 8008908:	8a000215 	stw	r8,8(r17)
 800890c:	88c00115 	stw	r3,4(r17)
 8008910:	88a3883a 	add	r17,r17,r2
 8008914:	88800015 	stw	r2,0(r17)
 8008918:	9009883a 	mov	r4,r18
 800891c:	8011d900 	call	8011d90 <__malloc_unlock>
 8008920:	80800204 	addi	r2,r16,8
 8008924:	003f3c06 	br	8008618 <__alt_data_end+0xfc008618>
 8008928:	30c00117 	ldw	r3,4(r6)
 800892c:	003ee706 	br	80084cc <__alt_data_end+0xfc0084cc>
 8008930:	5ac00044 	addi	r11,r11,1
 8008934:	588000cc 	andi	r2,r11,3
 8008938:	31800204 	addi	r6,r6,8
 800893c:	103efd1e 	bne	r2,zero,8008534 <__alt_data_end+0xfc008534>
 8008940:	00002406 	br	80089d4 <_malloc_r+0x660>
 8008944:	14000317 	ldw	r16,12(r2)
 8008948:	143f251e 	bne	r2,r16,80085e0 <__alt_data_end+0xfc0085e0>
 800894c:	21000084 	addi	r4,r4,2
 8008950:	003ebc06 	br	8008444 <__alt_data_end+0xfc008444>
 8008954:	8085883a 	add	r2,r16,r2
 8008958:	10c00117 	ldw	r3,4(r2)
 800895c:	81000317 	ldw	r4,12(r16)
 8008960:	81400217 	ldw	r5,8(r16)
 8008964:	18c00054 	ori	r3,r3,1
 8008968:	10c00115 	stw	r3,4(r2)
 800896c:	29000315 	stw	r4,12(r5)
 8008970:	21400215 	stw	r5,8(r4)
 8008974:	9009883a 	mov	r4,r18
 8008978:	8011d900 	call	8011d90 <__malloc_unlock>
 800897c:	80800204 	addi	r2,r16,8
 8008980:	003f2506 	br	8008618 <__alt_data_end+0xfc008618>
 8008984:	12001704 	addi	r8,r2,92
 8008988:	11c016c4 	addi	r7,r2,91
 800898c:	4209883a 	add	r4,r8,r8
 8008990:	003e9606 	br	80083ec <__alt_data_end+0xfc0083ec>
 8008994:	3804d1ba 	srli	r2,r7,6
 8008998:	11400e44 	addi	r5,r2,57
 800899c:	10c00e04 	addi	r3,r2,56
 80089a0:	294b883a 	add	r5,r5,r5
 80089a4:	003fbc06 	br	8008898 <__alt_data_end+0xfc008898>
 80089a8:	84ff5926 	beq	r16,r19,8008710 <__alt_data_end+0xfc008710>
 80089ac:	00820074 	movhi	r2,2049
 80089b0:	10933d04 	addi	r2,r2,19700
 80089b4:	14000217 	ldw	r16,8(r2)
 80089b8:	00bfff04 	movi	r2,-4
 80089bc:	80c00117 	ldw	r3,4(r16)
 80089c0:	1886703a 	and	r3,r3,r2
 80089c4:	003f9106 	br	800880c <__alt_data_end+0xfc00880c>
 80089c8:	60800217 	ldw	r2,8(r12)
 80089cc:	213fffc4 	addi	r4,r4,-1
 80089d0:	1300651e 	bne	r2,r12,8008b68 <_malloc_r+0x7f4>
 80089d4:	208000cc 	andi	r2,r4,3
 80089d8:	633ffe04 	addi	r12,r12,-8
 80089dc:	103ffa1e 	bne	r2,zero,80089c8 <__alt_data_end+0xfc0089c8>
 80089e0:	98800117 	ldw	r2,4(r19)
 80089e4:	0146303a 	nor	r3,zero,r5
 80089e8:	1884703a 	and	r2,r3,r2
 80089ec:	98800115 	stw	r2,4(r19)
 80089f0:	294b883a 	add	r5,r5,r5
 80089f4:	117f2836 	bltu	r2,r5,8008698 <__alt_data_end+0xfc008698>
 80089f8:	283f2726 	beq	r5,zero,8008698 <__alt_data_end+0xfc008698>
 80089fc:	2886703a 	and	r3,r5,r2
 8008a00:	5809883a 	mov	r4,r11
 8008a04:	183ec31e 	bne	r3,zero,8008514 <__alt_data_end+0xfc008514>
 8008a08:	294b883a 	add	r5,r5,r5
 8008a0c:	2886703a 	and	r3,r5,r2
 8008a10:	21000104 	addi	r4,r4,4
 8008a14:	183ffc26 	beq	r3,zero,8008a08 <__alt_data_end+0xfc008a08>
 8008a18:	003ebe06 	br	8008514 <__alt_data_end+0xfc008514>
 8008a1c:	00c05504 	movi	r3,340
 8008a20:	18801236 	bltu	r3,r2,8008a6c <_malloc_r+0x6f8>
 8008a24:	8804d3fa 	srli	r2,r17,15
 8008a28:	12001e04 	addi	r8,r2,120
 8008a2c:	11c01dc4 	addi	r7,r2,119
 8008a30:	4209883a 	add	r4,r8,r8
 8008a34:	003e6d06 	br	80083ec <__alt_data_end+0xfc0083ec>
 8008a38:	00c40004 	movi	r3,4096
 8008a3c:	003f4606 	br	8008758 <__alt_data_end+0xfc008758>
 8008a40:	00800044 	movi	r2,1
 8008a44:	a0800115 	stw	r2,4(r20)
 8008a48:	003f7406 	br	800881c <__alt_data_end+0xfc00881c>
 8008a4c:	1805d0ba 	srai	r2,r3,2
 8008a50:	01c00044 	movi	r7,1
 8008a54:	30c00117 	ldw	r3,4(r6)
 8008a58:	388e983a 	sll	r7,r7,r2
 8008a5c:	2805883a 	mov	r2,r5
 8008a60:	38c6b03a 	or	r3,r7,r3
 8008a64:	30c00115 	stw	r3,4(r6)
 8008a68:	003f9b06 	br	80088d8 <__alt_data_end+0xfc0088d8>
 8008a6c:	00c15504 	movi	r3,1364
 8008a70:	18801a36 	bltu	r3,r2,8008adc <_malloc_r+0x768>
 8008a74:	8804d4ba 	srli	r2,r17,18
 8008a78:	12001f44 	addi	r8,r2,125
 8008a7c:	11c01f04 	addi	r7,r2,124
 8008a80:	4209883a 	add	r4,r8,r8
 8008a84:	003e5906 	br	80083ec <__alt_data_end+0xfc0083ec>
 8008a88:	ad400404 	addi	r21,r21,16
 8008a8c:	003f1706 	br	80086ec <__alt_data_end+0xfc0086ec>
 8008a90:	00c01504 	movi	r3,84
 8008a94:	18802336 	bltu	r3,r2,8008b24 <_malloc_r+0x7b0>
 8008a98:	3804d33a 	srli	r2,r7,12
 8008a9c:	11401bc4 	addi	r5,r2,111
 8008aa0:	10c01b84 	addi	r3,r2,110
 8008aa4:	294b883a 	add	r5,r5,r5
 8008aa8:	003f7b06 	br	8008898 <__alt_data_end+0xfc008898>
 8008aac:	9c000217 	ldw	r16,8(r19)
 8008ab0:	00bfff04 	movi	r2,-4
 8008ab4:	80c00117 	ldw	r3,4(r16)
 8008ab8:	1886703a 	and	r3,r3,r2
 8008abc:	003f5306 	br	800880c <__alt_data_end+0xfc00880c>
 8008ac0:	3083ffcc 	andi	r2,r6,4095
 8008ac4:	103f181e 	bne	r2,zero,8008728 <__alt_data_end+0xfc008728>
 8008ac8:	99000217 	ldw	r4,8(r19)
 8008acc:	b545883a 	add	r2,r22,r21
 8008ad0:	10800054 	ori	r2,r2,1
 8008ad4:	20800115 	stw	r2,4(r4)
 8008ad8:	003f3e06 	br	80087d4 <__alt_data_end+0xfc0087d4>
 8008adc:	01003f84 	movi	r4,254
 8008ae0:	02001fc4 	movi	r8,127
 8008ae4:	01c01f84 	movi	r7,126
 8008ae8:	003e4006 	br	80083ec <__alt_data_end+0xfc0083ec>
 8008aec:	00820074 	movhi	r2,2049
 8008af0:	1098c704 	addi	r2,r2,25372
 8008af4:	15000015 	stw	r20,0(r2)
 8008af8:	003f1106 	br	8008740 <__alt_data_end+0xfc008740>
 8008afc:	00800044 	movi	r2,1
 8008b00:	002b883a 	mov	r21,zero
 8008b04:	003f1f06 	br	8008784 <__alt_data_end+0xfc008784>
 8008b08:	81400204 	addi	r5,r16,8
 8008b0c:	9009883a 	mov	r4,r18
 8008b10:	8007c440 	call	8007c44 <_free_r>
 8008b14:	008200b4 	movhi	r2,2050
 8008b18:	10a05804 	addi	r2,r2,-32416
 8008b1c:	10c00017 	ldw	r3,0(r2)
 8008b20:	003f2c06 	br	80087d4 <__alt_data_end+0xfc0087d4>
 8008b24:	00c05504 	movi	r3,340
 8008b28:	18800536 	bltu	r3,r2,8008b40 <_malloc_r+0x7cc>
 8008b2c:	3804d3fa 	srli	r2,r7,15
 8008b30:	11401e04 	addi	r5,r2,120
 8008b34:	10c01dc4 	addi	r3,r2,119
 8008b38:	294b883a 	add	r5,r5,r5
 8008b3c:	003f5606 	br	8008898 <__alt_data_end+0xfc008898>
 8008b40:	00c15504 	movi	r3,1364
 8008b44:	18800536 	bltu	r3,r2,8008b5c <_malloc_r+0x7e8>
 8008b48:	3804d4ba 	srli	r2,r7,18
 8008b4c:	11401f44 	addi	r5,r2,125
 8008b50:	10c01f04 	addi	r3,r2,124
 8008b54:	294b883a 	add	r5,r5,r5
 8008b58:	003f4f06 	br	8008898 <__alt_data_end+0xfc008898>
 8008b5c:	01403f84 	movi	r5,254
 8008b60:	00c01f84 	movi	r3,126
 8008b64:	003f4c06 	br	8008898 <__alt_data_end+0xfc008898>
 8008b68:	98800117 	ldw	r2,4(r19)
 8008b6c:	003fa006 	br	80089f0 <__alt_data_end+0xfc0089f0>
 8008b70:	8808d0fa 	srli	r4,r17,3
 8008b74:	20800044 	addi	r2,r4,1
 8008b78:	1085883a 	add	r2,r2,r2
 8008b7c:	003e9006 	br	80085c0 <__alt_data_end+0xfc0085c0>

08008b80 <memchr>:
 8008b80:	208000cc 	andi	r2,r4,3
 8008b84:	280f883a 	mov	r7,r5
 8008b88:	10003426 	beq	r2,zero,8008c5c <memchr+0xdc>
 8008b8c:	30bfffc4 	addi	r2,r6,-1
 8008b90:	30001a26 	beq	r6,zero,8008bfc <memchr+0x7c>
 8008b94:	20c00003 	ldbu	r3,0(r4)
 8008b98:	29803fcc 	andi	r6,r5,255
 8008b9c:	30c0051e 	bne	r6,r3,8008bb4 <memchr+0x34>
 8008ba0:	00001806 	br	8008c04 <memchr+0x84>
 8008ba4:	10001526 	beq	r2,zero,8008bfc <memchr+0x7c>
 8008ba8:	20c00003 	ldbu	r3,0(r4)
 8008bac:	10bfffc4 	addi	r2,r2,-1
 8008bb0:	30c01426 	beq	r6,r3,8008c04 <memchr+0x84>
 8008bb4:	21000044 	addi	r4,r4,1
 8008bb8:	20c000cc 	andi	r3,r4,3
 8008bbc:	183ff91e 	bne	r3,zero,8008ba4 <__alt_data_end+0xfc008ba4>
 8008bc0:	020000c4 	movi	r8,3
 8008bc4:	40801136 	bltu	r8,r2,8008c0c <memchr+0x8c>
 8008bc8:	10000c26 	beq	r2,zero,8008bfc <memchr+0x7c>
 8008bcc:	20c00003 	ldbu	r3,0(r4)
 8008bd0:	29403fcc 	andi	r5,r5,255
 8008bd4:	28c00b26 	beq	r5,r3,8008c04 <memchr+0x84>
 8008bd8:	20c00044 	addi	r3,r4,1
 8008bdc:	39803fcc 	andi	r6,r7,255
 8008be0:	2089883a 	add	r4,r4,r2
 8008be4:	00000306 	br	8008bf4 <memchr+0x74>
 8008be8:	18c00044 	addi	r3,r3,1
 8008bec:	197fffc3 	ldbu	r5,-1(r3)
 8008bf0:	31400526 	beq	r6,r5,8008c08 <memchr+0x88>
 8008bf4:	1805883a 	mov	r2,r3
 8008bf8:	20fffb1e 	bne	r4,r3,8008be8 <__alt_data_end+0xfc008be8>
 8008bfc:	0005883a 	mov	r2,zero
 8008c00:	f800283a 	ret
 8008c04:	2005883a 	mov	r2,r4
 8008c08:	f800283a 	ret
 8008c0c:	28c03fcc 	andi	r3,r5,255
 8008c10:	1812923a 	slli	r9,r3,8
 8008c14:	02ffbff4 	movhi	r11,65279
 8008c18:	02a02074 	movhi	r10,32897
 8008c1c:	48d2b03a 	or	r9,r9,r3
 8008c20:	4806943a 	slli	r3,r9,16
 8008c24:	5affbfc4 	addi	r11,r11,-257
 8008c28:	52a02004 	addi	r10,r10,-32640
 8008c2c:	48d2b03a 	or	r9,r9,r3
 8008c30:	20c00017 	ldw	r3,0(r4)
 8008c34:	48c6f03a 	xor	r3,r9,r3
 8008c38:	1acd883a 	add	r6,r3,r11
 8008c3c:	00c6303a 	nor	r3,zero,r3
 8008c40:	30c6703a 	and	r3,r6,r3
 8008c44:	1a86703a 	and	r3,r3,r10
 8008c48:	183fe01e 	bne	r3,zero,8008bcc <__alt_data_end+0xfc008bcc>
 8008c4c:	10bfff04 	addi	r2,r2,-4
 8008c50:	21000104 	addi	r4,r4,4
 8008c54:	40bff636 	bltu	r8,r2,8008c30 <__alt_data_end+0xfc008c30>
 8008c58:	003fdb06 	br	8008bc8 <__alt_data_end+0xfc008bc8>
 8008c5c:	3005883a 	mov	r2,r6
 8008c60:	003fd706 	br	8008bc0 <__alt_data_end+0xfc008bc0>

08008c64 <memset>:
 8008c64:	20c000cc 	andi	r3,r4,3
 8008c68:	2005883a 	mov	r2,r4
 8008c6c:	18004426 	beq	r3,zero,8008d80 <memset+0x11c>
 8008c70:	31ffffc4 	addi	r7,r6,-1
 8008c74:	30004026 	beq	r6,zero,8008d78 <memset+0x114>
 8008c78:	2813883a 	mov	r9,r5
 8008c7c:	200d883a 	mov	r6,r4
 8008c80:	2007883a 	mov	r3,r4
 8008c84:	00000406 	br	8008c98 <memset+0x34>
 8008c88:	3a3fffc4 	addi	r8,r7,-1
 8008c8c:	31800044 	addi	r6,r6,1
 8008c90:	38003926 	beq	r7,zero,8008d78 <memset+0x114>
 8008c94:	400f883a 	mov	r7,r8
 8008c98:	18c00044 	addi	r3,r3,1
 8008c9c:	32400005 	stb	r9,0(r6)
 8008ca0:	1a0000cc 	andi	r8,r3,3
 8008ca4:	403ff81e 	bne	r8,zero,8008c88 <__alt_data_end+0xfc008c88>
 8008ca8:	010000c4 	movi	r4,3
 8008cac:	21c02d2e 	bgeu	r4,r7,8008d64 <memset+0x100>
 8008cb0:	29003fcc 	andi	r4,r5,255
 8008cb4:	200c923a 	slli	r6,r4,8
 8008cb8:	3108b03a 	or	r4,r6,r4
 8008cbc:	200c943a 	slli	r6,r4,16
 8008cc0:	218cb03a 	or	r6,r4,r6
 8008cc4:	010003c4 	movi	r4,15
 8008cc8:	21c0182e 	bgeu	r4,r7,8008d2c <memset+0xc8>
 8008ccc:	3b3ffc04 	addi	r12,r7,-16
 8008cd0:	6018d13a 	srli	r12,r12,4
 8008cd4:	1a000104 	addi	r8,r3,4
 8008cd8:	1ac00204 	addi	r11,r3,8
 8008cdc:	6008913a 	slli	r4,r12,4
 8008ce0:	1a800304 	addi	r10,r3,12
 8008ce4:	1813883a 	mov	r9,r3
 8008ce8:	21000504 	addi	r4,r4,20
 8008cec:	1909883a 	add	r4,r3,r4
 8008cf0:	49800015 	stw	r6,0(r9)
 8008cf4:	41800015 	stw	r6,0(r8)
 8008cf8:	59800015 	stw	r6,0(r11)
 8008cfc:	51800015 	stw	r6,0(r10)
 8008d00:	42000404 	addi	r8,r8,16
 8008d04:	4a400404 	addi	r9,r9,16
 8008d08:	5ac00404 	addi	r11,r11,16
 8008d0c:	52800404 	addi	r10,r10,16
 8008d10:	413ff71e 	bne	r8,r4,8008cf0 <__alt_data_end+0xfc008cf0>
 8008d14:	63000044 	addi	r12,r12,1
 8008d18:	6018913a 	slli	r12,r12,4
 8008d1c:	39c003cc 	andi	r7,r7,15
 8008d20:	010000c4 	movi	r4,3
 8008d24:	1b07883a 	add	r3,r3,r12
 8008d28:	21c00e2e 	bgeu	r4,r7,8008d64 <memset+0x100>
 8008d2c:	1813883a 	mov	r9,r3
 8008d30:	3811883a 	mov	r8,r7
 8008d34:	010000c4 	movi	r4,3
 8008d38:	49800015 	stw	r6,0(r9)
 8008d3c:	423fff04 	addi	r8,r8,-4
 8008d40:	4a400104 	addi	r9,r9,4
 8008d44:	223ffc36 	bltu	r4,r8,8008d38 <__alt_data_end+0xfc008d38>
 8008d48:	393fff04 	addi	r4,r7,-4
 8008d4c:	2008d0ba 	srli	r4,r4,2
 8008d50:	39c000cc 	andi	r7,r7,3
 8008d54:	21000044 	addi	r4,r4,1
 8008d58:	2109883a 	add	r4,r4,r4
 8008d5c:	2109883a 	add	r4,r4,r4
 8008d60:	1907883a 	add	r3,r3,r4
 8008d64:	38000526 	beq	r7,zero,8008d7c <memset+0x118>
 8008d68:	19cf883a 	add	r7,r3,r7
 8008d6c:	19400005 	stb	r5,0(r3)
 8008d70:	18c00044 	addi	r3,r3,1
 8008d74:	38fffd1e 	bne	r7,r3,8008d6c <__alt_data_end+0xfc008d6c>
 8008d78:	f800283a 	ret
 8008d7c:	f800283a 	ret
 8008d80:	2007883a 	mov	r3,r4
 8008d84:	300f883a 	mov	r7,r6
 8008d88:	003fc706 	br	8008ca8 <__alt_data_end+0xfc008ca8>

08008d8c <_Balloc>:
 8008d8c:	20801317 	ldw	r2,76(r4)
 8008d90:	defffc04 	addi	sp,sp,-16
 8008d94:	dc400115 	stw	r17,4(sp)
 8008d98:	dc000015 	stw	r16,0(sp)
 8008d9c:	dfc00315 	stw	ra,12(sp)
 8008da0:	dc800215 	stw	r18,8(sp)
 8008da4:	2023883a 	mov	r17,r4
 8008da8:	2821883a 	mov	r16,r5
 8008dac:	10000f26 	beq	r2,zero,8008dec <_Balloc+0x60>
 8008db0:	8407883a 	add	r3,r16,r16
 8008db4:	18c7883a 	add	r3,r3,r3
 8008db8:	10c7883a 	add	r3,r2,r3
 8008dbc:	18800017 	ldw	r2,0(r3)
 8008dc0:	10001126 	beq	r2,zero,8008e08 <_Balloc+0x7c>
 8008dc4:	11000017 	ldw	r4,0(r2)
 8008dc8:	19000015 	stw	r4,0(r3)
 8008dcc:	10000415 	stw	zero,16(r2)
 8008dd0:	10000315 	stw	zero,12(r2)
 8008dd4:	dfc00317 	ldw	ra,12(sp)
 8008dd8:	dc800217 	ldw	r18,8(sp)
 8008ddc:	dc400117 	ldw	r17,4(sp)
 8008de0:	dc000017 	ldw	r16,0(sp)
 8008de4:	dec00404 	addi	sp,sp,16
 8008de8:	f800283a 	ret
 8008dec:	01800844 	movi	r6,33
 8008df0:	01400104 	movi	r5,4
 8008df4:	800ce400 	call	800ce40 <_calloc_r>
 8008df8:	88801315 	stw	r2,76(r17)
 8008dfc:	103fec1e 	bne	r2,zero,8008db0 <__alt_data_end+0xfc008db0>
 8008e00:	0005883a 	mov	r2,zero
 8008e04:	003ff306 	br	8008dd4 <__alt_data_end+0xfc008dd4>
 8008e08:	01400044 	movi	r5,1
 8008e0c:	2c24983a 	sll	r18,r5,r16
 8008e10:	8809883a 	mov	r4,r17
 8008e14:	91800144 	addi	r6,r18,5
 8008e18:	318d883a 	add	r6,r6,r6
 8008e1c:	318d883a 	add	r6,r6,r6
 8008e20:	800ce400 	call	800ce40 <_calloc_r>
 8008e24:	103ff626 	beq	r2,zero,8008e00 <__alt_data_end+0xfc008e00>
 8008e28:	14000115 	stw	r16,4(r2)
 8008e2c:	14800215 	stw	r18,8(r2)
 8008e30:	003fe606 	br	8008dcc <__alt_data_end+0xfc008dcc>

08008e34 <_Bfree>:
 8008e34:	28000826 	beq	r5,zero,8008e58 <_Bfree+0x24>
 8008e38:	28c00117 	ldw	r3,4(r5)
 8008e3c:	20801317 	ldw	r2,76(r4)
 8008e40:	18c7883a 	add	r3,r3,r3
 8008e44:	18c7883a 	add	r3,r3,r3
 8008e48:	10c5883a 	add	r2,r2,r3
 8008e4c:	10c00017 	ldw	r3,0(r2)
 8008e50:	28c00015 	stw	r3,0(r5)
 8008e54:	11400015 	stw	r5,0(r2)
 8008e58:	f800283a 	ret

08008e5c <__multadd>:
 8008e5c:	defff704 	addi	sp,sp,-36
 8008e60:	dc800215 	stw	r18,8(sp)
 8008e64:	2c800417 	ldw	r18,16(r5)
 8008e68:	dd800615 	stw	r22,24(sp)
 8008e6c:	dd400515 	stw	r21,20(sp)
 8008e70:	dd000415 	stw	r20,16(sp)
 8008e74:	dcc00315 	stw	r19,12(sp)
 8008e78:	dc400115 	stw	r17,4(sp)
 8008e7c:	dc000015 	stw	r16,0(sp)
 8008e80:	dfc00815 	stw	ra,32(sp)
 8008e84:	ddc00715 	stw	r23,28(sp)
 8008e88:	2827883a 	mov	r19,r5
 8008e8c:	2029883a 	mov	r20,r4
 8008e90:	3023883a 	mov	r17,r6
 8008e94:	3821883a 	mov	r16,r7
 8008e98:	2d400504 	addi	r21,r5,20
 8008e9c:	002d883a 	mov	r22,zero
 8008ea0:	adc00017 	ldw	r23,0(r21)
 8008ea4:	880b883a 	mov	r5,r17
 8008ea8:	ad400104 	addi	r21,r21,4
 8008eac:	b93fffcc 	andi	r4,r23,65535
 8008eb0:	80010a00 	call	80010a0 <__mulsi3>
 8008eb4:	b808d43a 	srli	r4,r23,16
 8008eb8:	880b883a 	mov	r5,r17
 8008ebc:	1421883a 	add	r16,r2,r16
 8008ec0:	80010a00 	call	80010a0 <__mulsi3>
 8008ec4:	800ed43a 	srli	r7,r16,16
 8008ec8:	80ffffcc 	andi	r3,r16,65535
 8008ecc:	b5800044 	addi	r22,r22,1
 8008ed0:	11c5883a 	add	r2,r2,r7
 8008ed4:	100e943a 	slli	r7,r2,16
 8008ed8:	1020d43a 	srli	r16,r2,16
 8008edc:	38c7883a 	add	r3,r7,r3
 8008ee0:	a8ffff15 	stw	r3,-4(r21)
 8008ee4:	b4bfee16 	blt	r22,r18,8008ea0 <__alt_data_end+0xfc008ea0>
 8008ee8:	80000926 	beq	r16,zero,8008f10 <__multadd+0xb4>
 8008eec:	98800217 	ldw	r2,8(r19)
 8008ef0:	9080130e 	bge	r18,r2,8008f40 <__multadd+0xe4>
 8008ef4:	90800144 	addi	r2,r18,5
 8008ef8:	1085883a 	add	r2,r2,r2
 8008efc:	1085883a 	add	r2,r2,r2
 8008f00:	9885883a 	add	r2,r19,r2
 8008f04:	14000015 	stw	r16,0(r2)
 8008f08:	94800044 	addi	r18,r18,1
 8008f0c:	9c800415 	stw	r18,16(r19)
 8008f10:	9805883a 	mov	r2,r19
 8008f14:	dfc00817 	ldw	ra,32(sp)
 8008f18:	ddc00717 	ldw	r23,28(sp)
 8008f1c:	dd800617 	ldw	r22,24(sp)
 8008f20:	dd400517 	ldw	r21,20(sp)
 8008f24:	dd000417 	ldw	r20,16(sp)
 8008f28:	dcc00317 	ldw	r19,12(sp)
 8008f2c:	dc800217 	ldw	r18,8(sp)
 8008f30:	dc400117 	ldw	r17,4(sp)
 8008f34:	dc000017 	ldw	r16,0(sp)
 8008f38:	dec00904 	addi	sp,sp,36
 8008f3c:	f800283a 	ret
 8008f40:	99400117 	ldw	r5,4(r19)
 8008f44:	a009883a 	mov	r4,r20
 8008f48:	29400044 	addi	r5,r5,1
 8008f4c:	8008d8c0 	call	8008d8c <_Balloc>
 8008f50:	99800417 	ldw	r6,16(r19)
 8008f54:	99400304 	addi	r5,r19,12
 8008f58:	11000304 	addi	r4,r2,12
 8008f5c:	31800084 	addi	r6,r6,2
 8008f60:	318d883a 	add	r6,r6,r6
 8008f64:	318d883a 	add	r6,r6,r6
 8008f68:	1023883a 	mov	r17,r2
 8008f6c:	80010c80 	call	80010c8 <memcpy>
 8008f70:	98000a26 	beq	r19,zero,8008f9c <__multadd+0x140>
 8008f74:	98c00117 	ldw	r3,4(r19)
 8008f78:	a0801317 	ldw	r2,76(r20)
 8008f7c:	18c7883a 	add	r3,r3,r3
 8008f80:	18c7883a 	add	r3,r3,r3
 8008f84:	10c5883a 	add	r2,r2,r3
 8008f88:	10c00017 	ldw	r3,0(r2)
 8008f8c:	98c00015 	stw	r3,0(r19)
 8008f90:	14c00015 	stw	r19,0(r2)
 8008f94:	8827883a 	mov	r19,r17
 8008f98:	003fd606 	br	8008ef4 <__alt_data_end+0xfc008ef4>
 8008f9c:	8827883a 	mov	r19,r17
 8008fa0:	003fd406 	br	8008ef4 <__alt_data_end+0xfc008ef4>

08008fa4 <__s2b>:
 8008fa4:	defff904 	addi	sp,sp,-28
 8008fa8:	dc400115 	stw	r17,4(sp)
 8008fac:	dc000015 	stw	r16,0(sp)
 8008fb0:	2023883a 	mov	r17,r4
 8008fb4:	2821883a 	mov	r16,r5
 8008fb8:	39000204 	addi	r4,r7,8
 8008fbc:	01400244 	movi	r5,9
 8008fc0:	dcc00315 	stw	r19,12(sp)
 8008fc4:	dc800215 	stw	r18,8(sp)
 8008fc8:	dfc00615 	stw	ra,24(sp)
 8008fcc:	dd400515 	stw	r21,20(sp)
 8008fd0:	dd000415 	stw	r20,16(sp)
 8008fd4:	3825883a 	mov	r18,r7
 8008fd8:	3027883a 	mov	r19,r6
 8008fdc:	8000eec0 	call	8000eec <__divsi3>
 8008fe0:	00c00044 	movi	r3,1
 8008fe4:	000b883a 	mov	r5,zero
 8008fe8:	1880030e 	bge	r3,r2,8008ff8 <__s2b+0x54>
 8008fec:	18c7883a 	add	r3,r3,r3
 8008ff0:	29400044 	addi	r5,r5,1
 8008ff4:	18bffd16 	blt	r3,r2,8008fec <__alt_data_end+0xfc008fec>
 8008ff8:	8809883a 	mov	r4,r17
 8008ffc:	8008d8c0 	call	8008d8c <_Balloc>
 8009000:	d8c00717 	ldw	r3,28(sp)
 8009004:	10c00515 	stw	r3,20(r2)
 8009008:	00c00044 	movi	r3,1
 800900c:	10c00415 	stw	r3,16(r2)
 8009010:	00c00244 	movi	r3,9
 8009014:	1cc0210e 	bge	r3,r19,800909c <__s2b+0xf8>
 8009018:	80eb883a 	add	r21,r16,r3
 800901c:	a829883a 	mov	r20,r21
 8009020:	84e1883a 	add	r16,r16,r19
 8009024:	a1c00007 	ldb	r7,0(r20)
 8009028:	01800284 	movi	r6,10
 800902c:	a5000044 	addi	r20,r20,1
 8009030:	100b883a 	mov	r5,r2
 8009034:	39fff404 	addi	r7,r7,-48
 8009038:	8809883a 	mov	r4,r17
 800903c:	8008e5c0 	call	8008e5c <__multadd>
 8009040:	a43ff81e 	bne	r20,r16,8009024 <__alt_data_end+0xfc009024>
 8009044:	ace1883a 	add	r16,r21,r19
 8009048:	843ffe04 	addi	r16,r16,-8
 800904c:	9c800a0e 	bge	r19,r18,8009078 <__s2b+0xd4>
 8009050:	94e5c83a 	sub	r18,r18,r19
 8009054:	84a5883a 	add	r18,r16,r18
 8009058:	81c00007 	ldb	r7,0(r16)
 800905c:	01800284 	movi	r6,10
 8009060:	84000044 	addi	r16,r16,1
 8009064:	100b883a 	mov	r5,r2
 8009068:	39fff404 	addi	r7,r7,-48
 800906c:	8809883a 	mov	r4,r17
 8009070:	8008e5c0 	call	8008e5c <__multadd>
 8009074:	84bff81e 	bne	r16,r18,8009058 <__alt_data_end+0xfc009058>
 8009078:	dfc00617 	ldw	ra,24(sp)
 800907c:	dd400517 	ldw	r21,20(sp)
 8009080:	dd000417 	ldw	r20,16(sp)
 8009084:	dcc00317 	ldw	r19,12(sp)
 8009088:	dc800217 	ldw	r18,8(sp)
 800908c:	dc400117 	ldw	r17,4(sp)
 8009090:	dc000017 	ldw	r16,0(sp)
 8009094:	dec00704 	addi	sp,sp,28
 8009098:	f800283a 	ret
 800909c:	84000284 	addi	r16,r16,10
 80090a0:	1827883a 	mov	r19,r3
 80090a4:	003fe906 	br	800904c <__alt_data_end+0xfc00904c>

080090a8 <__hi0bits>:
 80090a8:	20bfffec 	andhi	r2,r4,65535
 80090ac:	1000141e 	bne	r2,zero,8009100 <__hi0bits+0x58>
 80090b0:	2008943a 	slli	r4,r4,16
 80090b4:	00800404 	movi	r2,16
 80090b8:	20ffc02c 	andhi	r3,r4,65280
 80090bc:	1800021e 	bne	r3,zero,80090c8 <__hi0bits+0x20>
 80090c0:	2008923a 	slli	r4,r4,8
 80090c4:	10800204 	addi	r2,r2,8
 80090c8:	20fc002c 	andhi	r3,r4,61440
 80090cc:	1800021e 	bne	r3,zero,80090d8 <__hi0bits+0x30>
 80090d0:	2008913a 	slli	r4,r4,4
 80090d4:	10800104 	addi	r2,r2,4
 80090d8:	20f0002c 	andhi	r3,r4,49152
 80090dc:	1800031e 	bne	r3,zero,80090ec <__hi0bits+0x44>
 80090e0:	2109883a 	add	r4,r4,r4
 80090e4:	10800084 	addi	r2,r2,2
 80090e8:	2109883a 	add	r4,r4,r4
 80090ec:	20000316 	blt	r4,zero,80090fc <__hi0bits+0x54>
 80090f0:	2110002c 	andhi	r4,r4,16384
 80090f4:	2000041e 	bne	r4,zero,8009108 <__hi0bits+0x60>
 80090f8:	00800804 	movi	r2,32
 80090fc:	f800283a 	ret
 8009100:	0005883a 	mov	r2,zero
 8009104:	003fec06 	br	80090b8 <__alt_data_end+0xfc0090b8>
 8009108:	10800044 	addi	r2,r2,1
 800910c:	f800283a 	ret

08009110 <__lo0bits>:
 8009110:	20c00017 	ldw	r3,0(r4)
 8009114:	188001cc 	andi	r2,r3,7
 8009118:	10000826 	beq	r2,zero,800913c <__lo0bits+0x2c>
 800911c:	1880004c 	andi	r2,r3,1
 8009120:	1000211e 	bne	r2,zero,80091a8 <__lo0bits+0x98>
 8009124:	1880008c 	andi	r2,r3,2
 8009128:	1000211e 	bne	r2,zero,80091b0 <__lo0bits+0xa0>
 800912c:	1806d0ba 	srli	r3,r3,2
 8009130:	00800084 	movi	r2,2
 8009134:	20c00015 	stw	r3,0(r4)
 8009138:	f800283a 	ret
 800913c:	18bfffcc 	andi	r2,r3,65535
 8009140:	10001326 	beq	r2,zero,8009190 <__lo0bits+0x80>
 8009144:	0005883a 	mov	r2,zero
 8009148:	19403fcc 	andi	r5,r3,255
 800914c:	2800021e 	bne	r5,zero,8009158 <__lo0bits+0x48>
 8009150:	1806d23a 	srli	r3,r3,8
 8009154:	10800204 	addi	r2,r2,8
 8009158:	194003cc 	andi	r5,r3,15
 800915c:	2800021e 	bne	r5,zero,8009168 <__lo0bits+0x58>
 8009160:	1806d13a 	srli	r3,r3,4
 8009164:	10800104 	addi	r2,r2,4
 8009168:	194000cc 	andi	r5,r3,3
 800916c:	2800021e 	bne	r5,zero,8009178 <__lo0bits+0x68>
 8009170:	1806d0ba 	srli	r3,r3,2
 8009174:	10800084 	addi	r2,r2,2
 8009178:	1940004c 	andi	r5,r3,1
 800917c:	2800081e 	bne	r5,zero,80091a0 <__lo0bits+0x90>
 8009180:	1806d07a 	srli	r3,r3,1
 8009184:	1800051e 	bne	r3,zero,800919c <__lo0bits+0x8c>
 8009188:	00800804 	movi	r2,32
 800918c:	f800283a 	ret
 8009190:	1806d43a 	srli	r3,r3,16
 8009194:	00800404 	movi	r2,16
 8009198:	003feb06 	br	8009148 <__alt_data_end+0xfc009148>
 800919c:	10800044 	addi	r2,r2,1
 80091a0:	20c00015 	stw	r3,0(r4)
 80091a4:	f800283a 	ret
 80091a8:	0005883a 	mov	r2,zero
 80091ac:	f800283a 	ret
 80091b0:	1806d07a 	srli	r3,r3,1
 80091b4:	00800044 	movi	r2,1
 80091b8:	20c00015 	stw	r3,0(r4)
 80091bc:	f800283a 	ret

080091c0 <__i2b>:
 80091c0:	defffd04 	addi	sp,sp,-12
 80091c4:	dc000015 	stw	r16,0(sp)
 80091c8:	04000044 	movi	r16,1
 80091cc:	dc400115 	stw	r17,4(sp)
 80091d0:	2823883a 	mov	r17,r5
 80091d4:	800b883a 	mov	r5,r16
 80091d8:	dfc00215 	stw	ra,8(sp)
 80091dc:	8008d8c0 	call	8008d8c <_Balloc>
 80091e0:	14400515 	stw	r17,20(r2)
 80091e4:	14000415 	stw	r16,16(r2)
 80091e8:	dfc00217 	ldw	ra,8(sp)
 80091ec:	dc400117 	ldw	r17,4(sp)
 80091f0:	dc000017 	ldw	r16,0(sp)
 80091f4:	dec00304 	addi	sp,sp,12
 80091f8:	f800283a 	ret

080091fc <__multiply>:
 80091fc:	deffef04 	addi	sp,sp,-68
 8009200:	dc400815 	stw	r17,32(sp)
 8009204:	dc000715 	stw	r16,28(sp)
 8009208:	34400417 	ldw	r17,16(r6)
 800920c:	2c000417 	ldw	r16,16(r5)
 8009210:	dd800d15 	stw	r22,52(sp)
 8009214:	dc800915 	stw	r18,36(sp)
 8009218:	dfc01015 	stw	ra,64(sp)
 800921c:	df000f15 	stw	fp,60(sp)
 8009220:	ddc00e15 	stw	r23,56(sp)
 8009224:	dd400c15 	stw	r21,48(sp)
 8009228:	dd000b15 	stw	r20,44(sp)
 800922c:	dcc00a15 	stw	r19,40(sp)
 8009230:	2825883a 	mov	r18,r5
 8009234:	302d883a 	mov	r22,r6
 8009238:	8440050e 	bge	r16,r17,8009250 <__multiply+0x54>
 800923c:	8007883a 	mov	r3,r16
 8009240:	3025883a 	mov	r18,r6
 8009244:	8821883a 	mov	r16,r17
 8009248:	282d883a 	mov	r22,r5
 800924c:	1823883a 	mov	r17,r3
 8009250:	90800217 	ldw	r2,8(r18)
 8009254:	8447883a 	add	r3,r16,r17
 8009258:	d8c00215 	stw	r3,8(sp)
 800925c:	91400117 	ldw	r5,4(r18)
 8009260:	10c0010e 	bge	r2,r3,8009268 <__multiply+0x6c>
 8009264:	29400044 	addi	r5,r5,1
 8009268:	8008d8c0 	call	8008d8c <_Balloc>
 800926c:	d8c00217 	ldw	r3,8(sp)
 8009270:	d8800615 	stw	r2,24(sp)
 8009274:	18eb883a 	add	r21,r3,r3
 8009278:	ad6b883a 	add	r21,r21,r21
 800927c:	10c00504 	addi	r3,r2,20
 8009280:	1d6b883a 	add	r21,r3,r21
 8009284:	d8c00115 	stw	r3,4(sp)
 8009288:	dd400315 	stw	r21,12(sp)
 800928c:	1805883a 	mov	r2,r3
 8009290:	1d40042e 	bgeu	r3,r21,80092a4 <__multiply+0xa8>
 8009294:	d8c00317 	ldw	r3,12(sp)
 8009298:	10000015 	stw	zero,0(r2)
 800929c:	10800104 	addi	r2,r2,4
 80092a0:	10fffc36 	bltu	r2,r3,8009294 <__alt_data_end+0xfc009294>
 80092a4:	8c63883a 	add	r17,r17,r17
 80092a8:	b5800504 	addi	r22,r22,20
 80092ac:	8c63883a 	add	r17,r17,r17
 80092b0:	94800504 	addi	r18,r18,20
 80092b4:	8421883a 	add	r16,r16,r16
 80092b8:	b463883a 	add	r17,r22,r17
 80092bc:	8421883a 	add	r16,r16,r16
 80092c0:	dd800015 	stw	r22,0(sp)
 80092c4:	dc800415 	stw	r18,16(sp)
 80092c8:	dc400515 	stw	r17,20(sp)
 80092cc:	9429883a 	add	r20,r18,r16
 80092d0:	b4404f2e 	bgeu	r22,r17,8009410 <__multiply+0x214>
 80092d4:	d8c00017 	ldw	r3,0(sp)
 80092d8:	1c800017 	ldw	r18,0(r3)
 80092dc:	947fffcc 	andi	r17,r18,65535
 80092e0:	88001e26 	beq	r17,zero,800935c <__multiply+0x160>
 80092e4:	dd800117 	ldw	r22,4(sp)
 80092e8:	dd400417 	ldw	r21,16(sp)
 80092ec:	0027883a 	mov	r19,zero
 80092f0:	ac800017 	ldw	r18,0(r21)
 80092f4:	b4000017 	ldw	r16,0(r22)
 80092f8:	880b883a 	mov	r5,r17
 80092fc:	913fffcc 	andi	r4,r18,65535
 8009300:	80010a00 	call	80010a0 <__mulsi3>
 8009304:	9008d43a 	srli	r4,r18,16
 8009308:	84bfffcc 	andi	r18,r16,65535
 800930c:	1485883a 	add	r2,r2,r18
 8009310:	14e5883a 	add	r18,r2,r19
 8009314:	8020d43a 	srli	r16,r16,16
 8009318:	9026d43a 	srli	r19,r18,16
 800931c:	880b883a 	mov	r5,r17
 8009320:	80010a00 	call	80010a0 <__mulsi3>
 8009324:	1405883a 	add	r2,r2,r16
 8009328:	14e1883a 	add	r16,r2,r19
 800932c:	90ffffcc 	andi	r3,r18,65535
 8009330:	8024943a 	slli	r18,r16,16
 8009334:	ad400104 	addi	r21,r21,4
 8009338:	b005883a 	mov	r2,r22
 800933c:	90c6b03a 	or	r3,r18,r3
 8009340:	b0c00015 	stw	r3,0(r22)
 8009344:	8026d43a 	srli	r19,r16,16
 8009348:	b5800104 	addi	r22,r22,4
 800934c:	ad3fe836 	bltu	r21,r20,80092f0 <__alt_data_end+0xfc0092f0>
 8009350:	d8c00017 	ldw	r3,0(sp)
 8009354:	14c00115 	stw	r19,4(r2)
 8009358:	1c800017 	ldw	r18,0(r3)
 800935c:	9024d43a 	srli	r18,r18,16
 8009360:	90002226 	beq	r18,zero,80093ec <__multiply+0x1f0>
 8009364:	d8c00117 	ldw	r3,4(sp)
 8009368:	dd800417 	ldw	r22,16(sp)
 800936c:	002f883a 	mov	r23,zero
 8009370:	1f000017 	ldw	fp,0(r3)
 8009374:	1823883a 	mov	r17,r3
 8009378:	182b883a 	mov	r21,r3
 800937c:	e021883a 	mov	r16,fp
 8009380:	00000106 	br	8009388 <__multiply+0x18c>
 8009384:	982b883a 	mov	r21,r19
 8009388:	b100000b 	ldhu	r4,0(r22)
 800938c:	8020d43a 	srli	r16,r16,16
 8009390:	900b883a 	mov	r5,r18
 8009394:	80010a00 	call	80010a0 <__mulsi3>
 8009398:	1405883a 	add	r2,r2,r16
 800939c:	15ef883a 	add	r23,r2,r23
 80093a0:	b804943a 	slli	r2,r23,16
 80093a4:	e0ffffcc 	andi	r3,fp,65535
 80093a8:	8c400104 	addi	r17,r17,4
 80093ac:	10c6b03a 	or	r3,r2,r3
 80093b0:	88ffff15 	stw	r3,-4(r17)
 80093b4:	b5800104 	addi	r22,r22,4
 80093b8:	b13fff17 	ldw	r4,-4(r22)
 80093bc:	acc00104 	addi	r19,r21,4
 80093c0:	900b883a 	mov	r5,r18
 80093c4:	2008d43a 	srli	r4,r4,16
 80093c8:	9c000017 	ldw	r16,0(r19)
 80093cc:	80010a00 	call	80010a0 <__mulsi3>
 80093d0:	b806d43a 	srli	r3,r23,16
 80093d4:	813fffcc 	andi	r4,r16,65535
 80093d8:	1105883a 	add	r2,r2,r4
 80093dc:	10f9883a 	add	fp,r2,r3
 80093e0:	e02ed43a 	srli	r23,fp,16
 80093e4:	b53fe736 	bltu	r22,r20,8009384 <__alt_data_end+0xfc009384>
 80093e8:	af000115 	stw	fp,4(r21)
 80093ec:	d8c00017 	ldw	r3,0(sp)
 80093f0:	d9000517 	ldw	r4,20(sp)
 80093f4:	18c00104 	addi	r3,r3,4
 80093f8:	d8c00015 	stw	r3,0(sp)
 80093fc:	d8c00117 	ldw	r3,4(sp)
 8009400:	18c00104 	addi	r3,r3,4
 8009404:	d8c00115 	stw	r3,4(sp)
 8009408:	d8c00017 	ldw	r3,0(sp)
 800940c:	193fb136 	bltu	r3,r4,80092d4 <__alt_data_end+0xfc0092d4>
 8009410:	d8c00217 	ldw	r3,8(sp)
 8009414:	00c00c0e 	bge	zero,r3,8009448 <__multiply+0x24c>
 8009418:	d8c00317 	ldw	r3,12(sp)
 800941c:	18bfff17 	ldw	r2,-4(r3)
 8009420:	1d7fff04 	addi	r21,r3,-4
 8009424:	10000326 	beq	r2,zero,8009434 <__multiply+0x238>
 8009428:	00000706 	br	8009448 <__multiply+0x24c>
 800942c:	a8800017 	ldw	r2,0(r21)
 8009430:	1000051e 	bne	r2,zero,8009448 <__multiply+0x24c>
 8009434:	d8c00217 	ldw	r3,8(sp)
 8009438:	ad7fff04 	addi	r21,r21,-4
 800943c:	18ffffc4 	addi	r3,r3,-1
 8009440:	d8c00215 	stw	r3,8(sp)
 8009444:	183ff91e 	bne	r3,zero,800942c <__alt_data_end+0xfc00942c>
 8009448:	d8c00617 	ldw	r3,24(sp)
 800944c:	d9000217 	ldw	r4,8(sp)
 8009450:	1805883a 	mov	r2,r3
 8009454:	19000415 	stw	r4,16(r3)
 8009458:	dfc01017 	ldw	ra,64(sp)
 800945c:	df000f17 	ldw	fp,60(sp)
 8009460:	ddc00e17 	ldw	r23,56(sp)
 8009464:	dd800d17 	ldw	r22,52(sp)
 8009468:	dd400c17 	ldw	r21,48(sp)
 800946c:	dd000b17 	ldw	r20,44(sp)
 8009470:	dcc00a17 	ldw	r19,40(sp)
 8009474:	dc800917 	ldw	r18,36(sp)
 8009478:	dc400817 	ldw	r17,32(sp)
 800947c:	dc000717 	ldw	r16,28(sp)
 8009480:	dec01104 	addi	sp,sp,68
 8009484:	f800283a 	ret

08009488 <__pow5mult>:
 8009488:	defffa04 	addi	sp,sp,-24
 800948c:	dcc00315 	stw	r19,12(sp)
 8009490:	dc000015 	stw	r16,0(sp)
 8009494:	dfc00515 	stw	ra,20(sp)
 8009498:	dd000415 	stw	r20,16(sp)
 800949c:	dc800215 	stw	r18,8(sp)
 80094a0:	dc400115 	stw	r17,4(sp)
 80094a4:	308000cc 	andi	r2,r6,3
 80094a8:	3021883a 	mov	r16,r6
 80094ac:	2027883a 	mov	r19,r4
 80094b0:	10002f1e 	bne	r2,zero,8009570 <__pow5mult+0xe8>
 80094b4:	2825883a 	mov	r18,r5
 80094b8:	8021d0ba 	srai	r16,r16,2
 80094bc:	80001a26 	beq	r16,zero,8009528 <__pow5mult+0xa0>
 80094c0:	9c401217 	ldw	r17,72(r19)
 80094c4:	8800061e 	bne	r17,zero,80094e0 <__pow5mult+0x58>
 80094c8:	00003406 	br	800959c <__pow5mult+0x114>
 80094cc:	8021d07a 	srai	r16,r16,1
 80094d0:	80001526 	beq	r16,zero,8009528 <__pow5mult+0xa0>
 80094d4:	88800017 	ldw	r2,0(r17)
 80094d8:	10001c26 	beq	r2,zero,800954c <__pow5mult+0xc4>
 80094dc:	1023883a 	mov	r17,r2
 80094e0:	8080004c 	andi	r2,r16,1
 80094e4:	103ff926 	beq	r2,zero,80094cc <__alt_data_end+0xfc0094cc>
 80094e8:	880d883a 	mov	r6,r17
 80094ec:	900b883a 	mov	r5,r18
 80094f0:	9809883a 	mov	r4,r19
 80094f4:	80091fc0 	call	80091fc <__multiply>
 80094f8:	90001b26 	beq	r18,zero,8009568 <__pow5mult+0xe0>
 80094fc:	91000117 	ldw	r4,4(r18)
 8009500:	98c01317 	ldw	r3,76(r19)
 8009504:	8021d07a 	srai	r16,r16,1
 8009508:	2109883a 	add	r4,r4,r4
 800950c:	2109883a 	add	r4,r4,r4
 8009510:	1907883a 	add	r3,r3,r4
 8009514:	19000017 	ldw	r4,0(r3)
 8009518:	91000015 	stw	r4,0(r18)
 800951c:	1c800015 	stw	r18,0(r3)
 8009520:	1025883a 	mov	r18,r2
 8009524:	803feb1e 	bne	r16,zero,80094d4 <__alt_data_end+0xfc0094d4>
 8009528:	9005883a 	mov	r2,r18
 800952c:	dfc00517 	ldw	ra,20(sp)
 8009530:	dd000417 	ldw	r20,16(sp)
 8009534:	dcc00317 	ldw	r19,12(sp)
 8009538:	dc800217 	ldw	r18,8(sp)
 800953c:	dc400117 	ldw	r17,4(sp)
 8009540:	dc000017 	ldw	r16,0(sp)
 8009544:	dec00604 	addi	sp,sp,24
 8009548:	f800283a 	ret
 800954c:	880d883a 	mov	r6,r17
 8009550:	880b883a 	mov	r5,r17
 8009554:	9809883a 	mov	r4,r19
 8009558:	80091fc0 	call	80091fc <__multiply>
 800955c:	88800015 	stw	r2,0(r17)
 8009560:	10000015 	stw	zero,0(r2)
 8009564:	003fdd06 	br	80094dc <__alt_data_end+0xfc0094dc>
 8009568:	1025883a 	mov	r18,r2
 800956c:	003fd706 	br	80094cc <__alt_data_end+0xfc0094cc>
 8009570:	10bfffc4 	addi	r2,r2,-1
 8009574:	1085883a 	add	r2,r2,r2
 8009578:	00c20074 	movhi	r3,2049
 800957c:	18d0b804 	addi	r3,r3,17120
 8009580:	1085883a 	add	r2,r2,r2
 8009584:	1885883a 	add	r2,r3,r2
 8009588:	11800017 	ldw	r6,0(r2)
 800958c:	000f883a 	mov	r7,zero
 8009590:	8008e5c0 	call	8008e5c <__multadd>
 8009594:	1025883a 	mov	r18,r2
 8009598:	003fc706 	br	80094b8 <__alt_data_end+0xfc0094b8>
 800959c:	05000044 	movi	r20,1
 80095a0:	a00b883a 	mov	r5,r20
 80095a4:	9809883a 	mov	r4,r19
 80095a8:	8008d8c0 	call	8008d8c <_Balloc>
 80095ac:	1023883a 	mov	r17,r2
 80095b0:	00809c44 	movi	r2,625
 80095b4:	88800515 	stw	r2,20(r17)
 80095b8:	8d000415 	stw	r20,16(r17)
 80095bc:	9c401215 	stw	r17,72(r19)
 80095c0:	88000015 	stw	zero,0(r17)
 80095c4:	003fc606 	br	80094e0 <__alt_data_end+0xfc0094e0>

080095c8 <__lshift>:
 80095c8:	defff904 	addi	sp,sp,-28
 80095cc:	dd400515 	stw	r21,20(sp)
 80095d0:	dcc00315 	stw	r19,12(sp)
 80095d4:	302bd17a 	srai	r21,r6,5
 80095d8:	2cc00417 	ldw	r19,16(r5)
 80095dc:	28800217 	ldw	r2,8(r5)
 80095e0:	dd000415 	stw	r20,16(sp)
 80095e4:	ace7883a 	add	r19,r21,r19
 80095e8:	dc800215 	stw	r18,8(sp)
 80095ec:	dc400115 	stw	r17,4(sp)
 80095f0:	dc000015 	stw	r16,0(sp)
 80095f4:	dfc00615 	stw	ra,24(sp)
 80095f8:	9c000044 	addi	r16,r19,1
 80095fc:	2823883a 	mov	r17,r5
 8009600:	3029883a 	mov	r20,r6
 8009604:	2025883a 	mov	r18,r4
 8009608:	29400117 	ldw	r5,4(r5)
 800960c:	1400030e 	bge	r2,r16,800961c <__lshift+0x54>
 8009610:	1085883a 	add	r2,r2,r2
 8009614:	29400044 	addi	r5,r5,1
 8009618:	143ffd16 	blt	r2,r16,8009610 <__alt_data_end+0xfc009610>
 800961c:	9009883a 	mov	r4,r18
 8009620:	8008d8c0 	call	8008d8c <_Balloc>
 8009624:	10c00504 	addi	r3,r2,20
 8009628:	0540070e 	bge	zero,r21,8009648 <__lshift+0x80>
 800962c:	ad6b883a 	add	r21,r21,r21
 8009630:	ad6b883a 	add	r21,r21,r21
 8009634:	1809883a 	mov	r4,r3
 8009638:	1d47883a 	add	r3,r3,r21
 800963c:	20000015 	stw	zero,0(r4)
 8009640:	21000104 	addi	r4,r4,4
 8009644:	193ffd1e 	bne	r3,r4,800963c <__alt_data_end+0xfc00963c>
 8009648:	8a000417 	ldw	r8,16(r17)
 800964c:	89000504 	addi	r4,r17,20
 8009650:	a18007cc 	andi	r6,r20,31
 8009654:	4211883a 	add	r8,r8,r8
 8009658:	4211883a 	add	r8,r8,r8
 800965c:	2211883a 	add	r8,r4,r8
 8009660:	30002326 	beq	r6,zero,80096f0 <__lshift+0x128>
 8009664:	02400804 	movi	r9,32
 8009668:	4993c83a 	sub	r9,r9,r6
 800966c:	000b883a 	mov	r5,zero
 8009670:	21c00017 	ldw	r7,0(r4)
 8009674:	1815883a 	mov	r10,r3
 8009678:	18c00104 	addi	r3,r3,4
 800967c:	398e983a 	sll	r7,r7,r6
 8009680:	21000104 	addi	r4,r4,4
 8009684:	394ab03a 	or	r5,r7,r5
 8009688:	197fff15 	stw	r5,-4(r3)
 800968c:	217fff17 	ldw	r5,-4(r4)
 8009690:	2a4ad83a 	srl	r5,r5,r9
 8009694:	223ff636 	bltu	r4,r8,8009670 <__alt_data_end+0xfc009670>
 8009698:	51400115 	stw	r5,4(r10)
 800969c:	28001a1e 	bne	r5,zero,8009708 <__lshift+0x140>
 80096a0:	843fffc4 	addi	r16,r16,-1
 80096a4:	14000415 	stw	r16,16(r2)
 80096a8:	88000826 	beq	r17,zero,80096cc <__lshift+0x104>
 80096ac:	89000117 	ldw	r4,4(r17)
 80096b0:	90c01317 	ldw	r3,76(r18)
 80096b4:	2109883a 	add	r4,r4,r4
 80096b8:	2109883a 	add	r4,r4,r4
 80096bc:	1907883a 	add	r3,r3,r4
 80096c0:	19000017 	ldw	r4,0(r3)
 80096c4:	89000015 	stw	r4,0(r17)
 80096c8:	1c400015 	stw	r17,0(r3)
 80096cc:	dfc00617 	ldw	ra,24(sp)
 80096d0:	dd400517 	ldw	r21,20(sp)
 80096d4:	dd000417 	ldw	r20,16(sp)
 80096d8:	dcc00317 	ldw	r19,12(sp)
 80096dc:	dc800217 	ldw	r18,8(sp)
 80096e0:	dc400117 	ldw	r17,4(sp)
 80096e4:	dc000017 	ldw	r16,0(sp)
 80096e8:	dec00704 	addi	sp,sp,28
 80096ec:	f800283a 	ret
 80096f0:	21400017 	ldw	r5,0(r4)
 80096f4:	18c00104 	addi	r3,r3,4
 80096f8:	21000104 	addi	r4,r4,4
 80096fc:	197fff15 	stw	r5,-4(r3)
 8009700:	223ffb36 	bltu	r4,r8,80096f0 <__alt_data_end+0xfc0096f0>
 8009704:	003fe606 	br	80096a0 <__alt_data_end+0xfc0096a0>
 8009708:	9c000084 	addi	r16,r19,2
 800970c:	003fe406 	br	80096a0 <__alt_data_end+0xfc0096a0>

08009710 <__mcmp>:
 8009710:	20800417 	ldw	r2,16(r4)
 8009714:	28c00417 	ldw	r3,16(r5)
 8009718:	10c5c83a 	sub	r2,r2,r3
 800971c:	1000111e 	bne	r2,zero,8009764 <__mcmp+0x54>
 8009720:	18c7883a 	add	r3,r3,r3
 8009724:	18c7883a 	add	r3,r3,r3
 8009728:	21000504 	addi	r4,r4,20
 800972c:	29400504 	addi	r5,r5,20
 8009730:	20c5883a 	add	r2,r4,r3
 8009734:	28cb883a 	add	r5,r5,r3
 8009738:	00000106 	br	8009740 <__mcmp+0x30>
 800973c:	20800a2e 	bgeu	r4,r2,8009768 <__mcmp+0x58>
 8009740:	10bfff04 	addi	r2,r2,-4
 8009744:	297fff04 	addi	r5,r5,-4
 8009748:	11800017 	ldw	r6,0(r2)
 800974c:	28c00017 	ldw	r3,0(r5)
 8009750:	30fffa26 	beq	r6,r3,800973c <__alt_data_end+0xfc00973c>
 8009754:	30c00236 	bltu	r6,r3,8009760 <__mcmp+0x50>
 8009758:	00800044 	movi	r2,1
 800975c:	f800283a 	ret
 8009760:	00bfffc4 	movi	r2,-1
 8009764:	f800283a 	ret
 8009768:	0005883a 	mov	r2,zero
 800976c:	f800283a 	ret

08009770 <__mdiff>:
 8009770:	28c00417 	ldw	r3,16(r5)
 8009774:	30800417 	ldw	r2,16(r6)
 8009778:	defffa04 	addi	sp,sp,-24
 800977c:	dcc00315 	stw	r19,12(sp)
 8009780:	dc800215 	stw	r18,8(sp)
 8009784:	dfc00515 	stw	ra,20(sp)
 8009788:	dd000415 	stw	r20,16(sp)
 800978c:	dc400115 	stw	r17,4(sp)
 8009790:	dc000015 	stw	r16,0(sp)
 8009794:	1887c83a 	sub	r3,r3,r2
 8009798:	2825883a 	mov	r18,r5
 800979c:	3027883a 	mov	r19,r6
 80097a0:	1800141e 	bne	r3,zero,80097f4 <__mdiff+0x84>
 80097a4:	1085883a 	add	r2,r2,r2
 80097a8:	1085883a 	add	r2,r2,r2
 80097ac:	2a000504 	addi	r8,r5,20
 80097b0:	34000504 	addi	r16,r6,20
 80097b4:	4087883a 	add	r3,r8,r2
 80097b8:	8085883a 	add	r2,r16,r2
 80097bc:	00000106 	br	80097c4 <__mdiff+0x54>
 80097c0:	40c0592e 	bgeu	r8,r3,8009928 <__mdiff+0x1b8>
 80097c4:	18ffff04 	addi	r3,r3,-4
 80097c8:	10bfff04 	addi	r2,r2,-4
 80097cc:	19c00017 	ldw	r7,0(r3)
 80097d0:	11400017 	ldw	r5,0(r2)
 80097d4:	397ffa26 	beq	r7,r5,80097c0 <__alt_data_end+0xfc0097c0>
 80097d8:	3940592e 	bgeu	r7,r5,8009940 <__mdiff+0x1d0>
 80097dc:	9005883a 	mov	r2,r18
 80097e0:	4023883a 	mov	r17,r8
 80097e4:	9825883a 	mov	r18,r19
 80097e8:	05000044 	movi	r20,1
 80097ec:	1027883a 	mov	r19,r2
 80097f0:	00000406 	br	8009804 <__mdiff+0x94>
 80097f4:	18005616 	blt	r3,zero,8009950 <__mdiff+0x1e0>
 80097f8:	34400504 	addi	r17,r6,20
 80097fc:	2c000504 	addi	r16,r5,20
 8009800:	0029883a 	mov	r20,zero
 8009804:	91400117 	ldw	r5,4(r18)
 8009808:	8008d8c0 	call	8008d8c <_Balloc>
 800980c:	92400417 	ldw	r9,16(r18)
 8009810:	9b000417 	ldw	r12,16(r19)
 8009814:	12c00504 	addi	r11,r2,20
 8009818:	4a51883a 	add	r8,r9,r9
 800981c:	6319883a 	add	r12,r12,r12
 8009820:	4211883a 	add	r8,r8,r8
 8009824:	6319883a 	add	r12,r12,r12
 8009828:	15000315 	stw	r20,12(r2)
 800982c:	8211883a 	add	r8,r16,r8
 8009830:	8b19883a 	add	r12,r17,r12
 8009834:	0007883a 	mov	r3,zero
 8009838:	81400017 	ldw	r5,0(r16)
 800983c:	89c00017 	ldw	r7,0(r17)
 8009840:	59800104 	addi	r6,r11,4
 8009844:	293fffcc 	andi	r4,r5,65535
 8009848:	20c7883a 	add	r3,r4,r3
 800984c:	393fffcc 	andi	r4,r7,65535
 8009850:	1909c83a 	sub	r4,r3,r4
 8009854:	280ad43a 	srli	r5,r5,16
 8009858:	380ed43a 	srli	r7,r7,16
 800985c:	2007d43a 	srai	r3,r4,16
 8009860:	213fffcc 	andi	r4,r4,65535
 8009864:	29cbc83a 	sub	r5,r5,r7
 8009868:	28c7883a 	add	r3,r5,r3
 800986c:	180a943a 	slli	r5,r3,16
 8009870:	8c400104 	addi	r17,r17,4
 8009874:	84000104 	addi	r16,r16,4
 8009878:	2908b03a 	or	r4,r5,r4
 800987c:	59000015 	stw	r4,0(r11)
 8009880:	1807d43a 	srai	r3,r3,16
 8009884:	3015883a 	mov	r10,r6
 8009888:	3017883a 	mov	r11,r6
 800988c:	8b3fea36 	bltu	r17,r12,8009838 <__alt_data_end+0xfc009838>
 8009890:	8200162e 	bgeu	r16,r8,80098ec <__mdiff+0x17c>
 8009894:	8017883a 	mov	r11,r16
 8009898:	59400017 	ldw	r5,0(r11)
 800989c:	31800104 	addi	r6,r6,4
 80098a0:	5ac00104 	addi	r11,r11,4
 80098a4:	293fffcc 	andi	r4,r5,65535
 80098a8:	20c7883a 	add	r3,r4,r3
 80098ac:	280ed43a 	srli	r7,r5,16
 80098b0:	180bd43a 	srai	r5,r3,16
 80098b4:	193fffcc 	andi	r4,r3,65535
 80098b8:	3947883a 	add	r3,r7,r5
 80098bc:	180a943a 	slli	r5,r3,16
 80098c0:	1807d43a 	srai	r3,r3,16
 80098c4:	2908b03a 	or	r4,r5,r4
 80098c8:	313fff15 	stw	r4,-4(r6)
 80098cc:	5a3ff236 	bltu	r11,r8,8009898 <__alt_data_end+0xfc009898>
 80098d0:	0406303a 	nor	r3,zero,r16
 80098d4:	1a07883a 	add	r3,r3,r8
 80098d8:	1806d0ba 	srli	r3,r3,2
 80098dc:	18c00044 	addi	r3,r3,1
 80098e0:	18c7883a 	add	r3,r3,r3
 80098e4:	18c7883a 	add	r3,r3,r3
 80098e8:	50d5883a 	add	r10,r10,r3
 80098ec:	50ffff04 	addi	r3,r10,-4
 80098f0:	2000041e 	bne	r4,zero,8009904 <__mdiff+0x194>
 80098f4:	18ffff04 	addi	r3,r3,-4
 80098f8:	19000017 	ldw	r4,0(r3)
 80098fc:	4a7fffc4 	addi	r9,r9,-1
 8009900:	203ffc26 	beq	r4,zero,80098f4 <__alt_data_end+0xfc0098f4>
 8009904:	12400415 	stw	r9,16(r2)
 8009908:	dfc00517 	ldw	ra,20(sp)
 800990c:	dd000417 	ldw	r20,16(sp)
 8009910:	dcc00317 	ldw	r19,12(sp)
 8009914:	dc800217 	ldw	r18,8(sp)
 8009918:	dc400117 	ldw	r17,4(sp)
 800991c:	dc000017 	ldw	r16,0(sp)
 8009920:	dec00604 	addi	sp,sp,24
 8009924:	f800283a 	ret
 8009928:	000b883a 	mov	r5,zero
 800992c:	8008d8c0 	call	8008d8c <_Balloc>
 8009930:	00c00044 	movi	r3,1
 8009934:	10c00415 	stw	r3,16(r2)
 8009938:	10000515 	stw	zero,20(r2)
 800993c:	003ff206 	br	8009908 <__alt_data_end+0xfc009908>
 8009940:	8023883a 	mov	r17,r16
 8009944:	0029883a 	mov	r20,zero
 8009948:	4021883a 	mov	r16,r8
 800994c:	003fad06 	br	8009804 <__alt_data_end+0xfc009804>
 8009950:	9005883a 	mov	r2,r18
 8009954:	94400504 	addi	r17,r18,20
 8009958:	9c000504 	addi	r16,r19,20
 800995c:	9825883a 	mov	r18,r19
 8009960:	05000044 	movi	r20,1
 8009964:	1027883a 	mov	r19,r2
 8009968:	003fa606 	br	8009804 <__alt_data_end+0xfc009804>

0800996c <__ulp>:
 800996c:	295ffc2c 	andhi	r5,r5,32752
 8009970:	00bf3034 	movhi	r2,64704
 8009974:	2887883a 	add	r3,r5,r2
 8009978:	00c0020e 	bge	zero,r3,8009984 <__ulp+0x18>
 800997c:	0005883a 	mov	r2,zero
 8009980:	f800283a 	ret
 8009984:	00c7c83a 	sub	r3,zero,r3
 8009988:	1807d53a 	srai	r3,r3,20
 800998c:	008004c4 	movi	r2,19
 8009990:	10c00b0e 	bge	r2,r3,80099c0 <__ulp+0x54>
 8009994:	18bffb04 	addi	r2,r3,-20
 8009998:	01000784 	movi	r4,30
 800999c:	0007883a 	mov	r3,zero
 80099a0:	20800516 	blt	r4,r2,80099b8 <__ulp+0x4c>
 80099a4:	010007c4 	movi	r4,31
 80099a8:	2089c83a 	sub	r4,r4,r2
 80099ac:	00800044 	movi	r2,1
 80099b0:	1104983a 	sll	r2,r2,r4
 80099b4:	f800283a 	ret
 80099b8:	00800044 	movi	r2,1
 80099bc:	f800283a 	ret
 80099c0:	01400234 	movhi	r5,8
 80099c4:	28c7d83a 	sra	r3,r5,r3
 80099c8:	0005883a 	mov	r2,zero
 80099cc:	f800283a 	ret

080099d0 <__b2d>:
 80099d0:	defffa04 	addi	sp,sp,-24
 80099d4:	dc000015 	stw	r16,0(sp)
 80099d8:	24000417 	ldw	r16,16(r4)
 80099dc:	dc400115 	stw	r17,4(sp)
 80099e0:	24400504 	addi	r17,r4,20
 80099e4:	8421883a 	add	r16,r16,r16
 80099e8:	8421883a 	add	r16,r16,r16
 80099ec:	8c21883a 	add	r16,r17,r16
 80099f0:	dc800215 	stw	r18,8(sp)
 80099f4:	84bfff17 	ldw	r18,-4(r16)
 80099f8:	dd000415 	stw	r20,16(sp)
 80099fc:	dcc00315 	stw	r19,12(sp)
 8009a00:	9009883a 	mov	r4,r18
 8009a04:	2829883a 	mov	r20,r5
 8009a08:	dfc00515 	stw	ra,20(sp)
 8009a0c:	80090a80 	call	80090a8 <__hi0bits>
 8009a10:	00c00804 	movi	r3,32
 8009a14:	1889c83a 	sub	r4,r3,r2
 8009a18:	a1000015 	stw	r4,0(r20)
 8009a1c:	01000284 	movi	r4,10
 8009a20:	84ffff04 	addi	r19,r16,-4
 8009a24:	20801216 	blt	r4,r2,8009a70 <__b2d+0xa0>
 8009a28:	018002c4 	movi	r6,11
 8009a2c:	308dc83a 	sub	r6,r6,r2
 8009a30:	9186d83a 	srl	r3,r18,r6
 8009a34:	18cffc34 	orhi	r3,r3,16368
 8009a38:	8cc0212e 	bgeu	r17,r19,8009ac0 <__b2d+0xf0>
 8009a3c:	813ffe17 	ldw	r4,-8(r16)
 8009a40:	218cd83a 	srl	r6,r4,r6
 8009a44:	10800544 	addi	r2,r2,21
 8009a48:	9084983a 	sll	r2,r18,r2
 8009a4c:	1184b03a 	or	r2,r2,r6
 8009a50:	dfc00517 	ldw	ra,20(sp)
 8009a54:	dd000417 	ldw	r20,16(sp)
 8009a58:	dcc00317 	ldw	r19,12(sp)
 8009a5c:	dc800217 	ldw	r18,8(sp)
 8009a60:	dc400117 	ldw	r17,4(sp)
 8009a64:	dc000017 	ldw	r16,0(sp)
 8009a68:	dec00604 	addi	sp,sp,24
 8009a6c:	f800283a 	ret
 8009a70:	8cc00f2e 	bgeu	r17,r19,8009ab0 <__b2d+0xe0>
 8009a74:	117ffd44 	addi	r5,r2,-11
 8009a78:	80bffe17 	ldw	r2,-8(r16)
 8009a7c:	28000e26 	beq	r5,zero,8009ab8 <__b2d+0xe8>
 8009a80:	1949c83a 	sub	r4,r3,r5
 8009a84:	9164983a 	sll	r18,r18,r5
 8009a88:	1106d83a 	srl	r3,r2,r4
 8009a8c:	81bffe04 	addi	r6,r16,-8
 8009a90:	948ffc34 	orhi	r18,r18,16368
 8009a94:	90c6b03a 	or	r3,r18,r3
 8009a98:	89800e2e 	bgeu	r17,r6,8009ad4 <__b2d+0x104>
 8009a9c:	81bffd17 	ldw	r6,-12(r16)
 8009aa0:	1144983a 	sll	r2,r2,r5
 8009aa4:	310ad83a 	srl	r5,r6,r4
 8009aa8:	2884b03a 	or	r2,r5,r2
 8009aac:	003fe806 	br	8009a50 <__alt_data_end+0xfc009a50>
 8009ab0:	10bffd44 	addi	r2,r2,-11
 8009ab4:	1000041e 	bne	r2,zero,8009ac8 <__b2d+0xf8>
 8009ab8:	90cffc34 	orhi	r3,r18,16368
 8009abc:	003fe406 	br	8009a50 <__alt_data_end+0xfc009a50>
 8009ac0:	000d883a 	mov	r6,zero
 8009ac4:	003fdf06 	br	8009a44 <__alt_data_end+0xfc009a44>
 8009ac8:	90a4983a 	sll	r18,r18,r2
 8009acc:	0005883a 	mov	r2,zero
 8009ad0:	003ff906 	br	8009ab8 <__alt_data_end+0xfc009ab8>
 8009ad4:	1144983a 	sll	r2,r2,r5
 8009ad8:	003fdd06 	br	8009a50 <__alt_data_end+0xfc009a50>

08009adc <__d2b>:
 8009adc:	defff804 	addi	sp,sp,-32
 8009ae0:	dc000215 	stw	r16,8(sp)
 8009ae4:	3021883a 	mov	r16,r6
 8009ae8:	dc400315 	stw	r17,12(sp)
 8009aec:	8022907a 	slli	r17,r16,1
 8009af0:	dd000615 	stw	r20,24(sp)
 8009af4:	2829883a 	mov	r20,r5
 8009af8:	01400044 	movi	r5,1
 8009afc:	dcc00515 	stw	r19,20(sp)
 8009b00:	dc800415 	stw	r18,16(sp)
 8009b04:	dfc00715 	stw	ra,28(sp)
 8009b08:	3825883a 	mov	r18,r7
 8009b0c:	8822d57a 	srli	r17,r17,21
 8009b10:	8008d8c0 	call	8008d8c <_Balloc>
 8009b14:	1027883a 	mov	r19,r2
 8009b18:	00800434 	movhi	r2,16
 8009b1c:	10bfffc4 	addi	r2,r2,-1
 8009b20:	808c703a 	and	r6,r16,r2
 8009b24:	88000126 	beq	r17,zero,8009b2c <__d2b+0x50>
 8009b28:	31800434 	orhi	r6,r6,16
 8009b2c:	d9800015 	stw	r6,0(sp)
 8009b30:	a0002426 	beq	r20,zero,8009bc4 <__d2b+0xe8>
 8009b34:	d9000104 	addi	r4,sp,4
 8009b38:	dd000115 	stw	r20,4(sp)
 8009b3c:	80091100 	call	8009110 <__lo0bits>
 8009b40:	d8c00017 	ldw	r3,0(sp)
 8009b44:	10002f1e 	bne	r2,zero,8009c04 <__d2b+0x128>
 8009b48:	d9000117 	ldw	r4,4(sp)
 8009b4c:	99000515 	stw	r4,20(r19)
 8009b50:	1821003a 	cmpeq	r16,r3,zero
 8009b54:	01000084 	movi	r4,2
 8009b58:	2421c83a 	sub	r16,r4,r16
 8009b5c:	98c00615 	stw	r3,24(r19)
 8009b60:	9c000415 	stw	r16,16(r19)
 8009b64:	88001f1e 	bne	r17,zero,8009be4 <__d2b+0x108>
 8009b68:	10bef384 	addi	r2,r2,-1074
 8009b6c:	90800015 	stw	r2,0(r18)
 8009b70:	00900034 	movhi	r2,16384
 8009b74:	10bfffc4 	addi	r2,r2,-1
 8009b78:	8085883a 	add	r2,r16,r2
 8009b7c:	1085883a 	add	r2,r2,r2
 8009b80:	1085883a 	add	r2,r2,r2
 8009b84:	9885883a 	add	r2,r19,r2
 8009b88:	11000517 	ldw	r4,20(r2)
 8009b8c:	8020917a 	slli	r16,r16,5
 8009b90:	80090a80 	call	80090a8 <__hi0bits>
 8009b94:	d8c00817 	ldw	r3,32(sp)
 8009b98:	8085c83a 	sub	r2,r16,r2
 8009b9c:	18800015 	stw	r2,0(r3)
 8009ba0:	9805883a 	mov	r2,r19
 8009ba4:	dfc00717 	ldw	ra,28(sp)
 8009ba8:	dd000617 	ldw	r20,24(sp)
 8009bac:	dcc00517 	ldw	r19,20(sp)
 8009bb0:	dc800417 	ldw	r18,16(sp)
 8009bb4:	dc400317 	ldw	r17,12(sp)
 8009bb8:	dc000217 	ldw	r16,8(sp)
 8009bbc:	dec00804 	addi	sp,sp,32
 8009bc0:	f800283a 	ret
 8009bc4:	d809883a 	mov	r4,sp
 8009bc8:	80091100 	call	8009110 <__lo0bits>
 8009bcc:	d8c00017 	ldw	r3,0(sp)
 8009bd0:	04000044 	movi	r16,1
 8009bd4:	9c000415 	stw	r16,16(r19)
 8009bd8:	98c00515 	stw	r3,20(r19)
 8009bdc:	10800804 	addi	r2,r2,32
 8009be0:	883fe126 	beq	r17,zero,8009b68 <__alt_data_end+0xfc009b68>
 8009be4:	00c00d44 	movi	r3,53
 8009be8:	8c7ef344 	addi	r17,r17,-1075
 8009bec:	88a3883a 	add	r17,r17,r2
 8009bf0:	1885c83a 	sub	r2,r3,r2
 8009bf4:	d8c00817 	ldw	r3,32(sp)
 8009bf8:	94400015 	stw	r17,0(r18)
 8009bfc:	18800015 	stw	r2,0(r3)
 8009c00:	003fe706 	br	8009ba0 <__alt_data_end+0xfc009ba0>
 8009c04:	01000804 	movi	r4,32
 8009c08:	2089c83a 	sub	r4,r4,r2
 8009c0c:	1908983a 	sll	r4,r3,r4
 8009c10:	d9400117 	ldw	r5,4(sp)
 8009c14:	1886d83a 	srl	r3,r3,r2
 8009c18:	2148b03a 	or	r4,r4,r5
 8009c1c:	99000515 	stw	r4,20(r19)
 8009c20:	d8c00015 	stw	r3,0(sp)
 8009c24:	003fca06 	br	8009b50 <__alt_data_end+0xfc009b50>

08009c28 <__ratio>:
 8009c28:	defff904 	addi	sp,sp,-28
 8009c2c:	dc400315 	stw	r17,12(sp)
 8009c30:	2823883a 	mov	r17,r5
 8009c34:	d9400104 	addi	r5,sp,4
 8009c38:	dfc00615 	stw	ra,24(sp)
 8009c3c:	dcc00515 	stw	r19,20(sp)
 8009c40:	dc800415 	stw	r18,16(sp)
 8009c44:	2027883a 	mov	r19,r4
 8009c48:	dc000215 	stw	r16,8(sp)
 8009c4c:	80099d00 	call	80099d0 <__b2d>
 8009c50:	d80b883a 	mov	r5,sp
 8009c54:	8809883a 	mov	r4,r17
 8009c58:	1025883a 	mov	r18,r2
 8009c5c:	1821883a 	mov	r16,r3
 8009c60:	80099d00 	call	80099d0 <__b2d>
 8009c64:	8a000417 	ldw	r8,16(r17)
 8009c68:	99000417 	ldw	r4,16(r19)
 8009c6c:	d9400117 	ldw	r5,4(sp)
 8009c70:	2209c83a 	sub	r4,r4,r8
 8009c74:	2010917a 	slli	r8,r4,5
 8009c78:	d9000017 	ldw	r4,0(sp)
 8009c7c:	2909c83a 	sub	r4,r5,r4
 8009c80:	4109883a 	add	r4,r8,r4
 8009c84:	01000e0e 	bge	zero,r4,8009cc0 <__ratio+0x98>
 8009c88:	2008953a 	slli	r4,r4,20
 8009c8c:	2421883a 	add	r16,r4,r16
 8009c90:	100d883a 	mov	r6,r2
 8009c94:	180f883a 	mov	r7,r3
 8009c98:	9009883a 	mov	r4,r18
 8009c9c:	800b883a 	mov	r5,r16
 8009ca0:	800f7d80 	call	800f7d8 <__divdf3>
 8009ca4:	dfc00617 	ldw	ra,24(sp)
 8009ca8:	dcc00517 	ldw	r19,20(sp)
 8009cac:	dc800417 	ldw	r18,16(sp)
 8009cb0:	dc400317 	ldw	r17,12(sp)
 8009cb4:	dc000217 	ldw	r16,8(sp)
 8009cb8:	dec00704 	addi	sp,sp,28
 8009cbc:	f800283a 	ret
 8009cc0:	2008953a 	slli	r4,r4,20
 8009cc4:	1907c83a 	sub	r3,r3,r4
 8009cc8:	003ff106 	br	8009c90 <__alt_data_end+0xfc009c90>

08009ccc <_mprec_log10>:
 8009ccc:	defffe04 	addi	sp,sp,-8
 8009cd0:	dc000015 	stw	r16,0(sp)
 8009cd4:	dfc00115 	stw	ra,4(sp)
 8009cd8:	008005c4 	movi	r2,23
 8009cdc:	2021883a 	mov	r16,r4
 8009ce0:	11000d0e 	bge	r2,r4,8009d18 <_mprec_log10+0x4c>
 8009ce4:	0005883a 	mov	r2,zero
 8009ce8:	00cffc34 	movhi	r3,16368
 8009cec:	843fffc4 	addi	r16,r16,-1
 8009cf0:	000d883a 	mov	r6,zero
 8009cf4:	01d00934 	movhi	r7,16420
 8009cf8:	1009883a 	mov	r4,r2
 8009cfc:	180b883a 	mov	r5,r3
 8009d00:	80104000 	call	8010400 <__muldf3>
 8009d04:	803ff91e 	bne	r16,zero,8009cec <__alt_data_end+0xfc009cec>
 8009d08:	dfc00117 	ldw	ra,4(sp)
 8009d0c:	dc000017 	ldw	r16,0(sp)
 8009d10:	dec00204 	addi	sp,sp,8
 8009d14:	f800283a 	ret
 8009d18:	202090fa 	slli	r16,r4,3
 8009d1c:	00820074 	movhi	r2,2049
 8009d20:	1090cf04 	addi	r2,r2,17212
 8009d24:	1421883a 	add	r16,r2,r16
 8009d28:	80800017 	ldw	r2,0(r16)
 8009d2c:	80c00117 	ldw	r3,4(r16)
 8009d30:	dfc00117 	ldw	ra,4(sp)
 8009d34:	dc000017 	ldw	r16,0(sp)
 8009d38:	dec00204 	addi	sp,sp,8
 8009d3c:	f800283a 	ret

08009d40 <__copybits>:
 8009d40:	297fffc4 	addi	r5,r5,-1
 8009d44:	280fd17a 	srai	r7,r5,5
 8009d48:	30c00417 	ldw	r3,16(r6)
 8009d4c:	30800504 	addi	r2,r6,20
 8009d50:	39c00044 	addi	r7,r7,1
 8009d54:	18c7883a 	add	r3,r3,r3
 8009d58:	39cf883a 	add	r7,r7,r7
 8009d5c:	18c7883a 	add	r3,r3,r3
 8009d60:	39cf883a 	add	r7,r7,r7
 8009d64:	10c7883a 	add	r3,r2,r3
 8009d68:	21cf883a 	add	r7,r4,r7
 8009d6c:	10c00d2e 	bgeu	r2,r3,8009da4 <__copybits+0x64>
 8009d70:	200b883a 	mov	r5,r4
 8009d74:	12000017 	ldw	r8,0(r2)
 8009d78:	29400104 	addi	r5,r5,4
 8009d7c:	10800104 	addi	r2,r2,4
 8009d80:	2a3fff15 	stw	r8,-4(r5)
 8009d84:	10fffb36 	bltu	r2,r3,8009d74 <__alt_data_end+0xfc009d74>
 8009d88:	1985c83a 	sub	r2,r3,r6
 8009d8c:	10bffac4 	addi	r2,r2,-21
 8009d90:	1004d0ba 	srli	r2,r2,2
 8009d94:	10800044 	addi	r2,r2,1
 8009d98:	1085883a 	add	r2,r2,r2
 8009d9c:	1085883a 	add	r2,r2,r2
 8009da0:	2089883a 	add	r4,r4,r2
 8009da4:	21c0032e 	bgeu	r4,r7,8009db4 <__copybits+0x74>
 8009da8:	20000015 	stw	zero,0(r4)
 8009dac:	21000104 	addi	r4,r4,4
 8009db0:	21fffd36 	bltu	r4,r7,8009da8 <__alt_data_end+0xfc009da8>
 8009db4:	f800283a 	ret

08009db8 <__any_on>:
 8009db8:	20c00417 	ldw	r3,16(r4)
 8009dbc:	2805d17a 	srai	r2,r5,5
 8009dc0:	21000504 	addi	r4,r4,20
 8009dc4:	18800d0e 	bge	r3,r2,8009dfc <__any_on+0x44>
 8009dc8:	18c7883a 	add	r3,r3,r3
 8009dcc:	18c7883a 	add	r3,r3,r3
 8009dd0:	20c7883a 	add	r3,r4,r3
 8009dd4:	20c0192e 	bgeu	r4,r3,8009e3c <__any_on+0x84>
 8009dd8:	18bfff17 	ldw	r2,-4(r3)
 8009ddc:	18ffff04 	addi	r3,r3,-4
 8009de0:	1000041e 	bne	r2,zero,8009df4 <__any_on+0x3c>
 8009de4:	20c0142e 	bgeu	r4,r3,8009e38 <__any_on+0x80>
 8009de8:	18ffff04 	addi	r3,r3,-4
 8009dec:	19400017 	ldw	r5,0(r3)
 8009df0:	283ffc26 	beq	r5,zero,8009de4 <__alt_data_end+0xfc009de4>
 8009df4:	00800044 	movi	r2,1
 8009df8:	f800283a 	ret
 8009dfc:	10c00a0e 	bge	r2,r3,8009e28 <__any_on+0x70>
 8009e00:	1085883a 	add	r2,r2,r2
 8009e04:	1085883a 	add	r2,r2,r2
 8009e08:	294007cc 	andi	r5,r5,31
 8009e0c:	2087883a 	add	r3,r4,r2
 8009e10:	283ff026 	beq	r5,zero,8009dd4 <__alt_data_end+0xfc009dd4>
 8009e14:	19800017 	ldw	r6,0(r3)
 8009e18:	3144d83a 	srl	r2,r6,r5
 8009e1c:	114a983a 	sll	r5,r2,r5
 8009e20:	317ff41e 	bne	r6,r5,8009df4 <__alt_data_end+0xfc009df4>
 8009e24:	003feb06 	br	8009dd4 <__alt_data_end+0xfc009dd4>
 8009e28:	1085883a 	add	r2,r2,r2
 8009e2c:	1085883a 	add	r2,r2,r2
 8009e30:	2087883a 	add	r3,r4,r2
 8009e34:	003fe706 	br	8009dd4 <__alt_data_end+0xfc009dd4>
 8009e38:	f800283a 	ret
 8009e3c:	0005883a 	mov	r2,zero
 8009e40:	f800283a 	ret

08009e44 <__fpclassifyd>:
 8009e44:	00a00034 	movhi	r2,32768
 8009e48:	10bfffc4 	addi	r2,r2,-1
 8009e4c:	2884703a 	and	r2,r5,r2
 8009e50:	10000726 	beq	r2,zero,8009e70 <__fpclassifyd+0x2c>
 8009e54:	00fffc34 	movhi	r3,65520
 8009e58:	019ff834 	movhi	r6,32736
 8009e5c:	28c7883a 	add	r3,r5,r3
 8009e60:	31bfffc4 	addi	r6,r6,-1
 8009e64:	30c00536 	bltu	r6,r3,8009e7c <__fpclassifyd+0x38>
 8009e68:	00800104 	movi	r2,4
 8009e6c:	f800283a 	ret
 8009e70:	2000021e 	bne	r4,zero,8009e7c <__fpclassifyd+0x38>
 8009e74:	00800084 	movi	r2,2
 8009e78:	f800283a 	ret
 8009e7c:	00dffc34 	movhi	r3,32752
 8009e80:	019ff834 	movhi	r6,32736
 8009e84:	28cb883a 	add	r5,r5,r3
 8009e88:	31bfffc4 	addi	r6,r6,-1
 8009e8c:	317ff62e 	bgeu	r6,r5,8009e68 <__alt_data_end+0xfc009e68>
 8009e90:	01400434 	movhi	r5,16
 8009e94:	297fffc4 	addi	r5,r5,-1
 8009e98:	28800236 	bltu	r5,r2,8009ea4 <__fpclassifyd+0x60>
 8009e9c:	008000c4 	movi	r2,3
 8009ea0:	f800283a 	ret
 8009ea4:	10c00226 	beq	r2,r3,8009eb0 <__fpclassifyd+0x6c>
 8009ea8:	0005883a 	mov	r2,zero
 8009eac:	f800283a 	ret
 8009eb0:	2005003a 	cmpeq	r2,r4,zero
 8009eb4:	f800283a 	ret

08009eb8 <_sbrk_r>:
 8009eb8:	defffd04 	addi	sp,sp,-12
 8009ebc:	dc000015 	stw	r16,0(sp)
 8009ec0:	040200b4 	movhi	r16,2050
 8009ec4:	dc400115 	stw	r17,4(sp)
 8009ec8:	84205004 	addi	r16,r16,-32448
 8009ecc:	2023883a 	mov	r17,r4
 8009ed0:	2809883a 	mov	r4,r5
 8009ed4:	dfc00215 	stw	ra,8(sp)
 8009ed8:	80000015 	stw	zero,0(r16)
 8009edc:	8011f780 	call	8011f78 <sbrk>
 8009ee0:	00ffffc4 	movi	r3,-1
 8009ee4:	10c00526 	beq	r2,r3,8009efc <_sbrk_r+0x44>
 8009ee8:	dfc00217 	ldw	ra,8(sp)
 8009eec:	dc400117 	ldw	r17,4(sp)
 8009ef0:	dc000017 	ldw	r16,0(sp)
 8009ef4:	dec00304 	addi	sp,sp,12
 8009ef8:	f800283a 	ret
 8009efc:	80c00017 	ldw	r3,0(r16)
 8009f00:	183ff926 	beq	r3,zero,8009ee8 <__alt_data_end+0xfc009ee8>
 8009f04:	88c00015 	stw	r3,0(r17)
 8009f08:	003ff706 	br	8009ee8 <__alt_data_end+0xfc009ee8>

08009f0c <__sread>:
 8009f0c:	defffe04 	addi	sp,sp,-8
 8009f10:	dc000015 	stw	r16,0(sp)
 8009f14:	2821883a 	mov	r16,r5
 8009f18:	2940038f 	ldh	r5,14(r5)
 8009f1c:	dfc00115 	stw	ra,4(sp)
 8009f20:	800d95c0 	call	800d95c <_read_r>
 8009f24:	10000716 	blt	r2,zero,8009f44 <__sread+0x38>
 8009f28:	80c01417 	ldw	r3,80(r16)
 8009f2c:	1887883a 	add	r3,r3,r2
 8009f30:	80c01415 	stw	r3,80(r16)
 8009f34:	dfc00117 	ldw	ra,4(sp)
 8009f38:	dc000017 	ldw	r16,0(sp)
 8009f3c:	dec00204 	addi	sp,sp,8
 8009f40:	f800283a 	ret
 8009f44:	80c0030b 	ldhu	r3,12(r16)
 8009f48:	18fbffcc 	andi	r3,r3,61439
 8009f4c:	80c0030d 	sth	r3,12(r16)
 8009f50:	dfc00117 	ldw	ra,4(sp)
 8009f54:	dc000017 	ldw	r16,0(sp)
 8009f58:	dec00204 	addi	sp,sp,8
 8009f5c:	f800283a 	ret

08009f60 <__seofread>:
 8009f60:	0005883a 	mov	r2,zero
 8009f64:	f800283a 	ret

08009f68 <__swrite>:
 8009f68:	2880030b 	ldhu	r2,12(r5)
 8009f6c:	defffb04 	addi	sp,sp,-20
 8009f70:	dcc00315 	stw	r19,12(sp)
 8009f74:	dc800215 	stw	r18,8(sp)
 8009f78:	dc400115 	stw	r17,4(sp)
 8009f7c:	dc000015 	stw	r16,0(sp)
 8009f80:	dfc00415 	stw	ra,16(sp)
 8009f84:	10c0400c 	andi	r3,r2,256
 8009f88:	2821883a 	mov	r16,r5
 8009f8c:	2023883a 	mov	r17,r4
 8009f90:	3025883a 	mov	r18,r6
 8009f94:	3827883a 	mov	r19,r7
 8009f98:	18000526 	beq	r3,zero,8009fb0 <__swrite+0x48>
 8009f9c:	2940038f 	ldh	r5,14(r5)
 8009fa0:	01c00084 	movi	r7,2
 8009fa4:	000d883a 	mov	r6,zero
 8009fa8:	800d7a00 	call	800d7a0 <_lseek_r>
 8009fac:	8080030b 	ldhu	r2,12(r16)
 8009fb0:	8140038f 	ldh	r5,14(r16)
 8009fb4:	10bbffcc 	andi	r2,r2,61439
 8009fb8:	980f883a 	mov	r7,r19
 8009fbc:	900d883a 	mov	r6,r18
 8009fc0:	8809883a 	mov	r4,r17
 8009fc4:	8080030d 	sth	r2,12(r16)
 8009fc8:	dfc00417 	ldw	ra,16(sp)
 8009fcc:	dcc00317 	ldw	r19,12(sp)
 8009fd0:	dc800217 	ldw	r18,8(sp)
 8009fd4:	dc400117 	ldw	r17,4(sp)
 8009fd8:	dc000017 	ldw	r16,0(sp)
 8009fdc:	dec00504 	addi	sp,sp,20
 8009fe0:	800cd8c1 	jmpi	800cd8c <_write_r>

08009fe4 <__sseek>:
 8009fe4:	defffe04 	addi	sp,sp,-8
 8009fe8:	dc000015 	stw	r16,0(sp)
 8009fec:	2821883a 	mov	r16,r5
 8009ff0:	2940038f 	ldh	r5,14(r5)
 8009ff4:	dfc00115 	stw	ra,4(sp)
 8009ff8:	800d7a00 	call	800d7a0 <_lseek_r>
 8009ffc:	00ffffc4 	movi	r3,-1
 800a000:	10c00826 	beq	r2,r3,800a024 <__sseek+0x40>
 800a004:	80c0030b 	ldhu	r3,12(r16)
 800a008:	80801415 	stw	r2,80(r16)
 800a00c:	18c40014 	ori	r3,r3,4096
 800a010:	80c0030d 	sth	r3,12(r16)
 800a014:	dfc00117 	ldw	ra,4(sp)
 800a018:	dc000017 	ldw	r16,0(sp)
 800a01c:	dec00204 	addi	sp,sp,8
 800a020:	f800283a 	ret
 800a024:	80c0030b 	ldhu	r3,12(r16)
 800a028:	18fbffcc 	andi	r3,r3,61439
 800a02c:	80c0030d 	sth	r3,12(r16)
 800a030:	dfc00117 	ldw	ra,4(sp)
 800a034:	dc000017 	ldw	r16,0(sp)
 800a038:	dec00204 	addi	sp,sp,8
 800a03c:	f800283a 	ret

0800a040 <__sclose>:
 800a040:	2940038f 	ldh	r5,14(r5)
 800a044:	800cdec1 	jmpi	800cdec <_close_r>

0800a048 <strcmp>:
 800a048:	2144b03a 	or	r2,r4,r5
 800a04c:	108000cc 	andi	r2,r2,3
 800a050:	1000171e 	bne	r2,zero,800a0b0 <strcmp+0x68>
 800a054:	20800017 	ldw	r2,0(r4)
 800a058:	28c00017 	ldw	r3,0(r5)
 800a05c:	10c0141e 	bne	r2,r3,800a0b0 <strcmp+0x68>
 800a060:	027fbff4 	movhi	r9,65279
 800a064:	4a7fbfc4 	addi	r9,r9,-257
 800a068:	0086303a 	nor	r3,zero,r2
 800a06c:	02202074 	movhi	r8,32897
 800a070:	1245883a 	add	r2,r2,r9
 800a074:	42202004 	addi	r8,r8,-32640
 800a078:	10c4703a 	and	r2,r2,r3
 800a07c:	1204703a 	and	r2,r2,r8
 800a080:	10000226 	beq	r2,zero,800a08c <strcmp+0x44>
 800a084:	00002306 	br	800a114 <strcmp+0xcc>
 800a088:	1000221e 	bne	r2,zero,800a114 <strcmp+0xcc>
 800a08c:	21000104 	addi	r4,r4,4
 800a090:	20c00017 	ldw	r3,0(r4)
 800a094:	29400104 	addi	r5,r5,4
 800a098:	29800017 	ldw	r6,0(r5)
 800a09c:	1a4f883a 	add	r7,r3,r9
 800a0a0:	00c4303a 	nor	r2,zero,r3
 800a0a4:	3884703a 	and	r2,r7,r2
 800a0a8:	1204703a 	and	r2,r2,r8
 800a0ac:	19bff626 	beq	r3,r6,800a088 <__alt_data_end+0xfc00a088>
 800a0b0:	20800003 	ldbu	r2,0(r4)
 800a0b4:	10c03fcc 	andi	r3,r2,255
 800a0b8:	18c0201c 	xori	r3,r3,128
 800a0bc:	18ffe004 	addi	r3,r3,-128
 800a0c0:	18000c26 	beq	r3,zero,800a0f4 <strcmp+0xac>
 800a0c4:	29800007 	ldb	r6,0(r5)
 800a0c8:	19800326 	beq	r3,r6,800a0d8 <strcmp+0x90>
 800a0cc:	00001306 	br	800a11c <strcmp+0xd4>
 800a0d0:	29800007 	ldb	r6,0(r5)
 800a0d4:	11800b1e 	bne	r2,r6,800a104 <strcmp+0xbc>
 800a0d8:	21000044 	addi	r4,r4,1
 800a0dc:	20c00003 	ldbu	r3,0(r4)
 800a0e0:	29400044 	addi	r5,r5,1
 800a0e4:	18803fcc 	andi	r2,r3,255
 800a0e8:	1080201c 	xori	r2,r2,128
 800a0ec:	10bfe004 	addi	r2,r2,-128
 800a0f0:	103ff71e 	bne	r2,zero,800a0d0 <__alt_data_end+0xfc00a0d0>
 800a0f4:	0007883a 	mov	r3,zero
 800a0f8:	28800003 	ldbu	r2,0(r5)
 800a0fc:	1885c83a 	sub	r2,r3,r2
 800a100:	f800283a 	ret
 800a104:	28800003 	ldbu	r2,0(r5)
 800a108:	18c03fcc 	andi	r3,r3,255
 800a10c:	1885c83a 	sub	r2,r3,r2
 800a110:	f800283a 	ret
 800a114:	0005883a 	mov	r2,zero
 800a118:	f800283a 	ret
 800a11c:	10c03fcc 	andi	r3,r2,255
 800a120:	003ff506 	br	800a0f8 <__alt_data_end+0xfc00a0f8>

0800a124 <__ssprint_r>:
 800a124:	30800217 	ldw	r2,8(r6)
 800a128:	defff604 	addi	sp,sp,-40
 800a12c:	dc800215 	stw	r18,8(sp)
 800a130:	dfc00915 	stw	ra,36(sp)
 800a134:	df000815 	stw	fp,32(sp)
 800a138:	ddc00715 	stw	r23,28(sp)
 800a13c:	dd800615 	stw	r22,24(sp)
 800a140:	dd400515 	stw	r21,20(sp)
 800a144:	dd000415 	stw	r20,16(sp)
 800a148:	dcc00315 	stw	r19,12(sp)
 800a14c:	dc400115 	stw	r17,4(sp)
 800a150:	dc000015 	stw	r16,0(sp)
 800a154:	3025883a 	mov	r18,r6
 800a158:	10005826 	beq	r2,zero,800a2bc <__ssprint_r+0x198>
 800a15c:	2027883a 	mov	r19,r4
 800a160:	35c00017 	ldw	r23,0(r6)
 800a164:	29000017 	ldw	r4,0(r5)
 800a168:	28800217 	ldw	r2,8(r5)
 800a16c:	2823883a 	mov	r17,r5
 800a170:	0039883a 	mov	fp,zero
 800a174:	0021883a 	mov	r16,zero
 800a178:	80003926 	beq	r16,zero,800a260 <__ssprint_r+0x13c>
 800a17c:	102b883a 	mov	r21,r2
 800a180:	102d883a 	mov	r22,r2
 800a184:	80803a36 	bltu	r16,r2,800a270 <__ssprint_r+0x14c>
 800a188:	88c0030b 	ldhu	r3,12(r17)
 800a18c:	1881200c 	andi	r2,r3,1152
 800a190:	10002626 	beq	r2,zero,800a22c <__ssprint_r+0x108>
 800a194:	88800517 	ldw	r2,20(r17)
 800a198:	89400417 	ldw	r5,16(r17)
 800a19c:	81800044 	addi	r6,r16,1
 800a1a0:	108f883a 	add	r7,r2,r2
 800a1a4:	3885883a 	add	r2,r7,r2
 800a1a8:	100ed7fa 	srli	r7,r2,31
 800a1ac:	216dc83a 	sub	r22,r4,r5
 800a1b0:	3589883a 	add	r4,r6,r22
 800a1b4:	3885883a 	add	r2,r7,r2
 800a1b8:	102bd07a 	srai	r21,r2,1
 800a1bc:	a80d883a 	mov	r6,r21
 800a1c0:	a900022e 	bgeu	r21,r4,800a1cc <__ssprint_r+0xa8>
 800a1c4:	202b883a 	mov	r21,r4
 800a1c8:	200d883a 	mov	r6,r4
 800a1cc:	18c1000c 	andi	r3,r3,1024
 800a1d0:	18002a26 	beq	r3,zero,800a27c <__ssprint_r+0x158>
 800a1d4:	300b883a 	mov	r5,r6
 800a1d8:	9809883a 	mov	r4,r19
 800a1dc:	80083740 	call	8008374 <_malloc_r>
 800a1e0:	1029883a 	mov	r20,r2
 800a1e4:	10002c26 	beq	r2,zero,800a298 <__ssprint_r+0x174>
 800a1e8:	89400417 	ldw	r5,16(r17)
 800a1ec:	b00d883a 	mov	r6,r22
 800a1f0:	1009883a 	mov	r4,r2
 800a1f4:	80010c80 	call	80010c8 <memcpy>
 800a1f8:	8880030b 	ldhu	r2,12(r17)
 800a1fc:	00fedfc4 	movi	r3,-1153
 800a200:	10c4703a 	and	r2,r2,r3
 800a204:	10802014 	ori	r2,r2,128
 800a208:	8880030d 	sth	r2,12(r17)
 800a20c:	a589883a 	add	r4,r20,r22
 800a210:	adadc83a 	sub	r22,r21,r22
 800a214:	8d400515 	stw	r21,20(r17)
 800a218:	8d800215 	stw	r22,8(r17)
 800a21c:	8d000415 	stw	r20,16(r17)
 800a220:	89000015 	stw	r4,0(r17)
 800a224:	802b883a 	mov	r21,r16
 800a228:	802d883a 	mov	r22,r16
 800a22c:	b00d883a 	mov	r6,r22
 800a230:	e00b883a 	mov	r5,fp
 800a234:	800d8000 	call	800d800 <memmove>
 800a238:	88800217 	ldw	r2,8(r17)
 800a23c:	89000017 	ldw	r4,0(r17)
 800a240:	90c00217 	ldw	r3,8(r18)
 800a244:	1545c83a 	sub	r2,r2,r21
 800a248:	2589883a 	add	r4,r4,r22
 800a24c:	88800215 	stw	r2,8(r17)
 800a250:	89000015 	stw	r4,0(r17)
 800a254:	1c21c83a 	sub	r16,r3,r16
 800a258:	94000215 	stw	r16,8(r18)
 800a25c:	80001726 	beq	r16,zero,800a2bc <__ssprint_r+0x198>
 800a260:	bf000017 	ldw	fp,0(r23)
 800a264:	bc000117 	ldw	r16,4(r23)
 800a268:	bdc00204 	addi	r23,r23,8
 800a26c:	003fc206 	br	800a178 <__alt_data_end+0xfc00a178>
 800a270:	802b883a 	mov	r21,r16
 800a274:	802d883a 	mov	r22,r16
 800a278:	003fec06 	br	800a22c <__alt_data_end+0xfc00a22c>
 800a27c:	9809883a 	mov	r4,r19
 800a280:	800d9bc0 	call	800d9bc <_realloc_r>
 800a284:	1029883a 	mov	r20,r2
 800a288:	103fe01e 	bne	r2,zero,800a20c <__alt_data_end+0xfc00a20c>
 800a28c:	89400417 	ldw	r5,16(r17)
 800a290:	9809883a 	mov	r4,r19
 800a294:	8007c440 	call	8007c44 <_free_r>
 800a298:	88c0030b 	ldhu	r3,12(r17)
 800a29c:	00800304 	movi	r2,12
 800a2a0:	98800015 	stw	r2,0(r19)
 800a2a4:	18c01014 	ori	r3,r3,64
 800a2a8:	88c0030d 	sth	r3,12(r17)
 800a2ac:	00bfffc4 	movi	r2,-1
 800a2b0:	90000215 	stw	zero,8(r18)
 800a2b4:	90000115 	stw	zero,4(r18)
 800a2b8:	00000206 	br	800a2c4 <__ssprint_r+0x1a0>
 800a2bc:	90000115 	stw	zero,4(r18)
 800a2c0:	0005883a 	mov	r2,zero
 800a2c4:	dfc00917 	ldw	ra,36(sp)
 800a2c8:	df000817 	ldw	fp,32(sp)
 800a2cc:	ddc00717 	ldw	r23,28(sp)
 800a2d0:	dd800617 	ldw	r22,24(sp)
 800a2d4:	dd400517 	ldw	r21,20(sp)
 800a2d8:	dd000417 	ldw	r20,16(sp)
 800a2dc:	dcc00317 	ldw	r19,12(sp)
 800a2e0:	dc800217 	ldw	r18,8(sp)
 800a2e4:	dc400117 	ldw	r17,4(sp)
 800a2e8:	dc000017 	ldw	r16,0(sp)
 800a2ec:	dec00a04 	addi	sp,sp,40
 800a2f0:	f800283a 	ret

0800a2f4 <___svfiprintf_internal_r>:
 800a2f4:	2880030b 	ldhu	r2,12(r5)
 800a2f8:	deffc804 	addi	sp,sp,-224
 800a2fc:	dcc03115 	stw	r19,196(sp)
 800a300:	dfc03715 	stw	ra,220(sp)
 800a304:	df003615 	stw	fp,216(sp)
 800a308:	ddc03515 	stw	r23,212(sp)
 800a30c:	dd803415 	stw	r22,208(sp)
 800a310:	dd403315 	stw	r21,204(sp)
 800a314:	dd003215 	stw	r20,200(sp)
 800a318:	dc803015 	stw	r18,192(sp)
 800a31c:	dc402f15 	stw	r17,188(sp)
 800a320:	dc002e15 	stw	r16,184(sp)
 800a324:	d9402315 	stw	r5,140(sp)
 800a328:	d9002715 	stw	r4,156(sp)
 800a32c:	1080200c 	andi	r2,r2,128
 800a330:	d9c02415 	stw	r7,144(sp)
 800a334:	3027883a 	mov	r19,r6
 800a338:	10000226 	beq	r2,zero,800a344 <___svfiprintf_internal_r+0x50>
 800a33c:	28800417 	ldw	r2,16(r5)
 800a340:	10046d26 	beq	r2,zero,800b4f8 <___svfiprintf_internal_r+0x1204>
 800a344:	d8801a04 	addi	r2,sp,104
 800a348:	d8c019c4 	addi	r3,sp,103
 800a34c:	05820074 	movhi	r22,2049
 800a350:	10c9c83a 	sub	r4,r2,r3
 800a354:	b5910104 	addi	r22,r22,17412
 800a358:	d8801e15 	stw	r2,120(sp)
 800a35c:	d8c01f15 	stw	r3,124(sp)
 800a360:	dec01a15 	stw	sp,104(sp)
 800a364:	d8001c15 	stw	zero,112(sp)
 800a368:	d8001b15 	stw	zero,108(sp)
 800a36c:	d811883a 	mov	r8,sp
 800a370:	d8002915 	stw	zero,164(sp)
 800a374:	d8002615 	stw	zero,152(sp)
 800a378:	d9002c15 	stw	r4,176(sp)
 800a37c:	98800007 	ldb	r2,0(r19)
 800a380:	10031426 	beq	r2,zero,800afd4 <___svfiprintf_internal_r+0xce0>
 800a384:	00c00944 	movi	r3,37
 800a388:	9825883a 	mov	r18,r19
 800a38c:	10c0021e 	bne	r2,r3,800a398 <___svfiprintf_internal_r+0xa4>
 800a390:	00001406 	br	800a3e4 <___svfiprintf_internal_r+0xf0>
 800a394:	10c00326 	beq	r2,r3,800a3a4 <___svfiprintf_internal_r+0xb0>
 800a398:	94800044 	addi	r18,r18,1
 800a39c:	90800007 	ldb	r2,0(r18)
 800a3a0:	103ffc1e 	bne	r2,zero,800a394 <__alt_data_end+0xfc00a394>
 800a3a4:	94e1c83a 	sub	r16,r18,r19
 800a3a8:	80000e26 	beq	r16,zero,800a3e4 <___svfiprintf_internal_r+0xf0>
 800a3ac:	d8c01c17 	ldw	r3,112(sp)
 800a3b0:	d8801b17 	ldw	r2,108(sp)
 800a3b4:	44c00015 	stw	r19,0(r8)
 800a3b8:	1c07883a 	add	r3,r3,r16
 800a3bc:	10800044 	addi	r2,r2,1
 800a3c0:	d8c01c15 	stw	r3,112(sp)
 800a3c4:	44000115 	stw	r16,4(r8)
 800a3c8:	d8801b15 	stw	r2,108(sp)
 800a3cc:	00c001c4 	movi	r3,7
 800a3d0:	18835c16 	blt	r3,r2,800b144 <___svfiprintf_internal_r+0xe50>
 800a3d4:	42000204 	addi	r8,r8,8
 800a3d8:	d9402617 	ldw	r5,152(sp)
 800a3dc:	2c0b883a 	add	r5,r5,r16
 800a3e0:	d9402615 	stw	r5,152(sp)
 800a3e4:	90800007 	ldb	r2,0(r18)
 800a3e8:	1002fc26 	beq	r2,zero,800afdc <___svfiprintf_internal_r+0xce8>
 800a3ec:	0023883a 	mov	r17,zero
 800a3f0:	00bfffc4 	movi	r2,-1
 800a3f4:	0021883a 	mov	r16,zero
 800a3f8:	94c00044 	addi	r19,r18,1
 800a3fc:	90c00047 	ldb	r3,1(r18)
 800a400:	dc402105 	stb	r17,132(sp)
 800a404:	d8001d85 	stb	zero,118(sp)
 800a408:	002b883a 	mov	r21,zero
 800a40c:	d8802015 	stw	r2,128(sp)
 800a410:	d8002515 	stw	zero,148(sp)
 800a414:	04801604 	movi	r18,88
 800a418:	05000244 	movi	r20,9
 800a41c:	402f883a 	mov	r23,r8
 800a420:	8023883a 	mov	r17,r16
 800a424:	9cc00044 	addi	r19,r19,1
 800a428:	18bff804 	addi	r2,r3,-32
 800a42c:	9081fb36 	bltu	r18,r2,800ac1c <___svfiprintf_internal_r+0x928>
 800a430:	100490ba 	slli	r2,r2,2
 800a434:	01020074 	movhi	r4,2049
 800a438:	21291204 	addi	r4,r4,-23480
 800a43c:	1105883a 	add	r2,r2,r4
 800a440:	10800017 	ldw	r2,0(r2)
 800a444:	1000683a 	jmp	r2
 800a448:	0800a648 	cmpgei	zero,at,665
 800a44c:	0800ac1c 	xori	zero,at,688
 800a450:	0800ac1c 	xori	zero,at,688
 800a454:	0800a63c 	xorhi	zero,at,664
 800a458:	0800ac1c 	xori	zero,at,688
 800a45c:	0800ac1c 	xori	zero,at,688
 800a460:	0800ac1c 	xori	zero,at,688
 800a464:	0800ac1c 	xori	zero,at,688
 800a468:	0800ac1c 	xori	zero,at,688
 800a46c:	0800ac1c 	xori	zero,at,688
 800a470:	0800a5ac 	andhi	zero,at,662
 800a474:	0800a7a8 	cmpgeui	zero,at,670
 800a478:	0800ac1c 	xori	zero,at,688
 800a47c:	0800a5d4 	ori	zero,at,663
 800a480:	0800ac58 	cmpnei	zero,at,689
 800a484:	0800ac1c 	xori	zero,at,688
 800a488:	0800ac4c 	andi	zero,at,689
 800a48c:	0800abe0 	cmpeqi	zero,at,687
 800a490:	0800abe0 	cmpeqi	zero,at,687
 800a494:	0800abe0 	cmpeqi	zero,at,687
 800a498:	0800abe0 	cmpeqi	zero,at,687
 800a49c:	0800abe0 	cmpeqi	zero,at,687
 800a4a0:	0800abe0 	cmpeqi	zero,at,687
 800a4a4:	0800abe0 	cmpeqi	zero,at,687
 800a4a8:	0800abe0 	cmpeqi	zero,at,687
 800a4ac:	0800abe0 	cmpeqi	zero,at,687
 800a4b0:	0800ac1c 	xori	zero,at,688
 800a4b4:	0800ac1c 	xori	zero,at,688
 800a4b8:	0800ac1c 	xori	zero,at,688
 800a4bc:	0800ac1c 	xori	zero,at,688
 800a4c0:	0800ac1c 	xori	zero,at,688
 800a4c4:	0800ac1c 	xori	zero,at,688
 800a4c8:	0800ac1c 	xori	zero,at,688
 800a4cc:	0800ac1c 	xori	zero,at,688
 800a4d0:	0800ac1c 	xori	zero,at,688
 800a4d4:	0800ac1c 	xori	zero,at,688
 800a4d8:	0800ab64 	muli	zero,at,685
 800a4dc:	0800ac1c 	xori	zero,at,688
 800a4e0:	0800ac1c 	xori	zero,at,688
 800a4e4:	0800ac1c 	xori	zero,at,688
 800a4e8:	0800ac1c 	xori	zero,at,688
 800a4ec:	0800ac1c 	xori	zero,at,688
 800a4f0:	0800ac1c 	xori	zero,at,688
 800a4f4:	0800ac1c 	xori	zero,at,688
 800a4f8:	0800ac1c 	xori	zero,at,688
 800a4fc:	0800ac1c 	xori	zero,at,688
 800a500:	0800ac1c 	xori	zero,at,688
 800a504:	0800ad14 	ori	zero,at,692
 800a508:	0800ac1c 	xori	zero,at,688
 800a50c:	0800ac1c 	xori	zero,at,688
 800a510:	0800ac1c 	xori	zero,at,688
 800a514:	0800ac1c 	xori	zero,at,688
 800a518:	0800ac1c 	xori	zero,at,688
 800a51c:	0800aca0 	cmpeqi	zero,at,690
 800a520:	0800ac1c 	xori	zero,at,688
 800a524:	0800ac1c 	xori	zero,at,688
 800a528:	0800a9a0 	cmpeqi	zero,at,678
 800a52c:	0800ac1c 	xori	zero,at,688
 800a530:	0800ac1c 	xori	zero,at,688
 800a534:	0800ac1c 	xori	zero,at,688
 800a538:	0800ac1c 	xori	zero,at,688
 800a53c:	0800ac1c 	xori	zero,at,688
 800a540:	0800ac1c 	xori	zero,at,688
 800a544:	0800ac1c 	xori	zero,at,688
 800a548:	0800ac1c 	xori	zero,at,688
 800a54c:	0800ac1c 	xori	zero,at,688
 800a550:	0800ac1c 	xori	zero,at,688
 800a554:	0800a86c 	andhi	zero,at,673
 800a558:	0800aa50 	cmplti	zero,at,681
 800a55c:	0800ac1c 	xori	zero,at,688
 800a560:	0800ac1c 	xori	zero,at,688
 800a564:	0800ac1c 	xori	zero,at,688
 800a568:	0800aa44 	addi	zero,at,681
 800a56c:	0800aa50 	cmplti	zero,at,681
 800a570:	0800ac1c 	xori	zero,at,688
 800a574:	0800ac1c 	xori	zero,at,688
 800a578:	0800aa30 	cmpltui	zero,at,680
 800a57c:	0800ac1c 	xori	zero,at,688
 800a580:	0800a9f0 	cmpltui	zero,at,679
 800a584:	0800a7bc 	xorhi	zero,at,670
 800a588:	0800a5e0 	cmpeqi	zero,at,663
 800a58c:	0800ab58 	cmpnei	zero,at,685
 800a590:	0800ac1c 	xori	zero,at,688
 800a594:	0800ab04 	addi	zero,at,684
 800a598:	0800ac1c 	xori	zero,at,688
 800a59c:	0800a720 	cmpeqi	zero,at,668
 800a5a0:	0800ac1c 	xori	zero,at,688
 800a5a4:	0800ac1c 	xori	zero,at,688
 800a5a8:	0800a66c 	andhi	zero,at,665
 800a5ac:	d9002417 	ldw	r4,144(sp)
 800a5b0:	d9402417 	ldw	r5,144(sp)
 800a5b4:	21000017 	ldw	r4,0(r4)
 800a5b8:	28800104 	addi	r2,r5,4
 800a5bc:	d9002515 	stw	r4,148(sp)
 800a5c0:	20032b0e 	bge	r4,zero,800b270 <___svfiprintf_internal_r+0xf7c>
 800a5c4:	d8c02517 	ldw	r3,148(sp)
 800a5c8:	d8802415 	stw	r2,144(sp)
 800a5cc:	00c7c83a 	sub	r3,zero,r3
 800a5d0:	d8c02515 	stw	r3,148(sp)
 800a5d4:	8c400114 	ori	r17,r17,4
 800a5d8:	98c00007 	ldb	r3,0(r19)
 800a5dc:	003f9106 	br	800a424 <__alt_data_end+0xfc00a424>
 800a5e0:	00800c04 	movi	r2,48
 800a5e4:	d9402417 	ldw	r5,144(sp)
 800a5e8:	d9002017 	ldw	r4,128(sp)
 800a5ec:	d8801d05 	stb	r2,116(sp)
 800a5f0:	00801e04 	movi	r2,120
 800a5f4:	d8801d45 	stb	r2,117(sp)
 800a5f8:	d8001d85 	stb	zero,118(sp)
 800a5fc:	b811883a 	mov	r8,r23
 800a600:	28c00104 	addi	r3,r5,4
 800a604:	2c800017 	ldw	r18,0(r5)
 800a608:	0029883a 	mov	r20,zero
 800a60c:	88800094 	ori	r2,r17,2
 800a610:	20036316 	blt	r4,zero,800b3a0 <___svfiprintf_internal_r+0x10ac>
 800a614:	00bfdfc4 	movi	r2,-129
 800a618:	88a0703a 	and	r16,r17,r2
 800a61c:	d8c02415 	stw	r3,144(sp)
 800a620:	84000094 	ori	r16,r16,2
 800a624:	90031c26 	beq	r18,zero,800b298 <___svfiprintf_internal_r+0xfa4>
 800a628:	01420074 	movhi	r5,2049
 800a62c:	29509804 	addi	r5,r5,16992
 800a630:	002b883a 	mov	r21,zero
 800a634:	d9402915 	stw	r5,164(sp)
 800a638:	00002906 	br	800a6e0 <___svfiprintf_internal_r+0x3ec>
 800a63c:	8c400054 	ori	r17,r17,1
 800a640:	98c00007 	ldb	r3,0(r19)
 800a644:	003f7706 	br	800a424 <__alt_data_end+0xfc00a424>
 800a648:	a8803fcc 	andi	r2,r21,255
 800a64c:	1080201c 	xori	r2,r2,128
 800a650:	10bfe004 	addi	r2,r2,-128
 800a654:	10032a1e 	bne	r2,zero,800b300 <___svfiprintf_internal_r+0x100c>
 800a658:	00c00044 	movi	r3,1
 800a65c:	d8c02105 	stb	r3,132(sp)
 800a660:	05400804 	movi	r21,32
 800a664:	98c00007 	ldb	r3,0(r19)
 800a668:	003f6e06 	br	800a424 <__alt_data_end+0xfc00a424>
 800a66c:	8821883a 	mov	r16,r17
 800a670:	dc402103 	ldbu	r17,132(sp)
 800a674:	b811883a 	mov	r8,r23
 800a678:	8c403fcc 	andi	r17,r17,255
 800a67c:	8803f01e 	bne	r17,zero,800b640 <___svfiprintf_internal_r+0x134c>
 800a680:	00820074 	movhi	r2,2049
 800a684:	10909804 	addi	r2,r2,16992
 800a688:	d8802915 	stw	r2,164(sp)
 800a68c:	8080080c 	andi	r2,r16,32
 800a690:	1000cd26 	beq	r2,zero,800a9c8 <___svfiprintf_internal_r+0x6d4>
 800a694:	d9002417 	ldw	r4,144(sp)
 800a698:	24800017 	ldw	r18,0(r4)
 800a69c:	25000117 	ldw	r20,4(r4)
 800a6a0:	21000204 	addi	r4,r4,8
 800a6a4:	d9002415 	stw	r4,144(sp)
 800a6a8:	8080004c 	andi	r2,r16,1
 800a6ac:	1002c726 	beq	r2,zero,800b1cc <___svfiprintf_internal_r+0xed8>
 800a6b0:	9504b03a 	or	r2,r18,r20
 800a6b4:	1003061e 	bne	r2,zero,800b2d0 <___svfiprintf_internal_r+0xfdc>
 800a6b8:	d9002017 	ldw	r4,128(sp)
 800a6bc:	d8001d85 	stb	zero,118(sp)
 800a6c0:	20033e16 	blt	r4,zero,800b3bc <___svfiprintf_internal_r+0x10c8>
 800a6c4:	00bfdfc4 	movi	r2,-129
 800a6c8:	80a0703a 	and	r16,r16,r2
 800a6cc:	d9402017 	ldw	r5,128(sp)
 800a6d0:	002b883a 	mov	r21,zero
 800a6d4:	28002826 	beq	r5,zero,800a778 <___svfiprintf_internal_r+0x484>
 800a6d8:	0025883a 	mov	r18,zero
 800a6dc:	0029883a 	mov	r20,zero
 800a6e0:	d9002917 	ldw	r4,164(sp)
 800a6e4:	dc401a04 	addi	r17,sp,104
 800a6e8:	908003cc 	andi	r2,r18,15
 800a6ec:	a006973a 	slli	r3,r20,28
 800a6f0:	2085883a 	add	r2,r4,r2
 800a6f4:	9024d13a 	srli	r18,r18,4
 800a6f8:	10800003 	ldbu	r2,0(r2)
 800a6fc:	a028d13a 	srli	r20,r20,4
 800a700:	8c7fffc4 	addi	r17,r17,-1
 800a704:	1ca4b03a 	or	r18,r3,r18
 800a708:	88800005 	stb	r2,0(r17)
 800a70c:	9504b03a 	or	r2,r18,r20
 800a710:	103ff51e 	bne	r2,zero,800a6e8 <__alt_data_end+0xfc00a6e8>
 800a714:	d8801e17 	ldw	r2,120(sp)
 800a718:	1469c83a 	sub	r20,r2,r17
 800a71c:	00001906 	br	800a784 <___svfiprintf_internal_r+0x490>
 800a720:	8821883a 	mov	r16,r17
 800a724:	dc402103 	ldbu	r17,132(sp)
 800a728:	b811883a 	mov	r8,r23
 800a72c:	8c403fcc 	andi	r17,r17,255
 800a730:	8803d01e 	bne	r17,zero,800b674 <___svfiprintf_internal_r+0x1380>
 800a734:	8080080c 	andi	r2,r16,32
 800a738:	10016126 	beq	r2,zero,800acc0 <___svfiprintf_internal_r+0x9cc>
 800a73c:	d9002417 	ldw	r4,144(sp)
 800a740:	d9402017 	ldw	r5,128(sp)
 800a744:	d8001d85 	stb	zero,118(sp)
 800a748:	20c00204 	addi	r3,r4,8
 800a74c:	24800017 	ldw	r18,0(r4)
 800a750:	25000117 	ldw	r20,4(r4)
 800a754:	28030f16 	blt	r5,zero,800b394 <___svfiprintf_internal_r+0x10a0>
 800a758:	013fdfc4 	movi	r4,-129
 800a75c:	9504b03a 	or	r2,r18,r20
 800a760:	d8c02415 	stw	r3,144(sp)
 800a764:	8120703a 	and	r16,r16,r4
 800a768:	002b883a 	mov	r21,zero
 800a76c:	1000cd1e 	bne	r2,zero,800aaa4 <___svfiprintf_internal_r+0x7b0>
 800a770:	d8c02017 	ldw	r3,128(sp)
 800a774:	1803141e 	bne	r3,zero,800b3c8 <___svfiprintf_internal_r+0x10d4>
 800a778:	d8002015 	stw	zero,128(sp)
 800a77c:	0029883a 	mov	r20,zero
 800a780:	dc401a04 	addi	r17,sp,104
 800a784:	dc802017 	ldw	r18,128(sp)
 800a788:	9500010e 	bge	r18,r20,800a790 <___svfiprintf_internal_r+0x49c>
 800a78c:	a025883a 	mov	r18,r20
 800a790:	ad403fcc 	andi	r21,r21,255
 800a794:	ad40201c 	xori	r21,r21,128
 800a798:	ad7fe004 	addi	r21,r21,-128
 800a79c:	a8003f26 	beq	r21,zero,800a89c <___svfiprintf_internal_r+0x5a8>
 800a7a0:	94800044 	addi	r18,r18,1
 800a7a4:	00003d06 	br	800a89c <___svfiprintf_internal_r+0x5a8>
 800a7a8:	00c00044 	movi	r3,1
 800a7ac:	d8c02105 	stb	r3,132(sp)
 800a7b0:	05400ac4 	movi	r21,43
 800a7b4:	98c00007 	ldb	r3,0(r19)
 800a7b8:	003f1a06 	br	800a424 <__alt_data_end+0xfc00a424>
 800a7bc:	8821883a 	mov	r16,r17
 800a7c0:	dc402103 	ldbu	r17,132(sp)
 800a7c4:	b811883a 	mov	r8,r23
 800a7c8:	8c403fcc 	andi	r17,r17,255
 800a7cc:	8803a71e 	bne	r17,zero,800b66c <___svfiprintf_internal_r+0x1378>
 800a7d0:	8080080c 	andi	r2,r16,32
 800a7d4:	10015726 	beq	r2,zero,800ad34 <___svfiprintf_internal_r+0xa40>
 800a7d8:	d8c02417 	ldw	r3,144(sp)
 800a7dc:	d9002017 	ldw	r4,128(sp)
 800a7e0:	d8001d85 	stb	zero,118(sp)
 800a7e4:	18800204 	addi	r2,r3,8
 800a7e8:	1c800017 	ldw	r18,0(r3)
 800a7ec:	1d000117 	ldw	r20,4(r3)
 800a7f0:	2002db16 	blt	r4,zero,800b360 <___svfiprintf_internal_r+0x106c>
 800a7f4:	013fdfc4 	movi	r4,-129
 800a7f8:	9506b03a 	or	r3,r18,r20
 800a7fc:	d8802415 	stw	r2,144(sp)
 800a800:	8120703a 	and	r16,r16,r4
 800a804:	18015826 	beq	r3,zero,800ad68 <___svfiprintf_internal_r+0xa74>
 800a808:	002b883a 	mov	r21,zero
 800a80c:	dc401a04 	addi	r17,sp,104
 800a810:	9006d0fa 	srli	r3,r18,3
 800a814:	a008977a 	slli	r4,r20,29
 800a818:	a028d0fa 	srli	r20,r20,3
 800a81c:	948001cc 	andi	r18,r18,7
 800a820:	90800c04 	addi	r2,r18,48
 800a824:	8c7fffc4 	addi	r17,r17,-1
 800a828:	20e4b03a 	or	r18,r4,r3
 800a82c:	88800005 	stb	r2,0(r17)
 800a830:	9506b03a 	or	r3,r18,r20
 800a834:	183ff61e 	bne	r3,zero,800a810 <__alt_data_end+0xfc00a810>
 800a838:	80c0004c 	andi	r3,r16,1
 800a83c:	18028926 	beq	r3,zero,800b264 <___svfiprintf_internal_r+0xf70>
 800a840:	10803fcc 	andi	r2,r2,255
 800a844:	1080201c 	xori	r2,r2,128
 800a848:	10bfe004 	addi	r2,r2,-128
 800a84c:	00c00c04 	movi	r3,48
 800a850:	10ffb026 	beq	r2,r3,800a714 <__alt_data_end+0xfc00a714>
 800a854:	88ffffc5 	stb	r3,-1(r17)
 800a858:	d8c01e17 	ldw	r3,120(sp)
 800a85c:	88bfffc4 	addi	r2,r17,-1
 800a860:	1023883a 	mov	r17,r2
 800a864:	18a9c83a 	sub	r20,r3,r2
 800a868:	003fc606 	br	800a784 <__alt_data_end+0xfc00a784>
 800a86c:	d8c02417 	ldw	r3,144(sp)
 800a870:	04800044 	movi	r18,1
 800a874:	8821883a 	mov	r16,r17
 800a878:	18800017 	ldw	r2,0(r3)
 800a87c:	18c00104 	addi	r3,r3,4
 800a880:	b811883a 	mov	r8,r23
 800a884:	d8001d85 	stb	zero,118(sp)
 800a888:	d8801005 	stb	r2,64(sp)
 800a88c:	d8c02415 	stw	r3,144(sp)
 800a890:	9029883a 	mov	r20,r18
 800a894:	dc401004 	addi	r17,sp,64
 800a898:	d8002015 	stw	zero,128(sp)
 800a89c:	80c0008c 	andi	r3,r16,2
 800a8a0:	d8c02115 	stw	r3,132(sp)
 800a8a4:	18000126 	beq	r3,zero,800a8ac <___svfiprintf_internal_r+0x5b8>
 800a8a8:	94800084 	addi	r18,r18,2
 800a8ac:	80c0210c 	andi	r3,r16,132
 800a8b0:	d8c02215 	stw	r3,136(sp)
 800a8b4:	1801321e 	bne	r3,zero,800ad80 <___svfiprintf_internal_r+0xa8c>
 800a8b8:	d9002517 	ldw	r4,148(sp)
 800a8bc:	24b9c83a 	sub	fp,r4,r18
 800a8c0:	07012f0e 	bge	zero,fp,800ad80 <___svfiprintf_internal_r+0xa8c>
 800a8c4:	02400404 	movi	r9,16
 800a8c8:	d8c01c17 	ldw	r3,112(sp)
 800a8cc:	d8801b17 	ldw	r2,108(sp)
 800a8d0:	4f03250e 	bge	r9,fp,800b568 <___svfiprintf_internal_r+0x1274>
 800a8d4:	01020074 	movhi	r4,2049
 800a8d8:	21110504 	addi	r4,r4,17428
 800a8dc:	dc002a15 	stw	r16,168(sp)
 800a8e0:	dc402b15 	stw	r17,172(sp)
 800a8e4:	d9002815 	stw	r4,160(sp)
 800a8e8:	e023883a 	mov	r17,fp
 800a8ec:	482f883a 	mov	r23,r9
 800a8f0:	9839883a 	mov	fp,r19
 800a8f4:	054001c4 	movi	r21,7
 800a8f8:	9027883a 	mov	r19,r18
 800a8fc:	dc002717 	ldw	r16,156(sp)
 800a900:	dc802317 	ldw	r18,140(sp)
 800a904:	00000306 	br	800a914 <___svfiprintf_internal_r+0x620>
 800a908:	8c7ffc04 	addi	r17,r17,-16
 800a90c:	42000204 	addi	r8,r8,8
 800a910:	bc40130e 	bge	r23,r17,800a960 <___svfiprintf_internal_r+0x66c>
 800a914:	01420074 	movhi	r5,2049
 800a918:	18c00404 	addi	r3,r3,16
 800a91c:	10800044 	addi	r2,r2,1
 800a920:	29510504 	addi	r5,r5,17428
 800a924:	41400015 	stw	r5,0(r8)
 800a928:	45c00115 	stw	r23,4(r8)
 800a92c:	d8c01c15 	stw	r3,112(sp)
 800a930:	d8801b15 	stw	r2,108(sp)
 800a934:	a8bff40e 	bge	r21,r2,800a908 <__alt_data_end+0xfc00a908>
 800a938:	d9801a04 	addi	r6,sp,104
 800a93c:	900b883a 	mov	r5,r18
 800a940:	8009883a 	mov	r4,r16
 800a944:	800a1240 	call	800a124 <__ssprint_r>
 800a948:	1001aa1e 	bne	r2,zero,800aff4 <___svfiprintf_internal_r+0xd00>
 800a94c:	8c7ffc04 	addi	r17,r17,-16
 800a950:	d8c01c17 	ldw	r3,112(sp)
 800a954:	d8801b17 	ldw	r2,108(sp)
 800a958:	d811883a 	mov	r8,sp
 800a95c:	bc7fed16 	blt	r23,r17,800a914 <__alt_data_end+0xfc00a914>
 800a960:	9825883a 	mov	r18,r19
 800a964:	dc002a17 	ldw	r16,168(sp)
 800a968:	e027883a 	mov	r19,fp
 800a96c:	8839883a 	mov	fp,r17
 800a970:	dc402b17 	ldw	r17,172(sp)
 800a974:	d9002817 	ldw	r4,160(sp)
 800a978:	e0c7883a 	add	r3,fp,r3
 800a97c:	10800044 	addi	r2,r2,1
 800a980:	41000015 	stw	r4,0(r8)
 800a984:	47000115 	stw	fp,4(r8)
 800a988:	d8c01c15 	stw	r3,112(sp)
 800a98c:	d8801b15 	stw	r2,108(sp)
 800a990:	010001c4 	movi	r4,7
 800a994:	20821616 	blt	r4,r2,800b1f0 <___svfiprintf_internal_r+0xefc>
 800a998:	42000204 	addi	r8,r8,8
 800a99c:	0000fa06 	br	800ad88 <___svfiprintf_internal_r+0xa94>
 800a9a0:	8821883a 	mov	r16,r17
 800a9a4:	dc402103 	ldbu	r17,132(sp)
 800a9a8:	b811883a 	mov	r8,r23
 800a9ac:	8c403fcc 	andi	r17,r17,255
 800a9b0:	8803361e 	bne	r17,zero,800b68c <___svfiprintf_internal_r+0x1398>
 800a9b4:	01420074 	movhi	r5,2049
 800a9b8:	29509304 	addi	r5,r5,16972
 800a9bc:	d9402915 	stw	r5,164(sp)
 800a9c0:	8080080c 	andi	r2,r16,32
 800a9c4:	103f331e 	bne	r2,zero,800a694 <__alt_data_end+0xfc00a694>
 800a9c8:	8080040c 	andi	r2,r16,16
 800a9cc:	1002551e 	bne	r2,zero,800b324 <___svfiprintf_internal_r+0x1030>
 800a9d0:	8080100c 	andi	r2,r16,64
 800a9d4:	1002a626 	beq	r2,zero,800b470 <___svfiprintf_internal_r+0x117c>
 800a9d8:	d8802417 	ldw	r2,144(sp)
 800a9dc:	0029883a 	mov	r20,zero
 800a9e0:	1480000b 	ldhu	r18,0(r2)
 800a9e4:	10800104 	addi	r2,r2,4
 800a9e8:	d8802415 	stw	r2,144(sp)
 800a9ec:	003f2e06 	br	800a6a8 <__alt_data_end+0xfc00a6a8>
 800a9f0:	8821883a 	mov	r16,r17
 800a9f4:	dc402103 	ldbu	r17,132(sp)
 800a9f8:	b811883a 	mov	r8,r23
 800a9fc:	8c403fcc 	andi	r17,r17,255
 800aa00:	88030b1e 	bne	r17,zero,800b630 <___svfiprintf_internal_r+0x133c>
 800aa04:	8080080c 	andi	r2,r16,32
 800aa08:	1002271e 	bne	r2,zero,800b2a8 <___svfiprintf_internal_r+0xfb4>
 800aa0c:	8080040c 	andi	r2,r16,16
 800aa10:	10028e26 	beq	r2,zero,800b44c <___svfiprintf_internal_r+0x1158>
 800aa14:	d8c02417 	ldw	r3,144(sp)
 800aa18:	d9002617 	ldw	r4,152(sp)
 800aa1c:	18800017 	ldw	r2,0(r3)
 800aa20:	18c00104 	addi	r3,r3,4
 800aa24:	d8c02415 	stw	r3,144(sp)
 800aa28:	11000015 	stw	r4,0(r2)
 800aa2c:	003e5306 	br	800a37c <__alt_data_end+0xfc00a37c>
 800aa30:	98c00007 	ldb	r3,0(r19)
 800aa34:	01401b04 	movi	r5,108
 800aa38:	19424f26 	beq	r3,r5,800b378 <___svfiprintf_internal_r+0x1084>
 800aa3c:	8c400414 	ori	r17,r17,16
 800aa40:	003e7806 	br	800a424 <__alt_data_end+0xfc00a424>
 800aa44:	8c401014 	ori	r17,r17,64
 800aa48:	98c00007 	ldb	r3,0(r19)
 800aa4c:	003e7506 	br	800a424 <__alt_data_end+0xfc00a424>
 800aa50:	8821883a 	mov	r16,r17
 800aa54:	dc402103 	ldbu	r17,132(sp)
 800aa58:	b811883a 	mov	r8,r23
 800aa5c:	8c403fcc 	andi	r17,r17,255
 800aa60:	8802fe1e 	bne	r17,zero,800b65c <___svfiprintf_internal_r+0x1368>
 800aa64:	8080080c 	andi	r2,r16,32
 800aa68:	10004626 	beq	r2,zero,800ab84 <___svfiprintf_internal_r+0x890>
 800aa6c:	d9002417 	ldw	r4,144(sp)
 800aa70:	20800117 	ldw	r2,4(r4)
 800aa74:	24800017 	ldw	r18,0(r4)
 800aa78:	21000204 	addi	r4,r4,8
 800aa7c:	d9002415 	stw	r4,144(sp)
 800aa80:	1029883a 	mov	r20,r2
 800aa84:	10004a16 	blt	r2,zero,800abb0 <___svfiprintf_internal_r+0x8bc>
 800aa88:	d9002017 	ldw	r4,128(sp)
 800aa8c:	dd401d83 	ldbu	r21,118(sp)
 800aa90:	2001eb16 	blt	r4,zero,800b240 <___svfiprintf_internal_r+0xf4c>
 800aa94:	00ffdfc4 	movi	r3,-129
 800aa98:	9504b03a 	or	r2,r18,r20
 800aa9c:	80e0703a 	and	r16,r16,r3
 800aaa0:	103f3326 	beq	r2,zero,800a770 <__alt_data_end+0xfc00a770>
 800aaa4:	a0009426 	beq	r20,zero,800acf8 <___svfiprintf_internal_r+0xa04>
 800aaa8:	dc401a04 	addi	r17,sp,104
 800aaac:	402f883a 	mov	r23,r8
 800aab0:	9009883a 	mov	r4,r18
 800aab4:	a00b883a 	mov	r5,r20
 800aab8:	01800284 	movi	r6,10
 800aabc:	000f883a 	mov	r7,zero
 800aac0:	800e9680 	call	800e968 <__umoddi3>
 800aac4:	10800c04 	addi	r2,r2,48
 800aac8:	8c7fffc4 	addi	r17,r17,-1
 800aacc:	9009883a 	mov	r4,r18
 800aad0:	a00b883a 	mov	r5,r20
 800aad4:	88800005 	stb	r2,0(r17)
 800aad8:	01800284 	movi	r6,10
 800aadc:	000f883a 	mov	r7,zero
 800aae0:	800e36c0 	call	800e36c <__udivdi3>
 800aae4:	1025883a 	mov	r18,r2
 800aae8:	10c4b03a 	or	r2,r2,r3
 800aaec:	1829883a 	mov	r20,r3
 800aaf0:	103fef1e 	bne	r2,zero,800aab0 <__alt_data_end+0xfc00aab0>
 800aaf4:	d9001e17 	ldw	r4,120(sp)
 800aaf8:	b811883a 	mov	r8,r23
 800aafc:	2469c83a 	sub	r20,r4,r17
 800ab00:	003f2006 	br	800a784 <__alt_data_end+0xfc00a784>
 800ab04:	d8802417 	ldw	r2,144(sp)
 800ab08:	8821883a 	mov	r16,r17
 800ab0c:	d8001d85 	stb	zero,118(sp)
 800ab10:	14400017 	ldw	r17,0(r2)
 800ab14:	b811883a 	mov	r8,r23
 800ab18:	15c00104 	addi	r23,r2,4
 800ab1c:	88026c26 	beq	r17,zero,800b4d0 <___svfiprintf_internal_r+0x11dc>
 800ab20:	d8c02017 	ldw	r3,128(sp)
 800ab24:	18025f16 	blt	r3,zero,800b4a4 <___svfiprintf_internal_r+0x11b0>
 800ab28:	180d883a 	mov	r6,r3
 800ab2c:	000b883a 	mov	r5,zero
 800ab30:	8809883a 	mov	r4,r17
 800ab34:	da002d15 	stw	r8,180(sp)
 800ab38:	8008b800 	call	8008b80 <memchr>
 800ab3c:	da002d17 	ldw	r8,180(sp)
 800ab40:	1002a526 	beq	r2,zero,800b5d8 <___svfiprintf_internal_r+0x12e4>
 800ab44:	1469c83a 	sub	r20,r2,r17
 800ab48:	dd401d83 	ldbu	r21,118(sp)
 800ab4c:	ddc02415 	stw	r23,144(sp)
 800ab50:	d8002015 	stw	zero,128(sp)
 800ab54:	003f0b06 	br	800a784 <__alt_data_end+0xfc00a784>
 800ab58:	8c400814 	ori	r17,r17,32
 800ab5c:	98c00007 	ldb	r3,0(r19)
 800ab60:	003e3006 	br	800a424 <__alt_data_end+0xfc00a424>
 800ab64:	8821883a 	mov	r16,r17
 800ab68:	dc402103 	ldbu	r17,132(sp)
 800ab6c:	b811883a 	mov	r8,r23
 800ab70:	8c403fcc 	andi	r17,r17,255
 800ab74:	8802b01e 	bne	r17,zero,800b638 <___svfiprintf_internal_r+0x1344>
 800ab78:	84000414 	ori	r16,r16,16
 800ab7c:	8080080c 	andi	r2,r16,32
 800ab80:	103fba1e 	bne	r2,zero,800aa6c <__alt_data_end+0xfc00aa6c>
 800ab84:	8080040c 	andi	r2,r16,16
 800ab88:	1001df1e 	bne	r2,zero,800b308 <___svfiprintf_internal_r+0x1014>
 800ab8c:	8080100c 	andi	r2,r16,64
 800ab90:	10023d26 	beq	r2,zero,800b488 <___svfiprintf_internal_r+0x1194>
 800ab94:	d8802417 	ldw	r2,144(sp)
 800ab98:	1480000f 	ldh	r18,0(r2)
 800ab9c:	10800104 	addi	r2,r2,4
 800aba0:	d8802415 	stw	r2,144(sp)
 800aba4:	9029d7fa 	srai	r20,r18,31
 800aba8:	a005883a 	mov	r2,r20
 800abac:	103fb60e 	bge	r2,zero,800aa88 <__alt_data_end+0xfc00aa88>
 800abb0:	d9402017 	ldw	r5,128(sp)
 800abb4:	04a5c83a 	sub	r18,zero,r18
 800abb8:	05400b44 	movi	r21,45
 800abbc:	9004c03a 	cmpne	r2,r18,zero
 800abc0:	0529c83a 	sub	r20,zero,r20
 800abc4:	dd401d85 	stb	r21,118(sp)
 800abc8:	a0a9c83a 	sub	r20,r20,r2
 800abcc:	28026c16 	blt	r5,zero,800b580 <___svfiprintf_internal_r+0x128c>
 800abd0:	00bfdfc4 	movi	r2,-129
 800abd4:	80a0703a 	and	r16,r16,r2
 800abd8:	a03fb31e 	bne	r20,zero,800aaa8 <__alt_data_end+0xfc00aaa8>
 800abdc:	00004606 	br	800acf8 <___svfiprintf_internal_r+0xa04>
 800abe0:	9839883a 	mov	fp,r19
 800abe4:	d8002515 	stw	zero,148(sp)
 800abe8:	1c3ff404 	addi	r16,r3,-48
 800abec:	0009883a 	mov	r4,zero
 800abf0:	01400284 	movi	r5,10
 800abf4:	80010a00 	call	80010a0 <__mulsi3>
 800abf8:	e0c00007 	ldb	r3,0(fp)
 800abfc:	8089883a 	add	r4,r16,r2
 800ac00:	9cc00044 	addi	r19,r19,1
 800ac04:	1c3ff404 	addi	r16,r3,-48
 800ac08:	9839883a 	mov	fp,r19
 800ac0c:	a43ff82e 	bgeu	r20,r16,800abf0 <__alt_data_end+0xfc00abf0>
 800ac10:	d9002515 	stw	r4,148(sp)
 800ac14:	18bff804 	addi	r2,r3,-32
 800ac18:	90be052e 	bgeu	r18,r2,800a430 <__alt_data_end+0xfc00a430>
 800ac1c:	8821883a 	mov	r16,r17
 800ac20:	dc402103 	ldbu	r17,132(sp)
 800ac24:	b811883a 	mov	r8,r23
 800ac28:	8c403fcc 	andi	r17,r17,255
 800ac2c:	88028d1e 	bne	r17,zero,800b664 <___svfiprintf_internal_r+0x1370>
 800ac30:	1800ea26 	beq	r3,zero,800afdc <___svfiprintf_internal_r+0xce8>
 800ac34:	04800044 	movi	r18,1
 800ac38:	d8c01005 	stb	r3,64(sp)
 800ac3c:	d8001d85 	stb	zero,118(sp)
 800ac40:	9029883a 	mov	r20,r18
 800ac44:	dc401004 	addi	r17,sp,64
 800ac48:	003f1306 	br	800a898 <__alt_data_end+0xfc00a898>
 800ac4c:	8c402014 	ori	r17,r17,128
 800ac50:	98c00007 	ldb	r3,0(r19)
 800ac54:	003df306 	br	800a424 <__alt_data_end+0xfc00a424>
 800ac58:	98c00007 	ldb	r3,0(r19)
 800ac5c:	01000a84 	movi	r4,42
 800ac60:	9f000044 	addi	fp,r19,1
 800ac64:	19026326 	beq	r3,r4,800b5f4 <___svfiprintf_internal_r+0x1300>
 800ac68:	1c3ff404 	addi	r16,r3,-48
 800ac6c:	0009883a 	mov	r4,zero
 800ac70:	a4025636 	bltu	r20,r16,800b5cc <___svfiprintf_internal_r+0x12d8>
 800ac74:	01400284 	movi	r5,10
 800ac78:	80010a00 	call	80010a0 <__mulsi3>
 800ac7c:	e0c00007 	ldb	r3,0(fp)
 800ac80:	1409883a 	add	r4,r2,r16
 800ac84:	e4c00044 	addi	r19,fp,1
 800ac88:	1c3ff404 	addi	r16,r3,-48
 800ac8c:	9839883a 	mov	fp,r19
 800ac90:	a43ff82e 	bgeu	r20,r16,800ac74 <__alt_data_end+0xfc00ac74>
 800ac94:	20020c16 	blt	r4,zero,800b4c8 <___svfiprintf_internal_r+0x11d4>
 800ac98:	d9002015 	stw	r4,128(sp)
 800ac9c:	003de206 	br	800a428 <__alt_data_end+0xfc00a428>
 800aca0:	8821883a 	mov	r16,r17
 800aca4:	dc402103 	ldbu	r17,132(sp)
 800aca8:	b811883a 	mov	r8,r23
 800acac:	8c403fcc 	andi	r17,r17,255
 800acb0:	8802721e 	bne	r17,zero,800b67c <___svfiprintf_internal_r+0x1388>
 800acb4:	84000414 	ori	r16,r16,16
 800acb8:	8080080c 	andi	r2,r16,32
 800acbc:	103e9f1e 	bne	r2,zero,800a73c <__alt_data_end+0xfc00a73c>
 800acc0:	8080040c 	andi	r2,r16,16
 800acc4:	10015326 	beq	r2,zero,800b214 <___svfiprintf_internal_r+0xf20>
 800acc8:	d8c02417 	ldw	r3,144(sp)
 800accc:	d9002017 	ldw	r4,128(sp)
 800acd0:	d8001d85 	stb	zero,118(sp)
 800acd4:	18800104 	addi	r2,r3,4
 800acd8:	1c800017 	ldw	r18,0(r3)
 800acdc:	0029883a 	mov	r20,zero
 800ace0:	20015516 	blt	r4,zero,800b238 <___svfiprintf_internal_r+0xf44>
 800ace4:	00ffdfc4 	movi	r3,-129
 800ace8:	d8802415 	stw	r2,144(sp)
 800acec:	80e0703a 	and	r16,r16,r3
 800acf0:	002b883a 	mov	r21,zero
 800acf4:	903e9e26 	beq	r18,zero,800a770 <__alt_data_end+0xfc00a770>
 800acf8:	00800244 	movi	r2,9
 800acfc:	14bf6a36 	bltu	r2,r18,800aaa8 <__alt_data_end+0xfc00aaa8>
 800ad00:	94800c04 	addi	r18,r18,48
 800ad04:	dc8019c5 	stb	r18,103(sp)
 800ad08:	dd002c17 	ldw	r20,176(sp)
 800ad0c:	dc4019c4 	addi	r17,sp,103
 800ad10:	003e9c06 	br	800a784 <__alt_data_end+0xfc00a784>
 800ad14:	8821883a 	mov	r16,r17
 800ad18:	dc402103 	ldbu	r17,132(sp)
 800ad1c:	b811883a 	mov	r8,r23
 800ad20:	8c403fcc 	andi	r17,r17,255
 800ad24:	8802571e 	bne	r17,zero,800b684 <___svfiprintf_internal_r+0x1390>
 800ad28:	84000414 	ori	r16,r16,16
 800ad2c:	8080080c 	andi	r2,r16,32
 800ad30:	103ea91e 	bne	r2,zero,800a7d8 <__alt_data_end+0xfc00a7d8>
 800ad34:	8080040c 	andi	r2,r16,16
 800ad38:	10018026 	beq	r2,zero,800b33c <___svfiprintf_internal_r+0x1048>
 800ad3c:	d9402417 	ldw	r5,144(sp)
 800ad40:	d8c02017 	ldw	r3,128(sp)
 800ad44:	d8001d85 	stb	zero,118(sp)
 800ad48:	28800104 	addi	r2,r5,4
 800ad4c:	2c800017 	ldw	r18,0(r5)
 800ad50:	0029883a 	mov	r20,zero
 800ad54:	18018216 	blt	r3,zero,800b360 <___svfiprintf_internal_r+0x106c>
 800ad58:	00ffdfc4 	movi	r3,-129
 800ad5c:	d8802415 	stw	r2,144(sp)
 800ad60:	80e0703a 	and	r16,r16,r3
 800ad64:	903ea81e 	bne	r18,zero,800a808 <__alt_data_end+0xfc00a808>
 800ad68:	d8802017 	ldw	r2,128(sp)
 800ad6c:	002b883a 	mov	r21,zero
 800ad70:	1001f226 	beq	r2,zero,800b53c <___svfiprintf_internal_r+0x1248>
 800ad74:	0025883a 	mov	r18,zero
 800ad78:	0029883a 	mov	r20,zero
 800ad7c:	003ea306 	br	800a80c <__alt_data_end+0xfc00a80c>
 800ad80:	d8c01c17 	ldw	r3,112(sp)
 800ad84:	d8801b17 	ldw	r2,108(sp)
 800ad88:	d9001d87 	ldb	r4,118(sp)
 800ad8c:	20000b26 	beq	r4,zero,800adbc <___svfiprintf_internal_r+0xac8>
 800ad90:	d9001d84 	addi	r4,sp,118
 800ad94:	18c00044 	addi	r3,r3,1
 800ad98:	10800044 	addi	r2,r2,1
 800ad9c:	41000015 	stw	r4,0(r8)
 800ada0:	01000044 	movi	r4,1
 800ada4:	41000115 	stw	r4,4(r8)
 800ada8:	d8c01c15 	stw	r3,112(sp)
 800adac:	d8801b15 	stw	r2,108(sp)
 800adb0:	010001c4 	movi	r4,7
 800adb4:	2080f316 	blt	r4,r2,800b184 <___svfiprintf_internal_r+0xe90>
 800adb8:	42000204 	addi	r8,r8,8
 800adbc:	d9402117 	ldw	r5,132(sp)
 800adc0:	28000b26 	beq	r5,zero,800adf0 <___svfiprintf_internal_r+0xafc>
 800adc4:	d9001d04 	addi	r4,sp,116
 800adc8:	18c00084 	addi	r3,r3,2
 800adcc:	10800044 	addi	r2,r2,1
 800add0:	41000015 	stw	r4,0(r8)
 800add4:	01000084 	movi	r4,2
 800add8:	41000115 	stw	r4,4(r8)
 800addc:	d8c01c15 	stw	r3,112(sp)
 800ade0:	d8801b15 	stw	r2,108(sp)
 800ade4:	010001c4 	movi	r4,7
 800ade8:	2080ef16 	blt	r4,r2,800b1a8 <___svfiprintf_internal_r+0xeb4>
 800adec:	42000204 	addi	r8,r8,8
 800adf0:	d9402217 	ldw	r5,136(sp)
 800adf4:	01002004 	movi	r4,128
 800adf8:	29008f26 	beq	r5,r4,800b038 <___svfiprintf_internal_r+0xd44>
 800adfc:	d9002017 	ldw	r4,128(sp)
 800ae00:	252fc83a 	sub	r23,r4,r20
 800ae04:	05c0310e 	bge	zero,r23,800aecc <___svfiprintf_internal_r+0xbd8>
 800ae08:	07000404 	movi	fp,16
 800ae0c:	e5c17d0e 	bge	fp,r23,800b404 <___svfiprintf_internal_r+0x1110>
 800ae10:	01020074 	movhi	r4,2049
 800ae14:	21110104 	addi	r4,r4,17412
 800ae18:	dc002015 	stw	r16,128(sp)
 800ae1c:	dc402215 	stw	r17,136(sp)
 800ae20:	d9002115 	stw	r4,132(sp)
 800ae24:	b823883a 	mov	r17,r23
 800ae28:	054001c4 	movi	r21,7
 800ae2c:	982f883a 	mov	r23,r19
 800ae30:	dc002717 	ldw	r16,156(sp)
 800ae34:	9027883a 	mov	r19,r18
 800ae38:	dc802317 	ldw	r18,140(sp)
 800ae3c:	00000306 	br	800ae4c <___svfiprintf_internal_r+0xb58>
 800ae40:	8c7ffc04 	addi	r17,r17,-16
 800ae44:	42000204 	addi	r8,r8,8
 800ae48:	e440110e 	bge	fp,r17,800ae90 <___svfiprintf_internal_r+0xb9c>
 800ae4c:	18c00404 	addi	r3,r3,16
 800ae50:	10800044 	addi	r2,r2,1
 800ae54:	45800015 	stw	r22,0(r8)
 800ae58:	47000115 	stw	fp,4(r8)
 800ae5c:	d8c01c15 	stw	r3,112(sp)
 800ae60:	d8801b15 	stw	r2,108(sp)
 800ae64:	a8bff60e 	bge	r21,r2,800ae40 <__alt_data_end+0xfc00ae40>
 800ae68:	d9801a04 	addi	r6,sp,104
 800ae6c:	900b883a 	mov	r5,r18
 800ae70:	8009883a 	mov	r4,r16
 800ae74:	800a1240 	call	800a124 <__ssprint_r>
 800ae78:	10005e1e 	bne	r2,zero,800aff4 <___svfiprintf_internal_r+0xd00>
 800ae7c:	8c7ffc04 	addi	r17,r17,-16
 800ae80:	d8c01c17 	ldw	r3,112(sp)
 800ae84:	d8801b17 	ldw	r2,108(sp)
 800ae88:	d811883a 	mov	r8,sp
 800ae8c:	e47fef16 	blt	fp,r17,800ae4c <__alt_data_end+0xfc00ae4c>
 800ae90:	9825883a 	mov	r18,r19
 800ae94:	dc002017 	ldw	r16,128(sp)
 800ae98:	b827883a 	mov	r19,r23
 800ae9c:	882f883a 	mov	r23,r17
 800aea0:	dc402217 	ldw	r17,136(sp)
 800aea4:	d9402117 	ldw	r5,132(sp)
 800aea8:	1dc7883a 	add	r3,r3,r23
 800aeac:	10800044 	addi	r2,r2,1
 800aeb0:	41400015 	stw	r5,0(r8)
 800aeb4:	45c00115 	stw	r23,4(r8)
 800aeb8:	d8c01c15 	stw	r3,112(sp)
 800aebc:	d8801b15 	stw	r2,108(sp)
 800aec0:	010001c4 	movi	r4,7
 800aec4:	2080a616 	blt	r4,r2,800b160 <___svfiprintf_internal_r+0xe6c>
 800aec8:	42000204 	addi	r8,r8,8
 800aecc:	a0c7883a 	add	r3,r20,r3
 800aed0:	10800044 	addi	r2,r2,1
 800aed4:	44400015 	stw	r17,0(r8)
 800aed8:	45000115 	stw	r20,4(r8)
 800aedc:	d8c01c15 	stw	r3,112(sp)
 800aee0:	d8801b15 	stw	r2,108(sp)
 800aee4:	010001c4 	movi	r4,7
 800aee8:	20808816 	blt	r4,r2,800b10c <___svfiprintf_internal_r+0xe18>
 800aeec:	42000204 	addi	r8,r8,8
 800aef0:	8400010c 	andi	r16,r16,4
 800aef4:	80002c26 	beq	r16,zero,800afa8 <___svfiprintf_internal_r+0xcb4>
 800aef8:	d8802517 	ldw	r2,148(sp)
 800aefc:	14a1c83a 	sub	r16,r2,r18
 800af00:	0400290e 	bge	zero,r16,800afa8 <___svfiprintf_internal_r+0xcb4>
 800af04:	04400404 	movi	r17,16
 800af08:	d8801b17 	ldw	r2,108(sp)
 800af0c:	8c01a70e 	bge	r17,r16,800b5ac <___svfiprintf_internal_r+0x12b8>
 800af10:	01420074 	movhi	r5,2049
 800af14:	29510504 	addi	r5,r5,17428
 800af18:	d9402815 	stw	r5,160(sp)
 800af1c:	050001c4 	movi	r20,7
 800af20:	dd402717 	ldw	r21,156(sp)
 800af24:	ddc02317 	ldw	r23,140(sp)
 800af28:	00000306 	br	800af38 <___svfiprintf_internal_r+0xc44>
 800af2c:	843ffc04 	addi	r16,r16,-16
 800af30:	42000204 	addi	r8,r8,8
 800af34:	8c00130e 	bge	r17,r16,800af84 <___svfiprintf_internal_r+0xc90>
 800af38:	01020074 	movhi	r4,2049
 800af3c:	18c00404 	addi	r3,r3,16
 800af40:	10800044 	addi	r2,r2,1
 800af44:	21110504 	addi	r4,r4,17428
 800af48:	41000015 	stw	r4,0(r8)
 800af4c:	44400115 	stw	r17,4(r8)
 800af50:	d8c01c15 	stw	r3,112(sp)
 800af54:	d8801b15 	stw	r2,108(sp)
 800af58:	a0bff40e 	bge	r20,r2,800af2c <__alt_data_end+0xfc00af2c>
 800af5c:	d9801a04 	addi	r6,sp,104
 800af60:	b80b883a 	mov	r5,r23
 800af64:	a809883a 	mov	r4,r21
 800af68:	800a1240 	call	800a124 <__ssprint_r>
 800af6c:	1000211e 	bne	r2,zero,800aff4 <___svfiprintf_internal_r+0xd00>
 800af70:	843ffc04 	addi	r16,r16,-16
 800af74:	d8c01c17 	ldw	r3,112(sp)
 800af78:	d8801b17 	ldw	r2,108(sp)
 800af7c:	d811883a 	mov	r8,sp
 800af80:	8c3fed16 	blt	r17,r16,800af38 <__alt_data_end+0xfc00af38>
 800af84:	d9402817 	ldw	r5,160(sp)
 800af88:	1c07883a 	add	r3,r3,r16
 800af8c:	10800044 	addi	r2,r2,1
 800af90:	41400015 	stw	r5,0(r8)
 800af94:	44000115 	stw	r16,4(r8)
 800af98:	d8c01c15 	stw	r3,112(sp)
 800af9c:	d8801b15 	stw	r2,108(sp)
 800afa0:	010001c4 	movi	r4,7
 800afa4:	2080b516 	blt	r4,r2,800b27c <___svfiprintf_internal_r+0xf88>
 800afa8:	d8802517 	ldw	r2,148(sp)
 800afac:	1480010e 	bge	r2,r18,800afb4 <___svfiprintf_internal_r+0xcc0>
 800afb0:	9005883a 	mov	r2,r18
 800afb4:	d9002617 	ldw	r4,152(sp)
 800afb8:	2089883a 	add	r4,r4,r2
 800afbc:	d9002615 	stw	r4,152(sp)
 800afc0:	18005a1e 	bne	r3,zero,800b12c <___svfiprintf_internal_r+0xe38>
 800afc4:	98800007 	ldb	r2,0(r19)
 800afc8:	d8001b15 	stw	zero,108(sp)
 800afcc:	d811883a 	mov	r8,sp
 800afd0:	103cec1e 	bne	r2,zero,800a384 <__alt_data_end+0xfc00a384>
 800afd4:	9825883a 	mov	r18,r19
 800afd8:	003d0206 	br	800a3e4 <__alt_data_end+0xfc00a3e4>
 800afdc:	d8801c17 	ldw	r2,112(sp)
 800afe0:	10000426 	beq	r2,zero,800aff4 <___svfiprintf_internal_r+0xd00>
 800afe4:	d9402317 	ldw	r5,140(sp)
 800afe8:	d9002717 	ldw	r4,156(sp)
 800afec:	d9801a04 	addi	r6,sp,104
 800aff0:	800a1240 	call	800a124 <__ssprint_r>
 800aff4:	d9402317 	ldw	r5,140(sp)
 800aff8:	d8802617 	ldw	r2,152(sp)
 800affc:	28c0030b 	ldhu	r3,12(r5)
 800b000:	18c0100c 	andi	r3,r3,64
 800b004:	18015c1e 	bne	r3,zero,800b578 <___svfiprintf_internal_r+0x1284>
 800b008:	dfc03717 	ldw	ra,220(sp)
 800b00c:	df003617 	ldw	fp,216(sp)
 800b010:	ddc03517 	ldw	r23,212(sp)
 800b014:	dd803417 	ldw	r22,208(sp)
 800b018:	dd403317 	ldw	r21,204(sp)
 800b01c:	dd003217 	ldw	r20,200(sp)
 800b020:	dcc03117 	ldw	r19,196(sp)
 800b024:	dc803017 	ldw	r18,192(sp)
 800b028:	dc402f17 	ldw	r17,188(sp)
 800b02c:	dc002e17 	ldw	r16,184(sp)
 800b030:	dec03804 	addi	sp,sp,224
 800b034:	f800283a 	ret
 800b038:	d9002517 	ldw	r4,148(sp)
 800b03c:	24afc83a 	sub	r23,r4,r18
 800b040:	05ff6e0e 	bge	zero,r23,800adfc <__alt_data_end+0xfc00adfc>
 800b044:	07000404 	movi	fp,16
 800b048:	e5c15c0e 	bge	fp,r23,800b5bc <___svfiprintf_internal_r+0x12c8>
 800b04c:	01020074 	movhi	r4,2049
 800b050:	21110104 	addi	r4,r4,17412
 800b054:	dc002215 	stw	r16,136(sp)
 800b058:	dc402815 	stw	r17,160(sp)
 800b05c:	d9002115 	stw	r4,132(sp)
 800b060:	b823883a 	mov	r17,r23
 800b064:	054001c4 	movi	r21,7
 800b068:	982f883a 	mov	r23,r19
 800b06c:	dc002717 	ldw	r16,156(sp)
 800b070:	9027883a 	mov	r19,r18
 800b074:	dc802317 	ldw	r18,140(sp)
 800b078:	00000306 	br	800b088 <___svfiprintf_internal_r+0xd94>
 800b07c:	8c7ffc04 	addi	r17,r17,-16
 800b080:	42000204 	addi	r8,r8,8
 800b084:	e440110e 	bge	fp,r17,800b0cc <___svfiprintf_internal_r+0xdd8>
 800b088:	18c00404 	addi	r3,r3,16
 800b08c:	10800044 	addi	r2,r2,1
 800b090:	45800015 	stw	r22,0(r8)
 800b094:	47000115 	stw	fp,4(r8)
 800b098:	d8c01c15 	stw	r3,112(sp)
 800b09c:	d8801b15 	stw	r2,108(sp)
 800b0a0:	a8bff60e 	bge	r21,r2,800b07c <__alt_data_end+0xfc00b07c>
 800b0a4:	d9801a04 	addi	r6,sp,104
 800b0a8:	900b883a 	mov	r5,r18
 800b0ac:	8009883a 	mov	r4,r16
 800b0b0:	800a1240 	call	800a124 <__ssprint_r>
 800b0b4:	103fcf1e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b0b8:	8c7ffc04 	addi	r17,r17,-16
 800b0bc:	d8c01c17 	ldw	r3,112(sp)
 800b0c0:	d8801b17 	ldw	r2,108(sp)
 800b0c4:	d811883a 	mov	r8,sp
 800b0c8:	e47fef16 	blt	fp,r17,800b088 <__alt_data_end+0xfc00b088>
 800b0cc:	9825883a 	mov	r18,r19
 800b0d0:	dc002217 	ldw	r16,136(sp)
 800b0d4:	b827883a 	mov	r19,r23
 800b0d8:	882f883a 	mov	r23,r17
 800b0dc:	dc402817 	ldw	r17,160(sp)
 800b0e0:	d9402117 	ldw	r5,132(sp)
 800b0e4:	1dc7883a 	add	r3,r3,r23
 800b0e8:	10800044 	addi	r2,r2,1
 800b0ec:	41400015 	stw	r5,0(r8)
 800b0f0:	45c00115 	stw	r23,4(r8)
 800b0f4:	d8c01c15 	stw	r3,112(sp)
 800b0f8:	d8801b15 	stw	r2,108(sp)
 800b0fc:	010001c4 	movi	r4,7
 800b100:	2080b716 	blt	r4,r2,800b3e0 <___svfiprintf_internal_r+0x10ec>
 800b104:	42000204 	addi	r8,r8,8
 800b108:	003f3c06 	br	800adfc <__alt_data_end+0xfc00adfc>
 800b10c:	d9402317 	ldw	r5,140(sp)
 800b110:	d9002717 	ldw	r4,156(sp)
 800b114:	d9801a04 	addi	r6,sp,104
 800b118:	800a1240 	call	800a124 <__ssprint_r>
 800b11c:	103fb51e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b120:	d8c01c17 	ldw	r3,112(sp)
 800b124:	d811883a 	mov	r8,sp
 800b128:	003f7106 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800b12c:	d9402317 	ldw	r5,140(sp)
 800b130:	d9002717 	ldw	r4,156(sp)
 800b134:	d9801a04 	addi	r6,sp,104
 800b138:	800a1240 	call	800a124 <__ssprint_r>
 800b13c:	103fa126 	beq	r2,zero,800afc4 <__alt_data_end+0xfc00afc4>
 800b140:	003fac06 	br	800aff4 <__alt_data_end+0xfc00aff4>
 800b144:	d9402317 	ldw	r5,140(sp)
 800b148:	d9002717 	ldw	r4,156(sp)
 800b14c:	d9801a04 	addi	r6,sp,104
 800b150:	800a1240 	call	800a124 <__ssprint_r>
 800b154:	103fa71e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b158:	d811883a 	mov	r8,sp
 800b15c:	003c9e06 	br	800a3d8 <__alt_data_end+0xfc00a3d8>
 800b160:	d9402317 	ldw	r5,140(sp)
 800b164:	d9002717 	ldw	r4,156(sp)
 800b168:	d9801a04 	addi	r6,sp,104
 800b16c:	800a1240 	call	800a124 <__ssprint_r>
 800b170:	103fa01e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b174:	d8c01c17 	ldw	r3,112(sp)
 800b178:	d8801b17 	ldw	r2,108(sp)
 800b17c:	d811883a 	mov	r8,sp
 800b180:	003f5206 	br	800aecc <__alt_data_end+0xfc00aecc>
 800b184:	d9402317 	ldw	r5,140(sp)
 800b188:	d9002717 	ldw	r4,156(sp)
 800b18c:	d9801a04 	addi	r6,sp,104
 800b190:	800a1240 	call	800a124 <__ssprint_r>
 800b194:	103f971e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b198:	d8c01c17 	ldw	r3,112(sp)
 800b19c:	d8801b17 	ldw	r2,108(sp)
 800b1a0:	d811883a 	mov	r8,sp
 800b1a4:	003f0506 	br	800adbc <__alt_data_end+0xfc00adbc>
 800b1a8:	d9402317 	ldw	r5,140(sp)
 800b1ac:	d9002717 	ldw	r4,156(sp)
 800b1b0:	d9801a04 	addi	r6,sp,104
 800b1b4:	800a1240 	call	800a124 <__ssprint_r>
 800b1b8:	103f8e1e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b1bc:	d8c01c17 	ldw	r3,112(sp)
 800b1c0:	d8801b17 	ldw	r2,108(sp)
 800b1c4:	d811883a 	mov	r8,sp
 800b1c8:	003f0906 	br	800adf0 <__alt_data_end+0xfc00adf0>
 800b1cc:	d9402017 	ldw	r5,128(sp)
 800b1d0:	d8001d85 	stb	zero,118(sp)
 800b1d4:	28007716 	blt	r5,zero,800b3b4 <___svfiprintf_internal_r+0x10c0>
 800b1d8:	00ffdfc4 	movi	r3,-129
 800b1dc:	9504b03a 	or	r2,r18,r20
 800b1e0:	80e0703a 	and	r16,r16,r3
 800b1e4:	103d3926 	beq	r2,zero,800a6cc <__alt_data_end+0xfc00a6cc>
 800b1e8:	002b883a 	mov	r21,zero
 800b1ec:	003d3c06 	br	800a6e0 <__alt_data_end+0xfc00a6e0>
 800b1f0:	d9402317 	ldw	r5,140(sp)
 800b1f4:	d9002717 	ldw	r4,156(sp)
 800b1f8:	d9801a04 	addi	r6,sp,104
 800b1fc:	800a1240 	call	800a124 <__ssprint_r>
 800b200:	103f7c1e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b204:	d8c01c17 	ldw	r3,112(sp)
 800b208:	d8801b17 	ldw	r2,108(sp)
 800b20c:	d811883a 	mov	r8,sp
 800b210:	003edd06 	br	800ad88 <__alt_data_end+0xfc00ad88>
 800b214:	8080100c 	andi	r2,r16,64
 800b218:	d8001d85 	stb	zero,118(sp)
 800b21c:	10008426 	beq	r2,zero,800b430 <___svfiprintf_internal_r+0x113c>
 800b220:	d9402417 	ldw	r5,144(sp)
 800b224:	d8c02017 	ldw	r3,128(sp)
 800b228:	0029883a 	mov	r20,zero
 800b22c:	28800104 	addi	r2,r5,4
 800b230:	2c80000b 	ldhu	r18,0(r5)
 800b234:	183eab0e 	bge	r3,zero,800ace4 <__alt_data_end+0xfc00ace4>
 800b238:	d8802415 	stw	r2,144(sp)
 800b23c:	002b883a 	mov	r21,zero
 800b240:	9504b03a 	or	r2,r18,r20
 800b244:	103e171e 	bne	r2,zero,800aaa4 <__alt_data_end+0xfc00aaa4>
 800b248:	00800044 	movi	r2,1
 800b24c:	10803fcc 	andi	r2,r2,255
 800b250:	00c00044 	movi	r3,1
 800b254:	10c05c26 	beq	r2,r3,800b3c8 <___svfiprintf_internal_r+0x10d4>
 800b258:	00c00084 	movi	r3,2
 800b25c:	10fd1e26 	beq	r2,r3,800a6d8 <__alt_data_end+0xfc00a6d8>
 800b260:	003ec406 	br	800ad74 <__alt_data_end+0xfc00ad74>
 800b264:	d9401e17 	ldw	r5,120(sp)
 800b268:	2c69c83a 	sub	r20,r5,r17
 800b26c:	003d4506 	br	800a784 <__alt_data_end+0xfc00a784>
 800b270:	d8802415 	stw	r2,144(sp)
 800b274:	98c00007 	ldb	r3,0(r19)
 800b278:	003c6a06 	br	800a424 <__alt_data_end+0xfc00a424>
 800b27c:	d9402317 	ldw	r5,140(sp)
 800b280:	d9002717 	ldw	r4,156(sp)
 800b284:	d9801a04 	addi	r6,sp,104
 800b288:	800a1240 	call	800a124 <__ssprint_r>
 800b28c:	103f591e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b290:	d8c01c17 	ldw	r3,112(sp)
 800b294:	003f4406 	br	800afa8 <__alt_data_end+0xfc00afa8>
 800b298:	01420074 	movhi	r5,2049
 800b29c:	29509804 	addi	r5,r5,16992
 800b2a0:	d9402915 	stw	r5,164(sp)
 800b2a4:	003d0906 	br	800a6cc <__alt_data_end+0xfc00a6cc>
 800b2a8:	d8c02417 	ldw	r3,144(sp)
 800b2ac:	d9002617 	ldw	r4,152(sp)
 800b2b0:	d9402417 	ldw	r5,144(sp)
 800b2b4:	18800017 	ldw	r2,0(r3)
 800b2b8:	2007d7fa 	srai	r3,r4,31
 800b2bc:	29400104 	addi	r5,r5,4
 800b2c0:	d9402415 	stw	r5,144(sp)
 800b2c4:	11000015 	stw	r4,0(r2)
 800b2c8:	10c00115 	stw	r3,4(r2)
 800b2cc:	003c2b06 	br	800a37c <__alt_data_end+0xfc00a37c>
 800b2d0:	d8c01d45 	stb	r3,117(sp)
 800b2d4:	d8c02017 	ldw	r3,128(sp)
 800b2d8:	00800c04 	movi	r2,48
 800b2dc:	d8801d05 	stb	r2,116(sp)
 800b2e0:	d8001d85 	stb	zero,118(sp)
 800b2e4:	80800094 	ori	r2,r16,2
 800b2e8:	1800ac16 	blt	r3,zero,800b59c <___svfiprintf_internal_r+0x12a8>
 800b2ec:	00bfdfc4 	movi	r2,-129
 800b2f0:	80a0703a 	and	r16,r16,r2
 800b2f4:	84000094 	ori	r16,r16,2
 800b2f8:	002b883a 	mov	r21,zero
 800b2fc:	003cf806 	br	800a6e0 <__alt_data_end+0xfc00a6e0>
 800b300:	98c00007 	ldb	r3,0(r19)
 800b304:	003c4706 	br	800a424 <__alt_data_end+0xfc00a424>
 800b308:	d9402417 	ldw	r5,144(sp)
 800b30c:	2c800017 	ldw	r18,0(r5)
 800b310:	29400104 	addi	r5,r5,4
 800b314:	d9402415 	stw	r5,144(sp)
 800b318:	9029d7fa 	srai	r20,r18,31
 800b31c:	a005883a 	mov	r2,r20
 800b320:	003dd806 	br	800aa84 <__alt_data_end+0xfc00aa84>
 800b324:	d9402417 	ldw	r5,144(sp)
 800b328:	0029883a 	mov	r20,zero
 800b32c:	2c800017 	ldw	r18,0(r5)
 800b330:	29400104 	addi	r5,r5,4
 800b334:	d9402415 	stw	r5,144(sp)
 800b338:	003cdb06 	br	800a6a8 <__alt_data_end+0xfc00a6a8>
 800b33c:	8080100c 	andi	r2,r16,64
 800b340:	d8001d85 	stb	zero,118(sp)
 800b344:	10003326 	beq	r2,zero,800b414 <___svfiprintf_internal_r+0x1120>
 800b348:	d9002417 	ldw	r4,144(sp)
 800b34c:	d9402017 	ldw	r5,128(sp)
 800b350:	0029883a 	mov	r20,zero
 800b354:	20800104 	addi	r2,r4,4
 800b358:	2480000b 	ldhu	r18,0(r4)
 800b35c:	283e7e0e 	bge	r5,zero,800ad58 <__alt_data_end+0xfc00ad58>
 800b360:	9506b03a 	or	r3,r18,r20
 800b364:	d8802415 	stw	r2,144(sp)
 800b368:	183d271e 	bne	r3,zero,800a808 <__alt_data_end+0xfc00a808>
 800b36c:	002b883a 	mov	r21,zero
 800b370:	0005883a 	mov	r2,zero
 800b374:	003fb506 	br	800b24c <__alt_data_end+0xfc00b24c>
 800b378:	98c00043 	ldbu	r3,1(r19)
 800b37c:	8c400814 	ori	r17,r17,32
 800b380:	9cc00044 	addi	r19,r19,1
 800b384:	18c03fcc 	andi	r3,r3,255
 800b388:	18c0201c 	xori	r3,r3,128
 800b38c:	18ffe004 	addi	r3,r3,-128
 800b390:	003c2406 	br	800a424 <__alt_data_end+0xfc00a424>
 800b394:	d8c02415 	stw	r3,144(sp)
 800b398:	002b883a 	mov	r21,zero
 800b39c:	003fa806 	br	800b240 <__alt_data_end+0xfc00b240>
 800b3a0:	01020074 	movhi	r4,2049
 800b3a4:	21109804 	addi	r4,r4,16992
 800b3a8:	d9002915 	stw	r4,164(sp)
 800b3ac:	d8c02415 	stw	r3,144(sp)
 800b3b0:	1021883a 	mov	r16,r2
 800b3b4:	9504b03a 	or	r2,r18,r20
 800b3b8:	103f8b1e 	bne	r2,zero,800b1e8 <__alt_data_end+0xfc00b1e8>
 800b3bc:	002b883a 	mov	r21,zero
 800b3c0:	00800084 	movi	r2,2
 800b3c4:	003fa106 	br	800b24c <__alt_data_end+0xfc00b24c>
 800b3c8:	0025883a 	mov	r18,zero
 800b3cc:	94800c04 	addi	r18,r18,48
 800b3d0:	dc8019c5 	stb	r18,103(sp)
 800b3d4:	dd002c17 	ldw	r20,176(sp)
 800b3d8:	dc4019c4 	addi	r17,sp,103
 800b3dc:	003ce906 	br	800a784 <__alt_data_end+0xfc00a784>
 800b3e0:	d9402317 	ldw	r5,140(sp)
 800b3e4:	d9002717 	ldw	r4,156(sp)
 800b3e8:	d9801a04 	addi	r6,sp,104
 800b3ec:	800a1240 	call	800a124 <__ssprint_r>
 800b3f0:	103f001e 	bne	r2,zero,800aff4 <__alt_data_end+0xfc00aff4>
 800b3f4:	d8c01c17 	ldw	r3,112(sp)
 800b3f8:	d8801b17 	ldw	r2,108(sp)
 800b3fc:	d811883a 	mov	r8,sp
 800b400:	003e7e06 	br	800adfc <__alt_data_end+0xfc00adfc>
 800b404:	01420074 	movhi	r5,2049
 800b408:	29510104 	addi	r5,r5,17412
 800b40c:	d9402115 	stw	r5,132(sp)
 800b410:	003ea406 	br	800aea4 <__alt_data_end+0xfc00aea4>
 800b414:	d8c02417 	ldw	r3,144(sp)
 800b418:	d9002017 	ldw	r4,128(sp)
 800b41c:	0029883a 	mov	r20,zero
 800b420:	18800104 	addi	r2,r3,4
 800b424:	1c800017 	ldw	r18,0(r3)
 800b428:	203e4b0e 	bge	r4,zero,800ad58 <__alt_data_end+0xfc00ad58>
 800b42c:	003fcc06 	br	800b360 <__alt_data_end+0xfc00b360>
 800b430:	d9002417 	ldw	r4,144(sp)
 800b434:	d9402017 	ldw	r5,128(sp)
 800b438:	0029883a 	mov	r20,zero
 800b43c:	20800104 	addi	r2,r4,4
 800b440:	24800017 	ldw	r18,0(r4)
 800b444:	283e270e 	bge	r5,zero,800ace4 <__alt_data_end+0xfc00ace4>
 800b448:	003f7b06 	br	800b238 <__alt_data_end+0xfc00b238>
 800b44c:	8400100c 	andi	r16,r16,64
 800b450:	80003326 	beq	r16,zero,800b520 <___svfiprintf_internal_r+0x122c>
 800b454:	d9402417 	ldw	r5,144(sp)
 800b458:	d8c02617 	ldw	r3,152(sp)
 800b45c:	28800017 	ldw	r2,0(r5)
 800b460:	29400104 	addi	r5,r5,4
 800b464:	d9402415 	stw	r5,144(sp)
 800b468:	10c0000d 	sth	r3,0(r2)
 800b46c:	003bc306 	br	800a37c <__alt_data_end+0xfc00a37c>
 800b470:	d9002417 	ldw	r4,144(sp)
 800b474:	0029883a 	mov	r20,zero
 800b478:	24800017 	ldw	r18,0(r4)
 800b47c:	21000104 	addi	r4,r4,4
 800b480:	d9002415 	stw	r4,144(sp)
 800b484:	003c8806 	br	800a6a8 <__alt_data_end+0xfc00a6a8>
 800b488:	d8c02417 	ldw	r3,144(sp)
 800b48c:	1c800017 	ldw	r18,0(r3)
 800b490:	18c00104 	addi	r3,r3,4
 800b494:	d8c02415 	stw	r3,144(sp)
 800b498:	9029d7fa 	srai	r20,r18,31
 800b49c:	a005883a 	mov	r2,r20
 800b4a0:	003d7806 	br	800aa84 <__alt_data_end+0xfc00aa84>
 800b4a4:	8809883a 	mov	r4,r17
 800b4a8:	da002d15 	stw	r8,180(sp)
 800b4ac:	80013bc0 	call	80013bc <strlen>
 800b4b0:	1029883a 	mov	r20,r2
 800b4b4:	dd401d83 	ldbu	r21,118(sp)
 800b4b8:	ddc02415 	stw	r23,144(sp)
 800b4bc:	d8002015 	stw	zero,128(sp)
 800b4c0:	da002d17 	ldw	r8,180(sp)
 800b4c4:	003caf06 	br	800a784 <__alt_data_end+0xfc00a784>
 800b4c8:	013fffc4 	movi	r4,-1
 800b4cc:	003df206 	br	800ac98 <__alt_data_end+0xfc00ac98>
 800b4d0:	dd002017 	ldw	r20,128(sp)
 800b4d4:	00800184 	movi	r2,6
 800b4d8:	1500012e 	bgeu	r2,r20,800b4e0 <___svfiprintf_internal_r+0x11ec>
 800b4dc:	1029883a 	mov	r20,r2
 800b4e0:	a025883a 	mov	r18,r20
 800b4e4:	a0004116 	blt	r20,zero,800b5ec <___svfiprintf_internal_r+0x12f8>
 800b4e8:	04420074 	movhi	r17,2049
 800b4ec:	ddc02415 	stw	r23,144(sp)
 800b4f0:	8c509d04 	addi	r17,r17,17012
 800b4f4:	003ce806 	br	800a898 <__alt_data_end+0xfc00a898>
 800b4f8:	04001004 	movi	r16,64
 800b4fc:	800b883a 	mov	r5,r16
 800b500:	80083740 	call	8008374 <_malloc_r>
 800b504:	d8c02317 	ldw	r3,140(sp)
 800b508:	18800015 	stw	r2,0(r3)
 800b50c:	18800415 	stw	r2,16(r3)
 800b510:	10004d26 	beq	r2,zero,800b648 <___svfiprintf_internal_r+0x1354>
 800b514:	d9402317 	ldw	r5,140(sp)
 800b518:	2c000515 	stw	r16,20(r5)
 800b51c:	003b8906 	br	800a344 <__alt_data_end+0xfc00a344>
 800b520:	d9002417 	ldw	r4,144(sp)
 800b524:	d9402617 	ldw	r5,152(sp)
 800b528:	20800017 	ldw	r2,0(r4)
 800b52c:	21000104 	addi	r4,r4,4
 800b530:	d9002415 	stw	r4,144(sp)
 800b534:	11400015 	stw	r5,0(r2)
 800b538:	003b9006 	br	800a37c <__alt_data_end+0xfc00a37c>
 800b53c:	8080004c 	andi	r2,r16,1
 800b540:	002b883a 	mov	r21,zero
 800b544:	10000526 	beq	r2,zero,800b55c <___svfiprintf_internal_r+0x1268>
 800b548:	00800c04 	movi	r2,48
 800b54c:	d88019c5 	stb	r2,103(sp)
 800b550:	dd002c17 	ldw	r20,176(sp)
 800b554:	dc4019c4 	addi	r17,sp,103
 800b558:	003c8a06 	br	800a784 <__alt_data_end+0xfc00a784>
 800b55c:	0029883a 	mov	r20,zero
 800b560:	dc401a04 	addi	r17,sp,104
 800b564:	003c8706 	br	800a784 <__alt_data_end+0xfc00a784>
 800b568:	01420074 	movhi	r5,2049
 800b56c:	29510504 	addi	r5,r5,17428
 800b570:	d9402815 	stw	r5,160(sp)
 800b574:	003cff06 	br	800a974 <__alt_data_end+0xfc00a974>
 800b578:	00bfffc4 	movi	r2,-1
 800b57c:	003ea206 	br	800b008 <__alt_data_end+0xfc00b008>
 800b580:	00800044 	movi	r2,1
 800b584:	10803fcc 	andi	r2,r2,255
 800b588:	00c00044 	movi	r3,1
 800b58c:	10fd4526 	beq	r2,r3,800aaa4 <__alt_data_end+0xfc00aaa4>
 800b590:	00c00084 	movi	r3,2
 800b594:	10fc5226 	beq	r2,r3,800a6e0 <__alt_data_end+0xfc00a6e0>
 800b598:	003c9c06 	br	800a80c <__alt_data_end+0xfc00a80c>
 800b59c:	1021883a 	mov	r16,r2
 800b5a0:	002b883a 	mov	r21,zero
 800b5a4:	00800084 	movi	r2,2
 800b5a8:	003ff606 	br	800b584 <__alt_data_end+0xfc00b584>
 800b5ac:	01020074 	movhi	r4,2049
 800b5b0:	21110504 	addi	r4,r4,17428
 800b5b4:	d9002815 	stw	r4,160(sp)
 800b5b8:	003e7206 	br	800af84 <__alt_data_end+0xfc00af84>
 800b5bc:	01420074 	movhi	r5,2049
 800b5c0:	29510104 	addi	r5,r5,17412
 800b5c4:	d9402115 	stw	r5,132(sp)
 800b5c8:	003ec506 	br	800b0e0 <__alt_data_end+0xfc00b0e0>
 800b5cc:	e027883a 	mov	r19,fp
 800b5d0:	d8002015 	stw	zero,128(sp)
 800b5d4:	003b9406 	br	800a428 <__alt_data_end+0xfc00a428>
 800b5d8:	dd002017 	ldw	r20,128(sp)
 800b5dc:	dd401d83 	ldbu	r21,118(sp)
 800b5e0:	ddc02415 	stw	r23,144(sp)
 800b5e4:	d8002015 	stw	zero,128(sp)
 800b5e8:	003c6606 	br	800a784 <__alt_data_end+0xfc00a784>
 800b5ec:	0025883a 	mov	r18,zero
 800b5f0:	003fbd06 	br	800b4e8 <__alt_data_end+0xfc00b4e8>
 800b5f4:	d9402417 	ldw	r5,144(sp)
 800b5f8:	d8c02417 	ldw	r3,144(sp)
 800b5fc:	29400017 	ldw	r5,0(r5)
 800b600:	19000104 	addi	r4,r3,4
 800b604:	d9002415 	stw	r4,144(sp)
 800b608:	d9402015 	stw	r5,128(sp)
 800b60c:	98c00043 	ldbu	r3,1(r19)
 800b610:	e027883a 	mov	r19,fp
 800b614:	283f5b0e 	bge	r5,zero,800b384 <__alt_data_end+0xfc00b384>
 800b618:	18c03fcc 	andi	r3,r3,255
 800b61c:	013fffc4 	movi	r4,-1
 800b620:	18c0201c 	xori	r3,r3,128
 800b624:	d9002015 	stw	r4,128(sp)
 800b628:	18ffe004 	addi	r3,r3,-128
 800b62c:	003b7d06 	br	800a424 <__alt_data_end+0xfc00a424>
 800b630:	dd401d85 	stb	r21,118(sp)
 800b634:	003cf306 	br	800aa04 <__alt_data_end+0xfc00aa04>
 800b638:	dd401d85 	stb	r21,118(sp)
 800b63c:	003d4e06 	br	800ab78 <__alt_data_end+0xfc00ab78>
 800b640:	dd401d85 	stb	r21,118(sp)
 800b644:	003c0e06 	br	800a680 <__alt_data_end+0xfc00a680>
 800b648:	d9002717 	ldw	r4,156(sp)
 800b64c:	00800304 	movi	r2,12
 800b650:	20800015 	stw	r2,0(r4)
 800b654:	00bfffc4 	movi	r2,-1
 800b658:	003e6b06 	br	800b008 <__alt_data_end+0xfc00b008>
 800b65c:	dd401d85 	stb	r21,118(sp)
 800b660:	003d0006 	br	800aa64 <__alt_data_end+0xfc00aa64>
 800b664:	dd401d85 	stb	r21,118(sp)
 800b668:	003d7106 	br	800ac30 <__alt_data_end+0xfc00ac30>
 800b66c:	dd401d85 	stb	r21,118(sp)
 800b670:	003c5706 	br	800a7d0 <__alt_data_end+0xfc00a7d0>
 800b674:	dd401d85 	stb	r21,118(sp)
 800b678:	003c2e06 	br	800a734 <__alt_data_end+0xfc00a734>
 800b67c:	dd401d85 	stb	r21,118(sp)
 800b680:	003d8c06 	br	800acb4 <__alt_data_end+0xfc00acb4>
 800b684:	dd401d85 	stb	r21,118(sp)
 800b688:	003da706 	br	800ad28 <__alt_data_end+0xfc00ad28>
 800b68c:	dd401d85 	stb	r21,118(sp)
 800b690:	003cc806 	br	800a9b4 <__alt_data_end+0xfc00a9b4>

0800b694 <__sprint_r.part.0>:
 800b694:	28801917 	ldw	r2,100(r5)
 800b698:	defff604 	addi	sp,sp,-40
 800b69c:	dd400515 	stw	r21,20(sp)
 800b6a0:	dfc00915 	stw	ra,36(sp)
 800b6a4:	df000815 	stw	fp,32(sp)
 800b6a8:	ddc00715 	stw	r23,28(sp)
 800b6ac:	dd800615 	stw	r22,24(sp)
 800b6b0:	dd000415 	stw	r20,16(sp)
 800b6b4:	dcc00315 	stw	r19,12(sp)
 800b6b8:	dc800215 	stw	r18,8(sp)
 800b6bc:	dc400115 	stw	r17,4(sp)
 800b6c0:	dc000015 	stw	r16,0(sp)
 800b6c4:	1088000c 	andi	r2,r2,8192
 800b6c8:	302b883a 	mov	r21,r6
 800b6cc:	10002e26 	beq	r2,zero,800b788 <__sprint_r.part.0+0xf4>
 800b6d0:	30800217 	ldw	r2,8(r6)
 800b6d4:	35800017 	ldw	r22,0(r6)
 800b6d8:	10002926 	beq	r2,zero,800b780 <__sprint_r.part.0+0xec>
 800b6dc:	2827883a 	mov	r19,r5
 800b6e0:	2029883a 	mov	r20,r4
 800b6e4:	b5c00104 	addi	r23,r22,4
 800b6e8:	04bfffc4 	movi	r18,-1
 800b6ec:	bc400017 	ldw	r17,0(r23)
 800b6f0:	b4000017 	ldw	r16,0(r22)
 800b6f4:	0039883a 	mov	fp,zero
 800b6f8:	8822d0ba 	srli	r17,r17,2
 800b6fc:	8800031e 	bne	r17,zero,800b70c <__sprint_r.part.0+0x78>
 800b700:	00001806 	br	800b764 <__sprint_r.part.0+0xd0>
 800b704:	84000104 	addi	r16,r16,4
 800b708:	8f001526 	beq	r17,fp,800b760 <__sprint_r.part.0+0xcc>
 800b70c:	81400017 	ldw	r5,0(r16)
 800b710:	980d883a 	mov	r6,r19
 800b714:	a009883a 	mov	r4,r20
 800b718:	800d1840 	call	800d184 <_fputwc_r>
 800b71c:	e7000044 	addi	fp,fp,1
 800b720:	14bff81e 	bne	r2,r18,800b704 <__alt_data_end+0xfc00b704>
 800b724:	9005883a 	mov	r2,r18
 800b728:	a8000215 	stw	zero,8(r21)
 800b72c:	a8000115 	stw	zero,4(r21)
 800b730:	dfc00917 	ldw	ra,36(sp)
 800b734:	df000817 	ldw	fp,32(sp)
 800b738:	ddc00717 	ldw	r23,28(sp)
 800b73c:	dd800617 	ldw	r22,24(sp)
 800b740:	dd400517 	ldw	r21,20(sp)
 800b744:	dd000417 	ldw	r20,16(sp)
 800b748:	dcc00317 	ldw	r19,12(sp)
 800b74c:	dc800217 	ldw	r18,8(sp)
 800b750:	dc400117 	ldw	r17,4(sp)
 800b754:	dc000017 	ldw	r16,0(sp)
 800b758:	dec00a04 	addi	sp,sp,40
 800b75c:	f800283a 	ret
 800b760:	a8800217 	ldw	r2,8(r21)
 800b764:	8c63883a 	add	r17,r17,r17
 800b768:	8c63883a 	add	r17,r17,r17
 800b76c:	1445c83a 	sub	r2,r2,r17
 800b770:	a8800215 	stw	r2,8(r21)
 800b774:	b5800204 	addi	r22,r22,8
 800b778:	bdc00204 	addi	r23,r23,8
 800b77c:	103fdb1e 	bne	r2,zero,800b6ec <__alt_data_end+0xfc00b6ec>
 800b780:	0005883a 	mov	r2,zero
 800b784:	003fe806 	br	800b728 <__alt_data_end+0xfc00b728>
 800b788:	800d2840 	call	800d284 <__sfvwrite_r>
 800b78c:	003fe606 	br	800b728 <__alt_data_end+0xfc00b728>

0800b790 <__sprint_r>:
 800b790:	30c00217 	ldw	r3,8(r6)
 800b794:	18000126 	beq	r3,zero,800b79c <__sprint_r+0xc>
 800b798:	800b6941 	jmpi	800b694 <__sprint_r.part.0>
 800b79c:	30000115 	stw	zero,4(r6)
 800b7a0:	0005883a 	mov	r2,zero
 800b7a4:	f800283a 	ret

0800b7a8 <___vfiprintf_internal_r>:
 800b7a8:	deffca04 	addi	sp,sp,-216
 800b7ac:	dd403115 	stw	r21,196(sp)
 800b7b0:	dfc03515 	stw	ra,212(sp)
 800b7b4:	df003415 	stw	fp,208(sp)
 800b7b8:	ddc03315 	stw	r23,204(sp)
 800b7bc:	dd803215 	stw	r22,200(sp)
 800b7c0:	dd003015 	stw	r20,192(sp)
 800b7c4:	dcc02f15 	stw	r19,188(sp)
 800b7c8:	dc802e15 	stw	r18,184(sp)
 800b7cc:	dc402d15 	stw	r17,180(sp)
 800b7d0:	dc002c15 	stw	r16,176(sp)
 800b7d4:	d9002115 	stw	r4,132(sp)
 800b7d8:	d9402015 	stw	r5,128(sp)
 800b7dc:	d9c02215 	stw	r7,136(sp)
 800b7e0:	302b883a 	mov	r21,r6
 800b7e4:	20000226 	beq	r4,zero,800b7f0 <___vfiprintf_internal_r+0x48>
 800b7e8:	20800e17 	ldw	r2,56(r4)
 800b7ec:	1000cf26 	beq	r2,zero,800bb2c <___vfiprintf_internal_r+0x384>
 800b7f0:	d8c02017 	ldw	r3,128(sp)
 800b7f4:	1880030b 	ldhu	r2,12(r3)
 800b7f8:	10c8000c 	andi	r3,r2,8192
 800b7fc:	1800071e 	bne	r3,zero,800b81c <___vfiprintf_internal_r+0x74>
 800b800:	d9402017 	ldw	r5,128(sp)
 800b804:	00f7ffc4 	movi	r3,-8193
 800b808:	10880014 	ori	r2,r2,8192
 800b80c:	29001917 	ldw	r4,100(r5)
 800b810:	2880030d 	sth	r2,12(r5)
 800b814:	20c6703a 	and	r3,r4,r3
 800b818:	28c01915 	stw	r3,100(r5)
 800b81c:	10c0020c 	andi	r3,r2,8
 800b820:	1800a526 	beq	r3,zero,800bab8 <___vfiprintf_internal_r+0x310>
 800b824:	d9002017 	ldw	r4,128(sp)
 800b828:	20c00417 	ldw	r3,16(r4)
 800b82c:	1800a226 	beq	r3,zero,800bab8 <___vfiprintf_internal_r+0x310>
 800b830:	1080068c 	andi	r2,r2,26
 800b834:	00c00284 	movi	r3,10
 800b838:	10c0a826 	beq	r2,r3,800badc <___vfiprintf_internal_r+0x334>
 800b83c:	d9001a04 	addi	r4,sp,104
 800b840:	d94019c4 	addi	r5,sp,103
 800b844:	04820074 	movhi	r18,2049
 800b848:	2145c83a 	sub	r2,r4,r5
 800b84c:	94910904 	addi	r18,r18,17444
 800b850:	d9001e15 	stw	r4,120(sp)
 800b854:	d9401f15 	stw	r5,124(sp)
 800b858:	dec01a15 	stw	sp,104(sp)
 800b85c:	d8001c15 	stw	zero,112(sp)
 800b860:	d8001b15 	stw	zero,108(sp)
 800b864:	d811883a 	mov	r8,sp
 800b868:	d8002615 	stw	zero,152(sp)
 800b86c:	d8002415 	stw	zero,144(sp)
 800b870:	d8802815 	stw	r2,160(sp)
 800b874:	a82d883a 	mov	r22,r21
 800b878:	b0800007 	ldb	r2,0(r22)
 800b87c:	10040d26 	beq	r2,zero,800c8b4 <___vfiprintf_internal_r+0x110c>
 800b880:	00c00944 	movi	r3,37
 800b884:	b029883a 	mov	r20,r22
 800b888:	10c0021e 	bne	r2,r3,800b894 <___vfiprintf_internal_r+0xec>
 800b88c:	00001606 	br	800b8e8 <___vfiprintf_internal_r+0x140>
 800b890:	10c00326 	beq	r2,r3,800b8a0 <___vfiprintf_internal_r+0xf8>
 800b894:	a5000044 	addi	r20,r20,1
 800b898:	a0800007 	ldb	r2,0(r20)
 800b89c:	103ffc1e 	bne	r2,zero,800b890 <__alt_data_end+0xfc00b890>
 800b8a0:	a5a1c83a 	sub	r16,r20,r22
 800b8a4:	80001026 	beq	r16,zero,800b8e8 <___vfiprintf_internal_r+0x140>
 800b8a8:	d8c01c17 	ldw	r3,112(sp)
 800b8ac:	d8801b17 	ldw	r2,108(sp)
 800b8b0:	45800015 	stw	r22,0(r8)
 800b8b4:	80c7883a 	add	r3,r16,r3
 800b8b8:	10800044 	addi	r2,r2,1
 800b8bc:	44000115 	stw	r16,4(r8)
 800b8c0:	d8c01c15 	stw	r3,112(sp)
 800b8c4:	d8801b15 	stw	r2,108(sp)
 800b8c8:	010001c4 	movi	r4,7
 800b8cc:	2080750e 	bge	r4,r2,800baa4 <___vfiprintf_internal_r+0x2fc>
 800b8d0:	1803951e 	bne	r3,zero,800c728 <___vfiprintf_internal_r+0xf80>
 800b8d4:	d8c02417 	ldw	r3,144(sp)
 800b8d8:	d8001b15 	stw	zero,108(sp)
 800b8dc:	d811883a 	mov	r8,sp
 800b8e0:	1c07883a 	add	r3,r3,r16
 800b8e4:	d8c02415 	stw	r3,144(sp)
 800b8e8:	a0800007 	ldb	r2,0(r20)
 800b8ec:	1002e026 	beq	r2,zero,800c470 <___vfiprintf_internal_r+0xcc8>
 800b8f0:	a5800044 	addi	r22,r20,1
 800b8f4:	a0c00047 	ldb	r3,1(r20)
 800b8f8:	d8001d85 	stb	zero,118(sp)
 800b8fc:	0027883a 	mov	r19,zero
 800b900:	d8002305 	stb	zero,140(sp)
 800b904:	043fffc4 	movi	r16,-1
 800b908:	d8002515 	stw	zero,148(sp)
 800b90c:	0023883a 	mov	r17,zero
 800b910:	05001604 	movi	r20,88
 800b914:	05400244 	movi	r21,9
 800b918:	402f883a 	mov	r23,r8
 800b91c:	b5800044 	addi	r22,r22,1
 800b920:	18bff804 	addi	r2,r3,-32
 800b924:	a0827736 	bltu	r20,r2,800c304 <___vfiprintf_internal_r+0xb5c>
 800b928:	100490ba 	slli	r2,r2,2
 800b92c:	01020074 	movhi	r4,2049
 800b930:	212e5004 	addi	r4,r4,-18112
 800b934:	1105883a 	add	r2,r2,r4
 800b938:	10800017 	ldw	r2,0(r2)
 800b93c:	1000683a 	jmp	r2
 800b940:	0800c004 	addi	zero,at,768
 800b944:	0800c304 	addi	zero,at,780
 800b948:	0800c304 	addi	zero,at,780
 800b94c:	0800c020 	cmpeqi	zero,at,768
 800b950:	0800c304 	addi	zero,at,780
 800b954:	0800c304 	addi	zero,at,780
 800b958:	0800c304 	addi	zero,at,780
 800b95c:	0800c304 	addi	zero,at,780
 800b960:	0800c304 	addi	zero,at,780
 800b964:	0800c304 	addi	zero,at,780
 800b968:	0800c228 	cmpgeui	zero,at,776
 800b96c:	0800c24c 	andi	zero,at,777
 800b970:	0800c304 	addi	zero,at,780
 800b974:	0800bb44 	addi	zero,at,749
 800b978:	0800c260 	cmpeqi	zero,at,777
 800b97c:	0800c304 	addi	zero,at,780
 800b980:	0800c02c 	andhi	zero,at,768
 800b984:	0800c038 	rdprs	zero,at,768
 800b988:	0800c038 	rdprs	zero,at,768
 800b98c:	0800c038 	rdprs	zero,at,768
 800b990:	0800c038 	rdprs	zero,at,768
 800b994:	0800c038 	rdprs	zero,at,768
 800b998:	0800c038 	rdprs	zero,at,768
 800b99c:	0800c038 	rdprs	zero,at,768
 800b9a0:	0800c038 	rdprs	zero,at,768
 800b9a4:	0800c038 	rdprs	zero,at,768
 800b9a8:	0800c304 	addi	zero,at,780
 800b9ac:	0800c304 	addi	zero,at,780
 800b9b0:	0800c304 	addi	zero,at,780
 800b9b4:	0800c304 	addi	zero,at,780
 800b9b8:	0800c304 	addi	zero,at,780
 800b9bc:	0800c304 	addi	zero,at,780
 800b9c0:	0800c304 	addi	zero,at,780
 800b9c4:	0800c304 	addi	zero,at,780
 800b9c8:	0800c304 	addi	zero,at,780
 800b9cc:	0800c304 	addi	zero,at,780
 800b9d0:	0800c078 	rdprs	zero,at,769
 800b9d4:	0800c304 	addi	zero,at,780
 800b9d8:	0800c304 	addi	zero,at,780
 800b9dc:	0800c304 	addi	zero,at,780
 800b9e0:	0800c304 	addi	zero,at,780
 800b9e4:	0800c304 	addi	zero,at,780
 800b9e8:	0800c304 	addi	zero,at,780
 800b9ec:	0800c304 	addi	zero,at,780
 800b9f0:	0800c304 	addi	zero,at,780
 800b9f4:	0800c304 	addi	zero,at,780
 800b9f8:	0800c304 	addi	zero,at,780
 800b9fc:	0800c0b4 	orhi	zero,at,770
 800ba00:	0800c304 	addi	zero,at,780
 800ba04:	0800c304 	addi	zero,at,780
 800ba08:	0800c304 	addi	zero,at,780
 800ba0c:	0800c304 	addi	zero,at,780
 800ba10:	0800c304 	addi	zero,at,780
 800ba14:	0800c110 	cmplti	zero,at,772
 800ba18:	0800c304 	addi	zero,at,780
 800ba1c:	0800c304 	addi	zero,at,780
 800ba20:	0800c184 	addi	zero,at,774
 800ba24:	0800c304 	addi	zero,at,780
 800ba28:	0800c304 	addi	zero,at,780
 800ba2c:	0800c304 	addi	zero,at,780
 800ba30:	0800c304 	addi	zero,at,780
 800ba34:	0800c304 	addi	zero,at,780
 800ba38:	0800c304 	addi	zero,at,780
 800ba3c:	0800c304 	addi	zero,at,780
 800ba40:	0800c304 	addi	zero,at,780
 800ba44:	0800c304 	addi	zero,at,780
 800ba48:	0800c304 	addi	zero,at,780
 800ba4c:	0800bf2c 	andhi	zero,at,764
 800ba50:	0800bf5c 	xori	zero,at,765
 800ba54:	0800c304 	addi	zero,at,780
 800ba58:	0800c304 	addi	zero,at,780
 800ba5c:	0800c304 	addi	zero,at,780
 800ba60:	0800c2ac 	andhi	zero,at,778
 800ba64:	0800bf5c 	xori	zero,at,765
 800ba68:	0800c304 	addi	zero,at,780
 800ba6c:	0800c304 	addi	zero,at,780
 800ba70:	0800be04 	addi	zero,at,760
 800ba74:	0800c304 	addi	zero,at,780
 800ba78:	0800be18 	cmpnei	zero,at,760
 800ba7c:	0800be50 	cmplti	zero,at,761
 800ba80:	0800bb50 	cmplti	zero,at,749
 800ba84:	0800bdf8 	rdprs	zero,at,759
 800ba88:	0800c304 	addi	zero,at,780
 800ba8c:	0800c1c4 	addi	zero,at,775
 800ba90:	0800c304 	addi	zero,at,780
 800ba94:	0800c210 	cmplti	zero,at,776
 800ba98:	0800c304 	addi	zero,at,780
 800ba9c:	0800c304 	addi	zero,at,780
 800baa0:	0800bed4 	ori	zero,at,763
 800baa4:	42000204 	addi	r8,r8,8
 800baa8:	d8c02417 	ldw	r3,144(sp)
 800baac:	1c07883a 	add	r3,r3,r16
 800bab0:	d8c02415 	stw	r3,144(sp)
 800bab4:	003f8c06 	br	800b8e8 <__alt_data_end+0xfc00b8e8>
 800bab8:	d9402017 	ldw	r5,128(sp)
 800babc:	d9002117 	ldw	r4,132(sp)
 800bac0:	8005ac40 	call	8005ac4 <__swsetup_r>
 800bac4:	1003c11e 	bne	r2,zero,800c9cc <___vfiprintf_internal_r+0x1224>
 800bac8:	d9402017 	ldw	r5,128(sp)
 800bacc:	00c00284 	movi	r3,10
 800bad0:	2880030b 	ldhu	r2,12(r5)
 800bad4:	1080068c 	andi	r2,r2,26
 800bad8:	10ff581e 	bne	r2,r3,800b83c <__alt_data_end+0xfc00b83c>
 800badc:	d8c02017 	ldw	r3,128(sp)
 800bae0:	1880038f 	ldh	r2,14(r3)
 800bae4:	103f5516 	blt	r2,zero,800b83c <__alt_data_end+0xfc00b83c>
 800bae8:	d9c02217 	ldw	r7,136(sp)
 800baec:	d9002117 	ldw	r4,132(sp)
 800baf0:	a80d883a 	mov	r6,r21
 800baf4:	180b883a 	mov	r5,r3
 800baf8:	800ccd00 	call	800ccd0 <__sbprintf>
 800bafc:	dfc03517 	ldw	ra,212(sp)
 800bb00:	df003417 	ldw	fp,208(sp)
 800bb04:	ddc03317 	ldw	r23,204(sp)
 800bb08:	dd803217 	ldw	r22,200(sp)
 800bb0c:	dd403117 	ldw	r21,196(sp)
 800bb10:	dd003017 	ldw	r20,192(sp)
 800bb14:	dcc02f17 	ldw	r19,188(sp)
 800bb18:	dc802e17 	ldw	r18,184(sp)
 800bb1c:	dc402d17 	ldw	r17,180(sp)
 800bb20:	dc002c17 	ldw	r16,176(sp)
 800bb24:	dec03604 	addi	sp,sp,216
 800bb28:	f800283a 	ret
 800bb2c:	8007ad00 	call	8007ad0 <__sinit>
 800bb30:	003f2f06 	br	800b7f0 <__alt_data_end+0xfc00b7f0>
 800bb34:	d8c02517 	ldw	r3,148(sp)
 800bb38:	d8802215 	stw	r2,136(sp)
 800bb3c:	00c7c83a 	sub	r3,zero,r3
 800bb40:	d8c02515 	stw	r3,148(sp)
 800bb44:	8c400114 	ori	r17,r17,4
 800bb48:	b0c00007 	ldb	r3,0(r22)
 800bb4c:	003f7306 	br	800b91c <__alt_data_end+0xfc00b91c>
 800bb50:	00800c04 	movi	r2,48
 800bb54:	d9402217 	ldw	r5,136(sp)
 800bb58:	d8801d05 	stb	r2,116(sp)
 800bb5c:	00801e04 	movi	r2,120
 800bb60:	d8801d45 	stb	r2,117(sp)
 800bb64:	d8001d85 	stb	zero,118(sp)
 800bb68:	b811883a 	mov	r8,r23
 800bb6c:	28c00104 	addi	r3,r5,4
 800bb70:	2cc00017 	ldw	r19,0(r5)
 800bb74:	0029883a 	mov	r20,zero
 800bb78:	88800094 	ori	r2,r17,2
 800bb7c:	80032516 	blt	r16,zero,800c814 <___vfiprintf_internal_r+0x106c>
 800bb80:	00bfdfc4 	movi	r2,-129
 800bb84:	88a2703a 	and	r17,r17,r2
 800bb88:	d8c02215 	stw	r3,136(sp)
 800bb8c:	8c400094 	ori	r17,r17,2
 800bb90:	98032a1e 	bne	r19,zero,800c83c <___vfiprintf_internal_r+0x1094>
 800bb94:	00820074 	movhi	r2,2049
 800bb98:	10909804 	addi	r2,r2,16992
 800bb9c:	d8802615 	stw	r2,152(sp)
 800bba0:	002b883a 	mov	r21,zero
 800bba4:	8001741e 	bne	r16,zero,800c178 <___vfiprintf_internal_r+0x9d0>
 800bba8:	0021883a 	mov	r16,zero
 800bbac:	0029883a 	mov	r20,zero
 800bbb0:	ddc01a04 	addi	r23,sp,104
 800bbb4:	8027883a 	mov	r19,r16
 800bbb8:	8500010e 	bge	r16,r20,800bbc0 <___vfiprintf_internal_r+0x418>
 800bbbc:	a027883a 	mov	r19,r20
 800bbc0:	ad403fcc 	andi	r21,r21,255
 800bbc4:	ad40201c 	xori	r21,r21,128
 800bbc8:	ad7fe004 	addi	r21,r21,-128
 800bbcc:	a8000126 	beq	r21,zero,800bbd4 <___vfiprintf_internal_r+0x42c>
 800bbd0:	9cc00044 	addi	r19,r19,1
 800bbd4:	89c0008c 	andi	r7,r17,2
 800bbd8:	38000126 	beq	r7,zero,800bbe0 <___vfiprintf_internal_r+0x438>
 800bbdc:	9cc00084 	addi	r19,r19,2
 800bbe0:	88c0210c 	andi	r3,r17,132
 800bbe4:	1801dd1e 	bne	r3,zero,800c35c <___vfiprintf_internal_r+0xbb4>
 800bbe8:	d9402517 	ldw	r5,148(sp)
 800bbec:	2cebc83a 	sub	r21,r5,r19
 800bbf0:	0541da0e 	bge	zero,r21,800c35c <___vfiprintf_internal_r+0xbb4>
 800bbf4:	07000404 	movi	fp,16
 800bbf8:	d8801c17 	ldw	r2,112(sp)
 800bbfc:	e543be0e 	bge	fp,r21,800caf8 <___vfiprintf_internal_r+0x1350>
 800bc00:	01420074 	movhi	r5,2049
 800bc04:	29510d04 	addi	r5,r5,17460
 800bc08:	dc002715 	stw	r16,156(sp)
 800bc0c:	d9801b17 	ldw	r6,108(sp)
 800bc10:	a821883a 	mov	r16,r21
 800bc14:	d9402315 	stw	r5,140(sp)
 800bc18:	028001c4 	movi	r10,7
 800bc1c:	d9c02915 	stw	r7,164(sp)
 800bc20:	182b883a 	mov	r21,r3
 800bc24:	00000506 	br	800bc3c <___vfiprintf_internal_r+0x494>
 800bc28:	31000084 	addi	r4,r6,2
 800bc2c:	42000204 	addi	r8,r8,8
 800bc30:	180d883a 	mov	r6,r3
 800bc34:	843ffc04 	addi	r16,r16,-16
 800bc38:	e4000f0e 	bge	fp,r16,800bc78 <___vfiprintf_internal_r+0x4d0>
 800bc3c:	01020074 	movhi	r4,2049
 800bc40:	10800404 	addi	r2,r2,16
 800bc44:	30c00044 	addi	r3,r6,1
 800bc48:	21110d04 	addi	r4,r4,17460
 800bc4c:	41000015 	stw	r4,0(r8)
 800bc50:	47000115 	stw	fp,4(r8)
 800bc54:	d8801c15 	stw	r2,112(sp)
 800bc58:	d8c01b15 	stw	r3,108(sp)
 800bc5c:	50fff20e 	bge	r10,r3,800bc28 <__alt_data_end+0xfc00bc28>
 800bc60:	1001b21e 	bne	r2,zero,800c32c <___vfiprintf_internal_r+0xb84>
 800bc64:	843ffc04 	addi	r16,r16,-16
 800bc68:	000d883a 	mov	r6,zero
 800bc6c:	01000044 	movi	r4,1
 800bc70:	d811883a 	mov	r8,sp
 800bc74:	e43ff116 	blt	fp,r16,800bc3c <__alt_data_end+0xfc00bc3c>
 800bc78:	a807883a 	mov	r3,r21
 800bc7c:	d9c02917 	ldw	r7,164(sp)
 800bc80:	802b883a 	mov	r21,r16
 800bc84:	dc002717 	ldw	r16,156(sp)
 800bc88:	d9402317 	ldw	r5,140(sp)
 800bc8c:	a885883a 	add	r2,r21,r2
 800bc90:	45400115 	stw	r21,4(r8)
 800bc94:	41400015 	stw	r5,0(r8)
 800bc98:	d8801c15 	stw	r2,112(sp)
 800bc9c:	d9001b15 	stw	r4,108(sp)
 800bca0:	014001c4 	movi	r5,7
 800bca4:	29026216 	blt	r5,r4,800c630 <___vfiprintf_internal_r+0xe88>
 800bca8:	d9801d87 	ldb	r6,118(sp)
 800bcac:	42000204 	addi	r8,r8,8
 800bcb0:	21400044 	addi	r5,r4,1
 800bcb4:	3001ae1e 	bne	r6,zero,800c370 <___vfiprintf_internal_r+0xbc8>
 800bcb8:	3801bb26 	beq	r7,zero,800c3a8 <___vfiprintf_internal_r+0xc00>
 800bcbc:	d9001d04 	addi	r4,sp,116
 800bcc0:	10800084 	addi	r2,r2,2
 800bcc4:	41000015 	stw	r4,0(r8)
 800bcc8:	01000084 	movi	r4,2
 800bccc:	41000115 	stw	r4,4(r8)
 800bcd0:	d8801c15 	stw	r2,112(sp)
 800bcd4:	d9401b15 	stw	r5,108(sp)
 800bcd8:	010001c4 	movi	r4,7
 800bcdc:	2142680e 	bge	r4,r5,800c680 <___vfiprintf_internal_r+0xed8>
 800bce0:	1002b11e 	bne	r2,zero,800c7a8 <___vfiprintf_internal_r+0x1000>
 800bce4:	01802004 	movi	r6,128
 800bce8:	01400044 	movi	r5,1
 800bcec:	0009883a 	mov	r4,zero
 800bcf0:	d811883a 	mov	r8,sp
 800bcf4:	1981ae1e 	bne	r3,r6,800c3b0 <___vfiprintf_internal_r+0xc08>
 800bcf8:	d8c02517 	ldw	r3,148(sp)
 800bcfc:	1cf9c83a 	sub	fp,r3,r19
 800bd00:	0701ab0e 	bge	zero,fp,800c3b0 <___vfiprintf_internal_r+0xc08>
 800bd04:	05400404 	movi	r21,16
 800bd08:	af03a90e 	bge	r21,fp,800cbb0 <___vfiprintf_internal_r+0x1408>
 800bd0c:	01420074 	movhi	r5,2049
 800bd10:	29510904 	addi	r5,r5,17444
 800bd14:	d9402315 	stw	r5,140(sp)
 800bd18:	01c001c4 	movi	r7,7
 800bd1c:	00000506 	br	800bd34 <___vfiprintf_internal_r+0x58c>
 800bd20:	21800084 	addi	r6,r4,2
 800bd24:	42000204 	addi	r8,r8,8
 800bd28:	1809883a 	mov	r4,r3
 800bd2c:	e73ffc04 	addi	fp,fp,-16
 800bd30:	af000d0e 	bge	r21,fp,800bd68 <___vfiprintf_internal_r+0x5c0>
 800bd34:	10800404 	addi	r2,r2,16
 800bd38:	20c00044 	addi	r3,r4,1
 800bd3c:	44800015 	stw	r18,0(r8)
 800bd40:	45400115 	stw	r21,4(r8)
 800bd44:	d8801c15 	stw	r2,112(sp)
 800bd48:	d8c01b15 	stw	r3,108(sp)
 800bd4c:	38fff40e 	bge	r7,r3,800bd20 <__alt_data_end+0xfc00bd20>
 800bd50:	10022b1e 	bne	r2,zero,800c600 <___vfiprintf_internal_r+0xe58>
 800bd54:	e73ffc04 	addi	fp,fp,-16
 800bd58:	01800044 	movi	r6,1
 800bd5c:	0009883a 	mov	r4,zero
 800bd60:	d811883a 	mov	r8,sp
 800bd64:	af3ff316 	blt	r21,fp,800bd34 <__alt_data_end+0xfc00bd34>
 800bd68:	d8c02317 	ldw	r3,140(sp)
 800bd6c:	1705883a 	add	r2,r2,fp
 800bd70:	47000115 	stw	fp,4(r8)
 800bd74:	40c00015 	stw	r3,0(r8)
 800bd78:	d8801c15 	stw	r2,112(sp)
 800bd7c:	d9801b15 	stw	r6,108(sp)
 800bd80:	00c001c4 	movi	r3,7
 800bd84:	19829416 	blt	r3,r6,800c7d8 <___vfiprintf_internal_r+0x1030>
 800bd88:	8521c83a 	sub	r16,r16,r20
 800bd8c:	42000204 	addi	r8,r8,8
 800bd90:	31400044 	addi	r5,r6,1
 800bd94:	3009883a 	mov	r4,r6
 800bd98:	04018716 	blt	zero,r16,800c3b8 <___vfiprintf_internal_r+0xc10>
 800bd9c:	a085883a 	add	r2,r20,r2
 800bda0:	45c00015 	stw	r23,0(r8)
 800bda4:	45000115 	stw	r20,4(r8)
 800bda8:	d8801c15 	stw	r2,112(sp)
 800bdac:	d9401b15 	stw	r5,108(sp)
 800bdb0:	00c001c4 	movi	r3,7
 800bdb4:	1941c20e 	bge	r3,r5,800c4c0 <___vfiprintf_internal_r+0xd18>
 800bdb8:	1002531e 	bne	r2,zero,800c708 <___vfiprintf_internal_r+0xf60>
 800bdbc:	d8001b15 	stw	zero,108(sp)
 800bdc0:	8c40010c 	andi	r17,r17,4
 800bdc4:	88023226 	beq	r17,zero,800c690 <___vfiprintf_internal_r+0xee8>
 800bdc8:	d9002517 	ldw	r4,148(sp)
 800bdcc:	24e3c83a 	sub	r17,r4,r19
 800bdd0:	04432916 	blt	zero,r17,800ca78 <___vfiprintf_internal_r+0x12d0>
 800bdd4:	d8802517 	ldw	r2,148(sp)
 800bdd8:	14c0010e 	bge	r2,r19,800bde0 <___vfiprintf_internal_r+0x638>
 800bddc:	9805883a 	mov	r2,r19
 800bde0:	d8c02417 	ldw	r3,144(sp)
 800bde4:	1887883a 	add	r3,r3,r2
 800bde8:	d8c02415 	stw	r3,144(sp)
 800bdec:	d8001b15 	stw	zero,108(sp)
 800bdf0:	d811883a 	mov	r8,sp
 800bdf4:	003ea006 	br	800b878 <__alt_data_end+0xfc00b878>
 800bdf8:	8c400814 	ori	r17,r17,32
 800bdfc:	b0c00007 	ldb	r3,0(r22)
 800be00:	003ec606 	br	800b91c <__alt_data_end+0xfc00b91c>
 800be04:	b0c00007 	ldb	r3,0(r22)
 800be08:	00801b04 	movi	r2,108
 800be0c:	18832026 	beq	r3,r2,800ca90 <___vfiprintf_internal_r+0x12e8>
 800be10:	8c400414 	ori	r17,r17,16
 800be14:	003ec106 	br	800b91c <__alt_data_end+0xfc00b91c>
 800be18:	9cc03fcc 	andi	r19,r19,255
 800be1c:	b811883a 	mov	r8,r23
 800be20:	9803981e 	bne	r19,zero,800cc84 <___vfiprintf_internal_r+0x14dc>
 800be24:	8880080c 	andi	r2,r17,32
 800be28:	1002be26 	beq	r2,zero,800c924 <___vfiprintf_internal_r+0x117c>
 800be2c:	d9002217 	ldw	r4,136(sp)
 800be30:	d9402417 	ldw	r5,144(sp)
 800be34:	20800017 	ldw	r2,0(r4)
 800be38:	2807d7fa 	srai	r3,r5,31
 800be3c:	21000104 	addi	r4,r4,4
 800be40:	d9002215 	stw	r4,136(sp)
 800be44:	11400015 	stw	r5,0(r2)
 800be48:	10c00115 	stw	r3,4(r2)
 800be4c:	003e8a06 	br	800b878 <__alt_data_end+0xfc00b878>
 800be50:	9cc03fcc 	andi	r19,r19,255
 800be54:	b811883a 	mov	r8,r23
 800be58:	9803871e 	bne	r19,zero,800cc78 <___vfiprintf_internal_r+0x14d0>
 800be5c:	8880080c 	andi	r2,r17,32
 800be60:	10009a26 	beq	r2,zero,800c0cc <___vfiprintf_internal_r+0x924>
 800be64:	d9002217 	ldw	r4,136(sp)
 800be68:	d8001d85 	stb	zero,118(sp)
 800be6c:	20800204 	addi	r2,r4,8
 800be70:	24c00017 	ldw	r19,0(r4)
 800be74:	25000117 	ldw	r20,4(r4)
 800be78:	8002a416 	blt	r16,zero,800c90c <___vfiprintf_internal_r+0x1164>
 800be7c:	013fdfc4 	movi	r4,-129
 800be80:	9d06b03a 	or	r3,r19,r20
 800be84:	d8802215 	stw	r2,136(sp)
 800be88:	8922703a 	and	r17,r17,r4
 800be8c:	18009b26 	beq	r3,zero,800c0fc <___vfiprintf_internal_r+0x954>
 800be90:	002b883a 	mov	r21,zero
 800be94:	ddc01a04 	addi	r23,sp,104
 800be98:	9806d0fa 	srli	r3,r19,3
 800be9c:	a008977a 	slli	r4,r20,29
 800bea0:	a028d0fa 	srli	r20,r20,3
 800bea4:	9cc001cc 	andi	r19,r19,7
 800bea8:	98800c04 	addi	r2,r19,48
 800beac:	bdffffc4 	addi	r23,r23,-1
 800beb0:	20e6b03a 	or	r19,r4,r3
 800beb4:	b8800005 	stb	r2,0(r23)
 800beb8:	9d06b03a 	or	r3,r19,r20
 800bebc:	183ff61e 	bne	r3,zero,800be98 <__alt_data_end+0xfc00be98>
 800bec0:	88c0004c 	andi	r3,r17,1
 800bec4:	18021f1e 	bne	r3,zero,800c744 <___vfiprintf_internal_r+0xf9c>
 800bec8:	d9401e17 	ldw	r5,120(sp)
 800becc:	2de9c83a 	sub	r20,r5,r23
 800bed0:	003f3806 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800bed4:	9cc03fcc 	andi	r19,r19,255
 800bed8:	b811883a 	mov	r8,r23
 800bedc:	98034f1e 	bne	r19,zero,800cc1c <___vfiprintf_internal_r+0x1474>
 800bee0:	00820074 	movhi	r2,2049
 800bee4:	10909804 	addi	r2,r2,16992
 800bee8:	d8802615 	stw	r2,152(sp)
 800beec:	8880080c 	andi	r2,r17,32
 800bef0:	1000ac26 	beq	r2,zero,800c1a4 <___vfiprintf_internal_r+0x9fc>
 800bef4:	d9002217 	ldw	r4,136(sp)
 800bef8:	24c00017 	ldw	r19,0(r4)
 800befc:	25000117 	ldw	r20,4(r4)
 800bf00:	21000204 	addi	r4,r4,8
 800bf04:	d9002215 	stw	r4,136(sp)
 800bf08:	8880004c 	andi	r2,r17,1
 800bf0c:	1001e726 	beq	r2,zero,800c6ac <___vfiprintf_internal_r+0xf04>
 800bf10:	9d04b03a 	or	r2,r19,r20
 800bf14:	10025c1e 	bne	r2,zero,800c888 <___vfiprintf_internal_r+0x10e0>
 800bf18:	d8001d85 	stb	zero,118(sp)
 800bf1c:	80024416 	blt	r16,zero,800c830 <___vfiprintf_internal_r+0x1088>
 800bf20:	00bfdfc4 	movi	r2,-129
 800bf24:	88a2703a 	and	r17,r17,r2
 800bf28:	003f1d06 	br	800bba0 <__alt_data_end+0xfc00bba0>
 800bf2c:	d8c02217 	ldw	r3,136(sp)
 800bf30:	04c00044 	movi	r19,1
 800bf34:	b811883a 	mov	r8,r23
 800bf38:	18800017 	ldw	r2,0(r3)
 800bf3c:	18c00104 	addi	r3,r3,4
 800bf40:	d8001d85 	stb	zero,118(sp)
 800bf44:	d8801005 	stb	r2,64(sp)
 800bf48:	d8c02215 	stw	r3,136(sp)
 800bf4c:	9829883a 	mov	r20,r19
 800bf50:	ddc01004 	addi	r23,sp,64
 800bf54:	0021883a 	mov	r16,zero
 800bf58:	003f1e06 	br	800bbd4 <__alt_data_end+0xfc00bbd4>
 800bf5c:	9cc03fcc 	andi	r19,r19,255
 800bf60:	b811883a 	mov	r8,r23
 800bf64:	9803331e 	bne	r19,zero,800cc34 <___vfiprintf_internal_r+0x148c>
 800bf68:	8880080c 	andi	r2,r17,32
 800bf6c:	10004826 	beq	r2,zero,800c090 <___vfiprintf_internal_r+0x8e8>
 800bf70:	d9002217 	ldw	r4,136(sp)
 800bf74:	20800117 	ldw	r2,4(r4)
 800bf78:	24c00017 	ldw	r19,0(r4)
 800bf7c:	21000204 	addi	r4,r4,8
 800bf80:	d9002215 	stw	r4,136(sp)
 800bf84:	1029883a 	mov	r20,r2
 800bf88:	10024c16 	blt	r2,zero,800c8bc <___vfiprintf_internal_r+0x1114>
 800bf8c:	dd401d83 	ldbu	r21,118(sp)
 800bf90:	80007116 	blt	r16,zero,800c158 <___vfiprintf_internal_r+0x9b0>
 800bf94:	00ffdfc4 	movi	r3,-129
 800bf98:	9d04b03a 	or	r2,r19,r20
 800bf9c:	88e2703a 	and	r17,r17,r3
 800bfa0:	1000d126 	beq	r2,zero,800c2e8 <___vfiprintf_internal_r+0xb40>
 800bfa4:	a0023526 	beq	r20,zero,800c87c <___vfiprintf_internal_r+0x10d4>
 800bfa8:	ddc01a04 	addi	r23,sp,104
 800bfac:	4039883a 	mov	fp,r8
 800bfb0:	9809883a 	mov	r4,r19
 800bfb4:	a00b883a 	mov	r5,r20
 800bfb8:	01800284 	movi	r6,10
 800bfbc:	000f883a 	mov	r7,zero
 800bfc0:	800e9680 	call	800e968 <__umoddi3>
 800bfc4:	10800c04 	addi	r2,r2,48
 800bfc8:	bdffffc4 	addi	r23,r23,-1
 800bfcc:	9809883a 	mov	r4,r19
 800bfd0:	a00b883a 	mov	r5,r20
 800bfd4:	b8800005 	stb	r2,0(r23)
 800bfd8:	01800284 	movi	r6,10
 800bfdc:	000f883a 	mov	r7,zero
 800bfe0:	800e36c0 	call	800e36c <__udivdi3>
 800bfe4:	1027883a 	mov	r19,r2
 800bfe8:	10c4b03a 	or	r2,r2,r3
 800bfec:	1829883a 	mov	r20,r3
 800bff0:	103fef1e 	bne	r2,zero,800bfb0 <__alt_data_end+0xfc00bfb0>
 800bff4:	d9001e17 	ldw	r4,120(sp)
 800bff8:	e011883a 	mov	r8,fp
 800bffc:	25e9c83a 	sub	r20,r4,r23
 800c000:	003eec06 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800c004:	d8802307 	ldb	r2,140(sp)
 800c008:	1002361e 	bne	r2,zero,800c8e4 <___vfiprintf_internal_r+0x113c>
 800c00c:	00c00804 	movi	r3,32
 800c010:	d8c02305 	stb	r3,140(sp)
 800c014:	04c00044 	movi	r19,1
 800c018:	b0c00007 	ldb	r3,0(r22)
 800c01c:	003e3f06 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c020:	8c400054 	ori	r17,r17,1
 800c024:	b0c00007 	ldb	r3,0(r22)
 800c028:	003e3c06 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c02c:	8c402014 	ori	r17,r17,128
 800c030:	b0c00007 	ldb	r3,0(r22)
 800c034:	003e3906 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c038:	dc002715 	stw	r16,156(sp)
 800c03c:	d8002515 	stw	zero,148(sp)
 800c040:	1f3ff404 	addi	fp,r3,-48
 800c044:	0009883a 	mov	r4,zero
 800c048:	b021883a 	mov	r16,r22
 800c04c:	01400284 	movi	r5,10
 800c050:	80010a00 	call	80010a0 <__mulsi3>
 800c054:	80c00007 	ldb	r3,0(r16)
 800c058:	e089883a 	add	r4,fp,r2
 800c05c:	b5800044 	addi	r22,r22,1
 800c060:	1f3ff404 	addi	fp,r3,-48
 800c064:	b021883a 	mov	r16,r22
 800c068:	af3ff82e 	bgeu	r21,fp,800c04c <__alt_data_end+0xfc00c04c>
 800c06c:	d9002515 	stw	r4,148(sp)
 800c070:	dc002717 	ldw	r16,156(sp)
 800c074:	003e2a06 	br	800b920 <__alt_data_end+0xfc00b920>
 800c078:	9cc03fcc 	andi	r19,r19,255
 800c07c:	b811883a 	mov	r8,r23
 800c080:	9802e91e 	bne	r19,zero,800cc28 <___vfiprintf_internal_r+0x1480>
 800c084:	8c400414 	ori	r17,r17,16
 800c088:	8880080c 	andi	r2,r17,32
 800c08c:	103fb81e 	bne	r2,zero,800bf70 <__alt_data_end+0xfc00bf70>
 800c090:	8880040c 	andi	r2,r17,16
 800c094:	10022e26 	beq	r2,zero,800c950 <___vfiprintf_internal_r+0x11a8>
 800c098:	d9402217 	ldw	r5,136(sp)
 800c09c:	2cc00017 	ldw	r19,0(r5)
 800c0a0:	29400104 	addi	r5,r5,4
 800c0a4:	d9402215 	stw	r5,136(sp)
 800c0a8:	9829d7fa 	srai	r20,r19,31
 800c0ac:	a005883a 	mov	r2,r20
 800c0b0:	003fb506 	br	800bf88 <__alt_data_end+0xfc00bf88>
 800c0b4:	9cc03fcc 	andi	r19,r19,255
 800c0b8:	b811883a 	mov	r8,r23
 800c0bc:	9802fa1e 	bne	r19,zero,800cca8 <___vfiprintf_internal_r+0x1500>
 800c0c0:	8c400414 	ori	r17,r17,16
 800c0c4:	8880080c 	andi	r2,r17,32
 800c0c8:	103f661e 	bne	r2,zero,800be64 <__alt_data_end+0xfc00be64>
 800c0cc:	8880040c 	andi	r2,r17,16
 800c0d0:	10020626 	beq	r2,zero,800c8ec <___vfiprintf_internal_r+0x1144>
 800c0d4:	d9402217 	ldw	r5,136(sp)
 800c0d8:	d8001d85 	stb	zero,118(sp)
 800c0dc:	0029883a 	mov	r20,zero
 800c0e0:	28800104 	addi	r2,r5,4
 800c0e4:	2cc00017 	ldw	r19,0(r5)
 800c0e8:	80020816 	blt	r16,zero,800c90c <___vfiprintf_internal_r+0x1164>
 800c0ec:	00ffdfc4 	movi	r3,-129
 800c0f0:	d8802215 	stw	r2,136(sp)
 800c0f4:	88e2703a 	and	r17,r17,r3
 800c0f8:	983f651e 	bne	r19,zero,800be90 <__alt_data_end+0xfc00be90>
 800c0fc:	002b883a 	mov	r21,zero
 800c100:	8002cf26 	beq	r16,zero,800cc40 <___vfiprintf_internal_r+0x1498>
 800c104:	0027883a 	mov	r19,zero
 800c108:	0029883a 	mov	r20,zero
 800c10c:	003f6106 	br	800be94 <__alt_data_end+0xfc00be94>
 800c110:	9cc03fcc 	andi	r19,r19,255
 800c114:	b811883a 	mov	r8,r23
 800c118:	9802e01e 	bne	r19,zero,800cc9c <___vfiprintf_internal_r+0x14f4>
 800c11c:	8c400414 	ori	r17,r17,16
 800c120:	8880080c 	andi	r2,r17,32
 800c124:	1000641e 	bne	r2,zero,800c2b8 <___vfiprintf_internal_r+0xb10>
 800c128:	8880040c 	andi	r2,r17,16
 800c12c:	1001c81e 	bne	r2,zero,800c850 <___vfiprintf_internal_r+0x10a8>
 800c130:	8880100c 	andi	r2,r17,64
 800c134:	d8001d85 	stb	zero,118(sp)
 800c138:	1002281e 	bne	r2,zero,800c9dc <___vfiprintf_internal_r+0x1234>
 800c13c:	d9002217 	ldw	r4,136(sp)
 800c140:	0029883a 	mov	r20,zero
 800c144:	20800104 	addi	r2,r4,4
 800c148:	24c00017 	ldw	r19,0(r4)
 800c14c:	8001c60e 	bge	r16,zero,800c868 <___vfiprintf_internal_r+0x10c0>
 800c150:	d8802215 	stw	r2,136(sp)
 800c154:	002b883a 	mov	r21,zero
 800c158:	9d04b03a 	or	r2,r19,r20
 800c15c:	103f911e 	bne	r2,zero,800bfa4 <__alt_data_end+0xfc00bfa4>
 800c160:	00800044 	movi	r2,1
 800c164:	10803fcc 	andi	r2,r2,255
 800c168:	00c00044 	movi	r3,1
 800c16c:	10c05f26 	beq	r2,r3,800c2ec <___vfiprintf_internal_r+0xb44>
 800c170:	00c00084 	movi	r3,2
 800c174:	10ffe31e 	bne	r2,r3,800c104 <__alt_data_end+0xfc00c104>
 800c178:	0027883a 	mov	r19,zero
 800c17c:	0029883a 	mov	r20,zero
 800c180:	00015106 	br	800c6c8 <___vfiprintf_internal_r+0xf20>
 800c184:	9cc03fcc 	andi	r19,r19,255
 800c188:	b811883a 	mov	r8,r23
 800c18c:	9802c01e 	bne	r19,zero,800cc90 <___vfiprintf_internal_r+0x14e8>
 800c190:	01420074 	movhi	r5,2049
 800c194:	29509304 	addi	r5,r5,16972
 800c198:	d9402615 	stw	r5,152(sp)
 800c19c:	8880080c 	andi	r2,r17,32
 800c1a0:	103f541e 	bne	r2,zero,800bef4 <__alt_data_end+0xfc00bef4>
 800c1a4:	8880040c 	andi	r2,r17,16
 800c1a8:	1001f226 	beq	r2,zero,800c974 <___vfiprintf_internal_r+0x11cc>
 800c1ac:	d9402217 	ldw	r5,136(sp)
 800c1b0:	0029883a 	mov	r20,zero
 800c1b4:	2cc00017 	ldw	r19,0(r5)
 800c1b8:	29400104 	addi	r5,r5,4
 800c1bc:	d9402215 	stw	r5,136(sp)
 800c1c0:	003f5106 	br	800bf08 <__alt_data_end+0xfc00bf08>
 800c1c4:	d8c02217 	ldw	r3,136(sp)
 800c1c8:	b811883a 	mov	r8,r23
 800c1cc:	d8001d85 	stb	zero,118(sp)
 800c1d0:	1dc00017 	ldw	r23,0(r3)
 800c1d4:	1f000104 	addi	fp,r3,4
 800c1d8:	b8025926 	beq	r23,zero,800cb40 <___vfiprintf_internal_r+0x1398>
 800c1dc:	80023316 	blt	r16,zero,800caac <___vfiprintf_internal_r+0x1304>
 800c1e0:	800d883a 	mov	r6,r16
 800c1e4:	000b883a 	mov	r5,zero
 800c1e8:	b809883a 	mov	r4,r23
 800c1ec:	da002a15 	stw	r8,168(sp)
 800c1f0:	8008b800 	call	8008b80 <memchr>
 800c1f4:	da002a17 	ldw	r8,168(sp)
 800c1f8:	10026826 	beq	r2,zero,800cb9c <___vfiprintf_internal_r+0x13f4>
 800c1fc:	15e9c83a 	sub	r20,r2,r23
 800c200:	dd401d83 	ldbu	r21,118(sp)
 800c204:	df002215 	stw	fp,136(sp)
 800c208:	0021883a 	mov	r16,zero
 800c20c:	003e6906 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800c210:	9cc03fcc 	andi	r19,r19,255
 800c214:	b811883a 	mov	r8,r23
 800c218:	983fc126 	beq	r19,zero,800c120 <__alt_data_end+0xfc00c120>
 800c21c:	d8c02303 	ldbu	r3,140(sp)
 800c220:	d8c01d85 	stb	r3,118(sp)
 800c224:	003fbe06 	br	800c120 <__alt_data_end+0xfc00c120>
 800c228:	d9002217 	ldw	r4,136(sp)
 800c22c:	d9402217 	ldw	r5,136(sp)
 800c230:	21000017 	ldw	r4,0(r4)
 800c234:	28800104 	addi	r2,r5,4
 800c238:	d9002515 	stw	r4,148(sp)
 800c23c:	203e3d16 	blt	r4,zero,800bb34 <__alt_data_end+0xfc00bb34>
 800c240:	d8802215 	stw	r2,136(sp)
 800c244:	b0c00007 	ldb	r3,0(r22)
 800c248:	003db406 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c24c:	00c00ac4 	movi	r3,43
 800c250:	d8c02305 	stb	r3,140(sp)
 800c254:	04c00044 	movi	r19,1
 800c258:	b0c00007 	ldb	r3,0(r22)
 800c25c:	003daf06 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c260:	b0c00007 	ldb	r3,0(r22)
 800c264:	01000a84 	movi	r4,42
 800c268:	b4000044 	addi	r16,r22,1
 800c26c:	19025e26 	beq	r3,r4,800cbe8 <___vfiprintf_internal_r+0x1440>
 800c270:	1f3ff404 	addi	fp,r3,-48
 800c274:	0009883a 	mov	r4,zero
 800c278:	af025236 	bltu	r21,fp,800cbc4 <___vfiprintf_internal_r+0x141c>
 800c27c:	01400284 	movi	r5,10
 800c280:	80010a00 	call	80010a0 <__mulsi3>
 800c284:	80c00007 	ldb	r3,0(r16)
 800c288:	1709883a 	add	r4,r2,fp
 800c28c:	85800044 	addi	r22,r16,1
 800c290:	1f3ff404 	addi	fp,r3,-48
 800c294:	b021883a 	mov	r16,r22
 800c298:	af3ff82e 	bgeu	r21,fp,800c27c <__alt_data_end+0xfc00c27c>
 800c29c:	2021883a 	mov	r16,r4
 800c2a0:	203d9f0e 	bge	r4,zero,800b920 <__alt_data_end+0xfc00b920>
 800c2a4:	043fffc4 	movi	r16,-1
 800c2a8:	003d9d06 	br	800b920 <__alt_data_end+0xfc00b920>
 800c2ac:	8c401014 	ori	r17,r17,64
 800c2b0:	b0c00007 	ldb	r3,0(r22)
 800c2b4:	003d9906 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c2b8:	d9002217 	ldw	r4,136(sp)
 800c2bc:	d8001d85 	stb	zero,118(sp)
 800c2c0:	20c00204 	addi	r3,r4,8
 800c2c4:	24c00017 	ldw	r19,0(r4)
 800c2c8:	25000117 	ldw	r20,4(r4)
 800c2cc:	8001e716 	blt	r16,zero,800ca6c <___vfiprintf_internal_r+0x12c4>
 800c2d0:	013fdfc4 	movi	r4,-129
 800c2d4:	9d04b03a 	or	r2,r19,r20
 800c2d8:	d8c02215 	stw	r3,136(sp)
 800c2dc:	8922703a 	and	r17,r17,r4
 800c2e0:	002b883a 	mov	r21,zero
 800c2e4:	103f2f1e 	bne	r2,zero,800bfa4 <__alt_data_end+0xfc00bfa4>
 800c2e8:	803e2f26 	beq	r16,zero,800bba8 <__alt_data_end+0xfc00bba8>
 800c2ec:	0027883a 	mov	r19,zero
 800c2f0:	9cc00c04 	addi	r19,r19,48
 800c2f4:	dcc019c5 	stb	r19,103(sp)
 800c2f8:	dd002817 	ldw	r20,160(sp)
 800c2fc:	ddc019c4 	addi	r23,sp,103
 800c300:	003e2c06 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800c304:	9cc03fcc 	andi	r19,r19,255
 800c308:	b811883a 	mov	r8,r23
 800c30c:	9802571e 	bne	r19,zero,800cc6c <___vfiprintf_internal_r+0x14c4>
 800c310:	18005726 	beq	r3,zero,800c470 <___vfiprintf_internal_r+0xcc8>
 800c314:	04c00044 	movi	r19,1
 800c318:	d8c01005 	stb	r3,64(sp)
 800c31c:	d8001d85 	stb	zero,118(sp)
 800c320:	9829883a 	mov	r20,r19
 800c324:	ddc01004 	addi	r23,sp,64
 800c328:	003f0a06 	br	800bf54 <__alt_data_end+0xfc00bf54>
 800c32c:	d9402017 	ldw	r5,128(sp)
 800c330:	d9002117 	ldw	r4,132(sp)
 800c334:	d9801a04 	addi	r6,sp,104
 800c338:	da802a15 	stw	r10,168(sp)
 800c33c:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c340:	da802a17 	ldw	r10,168(sp)
 800c344:	1000501e 	bne	r2,zero,800c488 <___vfiprintf_internal_r+0xce0>
 800c348:	d9801b17 	ldw	r6,108(sp)
 800c34c:	d8801c17 	ldw	r2,112(sp)
 800c350:	d811883a 	mov	r8,sp
 800c354:	31000044 	addi	r4,r6,1
 800c358:	003e3606 	br	800bc34 <__alt_data_end+0xfc00bc34>
 800c35c:	d9001b17 	ldw	r4,108(sp)
 800c360:	d8801c17 	ldw	r2,112(sp)
 800c364:	21400044 	addi	r5,r4,1
 800c368:	d9801d87 	ldb	r6,118(sp)
 800c36c:	303e5226 	beq	r6,zero,800bcb8 <__alt_data_end+0xfc00bcb8>
 800c370:	01800044 	movi	r6,1
 800c374:	d9001d84 	addi	r4,sp,118
 800c378:	1185883a 	add	r2,r2,r6
 800c37c:	41000015 	stw	r4,0(r8)
 800c380:	41800115 	stw	r6,4(r8)
 800c384:	d8801c15 	stw	r2,112(sp)
 800c388:	d9401b15 	stw	r5,108(sp)
 800c38c:	010001c4 	movi	r4,7
 800c390:	2140b00e 	bge	r4,r5,800c654 <___vfiprintf_internal_r+0xeac>
 800c394:	1000f61e 	bne	r2,zero,800c770 <___vfiprintf_internal_r+0xfc8>
 800c398:	3800b31e 	bne	r7,zero,800c668 <___vfiprintf_internal_r+0xec0>
 800c39c:	0009883a 	mov	r4,zero
 800c3a0:	300b883a 	mov	r5,r6
 800c3a4:	d811883a 	mov	r8,sp
 800c3a8:	01802004 	movi	r6,128
 800c3ac:	19be5226 	beq	r3,r6,800bcf8 <__alt_data_end+0xfc00bcf8>
 800c3b0:	8521c83a 	sub	r16,r16,r20
 800c3b4:	043e790e 	bge	zero,r16,800bd9c <__alt_data_end+0xfc00bd9c>
 800c3b8:	05400404 	movi	r21,16
 800c3bc:	ac01b00e 	bge	r21,r16,800ca80 <___vfiprintf_internal_r+0x12d8>
 800c3c0:	01420074 	movhi	r5,2049
 800c3c4:	29510904 	addi	r5,r5,17444
 800c3c8:	d9402315 	stw	r5,140(sp)
 800c3cc:	070001c4 	movi	fp,7
 800c3d0:	00000506 	br	800c3e8 <___vfiprintf_internal_r+0xc40>
 800c3d4:	21400084 	addi	r5,r4,2
 800c3d8:	42000204 	addi	r8,r8,8
 800c3dc:	1809883a 	mov	r4,r3
 800c3e0:	843ffc04 	addi	r16,r16,-16
 800c3e4:	ac000d0e 	bge	r21,r16,800c41c <___vfiprintf_internal_r+0xc74>
 800c3e8:	10800404 	addi	r2,r2,16
 800c3ec:	20c00044 	addi	r3,r4,1
 800c3f0:	44800015 	stw	r18,0(r8)
 800c3f4:	45400115 	stw	r21,4(r8)
 800c3f8:	d8801c15 	stw	r2,112(sp)
 800c3fc:	d8c01b15 	stw	r3,108(sp)
 800c400:	e0fff40e 	bge	fp,r3,800c3d4 <__alt_data_end+0xfc00c3d4>
 800c404:	1000101e 	bne	r2,zero,800c448 <___vfiprintf_internal_r+0xca0>
 800c408:	843ffc04 	addi	r16,r16,-16
 800c40c:	01400044 	movi	r5,1
 800c410:	0009883a 	mov	r4,zero
 800c414:	d811883a 	mov	r8,sp
 800c418:	ac3ff316 	blt	r21,r16,800c3e8 <__alt_data_end+0xfc00c3e8>
 800c41c:	d8c02317 	ldw	r3,140(sp)
 800c420:	1405883a 	add	r2,r2,r16
 800c424:	44000115 	stw	r16,4(r8)
 800c428:	40c00015 	stw	r3,0(r8)
 800c42c:	d8801c15 	stw	r2,112(sp)
 800c430:	d9401b15 	stw	r5,108(sp)
 800c434:	00c001c4 	movi	r3,7
 800c438:	19401916 	blt	r3,r5,800c4a0 <___vfiprintf_internal_r+0xcf8>
 800c43c:	42000204 	addi	r8,r8,8
 800c440:	29400044 	addi	r5,r5,1
 800c444:	003e5506 	br	800bd9c <__alt_data_end+0xfc00bd9c>
 800c448:	d9402017 	ldw	r5,128(sp)
 800c44c:	d9002117 	ldw	r4,132(sp)
 800c450:	d9801a04 	addi	r6,sp,104
 800c454:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c458:	10000b1e 	bne	r2,zero,800c488 <___vfiprintf_internal_r+0xce0>
 800c45c:	d9001b17 	ldw	r4,108(sp)
 800c460:	d8801c17 	ldw	r2,112(sp)
 800c464:	d811883a 	mov	r8,sp
 800c468:	21400044 	addi	r5,r4,1
 800c46c:	003fdc06 	br	800c3e0 <__alt_data_end+0xfc00c3e0>
 800c470:	d8801c17 	ldw	r2,112(sp)
 800c474:	10000426 	beq	r2,zero,800c488 <___vfiprintf_internal_r+0xce0>
 800c478:	d9402017 	ldw	r5,128(sp)
 800c47c:	d9002117 	ldw	r4,132(sp)
 800c480:	d9801a04 	addi	r6,sp,104
 800c484:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c488:	d9402017 	ldw	r5,128(sp)
 800c48c:	2880030b 	ldhu	r2,12(r5)
 800c490:	1080100c 	andi	r2,r2,64
 800c494:	10014d1e 	bne	r2,zero,800c9cc <___vfiprintf_internal_r+0x1224>
 800c498:	d8802417 	ldw	r2,144(sp)
 800c49c:	003d9706 	br	800bafc <__alt_data_end+0xfc00bafc>
 800c4a0:	1000d21e 	bne	r2,zero,800c7ec <___vfiprintf_internal_r+0x1044>
 800c4a4:	00c00044 	movi	r3,1
 800c4a8:	a005883a 	mov	r2,r20
 800c4ac:	ddc00015 	stw	r23,0(sp)
 800c4b0:	dd000115 	stw	r20,4(sp)
 800c4b4:	dd001c15 	stw	r20,112(sp)
 800c4b8:	d8c01b15 	stw	r3,108(sp)
 800c4bc:	d811883a 	mov	r8,sp
 800c4c0:	42000204 	addi	r8,r8,8
 800c4c4:	8c40010c 	andi	r17,r17,4
 800c4c8:	88004026 	beq	r17,zero,800c5cc <___vfiprintf_internal_r+0xe24>
 800c4cc:	d9002517 	ldw	r4,148(sp)
 800c4d0:	24e3c83a 	sub	r17,r4,r19
 800c4d4:	04403d0e 	bge	zero,r17,800c5cc <___vfiprintf_internal_r+0xe24>
 800c4d8:	04000404 	movi	r16,16
 800c4dc:	8441a90e 	bge	r16,r17,800cb84 <___vfiprintf_internal_r+0x13dc>
 800c4e0:	00c20074 	movhi	r3,2049
 800c4e4:	18d10d04 	addi	r3,r3,17460
 800c4e8:	d9001b17 	ldw	r4,108(sp)
 800c4ec:	d8c02315 	stw	r3,140(sp)
 800c4f0:	050001c4 	movi	r20,7
 800c4f4:	dd402117 	ldw	r21,132(sp)
 800c4f8:	ddc02017 	ldw	r23,128(sp)
 800c4fc:	00000506 	br	800c514 <___vfiprintf_internal_r+0xd6c>
 800c500:	21400084 	addi	r5,r4,2
 800c504:	42000204 	addi	r8,r8,8
 800c508:	1809883a 	mov	r4,r3
 800c50c:	8c7ffc04 	addi	r17,r17,-16
 800c510:	84400f0e 	bge	r16,r17,800c550 <___vfiprintf_internal_r+0xda8>
 800c514:	01420074 	movhi	r5,2049
 800c518:	10800404 	addi	r2,r2,16
 800c51c:	20c00044 	addi	r3,r4,1
 800c520:	29510d04 	addi	r5,r5,17460
 800c524:	41400015 	stw	r5,0(r8)
 800c528:	44000115 	stw	r16,4(r8)
 800c52c:	d8801c15 	stw	r2,112(sp)
 800c530:	d8c01b15 	stw	r3,108(sp)
 800c534:	a0fff20e 	bge	r20,r3,800c500 <__alt_data_end+0xfc00c500>
 800c538:	1000141e 	bne	r2,zero,800c58c <___vfiprintf_internal_r+0xde4>
 800c53c:	8c7ffc04 	addi	r17,r17,-16
 800c540:	01400044 	movi	r5,1
 800c544:	0009883a 	mov	r4,zero
 800c548:	d811883a 	mov	r8,sp
 800c54c:	847ff116 	blt	r16,r17,800c514 <__alt_data_end+0xfc00c514>
 800c550:	d8c02317 	ldw	r3,140(sp)
 800c554:	1445883a 	add	r2,r2,r17
 800c558:	44400115 	stw	r17,4(r8)
 800c55c:	40c00015 	stw	r3,0(r8)
 800c560:	d8801c15 	stw	r2,112(sp)
 800c564:	d9401b15 	stw	r5,108(sp)
 800c568:	00c001c4 	movi	r3,7
 800c56c:	1940170e 	bge	r3,r5,800c5cc <___vfiprintf_internal_r+0xe24>
 800c570:	1000101e 	bne	r2,zero,800c5b4 <___vfiprintf_internal_r+0xe0c>
 800c574:	d8802517 	ldw	r2,148(sp)
 800c578:	14c11616 	blt	r2,r19,800c9d4 <___vfiprintf_internal_r+0x122c>
 800c57c:	d9002417 	ldw	r4,144(sp)
 800c580:	2089883a 	add	r4,r4,r2
 800c584:	d9002415 	stw	r4,144(sp)
 800c588:	003e1806 	br	800bdec <__alt_data_end+0xfc00bdec>
 800c58c:	d9801a04 	addi	r6,sp,104
 800c590:	b80b883a 	mov	r5,r23
 800c594:	a809883a 	mov	r4,r21
 800c598:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c59c:	103fba1e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c5a0:	d9001b17 	ldw	r4,108(sp)
 800c5a4:	d8801c17 	ldw	r2,112(sp)
 800c5a8:	d811883a 	mov	r8,sp
 800c5ac:	21400044 	addi	r5,r4,1
 800c5b0:	003fd606 	br	800c50c <__alt_data_end+0xfc00c50c>
 800c5b4:	d9402017 	ldw	r5,128(sp)
 800c5b8:	d9002117 	ldw	r4,132(sp)
 800c5bc:	d9801a04 	addi	r6,sp,104
 800c5c0:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c5c4:	103fb01e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c5c8:	d8801c17 	ldw	r2,112(sp)
 800c5cc:	d8c02517 	ldw	r3,148(sp)
 800c5d0:	1cc0010e 	bge	r3,r19,800c5d8 <___vfiprintf_internal_r+0xe30>
 800c5d4:	9807883a 	mov	r3,r19
 800c5d8:	d9002417 	ldw	r4,144(sp)
 800c5dc:	20c9883a 	add	r4,r4,r3
 800c5e0:	d9002415 	stw	r4,144(sp)
 800c5e4:	103e0126 	beq	r2,zero,800bdec <__alt_data_end+0xfc00bdec>
 800c5e8:	d9402017 	ldw	r5,128(sp)
 800c5ec:	d9002117 	ldw	r4,132(sp)
 800c5f0:	d9801a04 	addi	r6,sp,104
 800c5f4:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c5f8:	103dfc26 	beq	r2,zero,800bdec <__alt_data_end+0xfc00bdec>
 800c5fc:	003fa206 	br	800c488 <__alt_data_end+0xfc00c488>
 800c600:	d9402017 	ldw	r5,128(sp)
 800c604:	d9002117 	ldw	r4,132(sp)
 800c608:	d9801a04 	addi	r6,sp,104
 800c60c:	d9c02b15 	stw	r7,172(sp)
 800c610:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c614:	d9c02b17 	ldw	r7,172(sp)
 800c618:	103f9b1e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c61c:	d9001b17 	ldw	r4,108(sp)
 800c620:	d8801c17 	ldw	r2,112(sp)
 800c624:	d811883a 	mov	r8,sp
 800c628:	21800044 	addi	r6,r4,1
 800c62c:	003dbf06 	br	800bd2c <__alt_data_end+0xfc00bd2c>
 800c630:	1000d81e 	bne	r2,zero,800c994 <___vfiprintf_internal_r+0x11ec>
 800c634:	d9001d87 	ldb	r4,118(sp)
 800c638:	20000a26 	beq	r4,zero,800c664 <___vfiprintf_internal_r+0xebc>
 800c63c:	00800044 	movi	r2,1
 800c640:	d9001d84 	addi	r4,sp,118
 800c644:	100b883a 	mov	r5,r2
 800c648:	d9000015 	stw	r4,0(sp)
 800c64c:	d8800115 	stw	r2,4(sp)
 800c650:	d811883a 	mov	r8,sp
 800c654:	2809883a 	mov	r4,r5
 800c658:	42000204 	addi	r8,r8,8
 800c65c:	29400044 	addi	r5,r5,1
 800c660:	003d9506 	br	800bcb8 <__alt_data_end+0xfc00bcb8>
 800c664:	3800fd26 	beq	r7,zero,800ca5c <___vfiprintf_internal_r+0x12b4>
 800c668:	00800084 	movi	r2,2
 800c66c:	d9001d04 	addi	r4,sp,116
 800c670:	d9000015 	stw	r4,0(sp)
 800c674:	d8800115 	stw	r2,4(sp)
 800c678:	01400044 	movi	r5,1
 800c67c:	d811883a 	mov	r8,sp
 800c680:	2809883a 	mov	r4,r5
 800c684:	42000204 	addi	r8,r8,8
 800c688:	29400044 	addi	r5,r5,1
 800c68c:	003f4606 	br	800c3a8 <__alt_data_end+0xfc00c3a8>
 800c690:	d8802517 	ldw	r2,148(sp)
 800c694:	14c0010e 	bge	r2,r19,800c69c <___vfiprintf_internal_r+0xef4>
 800c698:	9805883a 	mov	r2,r19
 800c69c:	d9402417 	ldw	r5,144(sp)
 800c6a0:	288b883a 	add	r5,r5,r2
 800c6a4:	d9402415 	stw	r5,144(sp)
 800c6a8:	003dd006 	br	800bdec <__alt_data_end+0xfc00bdec>
 800c6ac:	d8001d85 	stb	zero,118(sp)
 800c6b0:	80005d16 	blt	r16,zero,800c828 <___vfiprintf_internal_r+0x1080>
 800c6b4:	00ffdfc4 	movi	r3,-129
 800c6b8:	9d04b03a 	or	r2,r19,r20
 800c6bc:	88e2703a 	and	r17,r17,r3
 800c6c0:	103d3726 	beq	r2,zero,800bba0 <__alt_data_end+0xfc00bba0>
 800c6c4:	002b883a 	mov	r21,zero
 800c6c8:	d9002617 	ldw	r4,152(sp)
 800c6cc:	ddc01a04 	addi	r23,sp,104
 800c6d0:	988003cc 	andi	r2,r19,15
 800c6d4:	a006973a 	slli	r3,r20,28
 800c6d8:	2085883a 	add	r2,r4,r2
 800c6dc:	9826d13a 	srli	r19,r19,4
 800c6e0:	10800003 	ldbu	r2,0(r2)
 800c6e4:	a028d13a 	srli	r20,r20,4
 800c6e8:	bdffffc4 	addi	r23,r23,-1
 800c6ec:	1ce6b03a 	or	r19,r3,r19
 800c6f0:	b8800005 	stb	r2,0(r23)
 800c6f4:	9d04b03a 	or	r2,r19,r20
 800c6f8:	103ff51e 	bne	r2,zero,800c6d0 <__alt_data_end+0xfc00c6d0>
 800c6fc:	d8801e17 	ldw	r2,120(sp)
 800c700:	15e9c83a 	sub	r20,r2,r23
 800c704:	003d2b06 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800c708:	d9402017 	ldw	r5,128(sp)
 800c70c:	d9002117 	ldw	r4,132(sp)
 800c710:	d9801a04 	addi	r6,sp,104
 800c714:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c718:	103f5b1e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c71c:	d8801c17 	ldw	r2,112(sp)
 800c720:	d811883a 	mov	r8,sp
 800c724:	003f6706 	br	800c4c4 <__alt_data_end+0xfc00c4c4>
 800c728:	d9402017 	ldw	r5,128(sp)
 800c72c:	d9002117 	ldw	r4,132(sp)
 800c730:	d9801a04 	addi	r6,sp,104
 800c734:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c738:	103f531e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c73c:	d811883a 	mov	r8,sp
 800c740:	003cd906 	br	800baa8 <__alt_data_end+0xfc00baa8>
 800c744:	10803fcc 	andi	r2,r2,255
 800c748:	1080201c 	xori	r2,r2,128
 800c74c:	10bfe004 	addi	r2,r2,-128
 800c750:	00c00c04 	movi	r3,48
 800c754:	10ffe926 	beq	r2,r3,800c6fc <__alt_data_end+0xfc00c6fc>
 800c758:	b8ffffc5 	stb	r3,-1(r23)
 800c75c:	d8c01e17 	ldw	r3,120(sp)
 800c760:	b8bfffc4 	addi	r2,r23,-1
 800c764:	102f883a 	mov	r23,r2
 800c768:	18a9c83a 	sub	r20,r3,r2
 800c76c:	003d1106 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800c770:	d9402017 	ldw	r5,128(sp)
 800c774:	d9002117 	ldw	r4,132(sp)
 800c778:	d9801a04 	addi	r6,sp,104
 800c77c:	d8c02a15 	stw	r3,168(sp)
 800c780:	d9c02b15 	stw	r7,172(sp)
 800c784:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c788:	d8c02a17 	ldw	r3,168(sp)
 800c78c:	d9c02b17 	ldw	r7,172(sp)
 800c790:	103f3d1e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c794:	d9001b17 	ldw	r4,108(sp)
 800c798:	d8801c17 	ldw	r2,112(sp)
 800c79c:	d811883a 	mov	r8,sp
 800c7a0:	21400044 	addi	r5,r4,1
 800c7a4:	003d4406 	br	800bcb8 <__alt_data_end+0xfc00bcb8>
 800c7a8:	d9402017 	ldw	r5,128(sp)
 800c7ac:	d9002117 	ldw	r4,132(sp)
 800c7b0:	d9801a04 	addi	r6,sp,104
 800c7b4:	d8c02a15 	stw	r3,168(sp)
 800c7b8:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c7bc:	d8c02a17 	ldw	r3,168(sp)
 800c7c0:	103f311e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c7c4:	d9001b17 	ldw	r4,108(sp)
 800c7c8:	d8801c17 	ldw	r2,112(sp)
 800c7cc:	d811883a 	mov	r8,sp
 800c7d0:	21400044 	addi	r5,r4,1
 800c7d4:	003ef406 	br	800c3a8 <__alt_data_end+0xfc00c3a8>
 800c7d8:	1000bd1e 	bne	r2,zero,800cad0 <___vfiprintf_internal_r+0x1328>
 800c7dc:	01400044 	movi	r5,1
 800c7e0:	0009883a 	mov	r4,zero
 800c7e4:	d811883a 	mov	r8,sp
 800c7e8:	003ef106 	br	800c3b0 <__alt_data_end+0xfc00c3b0>
 800c7ec:	d9402017 	ldw	r5,128(sp)
 800c7f0:	d9002117 	ldw	r4,132(sp)
 800c7f4:	d9801a04 	addi	r6,sp,104
 800c7f8:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c7fc:	103f221e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c800:	d9401b17 	ldw	r5,108(sp)
 800c804:	d8801c17 	ldw	r2,112(sp)
 800c808:	d811883a 	mov	r8,sp
 800c80c:	29400044 	addi	r5,r5,1
 800c810:	003d6206 	br	800bd9c <__alt_data_end+0xfc00bd9c>
 800c814:	01420074 	movhi	r5,2049
 800c818:	29509804 	addi	r5,r5,16992
 800c81c:	d9402615 	stw	r5,152(sp)
 800c820:	d8c02215 	stw	r3,136(sp)
 800c824:	1023883a 	mov	r17,r2
 800c828:	9d04b03a 	or	r2,r19,r20
 800c82c:	103fa51e 	bne	r2,zero,800c6c4 <__alt_data_end+0xfc00c6c4>
 800c830:	002b883a 	mov	r21,zero
 800c834:	00800084 	movi	r2,2
 800c838:	003e4a06 	br	800c164 <__alt_data_end+0xfc00c164>
 800c83c:	01420074 	movhi	r5,2049
 800c840:	29509804 	addi	r5,r5,16992
 800c844:	002b883a 	mov	r21,zero
 800c848:	d9402615 	stw	r5,152(sp)
 800c84c:	003f9e06 	br	800c6c8 <__alt_data_end+0xfc00c6c8>
 800c850:	d9402217 	ldw	r5,136(sp)
 800c854:	d8001d85 	stb	zero,118(sp)
 800c858:	0029883a 	mov	r20,zero
 800c85c:	28800104 	addi	r2,r5,4
 800c860:	2cc00017 	ldw	r19,0(r5)
 800c864:	803e3a16 	blt	r16,zero,800c150 <__alt_data_end+0xfc00c150>
 800c868:	00ffdfc4 	movi	r3,-129
 800c86c:	d8802215 	stw	r2,136(sp)
 800c870:	88e2703a 	and	r17,r17,r3
 800c874:	002b883a 	mov	r21,zero
 800c878:	983e9b26 	beq	r19,zero,800c2e8 <__alt_data_end+0xfc00c2e8>
 800c87c:	00800244 	movi	r2,9
 800c880:	14fdc936 	bltu	r2,r19,800bfa8 <__alt_data_end+0xfc00bfa8>
 800c884:	003e9a06 	br	800c2f0 <__alt_data_end+0xfc00c2f0>
 800c888:	00800c04 	movi	r2,48
 800c88c:	d8c01d45 	stb	r3,117(sp)
 800c890:	d8801d05 	stb	r2,116(sp)
 800c894:	d8001d85 	stb	zero,118(sp)
 800c898:	88c00094 	ori	r3,r17,2
 800c89c:	80009c16 	blt	r16,zero,800cb10 <___vfiprintf_internal_r+0x1368>
 800c8a0:	00bfdfc4 	movi	r2,-129
 800c8a4:	88a2703a 	and	r17,r17,r2
 800c8a8:	8c400094 	ori	r17,r17,2
 800c8ac:	002b883a 	mov	r21,zero
 800c8b0:	003f8506 	br	800c6c8 <__alt_data_end+0xfc00c6c8>
 800c8b4:	b029883a 	mov	r20,r22
 800c8b8:	003c0b06 	br	800b8e8 <__alt_data_end+0xfc00b8e8>
 800c8bc:	04e7c83a 	sub	r19,zero,r19
 800c8c0:	05400b44 	movi	r21,45
 800c8c4:	9804c03a 	cmpne	r2,r19,zero
 800c8c8:	0529c83a 	sub	r20,zero,r20
 800c8cc:	dd401d85 	stb	r21,118(sp)
 800c8d0:	a0a9c83a 	sub	r20,r20,r2
 800c8d4:	80009716 	blt	r16,zero,800cb34 <___vfiprintf_internal_r+0x138c>
 800c8d8:	00bfdfc4 	movi	r2,-129
 800c8dc:	88a2703a 	and	r17,r17,r2
 800c8e0:	003db006 	br	800bfa4 <__alt_data_end+0xfc00bfa4>
 800c8e4:	b0c00007 	ldb	r3,0(r22)
 800c8e8:	003c0c06 	br	800b91c <__alt_data_end+0xfc00b91c>
 800c8ec:	8880100c 	andi	r2,r17,64
 800c8f0:	d8001d85 	stb	zero,118(sp)
 800c8f4:	1000461e 	bne	r2,zero,800ca10 <___vfiprintf_internal_r+0x1268>
 800c8f8:	d9002217 	ldw	r4,136(sp)
 800c8fc:	0029883a 	mov	r20,zero
 800c900:	20800104 	addi	r2,r4,4
 800c904:	24c00017 	ldw	r19,0(r4)
 800c908:	803df80e 	bge	r16,zero,800c0ec <__alt_data_end+0xfc00c0ec>
 800c90c:	9d06b03a 	or	r3,r19,r20
 800c910:	d8802215 	stw	r2,136(sp)
 800c914:	183d5e1e 	bne	r3,zero,800be90 <__alt_data_end+0xfc00be90>
 800c918:	002b883a 	mov	r21,zero
 800c91c:	0005883a 	mov	r2,zero
 800c920:	003e1006 	br	800c164 <__alt_data_end+0xfc00c164>
 800c924:	8880040c 	andi	r2,r17,16
 800c928:	1000321e 	bne	r2,zero,800c9f4 <___vfiprintf_internal_r+0x124c>
 800c92c:	8c40100c 	andi	r17,r17,64
 800c930:	88008d26 	beq	r17,zero,800cb68 <___vfiprintf_internal_r+0x13c0>
 800c934:	d9402217 	ldw	r5,136(sp)
 800c938:	d8c02417 	ldw	r3,144(sp)
 800c93c:	28800017 	ldw	r2,0(r5)
 800c940:	29400104 	addi	r5,r5,4
 800c944:	d9402215 	stw	r5,136(sp)
 800c948:	10c0000d 	sth	r3,0(r2)
 800c94c:	003bca06 	br	800b878 <__alt_data_end+0xfc00b878>
 800c950:	8880100c 	andi	r2,r17,64
 800c954:	10003a26 	beq	r2,zero,800ca40 <___vfiprintf_internal_r+0x1298>
 800c958:	d8802217 	ldw	r2,136(sp)
 800c95c:	14c0000f 	ldh	r19,0(r2)
 800c960:	10800104 	addi	r2,r2,4
 800c964:	d8802215 	stw	r2,136(sp)
 800c968:	9829d7fa 	srai	r20,r19,31
 800c96c:	a005883a 	mov	r2,r20
 800c970:	003d8506 	br	800bf88 <__alt_data_end+0xfc00bf88>
 800c974:	8880100c 	andi	r2,r17,64
 800c978:	10002b26 	beq	r2,zero,800ca28 <___vfiprintf_internal_r+0x1280>
 800c97c:	d8802217 	ldw	r2,136(sp)
 800c980:	0029883a 	mov	r20,zero
 800c984:	14c0000b 	ldhu	r19,0(r2)
 800c988:	10800104 	addi	r2,r2,4
 800c98c:	d8802215 	stw	r2,136(sp)
 800c990:	003d5d06 	br	800bf08 <__alt_data_end+0xfc00bf08>
 800c994:	d9402017 	ldw	r5,128(sp)
 800c998:	d9002117 	ldw	r4,132(sp)
 800c99c:	d9801a04 	addi	r6,sp,104
 800c9a0:	d8c02a15 	stw	r3,168(sp)
 800c9a4:	d9c02b15 	stw	r7,172(sp)
 800c9a8:	800b6940 	call	800b694 <__sprint_r.part.0>
 800c9ac:	d8c02a17 	ldw	r3,168(sp)
 800c9b0:	d9c02b17 	ldw	r7,172(sp)
 800c9b4:	103eb41e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800c9b8:	d9001b17 	ldw	r4,108(sp)
 800c9bc:	d8801c17 	ldw	r2,112(sp)
 800c9c0:	d811883a 	mov	r8,sp
 800c9c4:	21400044 	addi	r5,r4,1
 800c9c8:	003e6706 	br	800c368 <__alt_data_end+0xfc00c368>
 800c9cc:	00bfffc4 	movi	r2,-1
 800c9d0:	003c4a06 	br	800bafc <__alt_data_end+0xfc00bafc>
 800c9d4:	9805883a 	mov	r2,r19
 800c9d8:	003ee806 	br	800c57c <__alt_data_end+0xfc00c57c>
 800c9dc:	d8c02217 	ldw	r3,136(sp)
 800c9e0:	0029883a 	mov	r20,zero
 800c9e4:	18800104 	addi	r2,r3,4
 800c9e8:	1cc0000b 	ldhu	r19,0(r3)
 800c9ec:	803f9e0e 	bge	r16,zero,800c868 <__alt_data_end+0xfc00c868>
 800c9f0:	003dd706 	br	800c150 <__alt_data_end+0xfc00c150>
 800c9f4:	d8c02217 	ldw	r3,136(sp)
 800c9f8:	d9002417 	ldw	r4,144(sp)
 800c9fc:	18800017 	ldw	r2,0(r3)
 800ca00:	18c00104 	addi	r3,r3,4
 800ca04:	d8c02215 	stw	r3,136(sp)
 800ca08:	11000015 	stw	r4,0(r2)
 800ca0c:	003b9a06 	br	800b878 <__alt_data_end+0xfc00b878>
 800ca10:	d8c02217 	ldw	r3,136(sp)
 800ca14:	0029883a 	mov	r20,zero
 800ca18:	18800104 	addi	r2,r3,4
 800ca1c:	1cc0000b 	ldhu	r19,0(r3)
 800ca20:	803db20e 	bge	r16,zero,800c0ec <__alt_data_end+0xfc00c0ec>
 800ca24:	003fb906 	br	800c90c <__alt_data_end+0xfc00c90c>
 800ca28:	d9002217 	ldw	r4,136(sp)
 800ca2c:	0029883a 	mov	r20,zero
 800ca30:	24c00017 	ldw	r19,0(r4)
 800ca34:	21000104 	addi	r4,r4,4
 800ca38:	d9002215 	stw	r4,136(sp)
 800ca3c:	003d3206 	br	800bf08 <__alt_data_end+0xfc00bf08>
 800ca40:	d8c02217 	ldw	r3,136(sp)
 800ca44:	1cc00017 	ldw	r19,0(r3)
 800ca48:	18c00104 	addi	r3,r3,4
 800ca4c:	d8c02215 	stw	r3,136(sp)
 800ca50:	9829d7fa 	srai	r20,r19,31
 800ca54:	a005883a 	mov	r2,r20
 800ca58:	003d4b06 	br	800bf88 <__alt_data_end+0xfc00bf88>
 800ca5c:	0009883a 	mov	r4,zero
 800ca60:	01400044 	movi	r5,1
 800ca64:	d811883a 	mov	r8,sp
 800ca68:	003e4f06 	br	800c3a8 <__alt_data_end+0xfc00c3a8>
 800ca6c:	d8c02215 	stw	r3,136(sp)
 800ca70:	002b883a 	mov	r21,zero
 800ca74:	003db806 	br	800c158 <__alt_data_end+0xfc00c158>
 800ca78:	d811883a 	mov	r8,sp
 800ca7c:	003e9606 	br	800c4d8 <__alt_data_end+0xfc00c4d8>
 800ca80:	01020074 	movhi	r4,2049
 800ca84:	21110904 	addi	r4,r4,17444
 800ca88:	d9002315 	stw	r4,140(sp)
 800ca8c:	003e6306 	br	800c41c <__alt_data_end+0xfc00c41c>
 800ca90:	b0c00043 	ldbu	r3,1(r22)
 800ca94:	8c400814 	ori	r17,r17,32
 800ca98:	b5800044 	addi	r22,r22,1
 800ca9c:	18c03fcc 	andi	r3,r3,255
 800caa0:	18c0201c 	xori	r3,r3,128
 800caa4:	18ffe004 	addi	r3,r3,-128
 800caa8:	003b9c06 	br	800b91c <__alt_data_end+0xfc00b91c>
 800caac:	b809883a 	mov	r4,r23
 800cab0:	da002a15 	stw	r8,168(sp)
 800cab4:	80013bc0 	call	80013bc <strlen>
 800cab8:	1029883a 	mov	r20,r2
 800cabc:	dd401d83 	ldbu	r21,118(sp)
 800cac0:	df002215 	stw	fp,136(sp)
 800cac4:	0021883a 	mov	r16,zero
 800cac8:	da002a17 	ldw	r8,168(sp)
 800cacc:	003c3906 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800cad0:	d9402017 	ldw	r5,128(sp)
 800cad4:	d9002117 	ldw	r4,132(sp)
 800cad8:	d9801a04 	addi	r6,sp,104
 800cadc:	800b6940 	call	800b694 <__sprint_r.part.0>
 800cae0:	103e691e 	bne	r2,zero,800c488 <__alt_data_end+0xfc00c488>
 800cae4:	d9001b17 	ldw	r4,108(sp)
 800cae8:	d8801c17 	ldw	r2,112(sp)
 800caec:	d811883a 	mov	r8,sp
 800caf0:	21400044 	addi	r5,r4,1
 800caf4:	003e2e06 	br	800c3b0 <__alt_data_end+0xfc00c3b0>
 800caf8:	01020074 	movhi	r4,2049
 800cafc:	21110d04 	addi	r4,r4,17460
 800cb00:	d9002315 	stw	r4,140(sp)
 800cb04:	d9001b17 	ldw	r4,108(sp)
 800cb08:	21000044 	addi	r4,r4,1
 800cb0c:	003c5e06 	br	800bc88 <__alt_data_end+0xfc00bc88>
 800cb10:	002b883a 	mov	r21,zero
 800cb14:	00800084 	movi	r2,2
 800cb18:	10803fcc 	andi	r2,r2,255
 800cb1c:	01000044 	movi	r4,1
 800cb20:	11002b26 	beq	r2,r4,800cbd0 <___vfiprintf_internal_r+0x1428>
 800cb24:	01000084 	movi	r4,2
 800cb28:	11002b1e 	bne	r2,r4,800cbd8 <___vfiprintf_internal_r+0x1430>
 800cb2c:	1823883a 	mov	r17,r3
 800cb30:	003ee506 	br	800c6c8 <__alt_data_end+0xfc00c6c8>
 800cb34:	8807883a 	mov	r3,r17
 800cb38:	00800044 	movi	r2,1
 800cb3c:	003ff606 	br	800cb18 <__alt_data_end+0xfc00cb18>
 800cb40:	00800184 	movi	r2,6
 800cb44:	1400012e 	bgeu	r2,r16,800cb4c <___vfiprintf_internal_r+0x13a4>
 800cb48:	1021883a 	mov	r16,r2
 800cb4c:	8029883a 	mov	r20,r16
 800cb50:	8027883a 	mov	r19,r16
 800cb54:	80002216 	blt	r16,zero,800cbe0 <___vfiprintf_internal_r+0x1438>
 800cb58:	05c20074 	movhi	r23,2049
 800cb5c:	df002215 	stw	fp,136(sp)
 800cb60:	bdd09d04 	addi	r23,r23,17012
 800cb64:	003cfb06 	br	800bf54 <__alt_data_end+0xfc00bf54>
 800cb68:	d9002217 	ldw	r4,136(sp)
 800cb6c:	d9402417 	ldw	r5,144(sp)
 800cb70:	20800017 	ldw	r2,0(r4)
 800cb74:	21000104 	addi	r4,r4,4
 800cb78:	d9002215 	stw	r4,136(sp)
 800cb7c:	11400015 	stw	r5,0(r2)
 800cb80:	003b3d06 	br	800b878 <__alt_data_end+0xfc00b878>
 800cb84:	01420074 	movhi	r5,2049
 800cb88:	29510d04 	addi	r5,r5,17460
 800cb8c:	d9402315 	stw	r5,140(sp)
 800cb90:	d9401b17 	ldw	r5,108(sp)
 800cb94:	29400044 	addi	r5,r5,1
 800cb98:	003e6d06 	br	800c550 <__alt_data_end+0xfc00c550>
 800cb9c:	8029883a 	mov	r20,r16
 800cba0:	dd401d83 	ldbu	r21,118(sp)
 800cba4:	df002215 	stw	fp,136(sp)
 800cba8:	0021883a 	mov	r16,zero
 800cbac:	003c0106 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800cbb0:	00c20074 	movhi	r3,2049
 800cbb4:	18d10904 	addi	r3,r3,17444
 800cbb8:	d8c02315 	stw	r3,140(sp)
 800cbbc:	280d883a 	mov	r6,r5
 800cbc0:	003c6906 	br	800bd68 <__alt_data_end+0xfc00bd68>
 800cbc4:	802d883a 	mov	r22,r16
 800cbc8:	0021883a 	mov	r16,zero
 800cbcc:	003b5406 	br	800b920 <__alt_data_end+0xfc00b920>
 800cbd0:	1823883a 	mov	r17,r3
 800cbd4:	003cf306 	br	800bfa4 <__alt_data_end+0xfc00bfa4>
 800cbd8:	1823883a 	mov	r17,r3
 800cbdc:	003cad06 	br	800be94 <__alt_data_end+0xfc00be94>
 800cbe0:	0027883a 	mov	r19,zero
 800cbe4:	003fdc06 	br	800cb58 <__alt_data_end+0xfc00cb58>
 800cbe8:	d9402217 	ldw	r5,136(sp)
 800cbec:	8005883a 	mov	r2,r16
 800cbf0:	b0c00043 	ldbu	r3,1(r22)
 800cbf4:	2c000017 	ldw	r16,0(r5)
 800cbf8:	29000104 	addi	r4,r5,4
 800cbfc:	d9002215 	stw	r4,136(sp)
 800cc00:	102d883a 	mov	r22,r2
 800cc04:	803fa50e 	bge	r16,zero,800ca9c <__alt_data_end+0xfc00ca9c>
 800cc08:	18c03fcc 	andi	r3,r3,255
 800cc0c:	18c0201c 	xori	r3,r3,128
 800cc10:	043fffc4 	movi	r16,-1
 800cc14:	18ffe004 	addi	r3,r3,-128
 800cc18:	003b4006 	br	800b91c <__alt_data_end+0xfc00b91c>
 800cc1c:	d9402303 	ldbu	r5,140(sp)
 800cc20:	d9401d85 	stb	r5,118(sp)
 800cc24:	003cae06 	br	800bee0 <__alt_data_end+0xfc00bee0>
 800cc28:	d8c02303 	ldbu	r3,140(sp)
 800cc2c:	d8c01d85 	stb	r3,118(sp)
 800cc30:	003d1406 	br	800c084 <__alt_data_end+0xfc00c084>
 800cc34:	d8c02303 	ldbu	r3,140(sp)
 800cc38:	d8c01d85 	stb	r3,118(sp)
 800cc3c:	003cca06 	br	800bf68 <__alt_data_end+0xfc00bf68>
 800cc40:	8880004c 	andi	r2,r17,1
 800cc44:	002b883a 	mov	r21,zero
 800cc48:	10000526 	beq	r2,zero,800cc60 <___vfiprintf_internal_r+0x14b8>
 800cc4c:	00800c04 	movi	r2,48
 800cc50:	d88019c5 	stb	r2,103(sp)
 800cc54:	dd002817 	ldw	r20,160(sp)
 800cc58:	ddc019c4 	addi	r23,sp,103
 800cc5c:	003bd506 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800cc60:	0029883a 	mov	r20,zero
 800cc64:	ddc01a04 	addi	r23,sp,104
 800cc68:	003bd206 	br	800bbb4 <__alt_data_end+0xfc00bbb4>
 800cc6c:	d9002303 	ldbu	r4,140(sp)
 800cc70:	d9001d85 	stb	r4,118(sp)
 800cc74:	003da606 	br	800c310 <__alt_data_end+0xfc00c310>
 800cc78:	d8c02303 	ldbu	r3,140(sp)
 800cc7c:	d8c01d85 	stb	r3,118(sp)
 800cc80:	003c7606 	br	800be5c <__alt_data_end+0xfc00be5c>
 800cc84:	d8c02303 	ldbu	r3,140(sp)
 800cc88:	d8c01d85 	stb	r3,118(sp)
 800cc8c:	003c6506 	br	800be24 <__alt_data_end+0xfc00be24>
 800cc90:	d9002303 	ldbu	r4,140(sp)
 800cc94:	d9001d85 	stb	r4,118(sp)
 800cc98:	003d3d06 	br	800c190 <__alt_data_end+0xfc00c190>
 800cc9c:	d8c02303 	ldbu	r3,140(sp)
 800cca0:	d8c01d85 	stb	r3,118(sp)
 800cca4:	003d1d06 	br	800c11c <__alt_data_end+0xfc00c11c>
 800cca8:	d8c02303 	ldbu	r3,140(sp)
 800ccac:	d8c01d85 	stb	r3,118(sp)
 800ccb0:	003d0306 	br	800c0c0 <__alt_data_end+0xfc00c0c0>

0800ccb4 <__vfiprintf_internal>:
 800ccb4:	00820074 	movhi	r2,2049
 800ccb8:	1098c504 	addi	r2,r2,25364
 800ccbc:	300f883a 	mov	r7,r6
 800ccc0:	280d883a 	mov	r6,r5
 800ccc4:	200b883a 	mov	r5,r4
 800ccc8:	11000017 	ldw	r4,0(r2)
 800cccc:	800b7a81 	jmpi	800b7a8 <___vfiprintf_internal_r>

0800ccd0 <__sbprintf>:
 800ccd0:	2880030b 	ldhu	r2,12(r5)
 800ccd4:	2ac01917 	ldw	r11,100(r5)
 800ccd8:	2a80038b 	ldhu	r10,14(r5)
 800ccdc:	2a400717 	ldw	r9,28(r5)
 800cce0:	2a000917 	ldw	r8,36(r5)
 800cce4:	defee204 	addi	sp,sp,-1144
 800cce8:	00c10004 	movi	r3,1024
 800ccec:	dc011a15 	stw	r16,1128(sp)
 800ccf0:	10bfff4c 	andi	r2,r2,65533
 800ccf4:	2821883a 	mov	r16,r5
 800ccf8:	d8cb883a 	add	r5,sp,r3
 800ccfc:	dc811c15 	stw	r18,1136(sp)
 800cd00:	dc411b15 	stw	r17,1132(sp)
 800cd04:	dfc11d15 	stw	ra,1140(sp)
 800cd08:	2025883a 	mov	r18,r4
 800cd0c:	d881030d 	sth	r2,1036(sp)
 800cd10:	dac11915 	stw	r11,1124(sp)
 800cd14:	da81038d 	sth	r10,1038(sp)
 800cd18:	da410715 	stw	r9,1052(sp)
 800cd1c:	da010915 	stw	r8,1060(sp)
 800cd20:	dec10015 	stw	sp,1024(sp)
 800cd24:	dec10415 	stw	sp,1040(sp)
 800cd28:	d8c10215 	stw	r3,1032(sp)
 800cd2c:	d8c10515 	stw	r3,1044(sp)
 800cd30:	d8010615 	stw	zero,1048(sp)
 800cd34:	800b7a80 	call	800b7a8 <___vfiprintf_internal_r>
 800cd38:	1023883a 	mov	r17,r2
 800cd3c:	10000416 	blt	r2,zero,800cd50 <__sbprintf+0x80>
 800cd40:	d9410004 	addi	r5,sp,1024
 800cd44:	9009883a 	mov	r4,r18
 800cd48:	80076e40 	call	80076e4 <_fflush_r>
 800cd4c:	10000d1e 	bne	r2,zero,800cd84 <__sbprintf+0xb4>
 800cd50:	d881030b 	ldhu	r2,1036(sp)
 800cd54:	1080100c 	andi	r2,r2,64
 800cd58:	10000326 	beq	r2,zero,800cd68 <__sbprintf+0x98>
 800cd5c:	8080030b 	ldhu	r2,12(r16)
 800cd60:	10801014 	ori	r2,r2,64
 800cd64:	8080030d 	sth	r2,12(r16)
 800cd68:	8805883a 	mov	r2,r17
 800cd6c:	dfc11d17 	ldw	ra,1140(sp)
 800cd70:	dc811c17 	ldw	r18,1136(sp)
 800cd74:	dc411b17 	ldw	r17,1132(sp)
 800cd78:	dc011a17 	ldw	r16,1128(sp)
 800cd7c:	dec11e04 	addi	sp,sp,1144
 800cd80:	f800283a 	ret
 800cd84:	047fffc4 	movi	r17,-1
 800cd88:	003ff106 	br	800cd50 <__alt_data_end+0xfc00cd50>

0800cd8c <_write_r>:
 800cd8c:	defffd04 	addi	sp,sp,-12
 800cd90:	2805883a 	mov	r2,r5
 800cd94:	dc000015 	stw	r16,0(sp)
 800cd98:	040200b4 	movhi	r16,2050
 800cd9c:	dc400115 	stw	r17,4(sp)
 800cda0:	300b883a 	mov	r5,r6
 800cda4:	84205004 	addi	r16,r16,-32448
 800cda8:	2023883a 	mov	r17,r4
 800cdac:	380d883a 	mov	r6,r7
 800cdb0:	1009883a 	mov	r4,r2
 800cdb4:	dfc00215 	stw	ra,8(sp)
 800cdb8:	80000015 	stw	zero,0(r16)
 800cdbc:	80120940 	call	8012094 <write>
 800cdc0:	00ffffc4 	movi	r3,-1
 800cdc4:	10c00526 	beq	r2,r3,800cddc <_write_r+0x50>
 800cdc8:	dfc00217 	ldw	ra,8(sp)
 800cdcc:	dc400117 	ldw	r17,4(sp)
 800cdd0:	dc000017 	ldw	r16,0(sp)
 800cdd4:	dec00304 	addi	sp,sp,12
 800cdd8:	f800283a 	ret
 800cddc:	80c00017 	ldw	r3,0(r16)
 800cde0:	183ff926 	beq	r3,zero,800cdc8 <__alt_data_end+0xfc00cdc8>
 800cde4:	88c00015 	stw	r3,0(r17)
 800cde8:	003ff706 	br	800cdc8 <__alt_data_end+0xfc00cdc8>

0800cdec <_close_r>:
 800cdec:	defffd04 	addi	sp,sp,-12
 800cdf0:	dc000015 	stw	r16,0(sp)
 800cdf4:	040200b4 	movhi	r16,2050
 800cdf8:	dc400115 	stw	r17,4(sp)
 800cdfc:	84205004 	addi	r16,r16,-32448
 800ce00:	2023883a 	mov	r17,r4
 800ce04:	2809883a 	mov	r4,r5
 800ce08:	dfc00215 	stw	ra,8(sp)
 800ce0c:	80000015 	stw	zero,0(r16)
 800ce10:	801180c0 	call	801180c <close>
 800ce14:	00ffffc4 	movi	r3,-1
 800ce18:	10c00526 	beq	r2,r3,800ce30 <_close_r+0x44>
 800ce1c:	dfc00217 	ldw	ra,8(sp)
 800ce20:	dc400117 	ldw	r17,4(sp)
 800ce24:	dc000017 	ldw	r16,0(sp)
 800ce28:	dec00304 	addi	sp,sp,12
 800ce2c:	f800283a 	ret
 800ce30:	80c00017 	ldw	r3,0(r16)
 800ce34:	183ff926 	beq	r3,zero,800ce1c <__alt_data_end+0xfc00ce1c>
 800ce38:	88c00015 	stw	r3,0(r17)
 800ce3c:	003ff706 	br	800ce1c <__alt_data_end+0xfc00ce1c>

0800ce40 <_calloc_r>:
 800ce40:	defffe04 	addi	sp,sp,-8
 800ce44:	2805883a 	mov	r2,r5
 800ce48:	dc000015 	stw	r16,0(sp)
 800ce4c:	300b883a 	mov	r5,r6
 800ce50:	2021883a 	mov	r16,r4
 800ce54:	1009883a 	mov	r4,r2
 800ce58:	dfc00115 	stw	ra,4(sp)
 800ce5c:	80010a00 	call	80010a0 <__mulsi3>
 800ce60:	100b883a 	mov	r5,r2
 800ce64:	8009883a 	mov	r4,r16
 800ce68:	80083740 	call	8008374 <_malloc_r>
 800ce6c:	10002926 	beq	r2,zero,800cf14 <_calloc_r+0xd4>
 800ce70:	11bfff17 	ldw	r6,-4(r2)
 800ce74:	1021883a 	mov	r16,r2
 800ce78:	00bfff04 	movi	r2,-4
 800ce7c:	308c703a 	and	r6,r6,r2
 800ce80:	00c00904 	movi	r3,36
 800ce84:	308d883a 	add	r6,r6,r2
 800ce88:	19801636 	bltu	r3,r6,800cee4 <_calloc_r+0xa4>
 800ce8c:	008004c4 	movi	r2,19
 800ce90:	11800b2e 	bgeu	r2,r6,800cec0 <_calloc_r+0x80>
 800ce94:	80000015 	stw	zero,0(r16)
 800ce98:	80000115 	stw	zero,4(r16)
 800ce9c:	008006c4 	movi	r2,27
 800cea0:	11801a2e 	bgeu	r2,r6,800cf0c <_calloc_r+0xcc>
 800cea4:	80000215 	stw	zero,8(r16)
 800cea8:	80000315 	stw	zero,12(r16)
 800ceac:	30c0151e 	bne	r6,r3,800cf04 <_calloc_r+0xc4>
 800ceb0:	80000415 	stw	zero,16(r16)
 800ceb4:	80800604 	addi	r2,r16,24
 800ceb8:	80000515 	stw	zero,20(r16)
 800cebc:	00000106 	br	800cec4 <_calloc_r+0x84>
 800cec0:	8005883a 	mov	r2,r16
 800cec4:	10000015 	stw	zero,0(r2)
 800cec8:	10000115 	stw	zero,4(r2)
 800cecc:	10000215 	stw	zero,8(r2)
 800ced0:	8005883a 	mov	r2,r16
 800ced4:	dfc00117 	ldw	ra,4(sp)
 800ced8:	dc000017 	ldw	r16,0(sp)
 800cedc:	dec00204 	addi	sp,sp,8
 800cee0:	f800283a 	ret
 800cee4:	000b883a 	mov	r5,zero
 800cee8:	8009883a 	mov	r4,r16
 800ceec:	8008c640 	call	8008c64 <memset>
 800cef0:	8005883a 	mov	r2,r16
 800cef4:	dfc00117 	ldw	ra,4(sp)
 800cef8:	dc000017 	ldw	r16,0(sp)
 800cefc:	dec00204 	addi	sp,sp,8
 800cf00:	f800283a 	ret
 800cf04:	80800404 	addi	r2,r16,16
 800cf08:	003fee06 	br	800cec4 <__alt_data_end+0xfc00cec4>
 800cf0c:	80800204 	addi	r2,r16,8
 800cf10:	003fec06 	br	800cec4 <__alt_data_end+0xfc00cec4>
 800cf14:	0005883a 	mov	r2,zero
 800cf18:	003fee06 	br	800ced4 <__alt_data_end+0xfc00ced4>

0800cf1c <_fclose_r>:
 800cf1c:	28003926 	beq	r5,zero,800d004 <_fclose_r+0xe8>
 800cf20:	defffc04 	addi	sp,sp,-16
 800cf24:	dc400115 	stw	r17,4(sp)
 800cf28:	dc000015 	stw	r16,0(sp)
 800cf2c:	dfc00315 	stw	ra,12(sp)
 800cf30:	dc800215 	stw	r18,8(sp)
 800cf34:	2023883a 	mov	r17,r4
 800cf38:	2821883a 	mov	r16,r5
 800cf3c:	20000226 	beq	r4,zero,800cf48 <_fclose_r+0x2c>
 800cf40:	20800e17 	ldw	r2,56(r4)
 800cf44:	10002726 	beq	r2,zero,800cfe4 <_fclose_r+0xc8>
 800cf48:	8080030f 	ldh	r2,12(r16)
 800cf4c:	1000071e 	bne	r2,zero,800cf6c <_fclose_r+0x50>
 800cf50:	0005883a 	mov	r2,zero
 800cf54:	dfc00317 	ldw	ra,12(sp)
 800cf58:	dc800217 	ldw	r18,8(sp)
 800cf5c:	dc400117 	ldw	r17,4(sp)
 800cf60:	dc000017 	ldw	r16,0(sp)
 800cf64:	dec00404 	addi	sp,sp,16
 800cf68:	f800283a 	ret
 800cf6c:	800b883a 	mov	r5,r16
 800cf70:	8809883a 	mov	r4,r17
 800cf74:	80074c80 	call	80074c8 <__sflush_r>
 800cf78:	1025883a 	mov	r18,r2
 800cf7c:	80800b17 	ldw	r2,44(r16)
 800cf80:	10000426 	beq	r2,zero,800cf94 <_fclose_r+0x78>
 800cf84:	81400717 	ldw	r5,28(r16)
 800cf88:	8809883a 	mov	r4,r17
 800cf8c:	103ee83a 	callr	r2
 800cf90:	10001616 	blt	r2,zero,800cfec <_fclose_r+0xd0>
 800cf94:	8080030b 	ldhu	r2,12(r16)
 800cf98:	1080200c 	andi	r2,r2,128
 800cf9c:	1000151e 	bne	r2,zero,800cff4 <_fclose_r+0xd8>
 800cfa0:	81400c17 	ldw	r5,48(r16)
 800cfa4:	28000526 	beq	r5,zero,800cfbc <_fclose_r+0xa0>
 800cfa8:	80801004 	addi	r2,r16,64
 800cfac:	28800226 	beq	r5,r2,800cfb8 <_fclose_r+0x9c>
 800cfb0:	8809883a 	mov	r4,r17
 800cfb4:	8007c440 	call	8007c44 <_free_r>
 800cfb8:	80000c15 	stw	zero,48(r16)
 800cfbc:	81401117 	ldw	r5,68(r16)
 800cfc0:	28000326 	beq	r5,zero,800cfd0 <_fclose_r+0xb4>
 800cfc4:	8809883a 	mov	r4,r17
 800cfc8:	8007c440 	call	8007c44 <_free_r>
 800cfcc:	80001115 	stw	zero,68(r16)
 800cfd0:	8007ae00 	call	8007ae0 <__sfp_lock_acquire>
 800cfd4:	8000030d 	sth	zero,12(r16)
 800cfd8:	8007ae40 	call	8007ae4 <__sfp_lock_release>
 800cfdc:	9005883a 	mov	r2,r18
 800cfe0:	003fdc06 	br	800cf54 <__alt_data_end+0xfc00cf54>
 800cfe4:	8007ad00 	call	8007ad0 <__sinit>
 800cfe8:	003fd706 	br	800cf48 <__alt_data_end+0xfc00cf48>
 800cfec:	04bfffc4 	movi	r18,-1
 800cff0:	003fe806 	br	800cf94 <__alt_data_end+0xfc00cf94>
 800cff4:	81400417 	ldw	r5,16(r16)
 800cff8:	8809883a 	mov	r4,r17
 800cffc:	8007c440 	call	8007c44 <_free_r>
 800d000:	003fe706 	br	800cfa0 <__alt_data_end+0xfc00cfa0>
 800d004:	0005883a 	mov	r2,zero
 800d008:	f800283a 	ret

0800d00c <fclose>:
 800d00c:	00820074 	movhi	r2,2049
 800d010:	1098c504 	addi	r2,r2,25364
 800d014:	200b883a 	mov	r5,r4
 800d018:	11000017 	ldw	r4,0(r2)
 800d01c:	800cf1c1 	jmpi	800cf1c <_fclose_r>

0800d020 <__fputwc>:
 800d020:	defff804 	addi	sp,sp,-32
 800d024:	dcc00415 	stw	r19,16(sp)
 800d028:	dc800315 	stw	r18,12(sp)
 800d02c:	dc000115 	stw	r16,4(sp)
 800d030:	dfc00715 	stw	ra,28(sp)
 800d034:	dd400615 	stw	r21,24(sp)
 800d038:	dd000515 	stw	r20,20(sp)
 800d03c:	dc400215 	stw	r17,8(sp)
 800d040:	2027883a 	mov	r19,r4
 800d044:	2825883a 	mov	r18,r5
 800d048:	3021883a 	mov	r16,r6
 800d04c:	80081640 	call	8008164 <__locale_mb_cur_max>
 800d050:	00c00044 	movi	r3,1
 800d054:	10c03e26 	beq	r2,r3,800d150 <__fputwc+0x130>
 800d058:	81c01704 	addi	r7,r16,92
 800d05c:	900d883a 	mov	r6,r18
 800d060:	d80b883a 	mov	r5,sp
 800d064:	9809883a 	mov	r4,r19
 800d068:	800e0780 	call	800e078 <_wcrtomb_r>
 800d06c:	1029883a 	mov	r20,r2
 800d070:	00bfffc4 	movi	r2,-1
 800d074:	a0802026 	beq	r20,r2,800d0f8 <__fputwc+0xd8>
 800d078:	d9400003 	ldbu	r5,0(sp)
 800d07c:	a0001c26 	beq	r20,zero,800d0f0 <__fputwc+0xd0>
 800d080:	0023883a 	mov	r17,zero
 800d084:	05400284 	movi	r21,10
 800d088:	00000906 	br	800d0b0 <__fputwc+0x90>
 800d08c:	80800017 	ldw	r2,0(r16)
 800d090:	11400005 	stb	r5,0(r2)
 800d094:	80c00017 	ldw	r3,0(r16)
 800d098:	18c00044 	addi	r3,r3,1
 800d09c:	80c00015 	stw	r3,0(r16)
 800d0a0:	8c400044 	addi	r17,r17,1
 800d0a4:	dc45883a 	add	r2,sp,r17
 800d0a8:	8d00112e 	bgeu	r17,r20,800d0f0 <__fputwc+0xd0>
 800d0ac:	11400003 	ldbu	r5,0(r2)
 800d0b0:	80c00217 	ldw	r3,8(r16)
 800d0b4:	18ffffc4 	addi	r3,r3,-1
 800d0b8:	80c00215 	stw	r3,8(r16)
 800d0bc:	183ff30e 	bge	r3,zero,800d08c <__alt_data_end+0xfc00d08c>
 800d0c0:	80800617 	ldw	r2,24(r16)
 800d0c4:	18801916 	blt	r3,r2,800d12c <__fputwc+0x10c>
 800d0c8:	80800017 	ldw	r2,0(r16)
 800d0cc:	11400005 	stb	r5,0(r2)
 800d0d0:	80800017 	ldw	r2,0(r16)
 800d0d4:	10c00003 	ldbu	r3,0(r2)
 800d0d8:	10800044 	addi	r2,r2,1
 800d0dc:	1d402326 	beq	r3,r21,800d16c <__fputwc+0x14c>
 800d0e0:	80800015 	stw	r2,0(r16)
 800d0e4:	8c400044 	addi	r17,r17,1
 800d0e8:	dc45883a 	add	r2,sp,r17
 800d0ec:	8d3fef36 	bltu	r17,r20,800d0ac <__alt_data_end+0xfc00d0ac>
 800d0f0:	9005883a 	mov	r2,r18
 800d0f4:	00000406 	br	800d108 <__fputwc+0xe8>
 800d0f8:	80c0030b 	ldhu	r3,12(r16)
 800d0fc:	a005883a 	mov	r2,r20
 800d100:	18c01014 	ori	r3,r3,64
 800d104:	80c0030d 	sth	r3,12(r16)
 800d108:	dfc00717 	ldw	ra,28(sp)
 800d10c:	dd400617 	ldw	r21,24(sp)
 800d110:	dd000517 	ldw	r20,20(sp)
 800d114:	dcc00417 	ldw	r19,16(sp)
 800d118:	dc800317 	ldw	r18,12(sp)
 800d11c:	dc400217 	ldw	r17,8(sp)
 800d120:	dc000117 	ldw	r16,4(sp)
 800d124:	dec00804 	addi	sp,sp,32
 800d128:	f800283a 	ret
 800d12c:	800d883a 	mov	r6,r16
 800d130:	29403fcc 	andi	r5,r5,255
 800d134:	9809883a 	mov	r4,r19
 800d138:	800df200 	call	800df20 <__swbuf_r>
 800d13c:	10bfffe0 	cmpeqi	r2,r2,-1
 800d140:	10803fcc 	andi	r2,r2,255
 800d144:	103fd626 	beq	r2,zero,800d0a0 <__alt_data_end+0xfc00d0a0>
 800d148:	00bfffc4 	movi	r2,-1
 800d14c:	003fee06 	br	800d108 <__alt_data_end+0xfc00d108>
 800d150:	90ffffc4 	addi	r3,r18,-1
 800d154:	01003f84 	movi	r4,254
 800d158:	20ffbf36 	bltu	r4,r3,800d058 <__alt_data_end+0xfc00d058>
 800d15c:	900b883a 	mov	r5,r18
 800d160:	dc800005 	stb	r18,0(sp)
 800d164:	1029883a 	mov	r20,r2
 800d168:	003fc506 	br	800d080 <__alt_data_end+0xfc00d080>
 800d16c:	800d883a 	mov	r6,r16
 800d170:	a80b883a 	mov	r5,r21
 800d174:	9809883a 	mov	r4,r19
 800d178:	800df200 	call	800df20 <__swbuf_r>
 800d17c:	10bfffe0 	cmpeqi	r2,r2,-1
 800d180:	003fef06 	br	800d140 <__alt_data_end+0xfc00d140>

0800d184 <_fputwc_r>:
 800d184:	3080030b 	ldhu	r2,12(r6)
 800d188:	10c8000c 	andi	r3,r2,8192
 800d18c:	1800051e 	bne	r3,zero,800d1a4 <_fputwc_r+0x20>
 800d190:	30c01917 	ldw	r3,100(r6)
 800d194:	10880014 	ori	r2,r2,8192
 800d198:	3080030d 	sth	r2,12(r6)
 800d19c:	18880014 	ori	r2,r3,8192
 800d1a0:	30801915 	stw	r2,100(r6)
 800d1a4:	800d0201 	jmpi	800d020 <__fputwc>

0800d1a8 <fputwc>:
 800d1a8:	00820074 	movhi	r2,2049
 800d1ac:	defffc04 	addi	sp,sp,-16
 800d1b0:	1098c504 	addi	r2,r2,25364
 800d1b4:	dc000115 	stw	r16,4(sp)
 800d1b8:	14000017 	ldw	r16,0(r2)
 800d1bc:	dc400215 	stw	r17,8(sp)
 800d1c0:	dfc00315 	stw	ra,12(sp)
 800d1c4:	2023883a 	mov	r17,r4
 800d1c8:	80000226 	beq	r16,zero,800d1d4 <fputwc+0x2c>
 800d1cc:	80800e17 	ldw	r2,56(r16)
 800d1d0:	10001026 	beq	r2,zero,800d214 <fputwc+0x6c>
 800d1d4:	2880030b 	ldhu	r2,12(r5)
 800d1d8:	10c8000c 	andi	r3,r2,8192
 800d1dc:	1800051e 	bne	r3,zero,800d1f4 <fputwc+0x4c>
 800d1e0:	28c01917 	ldw	r3,100(r5)
 800d1e4:	10880014 	ori	r2,r2,8192
 800d1e8:	2880030d 	sth	r2,12(r5)
 800d1ec:	18880014 	ori	r2,r3,8192
 800d1f0:	28801915 	stw	r2,100(r5)
 800d1f4:	280d883a 	mov	r6,r5
 800d1f8:	8009883a 	mov	r4,r16
 800d1fc:	880b883a 	mov	r5,r17
 800d200:	dfc00317 	ldw	ra,12(sp)
 800d204:	dc400217 	ldw	r17,8(sp)
 800d208:	dc000117 	ldw	r16,4(sp)
 800d20c:	dec00404 	addi	sp,sp,16
 800d210:	800d0201 	jmpi	800d020 <__fputwc>
 800d214:	8009883a 	mov	r4,r16
 800d218:	d9400015 	stw	r5,0(sp)
 800d21c:	8007ad00 	call	8007ad0 <__sinit>
 800d220:	d9400017 	ldw	r5,0(sp)
 800d224:	003feb06 	br	800d1d4 <__alt_data_end+0xfc00d1d4>

0800d228 <_fstat_r>:
 800d228:	defffd04 	addi	sp,sp,-12
 800d22c:	2805883a 	mov	r2,r5
 800d230:	dc000015 	stw	r16,0(sp)
 800d234:	040200b4 	movhi	r16,2050
 800d238:	dc400115 	stw	r17,4(sp)
 800d23c:	84205004 	addi	r16,r16,-32448
 800d240:	2023883a 	mov	r17,r4
 800d244:	300b883a 	mov	r5,r6
 800d248:	1009883a 	mov	r4,r2
 800d24c:	dfc00215 	stw	ra,8(sp)
 800d250:	80000015 	stw	zero,0(r16)
 800d254:	801194c0 	call	801194c <fstat>
 800d258:	00ffffc4 	movi	r3,-1
 800d25c:	10c00526 	beq	r2,r3,800d274 <_fstat_r+0x4c>
 800d260:	dfc00217 	ldw	ra,8(sp)
 800d264:	dc400117 	ldw	r17,4(sp)
 800d268:	dc000017 	ldw	r16,0(sp)
 800d26c:	dec00304 	addi	sp,sp,12
 800d270:	f800283a 	ret
 800d274:	80c00017 	ldw	r3,0(r16)
 800d278:	183ff926 	beq	r3,zero,800d260 <__alt_data_end+0xfc00d260>
 800d27c:	88c00015 	stw	r3,0(r17)
 800d280:	003ff706 	br	800d260 <__alt_data_end+0xfc00d260>

0800d284 <__sfvwrite_r>:
 800d284:	30800217 	ldw	r2,8(r6)
 800d288:	10006726 	beq	r2,zero,800d428 <__sfvwrite_r+0x1a4>
 800d28c:	28c0030b 	ldhu	r3,12(r5)
 800d290:	defff404 	addi	sp,sp,-48
 800d294:	dd400715 	stw	r21,28(sp)
 800d298:	dd000615 	stw	r20,24(sp)
 800d29c:	dc000215 	stw	r16,8(sp)
 800d2a0:	dfc00b15 	stw	ra,44(sp)
 800d2a4:	df000a15 	stw	fp,40(sp)
 800d2a8:	ddc00915 	stw	r23,36(sp)
 800d2ac:	dd800815 	stw	r22,32(sp)
 800d2b0:	dcc00515 	stw	r19,20(sp)
 800d2b4:	dc800415 	stw	r18,16(sp)
 800d2b8:	dc400315 	stw	r17,12(sp)
 800d2bc:	1880020c 	andi	r2,r3,8
 800d2c0:	2821883a 	mov	r16,r5
 800d2c4:	202b883a 	mov	r21,r4
 800d2c8:	3029883a 	mov	r20,r6
 800d2cc:	10002726 	beq	r2,zero,800d36c <__sfvwrite_r+0xe8>
 800d2d0:	28800417 	ldw	r2,16(r5)
 800d2d4:	10002526 	beq	r2,zero,800d36c <__sfvwrite_r+0xe8>
 800d2d8:	1880008c 	andi	r2,r3,2
 800d2dc:	a4400017 	ldw	r17,0(r20)
 800d2e0:	10002a26 	beq	r2,zero,800d38c <__sfvwrite_r+0x108>
 800d2e4:	05a00034 	movhi	r22,32768
 800d2e8:	0027883a 	mov	r19,zero
 800d2ec:	0025883a 	mov	r18,zero
 800d2f0:	b5bf0004 	addi	r22,r22,-1024
 800d2f4:	980d883a 	mov	r6,r19
 800d2f8:	a809883a 	mov	r4,r21
 800d2fc:	90004626 	beq	r18,zero,800d418 <__sfvwrite_r+0x194>
 800d300:	900f883a 	mov	r7,r18
 800d304:	b480022e 	bgeu	r22,r18,800d310 <__sfvwrite_r+0x8c>
 800d308:	01e00034 	movhi	r7,32768
 800d30c:	39ff0004 	addi	r7,r7,-1024
 800d310:	80800917 	ldw	r2,36(r16)
 800d314:	81400717 	ldw	r5,28(r16)
 800d318:	103ee83a 	callr	r2
 800d31c:	00805a0e 	bge	zero,r2,800d488 <__sfvwrite_r+0x204>
 800d320:	a0c00217 	ldw	r3,8(r20)
 800d324:	98a7883a 	add	r19,r19,r2
 800d328:	90a5c83a 	sub	r18,r18,r2
 800d32c:	1885c83a 	sub	r2,r3,r2
 800d330:	a0800215 	stw	r2,8(r20)
 800d334:	103fef1e 	bne	r2,zero,800d2f4 <__alt_data_end+0xfc00d2f4>
 800d338:	0005883a 	mov	r2,zero
 800d33c:	dfc00b17 	ldw	ra,44(sp)
 800d340:	df000a17 	ldw	fp,40(sp)
 800d344:	ddc00917 	ldw	r23,36(sp)
 800d348:	dd800817 	ldw	r22,32(sp)
 800d34c:	dd400717 	ldw	r21,28(sp)
 800d350:	dd000617 	ldw	r20,24(sp)
 800d354:	dcc00517 	ldw	r19,20(sp)
 800d358:	dc800417 	ldw	r18,16(sp)
 800d35c:	dc400317 	ldw	r17,12(sp)
 800d360:	dc000217 	ldw	r16,8(sp)
 800d364:	dec00c04 	addi	sp,sp,48
 800d368:	f800283a 	ret
 800d36c:	800b883a 	mov	r5,r16
 800d370:	a809883a 	mov	r4,r21
 800d374:	8005ac40 	call	8005ac4 <__swsetup_r>
 800d378:	1000ee1e 	bne	r2,zero,800d734 <__sfvwrite_r+0x4b0>
 800d37c:	80c0030b 	ldhu	r3,12(r16)
 800d380:	a4400017 	ldw	r17,0(r20)
 800d384:	1880008c 	andi	r2,r3,2
 800d388:	103fd61e 	bne	r2,zero,800d2e4 <__alt_data_end+0xfc00d2e4>
 800d38c:	1880004c 	andi	r2,r3,1
 800d390:	1000421e 	bne	r2,zero,800d49c <__sfvwrite_r+0x218>
 800d394:	0039883a 	mov	fp,zero
 800d398:	0025883a 	mov	r18,zero
 800d39c:	90001a26 	beq	r18,zero,800d408 <__sfvwrite_r+0x184>
 800d3a0:	1880800c 	andi	r2,r3,512
 800d3a4:	84c00217 	ldw	r19,8(r16)
 800d3a8:	10002126 	beq	r2,zero,800d430 <__sfvwrite_r+0x1ac>
 800d3ac:	982f883a 	mov	r23,r19
 800d3b0:	94c09636 	bltu	r18,r19,800d60c <__sfvwrite_r+0x388>
 800d3b4:	1881200c 	andi	r2,r3,1152
 800d3b8:	1000a11e 	bne	r2,zero,800d640 <__sfvwrite_r+0x3bc>
 800d3bc:	81000017 	ldw	r4,0(r16)
 800d3c0:	b80d883a 	mov	r6,r23
 800d3c4:	e00b883a 	mov	r5,fp
 800d3c8:	800d8000 	call	800d800 <memmove>
 800d3cc:	80c00217 	ldw	r3,8(r16)
 800d3d0:	81000017 	ldw	r4,0(r16)
 800d3d4:	9005883a 	mov	r2,r18
 800d3d8:	1ce7c83a 	sub	r19,r3,r19
 800d3dc:	25cf883a 	add	r7,r4,r23
 800d3e0:	84c00215 	stw	r19,8(r16)
 800d3e4:	81c00015 	stw	r7,0(r16)
 800d3e8:	a0c00217 	ldw	r3,8(r20)
 800d3ec:	e0b9883a 	add	fp,fp,r2
 800d3f0:	90a5c83a 	sub	r18,r18,r2
 800d3f4:	18a7c83a 	sub	r19,r3,r2
 800d3f8:	a4c00215 	stw	r19,8(r20)
 800d3fc:	983fce26 	beq	r19,zero,800d338 <__alt_data_end+0xfc00d338>
 800d400:	80c0030b 	ldhu	r3,12(r16)
 800d404:	903fe61e 	bne	r18,zero,800d3a0 <__alt_data_end+0xfc00d3a0>
 800d408:	8f000017 	ldw	fp,0(r17)
 800d40c:	8c800117 	ldw	r18,4(r17)
 800d410:	8c400204 	addi	r17,r17,8
 800d414:	003fe106 	br	800d39c <__alt_data_end+0xfc00d39c>
 800d418:	8cc00017 	ldw	r19,0(r17)
 800d41c:	8c800117 	ldw	r18,4(r17)
 800d420:	8c400204 	addi	r17,r17,8
 800d424:	003fb306 	br	800d2f4 <__alt_data_end+0xfc00d2f4>
 800d428:	0005883a 	mov	r2,zero
 800d42c:	f800283a 	ret
 800d430:	81000017 	ldw	r4,0(r16)
 800d434:	80800417 	ldw	r2,16(r16)
 800d438:	11005a36 	bltu	r2,r4,800d5a4 <__sfvwrite_r+0x320>
 800d43c:	85c00517 	ldw	r23,20(r16)
 800d440:	95c05836 	bltu	r18,r23,800d5a4 <__sfvwrite_r+0x320>
 800d444:	00a00034 	movhi	r2,32768
 800d448:	10bfffc4 	addi	r2,r2,-1
 800d44c:	9009883a 	mov	r4,r18
 800d450:	1480012e 	bgeu	r2,r18,800d458 <__sfvwrite_r+0x1d4>
 800d454:	1009883a 	mov	r4,r2
 800d458:	b80b883a 	mov	r5,r23
 800d45c:	8000eec0 	call	8000eec <__divsi3>
 800d460:	b80b883a 	mov	r5,r23
 800d464:	1009883a 	mov	r4,r2
 800d468:	80010a00 	call	80010a0 <__mulsi3>
 800d46c:	81400717 	ldw	r5,28(r16)
 800d470:	80c00917 	ldw	r3,36(r16)
 800d474:	100f883a 	mov	r7,r2
 800d478:	e00d883a 	mov	r6,fp
 800d47c:	a809883a 	mov	r4,r21
 800d480:	183ee83a 	callr	r3
 800d484:	00bfd816 	blt	zero,r2,800d3e8 <__alt_data_end+0xfc00d3e8>
 800d488:	8080030b 	ldhu	r2,12(r16)
 800d48c:	10801014 	ori	r2,r2,64
 800d490:	8080030d 	sth	r2,12(r16)
 800d494:	00bfffc4 	movi	r2,-1
 800d498:	003fa806 	br	800d33c <__alt_data_end+0xfc00d33c>
 800d49c:	0027883a 	mov	r19,zero
 800d4a0:	0011883a 	mov	r8,zero
 800d4a4:	0039883a 	mov	fp,zero
 800d4a8:	0025883a 	mov	r18,zero
 800d4ac:	90001f26 	beq	r18,zero,800d52c <__sfvwrite_r+0x2a8>
 800d4b0:	40005a26 	beq	r8,zero,800d61c <__sfvwrite_r+0x398>
 800d4b4:	982d883a 	mov	r22,r19
 800d4b8:	94c0012e 	bgeu	r18,r19,800d4c0 <__sfvwrite_r+0x23c>
 800d4bc:	902d883a 	mov	r22,r18
 800d4c0:	81000017 	ldw	r4,0(r16)
 800d4c4:	80800417 	ldw	r2,16(r16)
 800d4c8:	b02f883a 	mov	r23,r22
 800d4cc:	81c00517 	ldw	r7,20(r16)
 800d4d0:	1100032e 	bgeu	r2,r4,800d4e0 <__sfvwrite_r+0x25c>
 800d4d4:	80c00217 	ldw	r3,8(r16)
 800d4d8:	38c7883a 	add	r3,r7,r3
 800d4dc:	1d801816 	blt	r3,r22,800d540 <__sfvwrite_r+0x2bc>
 800d4e0:	b1c03e16 	blt	r22,r7,800d5dc <__sfvwrite_r+0x358>
 800d4e4:	80800917 	ldw	r2,36(r16)
 800d4e8:	81400717 	ldw	r5,28(r16)
 800d4ec:	e00d883a 	mov	r6,fp
 800d4f0:	da000115 	stw	r8,4(sp)
 800d4f4:	a809883a 	mov	r4,r21
 800d4f8:	103ee83a 	callr	r2
 800d4fc:	102f883a 	mov	r23,r2
 800d500:	da000117 	ldw	r8,4(sp)
 800d504:	00bfe00e 	bge	zero,r2,800d488 <__alt_data_end+0xfc00d488>
 800d508:	9de7c83a 	sub	r19,r19,r23
 800d50c:	98001f26 	beq	r19,zero,800d58c <__sfvwrite_r+0x308>
 800d510:	a0800217 	ldw	r2,8(r20)
 800d514:	e5f9883a 	add	fp,fp,r23
 800d518:	95e5c83a 	sub	r18,r18,r23
 800d51c:	15efc83a 	sub	r23,r2,r23
 800d520:	a5c00215 	stw	r23,8(r20)
 800d524:	b83f8426 	beq	r23,zero,800d338 <__alt_data_end+0xfc00d338>
 800d528:	903fe11e 	bne	r18,zero,800d4b0 <__alt_data_end+0xfc00d4b0>
 800d52c:	8f000017 	ldw	fp,0(r17)
 800d530:	8c800117 	ldw	r18,4(r17)
 800d534:	0011883a 	mov	r8,zero
 800d538:	8c400204 	addi	r17,r17,8
 800d53c:	003fdb06 	br	800d4ac <__alt_data_end+0xfc00d4ac>
 800d540:	180d883a 	mov	r6,r3
 800d544:	e00b883a 	mov	r5,fp
 800d548:	da000115 	stw	r8,4(sp)
 800d54c:	d8c00015 	stw	r3,0(sp)
 800d550:	800d8000 	call	800d800 <memmove>
 800d554:	d8c00017 	ldw	r3,0(sp)
 800d558:	80800017 	ldw	r2,0(r16)
 800d55c:	800b883a 	mov	r5,r16
 800d560:	a809883a 	mov	r4,r21
 800d564:	10c5883a 	add	r2,r2,r3
 800d568:	80800015 	stw	r2,0(r16)
 800d56c:	d8c00015 	stw	r3,0(sp)
 800d570:	80076e40 	call	80076e4 <_fflush_r>
 800d574:	d8c00017 	ldw	r3,0(sp)
 800d578:	da000117 	ldw	r8,4(sp)
 800d57c:	103fc21e 	bne	r2,zero,800d488 <__alt_data_end+0xfc00d488>
 800d580:	182f883a 	mov	r23,r3
 800d584:	9de7c83a 	sub	r19,r19,r23
 800d588:	983fe11e 	bne	r19,zero,800d510 <__alt_data_end+0xfc00d510>
 800d58c:	800b883a 	mov	r5,r16
 800d590:	a809883a 	mov	r4,r21
 800d594:	80076e40 	call	80076e4 <_fflush_r>
 800d598:	103fbb1e 	bne	r2,zero,800d488 <__alt_data_end+0xfc00d488>
 800d59c:	0011883a 	mov	r8,zero
 800d5a0:	003fdb06 	br	800d510 <__alt_data_end+0xfc00d510>
 800d5a4:	94c0012e 	bgeu	r18,r19,800d5ac <__sfvwrite_r+0x328>
 800d5a8:	9027883a 	mov	r19,r18
 800d5ac:	980d883a 	mov	r6,r19
 800d5b0:	e00b883a 	mov	r5,fp
 800d5b4:	800d8000 	call	800d800 <memmove>
 800d5b8:	80800217 	ldw	r2,8(r16)
 800d5bc:	80c00017 	ldw	r3,0(r16)
 800d5c0:	14c5c83a 	sub	r2,r2,r19
 800d5c4:	1cc7883a 	add	r3,r3,r19
 800d5c8:	80800215 	stw	r2,8(r16)
 800d5cc:	80c00015 	stw	r3,0(r16)
 800d5d0:	10004326 	beq	r2,zero,800d6e0 <__sfvwrite_r+0x45c>
 800d5d4:	9805883a 	mov	r2,r19
 800d5d8:	003f8306 	br	800d3e8 <__alt_data_end+0xfc00d3e8>
 800d5dc:	b00d883a 	mov	r6,r22
 800d5e0:	e00b883a 	mov	r5,fp
 800d5e4:	da000115 	stw	r8,4(sp)
 800d5e8:	800d8000 	call	800d800 <memmove>
 800d5ec:	80800217 	ldw	r2,8(r16)
 800d5f0:	80c00017 	ldw	r3,0(r16)
 800d5f4:	da000117 	ldw	r8,4(sp)
 800d5f8:	1585c83a 	sub	r2,r2,r22
 800d5fc:	1dad883a 	add	r22,r3,r22
 800d600:	80800215 	stw	r2,8(r16)
 800d604:	85800015 	stw	r22,0(r16)
 800d608:	003fbf06 	br	800d508 <__alt_data_end+0xfc00d508>
 800d60c:	81000017 	ldw	r4,0(r16)
 800d610:	9027883a 	mov	r19,r18
 800d614:	902f883a 	mov	r23,r18
 800d618:	003f6906 	br	800d3c0 <__alt_data_end+0xfc00d3c0>
 800d61c:	900d883a 	mov	r6,r18
 800d620:	01400284 	movi	r5,10
 800d624:	e009883a 	mov	r4,fp
 800d628:	8008b800 	call	8008b80 <memchr>
 800d62c:	10003e26 	beq	r2,zero,800d728 <__sfvwrite_r+0x4a4>
 800d630:	10800044 	addi	r2,r2,1
 800d634:	1727c83a 	sub	r19,r2,fp
 800d638:	02000044 	movi	r8,1
 800d63c:	003f9d06 	br	800d4b4 <__alt_data_end+0xfc00d4b4>
 800d640:	80800517 	ldw	r2,20(r16)
 800d644:	81400417 	ldw	r5,16(r16)
 800d648:	81c00017 	ldw	r7,0(r16)
 800d64c:	10a7883a 	add	r19,r2,r2
 800d650:	9885883a 	add	r2,r19,r2
 800d654:	1026d7fa 	srli	r19,r2,31
 800d658:	396dc83a 	sub	r22,r7,r5
 800d65c:	b1000044 	addi	r4,r22,1
 800d660:	9885883a 	add	r2,r19,r2
 800d664:	1027d07a 	srai	r19,r2,1
 800d668:	2485883a 	add	r2,r4,r18
 800d66c:	980d883a 	mov	r6,r19
 800d670:	9880022e 	bgeu	r19,r2,800d67c <__sfvwrite_r+0x3f8>
 800d674:	1027883a 	mov	r19,r2
 800d678:	100d883a 	mov	r6,r2
 800d67c:	18c1000c 	andi	r3,r3,1024
 800d680:	18001c26 	beq	r3,zero,800d6f4 <__sfvwrite_r+0x470>
 800d684:	300b883a 	mov	r5,r6
 800d688:	a809883a 	mov	r4,r21
 800d68c:	80083740 	call	8008374 <_malloc_r>
 800d690:	102f883a 	mov	r23,r2
 800d694:	10002926 	beq	r2,zero,800d73c <__sfvwrite_r+0x4b8>
 800d698:	81400417 	ldw	r5,16(r16)
 800d69c:	b00d883a 	mov	r6,r22
 800d6a0:	1009883a 	mov	r4,r2
 800d6a4:	80010c80 	call	80010c8 <memcpy>
 800d6a8:	8080030b 	ldhu	r2,12(r16)
 800d6ac:	00fedfc4 	movi	r3,-1153
 800d6b0:	10c4703a 	and	r2,r2,r3
 800d6b4:	10802014 	ori	r2,r2,128
 800d6b8:	8080030d 	sth	r2,12(r16)
 800d6bc:	bd89883a 	add	r4,r23,r22
 800d6c0:	9d8fc83a 	sub	r7,r19,r22
 800d6c4:	85c00415 	stw	r23,16(r16)
 800d6c8:	84c00515 	stw	r19,20(r16)
 800d6cc:	81000015 	stw	r4,0(r16)
 800d6d0:	9027883a 	mov	r19,r18
 800d6d4:	81c00215 	stw	r7,8(r16)
 800d6d8:	902f883a 	mov	r23,r18
 800d6dc:	003f3806 	br	800d3c0 <__alt_data_end+0xfc00d3c0>
 800d6e0:	800b883a 	mov	r5,r16
 800d6e4:	a809883a 	mov	r4,r21
 800d6e8:	80076e40 	call	80076e4 <_fflush_r>
 800d6ec:	103fb926 	beq	r2,zero,800d5d4 <__alt_data_end+0xfc00d5d4>
 800d6f0:	003f6506 	br	800d488 <__alt_data_end+0xfc00d488>
 800d6f4:	a809883a 	mov	r4,r21
 800d6f8:	800d9bc0 	call	800d9bc <_realloc_r>
 800d6fc:	102f883a 	mov	r23,r2
 800d700:	103fee1e 	bne	r2,zero,800d6bc <__alt_data_end+0xfc00d6bc>
 800d704:	81400417 	ldw	r5,16(r16)
 800d708:	a809883a 	mov	r4,r21
 800d70c:	8007c440 	call	8007c44 <_free_r>
 800d710:	8080030b 	ldhu	r2,12(r16)
 800d714:	00ffdfc4 	movi	r3,-129
 800d718:	1884703a 	and	r2,r3,r2
 800d71c:	00c00304 	movi	r3,12
 800d720:	a8c00015 	stw	r3,0(r21)
 800d724:	003f5906 	br	800d48c <__alt_data_end+0xfc00d48c>
 800d728:	94c00044 	addi	r19,r18,1
 800d72c:	02000044 	movi	r8,1
 800d730:	003f6006 	br	800d4b4 <__alt_data_end+0xfc00d4b4>
 800d734:	00bfffc4 	movi	r2,-1
 800d738:	003f0006 	br	800d33c <__alt_data_end+0xfc00d33c>
 800d73c:	00800304 	movi	r2,12
 800d740:	a8800015 	stw	r2,0(r21)
 800d744:	8080030b 	ldhu	r2,12(r16)
 800d748:	003f5006 	br	800d48c <__alt_data_end+0xfc00d48c>

0800d74c <_isatty_r>:
 800d74c:	defffd04 	addi	sp,sp,-12
 800d750:	dc000015 	stw	r16,0(sp)
 800d754:	040200b4 	movhi	r16,2050
 800d758:	dc400115 	stw	r17,4(sp)
 800d75c:	84205004 	addi	r16,r16,-32448
 800d760:	2023883a 	mov	r17,r4
 800d764:	2809883a 	mov	r4,r5
 800d768:	dfc00215 	stw	ra,8(sp)
 800d76c:	80000015 	stw	zero,0(r16)
 800d770:	8011a400 	call	8011a40 <isatty>
 800d774:	00ffffc4 	movi	r3,-1
 800d778:	10c00526 	beq	r2,r3,800d790 <_isatty_r+0x44>
 800d77c:	dfc00217 	ldw	ra,8(sp)
 800d780:	dc400117 	ldw	r17,4(sp)
 800d784:	dc000017 	ldw	r16,0(sp)
 800d788:	dec00304 	addi	sp,sp,12
 800d78c:	f800283a 	ret
 800d790:	80c00017 	ldw	r3,0(r16)
 800d794:	183ff926 	beq	r3,zero,800d77c <__alt_data_end+0xfc00d77c>
 800d798:	88c00015 	stw	r3,0(r17)
 800d79c:	003ff706 	br	800d77c <__alt_data_end+0xfc00d77c>

0800d7a0 <_lseek_r>:
 800d7a0:	defffd04 	addi	sp,sp,-12
 800d7a4:	2805883a 	mov	r2,r5
 800d7a8:	dc000015 	stw	r16,0(sp)
 800d7ac:	040200b4 	movhi	r16,2050
 800d7b0:	dc400115 	stw	r17,4(sp)
 800d7b4:	300b883a 	mov	r5,r6
 800d7b8:	84205004 	addi	r16,r16,-32448
 800d7bc:	2023883a 	mov	r17,r4
 800d7c0:	380d883a 	mov	r6,r7
 800d7c4:	1009883a 	mov	r4,r2
 800d7c8:	dfc00215 	stw	ra,8(sp)
 800d7cc:	80000015 	stw	zero,0(r16)
 800d7d0:	8011c140 	call	8011c14 <lseek>
 800d7d4:	00ffffc4 	movi	r3,-1
 800d7d8:	10c00526 	beq	r2,r3,800d7f0 <_lseek_r+0x50>
 800d7dc:	dfc00217 	ldw	ra,8(sp)
 800d7e0:	dc400117 	ldw	r17,4(sp)
 800d7e4:	dc000017 	ldw	r16,0(sp)
 800d7e8:	dec00304 	addi	sp,sp,12
 800d7ec:	f800283a 	ret
 800d7f0:	80c00017 	ldw	r3,0(r16)
 800d7f4:	183ff926 	beq	r3,zero,800d7dc <__alt_data_end+0xfc00d7dc>
 800d7f8:	88c00015 	stw	r3,0(r17)
 800d7fc:	003ff706 	br	800d7dc <__alt_data_end+0xfc00d7dc>

0800d800 <memmove>:
 800d800:	2005883a 	mov	r2,r4
 800d804:	29000b2e 	bgeu	r5,r4,800d834 <memmove+0x34>
 800d808:	298f883a 	add	r7,r5,r6
 800d80c:	21c0092e 	bgeu	r4,r7,800d834 <memmove+0x34>
 800d810:	2187883a 	add	r3,r4,r6
 800d814:	198bc83a 	sub	r5,r3,r6
 800d818:	30004826 	beq	r6,zero,800d93c <memmove+0x13c>
 800d81c:	39ffffc4 	addi	r7,r7,-1
 800d820:	39000003 	ldbu	r4,0(r7)
 800d824:	18ffffc4 	addi	r3,r3,-1
 800d828:	19000005 	stb	r4,0(r3)
 800d82c:	28fffb1e 	bne	r5,r3,800d81c <__alt_data_end+0xfc00d81c>
 800d830:	f800283a 	ret
 800d834:	00c003c4 	movi	r3,15
 800d838:	1980412e 	bgeu	r3,r6,800d940 <memmove+0x140>
 800d83c:	2886b03a 	or	r3,r5,r2
 800d840:	18c000cc 	andi	r3,r3,3
 800d844:	1800401e 	bne	r3,zero,800d948 <memmove+0x148>
 800d848:	33fffc04 	addi	r15,r6,-16
 800d84c:	781ed13a 	srli	r15,r15,4
 800d850:	28c00104 	addi	r3,r5,4
 800d854:	13400104 	addi	r13,r2,4
 800d858:	781c913a 	slli	r14,r15,4
 800d85c:	2b000204 	addi	r12,r5,8
 800d860:	12c00204 	addi	r11,r2,8
 800d864:	73800504 	addi	r14,r14,20
 800d868:	2a800304 	addi	r10,r5,12
 800d86c:	12400304 	addi	r9,r2,12
 800d870:	2b9d883a 	add	r14,r5,r14
 800d874:	2811883a 	mov	r8,r5
 800d878:	100f883a 	mov	r7,r2
 800d87c:	41000017 	ldw	r4,0(r8)
 800d880:	39c00404 	addi	r7,r7,16
 800d884:	18c00404 	addi	r3,r3,16
 800d888:	393ffc15 	stw	r4,-16(r7)
 800d88c:	193ffc17 	ldw	r4,-16(r3)
 800d890:	6b400404 	addi	r13,r13,16
 800d894:	5ac00404 	addi	r11,r11,16
 800d898:	693ffc15 	stw	r4,-16(r13)
 800d89c:	61000017 	ldw	r4,0(r12)
 800d8a0:	4a400404 	addi	r9,r9,16
 800d8a4:	42000404 	addi	r8,r8,16
 800d8a8:	593ffc15 	stw	r4,-16(r11)
 800d8ac:	51000017 	ldw	r4,0(r10)
 800d8b0:	63000404 	addi	r12,r12,16
 800d8b4:	52800404 	addi	r10,r10,16
 800d8b8:	493ffc15 	stw	r4,-16(r9)
 800d8bc:	1bbfef1e 	bne	r3,r14,800d87c <__alt_data_end+0xfc00d87c>
 800d8c0:	79000044 	addi	r4,r15,1
 800d8c4:	2008913a 	slli	r4,r4,4
 800d8c8:	328003cc 	andi	r10,r6,15
 800d8cc:	02c000c4 	movi	r11,3
 800d8d0:	1107883a 	add	r3,r2,r4
 800d8d4:	290b883a 	add	r5,r5,r4
 800d8d8:	5a801e2e 	bgeu	r11,r10,800d954 <memmove+0x154>
 800d8dc:	1813883a 	mov	r9,r3
 800d8e0:	2811883a 	mov	r8,r5
 800d8e4:	500f883a 	mov	r7,r10
 800d8e8:	41000017 	ldw	r4,0(r8)
 800d8ec:	4a400104 	addi	r9,r9,4
 800d8f0:	39ffff04 	addi	r7,r7,-4
 800d8f4:	493fff15 	stw	r4,-4(r9)
 800d8f8:	42000104 	addi	r8,r8,4
 800d8fc:	59fffa36 	bltu	r11,r7,800d8e8 <__alt_data_end+0xfc00d8e8>
 800d900:	513fff04 	addi	r4,r10,-4
 800d904:	2008d0ba 	srli	r4,r4,2
 800d908:	318000cc 	andi	r6,r6,3
 800d90c:	21000044 	addi	r4,r4,1
 800d910:	2109883a 	add	r4,r4,r4
 800d914:	2109883a 	add	r4,r4,r4
 800d918:	1907883a 	add	r3,r3,r4
 800d91c:	290b883a 	add	r5,r5,r4
 800d920:	30000b26 	beq	r6,zero,800d950 <memmove+0x150>
 800d924:	198d883a 	add	r6,r3,r6
 800d928:	29c00003 	ldbu	r7,0(r5)
 800d92c:	18c00044 	addi	r3,r3,1
 800d930:	29400044 	addi	r5,r5,1
 800d934:	19ffffc5 	stb	r7,-1(r3)
 800d938:	19bffb1e 	bne	r3,r6,800d928 <__alt_data_end+0xfc00d928>
 800d93c:	f800283a 	ret
 800d940:	1007883a 	mov	r3,r2
 800d944:	003ff606 	br	800d920 <__alt_data_end+0xfc00d920>
 800d948:	1007883a 	mov	r3,r2
 800d94c:	003ff506 	br	800d924 <__alt_data_end+0xfc00d924>
 800d950:	f800283a 	ret
 800d954:	500d883a 	mov	r6,r10
 800d958:	003ff106 	br	800d920 <__alt_data_end+0xfc00d920>

0800d95c <_read_r>:
 800d95c:	defffd04 	addi	sp,sp,-12
 800d960:	2805883a 	mov	r2,r5
 800d964:	dc000015 	stw	r16,0(sp)
 800d968:	040200b4 	movhi	r16,2050
 800d96c:	dc400115 	stw	r17,4(sp)
 800d970:	300b883a 	mov	r5,r6
 800d974:	84205004 	addi	r16,r16,-32448
 800d978:	2023883a 	mov	r17,r4
 800d97c:	380d883a 	mov	r6,r7
 800d980:	1009883a 	mov	r4,r2
 800d984:	dfc00215 	stw	ra,8(sp)
 800d988:	80000015 	stw	zero,0(r16)
 800d98c:	8011df00 	call	8011df0 <read>
 800d990:	00ffffc4 	movi	r3,-1
 800d994:	10c00526 	beq	r2,r3,800d9ac <_read_r+0x50>
 800d998:	dfc00217 	ldw	ra,8(sp)
 800d99c:	dc400117 	ldw	r17,4(sp)
 800d9a0:	dc000017 	ldw	r16,0(sp)
 800d9a4:	dec00304 	addi	sp,sp,12
 800d9a8:	f800283a 	ret
 800d9ac:	80c00017 	ldw	r3,0(r16)
 800d9b0:	183ff926 	beq	r3,zero,800d998 <__alt_data_end+0xfc00d998>
 800d9b4:	88c00015 	stw	r3,0(r17)
 800d9b8:	003ff706 	br	800d998 <__alt_data_end+0xfc00d998>

0800d9bc <_realloc_r>:
 800d9bc:	defff604 	addi	sp,sp,-40
 800d9c0:	dc800215 	stw	r18,8(sp)
 800d9c4:	dfc00915 	stw	ra,36(sp)
 800d9c8:	df000815 	stw	fp,32(sp)
 800d9cc:	ddc00715 	stw	r23,28(sp)
 800d9d0:	dd800615 	stw	r22,24(sp)
 800d9d4:	dd400515 	stw	r21,20(sp)
 800d9d8:	dd000415 	stw	r20,16(sp)
 800d9dc:	dcc00315 	stw	r19,12(sp)
 800d9e0:	dc400115 	stw	r17,4(sp)
 800d9e4:	dc000015 	stw	r16,0(sp)
 800d9e8:	3025883a 	mov	r18,r6
 800d9ec:	2800b726 	beq	r5,zero,800dccc <_realloc_r+0x310>
 800d9f0:	282b883a 	mov	r21,r5
 800d9f4:	2029883a 	mov	r20,r4
 800d9f8:	8011d6c0 	call	8011d6c <__malloc_lock>
 800d9fc:	a8bfff17 	ldw	r2,-4(r21)
 800da00:	043fff04 	movi	r16,-4
 800da04:	90c002c4 	addi	r3,r18,11
 800da08:	01000584 	movi	r4,22
 800da0c:	acfffe04 	addi	r19,r21,-8
 800da10:	1420703a 	and	r16,r2,r16
 800da14:	20c0332e 	bgeu	r4,r3,800dae4 <_realloc_r+0x128>
 800da18:	047ffe04 	movi	r17,-8
 800da1c:	1c62703a 	and	r17,r3,r17
 800da20:	8807883a 	mov	r3,r17
 800da24:	88005816 	blt	r17,zero,800db88 <_realloc_r+0x1cc>
 800da28:	8c805736 	bltu	r17,r18,800db88 <_realloc_r+0x1cc>
 800da2c:	80c0300e 	bge	r16,r3,800daf0 <_realloc_r+0x134>
 800da30:	07020074 	movhi	fp,2049
 800da34:	e7133d04 	addi	fp,fp,19700
 800da38:	e1c00217 	ldw	r7,8(fp)
 800da3c:	9c09883a 	add	r4,r19,r16
 800da40:	22000117 	ldw	r8,4(r4)
 800da44:	21c06326 	beq	r4,r7,800dbd4 <_realloc_r+0x218>
 800da48:	017fff84 	movi	r5,-2
 800da4c:	414a703a 	and	r5,r8,r5
 800da50:	214b883a 	add	r5,r4,r5
 800da54:	29800117 	ldw	r6,4(r5)
 800da58:	3180004c 	andi	r6,r6,1
 800da5c:	30003f26 	beq	r6,zero,800db5c <_realloc_r+0x1a0>
 800da60:	1080004c 	andi	r2,r2,1
 800da64:	10008326 	beq	r2,zero,800dc74 <_realloc_r+0x2b8>
 800da68:	900b883a 	mov	r5,r18
 800da6c:	a009883a 	mov	r4,r20
 800da70:	80083740 	call	8008374 <_malloc_r>
 800da74:	1025883a 	mov	r18,r2
 800da78:	10011e26 	beq	r2,zero,800def4 <_realloc_r+0x538>
 800da7c:	a93fff17 	ldw	r4,-4(r21)
 800da80:	10fffe04 	addi	r3,r2,-8
 800da84:	00bfff84 	movi	r2,-2
 800da88:	2084703a 	and	r2,r4,r2
 800da8c:	9885883a 	add	r2,r19,r2
 800da90:	1880ee26 	beq	r3,r2,800de4c <_realloc_r+0x490>
 800da94:	81bfff04 	addi	r6,r16,-4
 800da98:	00800904 	movi	r2,36
 800da9c:	1180b836 	bltu	r2,r6,800dd80 <_realloc_r+0x3c4>
 800daa0:	00c004c4 	movi	r3,19
 800daa4:	19809636 	bltu	r3,r6,800dd00 <_realloc_r+0x344>
 800daa8:	9005883a 	mov	r2,r18
 800daac:	a807883a 	mov	r3,r21
 800dab0:	19000017 	ldw	r4,0(r3)
 800dab4:	11000015 	stw	r4,0(r2)
 800dab8:	19000117 	ldw	r4,4(r3)
 800dabc:	11000115 	stw	r4,4(r2)
 800dac0:	18c00217 	ldw	r3,8(r3)
 800dac4:	10c00215 	stw	r3,8(r2)
 800dac8:	a80b883a 	mov	r5,r21
 800dacc:	a009883a 	mov	r4,r20
 800dad0:	8007c440 	call	8007c44 <_free_r>
 800dad4:	a009883a 	mov	r4,r20
 800dad8:	8011d900 	call	8011d90 <__malloc_unlock>
 800dadc:	9005883a 	mov	r2,r18
 800dae0:	00001206 	br	800db2c <_realloc_r+0x170>
 800dae4:	00c00404 	movi	r3,16
 800dae8:	1823883a 	mov	r17,r3
 800daec:	003fce06 	br	800da28 <__alt_data_end+0xfc00da28>
 800daf0:	a825883a 	mov	r18,r21
 800daf4:	8445c83a 	sub	r2,r16,r17
 800daf8:	00c003c4 	movi	r3,15
 800dafc:	18802636 	bltu	r3,r2,800db98 <_realloc_r+0x1dc>
 800db00:	99800117 	ldw	r6,4(r19)
 800db04:	9c07883a 	add	r3,r19,r16
 800db08:	3180004c 	andi	r6,r6,1
 800db0c:	3420b03a 	or	r16,r6,r16
 800db10:	9c000115 	stw	r16,4(r19)
 800db14:	18800117 	ldw	r2,4(r3)
 800db18:	10800054 	ori	r2,r2,1
 800db1c:	18800115 	stw	r2,4(r3)
 800db20:	a009883a 	mov	r4,r20
 800db24:	8011d900 	call	8011d90 <__malloc_unlock>
 800db28:	9005883a 	mov	r2,r18
 800db2c:	dfc00917 	ldw	ra,36(sp)
 800db30:	df000817 	ldw	fp,32(sp)
 800db34:	ddc00717 	ldw	r23,28(sp)
 800db38:	dd800617 	ldw	r22,24(sp)
 800db3c:	dd400517 	ldw	r21,20(sp)
 800db40:	dd000417 	ldw	r20,16(sp)
 800db44:	dcc00317 	ldw	r19,12(sp)
 800db48:	dc800217 	ldw	r18,8(sp)
 800db4c:	dc400117 	ldw	r17,4(sp)
 800db50:	dc000017 	ldw	r16,0(sp)
 800db54:	dec00a04 	addi	sp,sp,40
 800db58:	f800283a 	ret
 800db5c:	017fff04 	movi	r5,-4
 800db60:	414a703a 	and	r5,r8,r5
 800db64:	814d883a 	add	r6,r16,r5
 800db68:	30c01f16 	blt	r6,r3,800dbe8 <_realloc_r+0x22c>
 800db6c:	20800317 	ldw	r2,12(r4)
 800db70:	20c00217 	ldw	r3,8(r4)
 800db74:	a825883a 	mov	r18,r21
 800db78:	3021883a 	mov	r16,r6
 800db7c:	18800315 	stw	r2,12(r3)
 800db80:	10c00215 	stw	r3,8(r2)
 800db84:	003fdb06 	br	800daf4 <__alt_data_end+0xfc00daf4>
 800db88:	00800304 	movi	r2,12
 800db8c:	a0800015 	stw	r2,0(r20)
 800db90:	0005883a 	mov	r2,zero
 800db94:	003fe506 	br	800db2c <__alt_data_end+0xfc00db2c>
 800db98:	98c00117 	ldw	r3,4(r19)
 800db9c:	9c4b883a 	add	r5,r19,r17
 800dba0:	11000054 	ori	r4,r2,1
 800dba4:	18c0004c 	andi	r3,r3,1
 800dba8:	1c62b03a 	or	r17,r3,r17
 800dbac:	9c400115 	stw	r17,4(r19)
 800dbb0:	29000115 	stw	r4,4(r5)
 800dbb4:	2885883a 	add	r2,r5,r2
 800dbb8:	10c00117 	ldw	r3,4(r2)
 800dbbc:	29400204 	addi	r5,r5,8
 800dbc0:	a009883a 	mov	r4,r20
 800dbc4:	18c00054 	ori	r3,r3,1
 800dbc8:	10c00115 	stw	r3,4(r2)
 800dbcc:	8007c440 	call	8007c44 <_free_r>
 800dbd0:	003fd306 	br	800db20 <__alt_data_end+0xfc00db20>
 800dbd4:	017fff04 	movi	r5,-4
 800dbd8:	414a703a 	and	r5,r8,r5
 800dbdc:	89800404 	addi	r6,r17,16
 800dbe0:	8151883a 	add	r8,r16,r5
 800dbe4:	4180590e 	bge	r8,r6,800dd4c <_realloc_r+0x390>
 800dbe8:	1080004c 	andi	r2,r2,1
 800dbec:	103f9e1e 	bne	r2,zero,800da68 <__alt_data_end+0xfc00da68>
 800dbf0:	adbffe17 	ldw	r22,-8(r21)
 800dbf4:	00bfff04 	movi	r2,-4
 800dbf8:	9dadc83a 	sub	r22,r19,r22
 800dbfc:	b1800117 	ldw	r6,4(r22)
 800dc00:	3084703a 	and	r2,r6,r2
 800dc04:	20002026 	beq	r4,zero,800dc88 <_realloc_r+0x2cc>
 800dc08:	80af883a 	add	r23,r16,r2
 800dc0c:	b96f883a 	add	r23,r23,r5
 800dc10:	21c05f26 	beq	r4,r7,800dd90 <_realloc_r+0x3d4>
 800dc14:	b8c01c16 	blt	r23,r3,800dc88 <_realloc_r+0x2cc>
 800dc18:	20800317 	ldw	r2,12(r4)
 800dc1c:	20c00217 	ldw	r3,8(r4)
 800dc20:	81bfff04 	addi	r6,r16,-4
 800dc24:	01000904 	movi	r4,36
 800dc28:	18800315 	stw	r2,12(r3)
 800dc2c:	10c00215 	stw	r3,8(r2)
 800dc30:	b0c00217 	ldw	r3,8(r22)
 800dc34:	b0800317 	ldw	r2,12(r22)
 800dc38:	b4800204 	addi	r18,r22,8
 800dc3c:	18800315 	stw	r2,12(r3)
 800dc40:	10c00215 	stw	r3,8(r2)
 800dc44:	21801b36 	bltu	r4,r6,800dcb4 <_realloc_r+0x2f8>
 800dc48:	008004c4 	movi	r2,19
 800dc4c:	1180352e 	bgeu	r2,r6,800dd24 <_realloc_r+0x368>
 800dc50:	a8800017 	ldw	r2,0(r21)
 800dc54:	b0800215 	stw	r2,8(r22)
 800dc58:	a8800117 	ldw	r2,4(r21)
 800dc5c:	b0800315 	stw	r2,12(r22)
 800dc60:	008006c4 	movi	r2,27
 800dc64:	11807f36 	bltu	r2,r6,800de64 <_realloc_r+0x4a8>
 800dc68:	b0800404 	addi	r2,r22,16
 800dc6c:	ad400204 	addi	r21,r21,8
 800dc70:	00002d06 	br	800dd28 <_realloc_r+0x36c>
 800dc74:	adbffe17 	ldw	r22,-8(r21)
 800dc78:	00bfff04 	movi	r2,-4
 800dc7c:	9dadc83a 	sub	r22,r19,r22
 800dc80:	b1000117 	ldw	r4,4(r22)
 800dc84:	2084703a 	and	r2,r4,r2
 800dc88:	b03f7726 	beq	r22,zero,800da68 <__alt_data_end+0xfc00da68>
 800dc8c:	80af883a 	add	r23,r16,r2
 800dc90:	b8ff7516 	blt	r23,r3,800da68 <__alt_data_end+0xfc00da68>
 800dc94:	b0800317 	ldw	r2,12(r22)
 800dc98:	b0c00217 	ldw	r3,8(r22)
 800dc9c:	81bfff04 	addi	r6,r16,-4
 800dca0:	01000904 	movi	r4,36
 800dca4:	18800315 	stw	r2,12(r3)
 800dca8:	10c00215 	stw	r3,8(r2)
 800dcac:	b4800204 	addi	r18,r22,8
 800dcb0:	21bfe52e 	bgeu	r4,r6,800dc48 <__alt_data_end+0xfc00dc48>
 800dcb4:	a80b883a 	mov	r5,r21
 800dcb8:	9009883a 	mov	r4,r18
 800dcbc:	800d8000 	call	800d800 <memmove>
 800dcc0:	b821883a 	mov	r16,r23
 800dcc4:	b027883a 	mov	r19,r22
 800dcc8:	003f8a06 	br	800daf4 <__alt_data_end+0xfc00daf4>
 800dccc:	300b883a 	mov	r5,r6
 800dcd0:	dfc00917 	ldw	ra,36(sp)
 800dcd4:	df000817 	ldw	fp,32(sp)
 800dcd8:	ddc00717 	ldw	r23,28(sp)
 800dcdc:	dd800617 	ldw	r22,24(sp)
 800dce0:	dd400517 	ldw	r21,20(sp)
 800dce4:	dd000417 	ldw	r20,16(sp)
 800dce8:	dcc00317 	ldw	r19,12(sp)
 800dcec:	dc800217 	ldw	r18,8(sp)
 800dcf0:	dc400117 	ldw	r17,4(sp)
 800dcf4:	dc000017 	ldw	r16,0(sp)
 800dcf8:	dec00a04 	addi	sp,sp,40
 800dcfc:	80083741 	jmpi	8008374 <_malloc_r>
 800dd00:	a8c00017 	ldw	r3,0(r21)
 800dd04:	90c00015 	stw	r3,0(r18)
 800dd08:	a8c00117 	ldw	r3,4(r21)
 800dd0c:	90c00115 	stw	r3,4(r18)
 800dd10:	00c006c4 	movi	r3,27
 800dd14:	19804536 	bltu	r3,r6,800de2c <_realloc_r+0x470>
 800dd18:	90800204 	addi	r2,r18,8
 800dd1c:	a8c00204 	addi	r3,r21,8
 800dd20:	003f6306 	br	800dab0 <__alt_data_end+0xfc00dab0>
 800dd24:	9005883a 	mov	r2,r18
 800dd28:	a8c00017 	ldw	r3,0(r21)
 800dd2c:	b821883a 	mov	r16,r23
 800dd30:	b027883a 	mov	r19,r22
 800dd34:	10c00015 	stw	r3,0(r2)
 800dd38:	a8c00117 	ldw	r3,4(r21)
 800dd3c:	10c00115 	stw	r3,4(r2)
 800dd40:	a8c00217 	ldw	r3,8(r21)
 800dd44:	10c00215 	stw	r3,8(r2)
 800dd48:	003f6a06 	br	800daf4 <__alt_data_end+0xfc00daf4>
 800dd4c:	9c67883a 	add	r19,r19,r17
 800dd50:	4445c83a 	sub	r2,r8,r17
 800dd54:	e4c00215 	stw	r19,8(fp)
 800dd58:	10800054 	ori	r2,r2,1
 800dd5c:	98800115 	stw	r2,4(r19)
 800dd60:	a8bfff17 	ldw	r2,-4(r21)
 800dd64:	a009883a 	mov	r4,r20
 800dd68:	1080004c 	andi	r2,r2,1
 800dd6c:	1462b03a 	or	r17,r2,r17
 800dd70:	ac7fff15 	stw	r17,-4(r21)
 800dd74:	8011d900 	call	8011d90 <__malloc_unlock>
 800dd78:	a805883a 	mov	r2,r21
 800dd7c:	003f6b06 	br	800db2c <__alt_data_end+0xfc00db2c>
 800dd80:	a80b883a 	mov	r5,r21
 800dd84:	9009883a 	mov	r4,r18
 800dd88:	800d8000 	call	800d800 <memmove>
 800dd8c:	003f4e06 	br	800dac8 <__alt_data_end+0xfc00dac8>
 800dd90:	89000404 	addi	r4,r17,16
 800dd94:	b93fbc16 	blt	r23,r4,800dc88 <__alt_data_end+0xfc00dc88>
 800dd98:	b0800317 	ldw	r2,12(r22)
 800dd9c:	b0c00217 	ldw	r3,8(r22)
 800dda0:	81bfff04 	addi	r6,r16,-4
 800dda4:	01000904 	movi	r4,36
 800dda8:	18800315 	stw	r2,12(r3)
 800ddac:	10c00215 	stw	r3,8(r2)
 800ddb0:	b4800204 	addi	r18,r22,8
 800ddb4:	21804336 	bltu	r4,r6,800dec4 <_realloc_r+0x508>
 800ddb8:	008004c4 	movi	r2,19
 800ddbc:	11803f2e 	bgeu	r2,r6,800debc <_realloc_r+0x500>
 800ddc0:	a8800017 	ldw	r2,0(r21)
 800ddc4:	b0800215 	stw	r2,8(r22)
 800ddc8:	a8800117 	ldw	r2,4(r21)
 800ddcc:	b0800315 	stw	r2,12(r22)
 800ddd0:	008006c4 	movi	r2,27
 800ddd4:	11803f36 	bltu	r2,r6,800ded4 <_realloc_r+0x518>
 800ddd8:	b0800404 	addi	r2,r22,16
 800dddc:	ad400204 	addi	r21,r21,8
 800dde0:	a8c00017 	ldw	r3,0(r21)
 800dde4:	10c00015 	stw	r3,0(r2)
 800dde8:	a8c00117 	ldw	r3,4(r21)
 800ddec:	10c00115 	stw	r3,4(r2)
 800ddf0:	a8c00217 	ldw	r3,8(r21)
 800ddf4:	10c00215 	stw	r3,8(r2)
 800ddf8:	b447883a 	add	r3,r22,r17
 800ddfc:	bc45c83a 	sub	r2,r23,r17
 800de00:	e0c00215 	stw	r3,8(fp)
 800de04:	10800054 	ori	r2,r2,1
 800de08:	18800115 	stw	r2,4(r3)
 800de0c:	b0800117 	ldw	r2,4(r22)
 800de10:	a009883a 	mov	r4,r20
 800de14:	1080004c 	andi	r2,r2,1
 800de18:	1462b03a 	or	r17,r2,r17
 800de1c:	b4400115 	stw	r17,4(r22)
 800de20:	8011d900 	call	8011d90 <__malloc_unlock>
 800de24:	9005883a 	mov	r2,r18
 800de28:	003f4006 	br	800db2c <__alt_data_end+0xfc00db2c>
 800de2c:	a8c00217 	ldw	r3,8(r21)
 800de30:	90c00215 	stw	r3,8(r18)
 800de34:	a8c00317 	ldw	r3,12(r21)
 800de38:	90c00315 	stw	r3,12(r18)
 800de3c:	30801126 	beq	r6,r2,800de84 <_realloc_r+0x4c8>
 800de40:	90800404 	addi	r2,r18,16
 800de44:	a8c00404 	addi	r3,r21,16
 800de48:	003f1906 	br	800dab0 <__alt_data_end+0xfc00dab0>
 800de4c:	90ffff17 	ldw	r3,-4(r18)
 800de50:	00bfff04 	movi	r2,-4
 800de54:	a825883a 	mov	r18,r21
 800de58:	1884703a 	and	r2,r3,r2
 800de5c:	80a1883a 	add	r16,r16,r2
 800de60:	003f2406 	br	800daf4 <__alt_data_end+0xfc00daf4>
 800de64:	a8800217 	ldw	r2,8(r21)
 800de68:	b0800415 	stw	r2,16(r22)
 800de6c:	a8800317 	ldw	r2,12(r21)
 800de70:	b0800515 	stw	r2,20(r22)
 800de74:	31000a26 	beq	r6,r4,800dea0 <_realloc_r+0x4e4>
 800de78:	b0800604 	addi	r2,r22,24
 800de7c:	ad400404 	addi	r21,r21,16
 800de80:	003fa906 	br	800dd28 <__alt_data_end+0xfc00dd28>
 800de84:	a9000417 	ldw	r4,16(r21)
 800de88:	90800604 	addi	r2,r18,24
 800de8c:	a8c00604 	addi	r3,r21,24
 800de90:	91000415 	stw	r4,16(r18)
 800de94:	a9000517 	ldw	r4,20(r21)
 800de98:	91000515 	stw	r4,20(r18)
 800de9c:	003f0406 	br	800dab0 <__alt_data_end+0xfc00dab0>
 800dea0:	a8c00417 	ldw	r3,16(r21)
 800dea4:	ad400604 	addi	r21,r21,24
 800dea8:	b0800804 	addi	r2,r22,32
 800deac:	b0c00615 	stw	r3,24(r22)
 800deb0:	a8ffff17 	ldw	r3,-4(r21)
 800deb4:	b0c00715 	stw	r3,28(r22)
 800deb8:	003f9b06 	br	800dd28 <__alt_data_end+0xfc00dd28>
 800debc:	9005883a 	mov	r2,r18
 800dec0:	003fc706 	br	800dde0 <__alt_data_end+0xfc00dde0>
 800dec4:	a80b883a 	mov	r5,r21
 800dec8:	9009883a 	mov	r4,r18
 800decc:	800d8000 	call	800d800 <memmove>
 800ded0:	003fc906 	br	800ddf8 <__alt_data_end+0xfc00ddf8>
 800ded4:	a8800217 	ldw	r2,8(r21)
 800ded8:	b0800415 	stw	r2,16(r22)
 800dedc:	a8800317 	ldw	r2,12(r21)
 800dee0:	b0800515 	stw	r2,20(r22)
 800dee4:	31000726 	beq	r6,r4,800df04 <_realloc_r+0x548>
 800dee8:	b0800604 	addi	r2,r22,24
 800deec:	ad400404 	addi	r21,r21,16
 800def0:	003fbb06 	br	800dde0 <__alt_data_end+0xfc00dde0>
 800def4:	a009883a 	mov	r4,r20
 800def8:	8011d900 	call	8011d90 <__malloc_unlock>
 800defc:	0005883a 	mov	r2,zero
 800df00:	003f0a06 	br	800db2c <__alt_data_end+0xfc00db2c>
 800df04:	a8c00417 	ldw	r3,16(r21)
 800df08:	ad400604 	addi	r21,r21,24
 800df0c:	b0800804 	addi	r2,r22,32
 800df10:	b0c00615 	stw	r3,24(r22)
 800df14:	a8ffff17 	ldw	r3,-4(r21)
 800df18:	b0c00715 	stw	r3,28(r22)
 800df1c:	003fb006 	br	800dde0 <__alt_data_end+0xfc00dde0>

0800df20 <__swbuf_r>:
 800df20:	defffb04 	addi	sp,sp,-20
 800df24:	dcc00315 	stw	r19,12(sp)
 800df28:	dc800215 	stw	r18,8(sp)
 800df2c:	dc000015 	stw	r16,0(sp)
 800df30:	dfc00415 	stw	ra,16(sp)
 800df34:	dc400115 	stw	r17,4(sp)
 800df38:	2025883a 	mov	r18,r4
 800df3c:	2827883a 	mov	r19,r5
 800df40:	3021883a 	mov	r16,r6
 800df44:	20000226 	beq	r4,zero,800df50 <__swbuf_r+0x30>
 800df48:	20800e17 	ldw	r2,56(r4)
 800df4c:	10004226 	beq	r2,zero,800e058 <__swbuf_r+0x138>
 800df50:	80800617 	ldw	r2,24(r16)
 800df54:	8100030b 	ldhu	r4,12(r16)
 800df58:	80800215 	stw	r2,8(r16)
 800df5c:	2080020c 	andi	r2,r4,8
 800df60:	10003626 	beq	r2,zero,800e03c <__swbuf_r+0x11c>
 800df64:	80c00417 	ldw	r3,16(r16)
 800df68:	18003426 	beq	r3,zero,800e03c <__swbuf_r+0x11c>
 800df6c:	2088000c 	andi	r2,r4,8192
 800df70:	9c403fcc 	andi	r17,r19,255
 800df74:	10001a26 	beq	r2,zero,800dfe0 <__swbuf_r+0xc0>
 800df78:	80800017 	ldw	r2,0(r16)
 800df7c:	81000517 	ldw	r4,20(r16)
 800df80:	10c7c83a 	sub	r3,r2,r3
 800df84:	1900200e 	bge	r3,r4,800e008 <__swbuf_r+0xe8>
 800df88:	18c00044 	addi	r3,r3,1
 800df8c:	81000217 	ldw	r4,8(r16)
 800df90:	11400044 	addi	r5,r2,1
 800df94:	81400015 	stw	r5,0(r16)
 800df98:	213fffc4 	addi	r4,r4,-1
 800df9c:	81000215 	stw	r4,8(r16)
 800dfa0:	14c00005 	stb	r19,0(r2)
 800dfa4:	80800517 	ldw	r2,20(r16)
 800dfa8:	10c01e26 	beq	r2,r3,800e024 <__swbuf_r+0x104>
 800dfac:	8080030b 	ldhu	r2,12(r16)
 800dfb0:	1080004c 	andi	r2,r2,1
 800dfb4:	10000226 	beq	r2,zero,800dfc0 <__swbuf_r+0xa0>
 800dfb8:	00800284 	movi	r2,10
 800dfbc:	88801926 	beq	r17,r2,800e024 <__swbuf_r+0x104>
 800dfc0:	8805883a 	mov	r2,r17
 800dfc4:	dfc00417 	ldw	ra,16(sp)
 800dfc8:	dcc00317 	ldw	r19,12(sp)
 800dfcc:	dc800217 	ldw	r18,8(sp)
 800dfd0:	dc400117 	ldw	r17,4(sp)
 800dfd4:	dc000017 	ldw	r16,0(sp)
 800dfd8:	dec00504 	addi	sp,sp,20
 800dfdc:	f800283a 	ret
 800dfe0:	81401917 	ldw	r5,100(r16)
 800dfe4:	00b7ffc4 	movi	r2,-8193
 800dfe8:	21080014 	ori	r4,r4,8192
 800dfec:	2884703a 	and	r2,r5,r2
 800dff0:	80801915 	stw	r2,100(r16)
 800dff4:	80800017 	ldw	r2,0(r16)
 800dff8:	8100030d 	sth	r4,12(r16)
 800dffc:	81000517 	ldw	r4,20(r16)
 800e000:	10c7c83a 	sub	r3,r2,r3
 800e004:	193fe016 	blt	r3,r4,800df88 <__alt_data_end+0xfc00df88>
 800e008:	800b883a 	mov	r5,r16
 800e00c:	9009883a 	mov	r4,r18
 800e010:	80076e40 	call	80076e4 <_fflush_r>
 800e014:	1000071e 	bne	r2,zero,800e034 <__swbuf_r+0x114>
 800e018:	80800017 	ldw	r2,0(r16)
 800e01c:	00c00044 	movi	r3,1
 800e020:	003fda06 	br	800df8c <__alt_data_end+0xfc00df8c>
 800e024:	800b883a 	mov	r5,r16
 800e028:	9009883a 	mov	r4,r18
 800e02c:	80076e40 	call	80076e4 <_fflush_r>
 800e030:	103fe326 	beq	r2,zero,800dfc0 <__alt_data_end+0xfc00dfc0>
 800e034:	00bfffc4 	movi	r2,-1
 800e038:	003fe206 	br	800dfc4 <__alt_data_end+0xfc00dfc4>
 800e03c:	800b883a 	mov	r5,r16
 800e040:	9009883a 	mov	r4,r18
 800e044:	8005ac40 	call	8005ac4 <__swsetup_r>
 800e048:	103ffa1e 	bne	r2,zero,800e034 <__alt_data_end+0xfc00e034>
 800e04c:	8100030b 	ldhu	r4,12(r16)
 800e050:	80c00417 	ldw	r3,16(r16)
 800e054:	003fc506 	br	800df6c <__alt_data_end+0xfc00df6c>
 800e058:	8007ad00 	call	8007ad0 <__sinit>
 800e05c:	003fbc06 	br	800df50 <__alt_data_end+0xfc00df50>

0800e060 <__swbuf>:
 800e060:	00820074 	movhi	r2,2049
 800e064:	1098c504 	addi	r2,r2,25364
 800e068:	280d883a 	mov	r6,r5
 800e06c:	200b883a 	mov	r5,r4
 800e070:	11000017 	ldw	r4,0(r2)
 800e074:	800df201 	jmpi	800df20 <__swbuf_r>

0800e078 <_wcrtomb_r>:
 800e078:	defff604 	addi	sp,sp,-40
 800e07c:	00820074 	movhi	r2,2049
 800e080:	dc800815 	stw	r18,32(sp)
 800e084:	dc400715 	stw	r17,28(sp)
 800e088:	dc000615 	stw	r16,24(sp)
 800e08c:	1098c904 	addi	r2,r2,25380
 800e090:	dfc00915 	stw	ra,36(sp)
 800e094:	2021883a 	mov	r16,r4
 800e098:	3823883a 	mov	r17,r7
 800e09c:	14800017 	ldw	r18,0(r2)
 800e0a0:	28001426 	beq	r5,zero,800e0f4 <_wcrtomb_r+0x7c>
 800e0a4:	d9400415 	stw	r5,16(sp)
 800e0a8:	d9800515 	stw	r6,20(sp)
 800e0ac:	80081580 	call	8008158 <__locale_charset>
 800e0b0:	d9800517 	ldw	r6,20(sp)
 800e0b4:	d9400417 	ldw	r5,16(sp)
 800e0b8:	100f883a 	mov	r7,r2
 800e0bc:	dc400015 	stw	r17,0(sp)
 800e0c0:	8009883a 	mov	r4,r16
 800e0c4:	903ee83a 	callr	r18
 800e0c8:	00ffffc4 	movi	r3,-1
 800e0cc:	10c0031e 	bne	r2,r3,800e0dc <_wcrtomb_r+0x64>
 800e0d0:	88000015 	stw	zero,0(r17)
 800e0d4:	00c02284 	movi	r3,138
 800e0d8:	80c00015 	stw	r3,0(r16)
 800e0dc:	dfc00917 	ldw	ra,36(sp)
 800e0e0:	dc800817 	ldw	r18,32(sp)
 800e0e4:	dc400717 	ldw	r17,28(sp)
 800e0e8:	dc000617 	ldw	r16,24(sp)
 800e0ec:	dec00a04 	addi	sp,sp,40
 800e0f0:	f800283a 	ret
 800e0f4:	80081580 	call	8008158 <__locale_charset>
 800e0f8:	100f883a 	mov	r7,r2
 800e0fc:	dc400015 	stw	r17,0(sp)
 800e100:	000d883a 	mov	r6,zero
 800e104:	d9400104 	addi	r5,sp,4
 800e108:	8009883a 	mov	r4,r16
 800e10c:	903ee83a 	callr	r18
 800e110:	003fed06 	br	800e0c8 <__alt_data_end+0xfc00e0c8>

0800e114 <wcrtomb>:
 800e114:	defff604 	addi	sp,sp,-40
 800e118:	00820074 	movhi	r2,2049
 800e11c:	dc800615 	stw	r18,24(sp)
 800e120:	dc400515 	stw	r17,20(sp)
 800e124:	1098c504 	addi	r2,r2,25364
 800e128:	dfc00915 	stw	ra,36(sp)
 800e12c:	dd000815 	stw	r20,32(sp)
 800e130:	dcc00715 	stw	r19,28(sp)
 800e134:	dc000415 	stw	r16,16(sp)
 800e138:	3025883a 	mov	r18,r6
 800e13c:	14400017 	ldw	r17,0(r2)
 800e140:	20001926 	beq	r4,zero,800e1a8 <wcrtomb+0x94>
 800e144:	00820074 	movhi	r2,2049
 800e148:	1098c904 	addi	r2,r2,25380
 800e14c:	15000017 	ldw	r20,0(r2)
 800e150:	2021883a 	mov	r16,r4
 800e154:	2827883a 	mov	r19,r5
 800e158:	80081580 	call	8008158 <__locale_charset>
 800e15c:	100f883a 	mov	r7,r2
 800e160:	dc800015 	stw	r18,0(sp)
 800e164:	980d883a 	mov	r6,r19
 800e168:	800b883a 	mov	r5,r16
 800e16c:	8809883a 	mov	r4,r17
 800e170:	a03ee83a 	callr	r20
 800e174:	00ffffc4 	movi	r3,-1
 800e178:	10c0031e 	bne	r2,r3,800e188 <wcrtomb+0x74>
 800e17c:	90000015 	stw	zero,0(r18)
 800e180:	00c02284 	movi	r3,138
 800e184:	88c00015 	stw	r3,0(r17)
 800e188:	dfc00917 	ldw	ra,36(sp)
 800e18c:	dd000817 	ldw	r20,32(sp)
 800e190:	dcc00717 	ldw	r19,28(sp)
 800e194:	dc800617 	ldw	r18,24(sp)
 800e198:	dc400517 	ldw	r17,20(sp)
 800e19c:	dc000417 	ldw	r16,16(sp)
 800e1a0:	dec00a04 	addi	sp,sp,40
 800e1a4:	f800283a 	ret
 800e1a8:	00820074 	movhi	r2,2049
 800e1ac:	1098c904 	addi	r2,r2,25380
 800e1b0:	14000017 	ldw	r16,0(r2)
 800e1b4:	80081580 	call	8008158 <__locale_charset>
 800e1b8:	100f883a 	mov	r7,r2
 800e1bc:	dc800015 	stw	r18,0(sp)
 800e1c0:	000d883a 	mov	r6,zero
 800e1c4:	d9400104 	addi	r5,sp,4
 800e1c8:	8809883a 	mov	r4,r17
 800e1cc:	803ee83a 	callr	r16
 800e1d0:	003fe806 	br	800e174 <__alt_data_end+0xfc00e174>

0800e1d4 <__ascii_wctomb>:
 800e1d4:	28000526 	beq	r5,zero,800e1ec <__ascii_wctomb+0x18>
 800e1d8:	00803fc4 	movi	r2,255
 800e1dc:	11800536 	bltu	r2,r6,800e1f4 <__ascii_wctomb+0x20>
 800e1e0:	29800005 	stb	r6,0(r5)
 800e1e4:	00800044 	movi	r2,1
 800e1e8:	f800283a 	ret
 800e1ec:	0005883a 	mov	r2,zero
 800e1f0:	f800283a 	ret
 800e1f4:	00802284 	movi	r2,138
 800e1f8:	20800015 	stw	r2,0(r4)
 800e1fc:	00bfffc4 	movi	r2,-1
 800e200:	f800283a 	ret

0800e204 <_wctomb_r>:
 800e204:	00820074 	movhi	r2,2049
 800e208:	defff904 	addi	sp,sp,-28
 800e20c:	1098c904 	addi	r2,r2,25380
 800e210:	dfc00615 	stw	ra,24(sp)
 800e214:	dc400515 	stw	r17,20(sp)
 800e218:	dc000415 	stw	r16,16(sp)
 800e21c:	3823883a 	mov	r17,r7
 800e220:	14000017 	ldw	r16,0(r2)
 800e224:	d9000115 	stw	r4,4(sp)
 800e228:	d9400215 	stw	r5,8(sp)
 800e22c:	d9800315 	stw	r6,12(sp)
 800e230:	80081580 	call	8008158 <__locale_charset>
 800e234:	d9800317 	ldw	r6,12(sp)
 800e238:	d9400217 	ldw	r5,8(sp)
 800e23c:	d9000117 	ldw	r4,4(sp)
 800e240:	100f883a 	mov	r7,r2
 800e244:	dc400015 	stw	r17,0(sp)
 800e248:	803ee83a 	callr	r16
 800e24c:	dfc00617 	ldw	ra,24(sp)
 800e250:	dc400517 	ldw	r17,20(sp)
 800e254:	dc000417 	ldw	r16,16(sp)
 800e258:	dec00704 	addi	sp,sp,28
 800e25c:	f800283a 	ret

0800e260 <__muldi3>:
 800e260:	defff604 	addi	sp,sp,-40
 800e264:	dd800615 	stw	r22,24(sp)
 800e268:	dd400515 	stw	r21,20(sp)
 800e26c:	dc400115 	stw	r17,4(sp)
 800e270:	357fffcc 	andi	r21,r6,65535
 800e274:	2022d43a 	srli	r17,r4,16
 800e278:	25bfffcc 	andi	r22,r4,65535
 800e27c:	dcc00315 	stw	r19,12(sp)
 800e280:	dc800215 	stw	r18,8(sp)
 800e284:	2027883a 	mov	r19,r4
 800e288:	2825883a 	mov	r18,r5
 800e28c:	b009883a 	mov	r4,r22
 800e290:	a80b883a 	mov	r5,r21
 800e294:	dfc00915 	stw	ra,36(sp)
 800e298:	df000815 	stw	fp,32(sp)
 800e29c:	ddc00715 	stw	r23,28(sp)
 800e2a0:	3839883a 	mov	fp,r7
 800e2a4:	302ed43a 	srli	r23,r6,16
 800e2a8:	dd000415 	stw	r20,16(sp)
 800e2ac:	dc000015 	stw	r16,0(sp)
 800e2b0:	3029883a 	mov	r20,r6
 800e2b4:	80010a00 	call	80010a0 <__mulsi3>
 800e2b8:	a80b883a 	mov	r5,r21
 800e2bc:	8809883a 	mov	r4,r17
 800e2c0:	1021883a 	mov	r16,r2
 800e2c4:	80010a00 	call	80010a0 <__mulsi3>
 800e2c8:	8809883a 	mov	r4,r17
 800e2cc:	b80b883a 	mov	r5,r23
 800e2d0:	102b883a 	mov	r21,r2
 800e2d4:	80010a00 	call	80010a0 <__mulsi3>
 800e2d8:	b80b883a 	mov	r5,r23
 800e2dc:	b009883a 	mov	r4,r22
 800e2e0:	1023883a 	mov	r17,r2
 800e2e4:	80010a00 	call	80010a0 <__mulsi3>
 800e2e8:	8006d43a 	srli	r3,r16,16
 800e2ec:	1545883a 	add	r2,r2,r21
 800e2f0:	1885883a 	add	r2,r3,r2
 800e2f4:	1540022e 	bgeu	r2,r21,800e300 <__muldi3+0xa0>
 800e2f8:	00c00074 	movhi	r3,1
 800e2fc:	88e3883a 	add	r17,r17,r3
 800e300:	1006d43a 	srli	r3,r2,16
 800e304:	1004943a 	slli	r2,r2,16
 800e308:	e00b883a 	mov	r5,fp
 800e30c:	9809883a 	mov	r4,r19
 800e310:	843fffcc 	andi	r16,r16,65535
 800e314:	1c63883a 	add	r17,r3,r17
 800e318:	1421883a 	add	r16,r2,r16
 800e31c:	80010a00 	call	80010a0 <__mulsi3>
 800e320:	900b883a 	mov	r5,r18
 800e324:	a009883a 	mov	r4,r20
 800e328:	1027883a 	mov	r19,r2
 800e32c:	80010a00 	call	80010a0 <__mulsi3>
 800e330:	9885883a 	add	r2,r19,r2
 800e334:	1447883a 	add	r3,r2,r17
 800e338:	8005883a 	mov	r2,r16
 800e33c:	dfc00917 	ldw	ra,36(sp)
 800e340:	df000817 	ldw	fp,32(sp)
 800e344:	ddc00717 	ldw	r23,28(sp)
 800e348:	dd800617 	ldw	r22,24(sp)
 800e34c:	dd400517 	ldw	r21,20(sp)
 800e350:	dd000417 	ldw	r20,16(sp)
 800e354:	dcc00317 	ldw	r19,12(sp)
 800e358:	dc800217 	ldw	r18,8(sp)
 800e35c:	dc400117 	ldw	r17,4(sp)
 800e360:	dc000017 	ldw	r16,0(sp)
 800e364:	dec00a04 	addi	sp,sp,40
 800e368:	f800283a 	ret

0800e36c <__udivdi3>:
 800e36c:	defff404 	addi	sp,sp,-48
 800e370:	dcc00515 	stw	r19,20(sp)
 800e374:	dc000215 	stw	r16,8(sp)
 800e378:	dfc00b15 	stw	ra,44(sp)
 800e37c:	df000a15 	stw	fp,40(sp)
 800e380:	ddc00915 	stw	r23,36(sp)
 800e384:	dd800815 	stw	r22,32(sp)
 800e388:	dd400715 	stw	r21,28(sp)
 800e38c:	dd000615 	stw	r20,24(sp)
 800e390:	dc800415 	stw	r18,16(sp)
 800e394:	dc400315 	stw	r17,12(sp)
 800e398:	2027883a 	mov	r19,r4
 800e39c:	2821883a 	mov	r16,r5
 800e3a0:	3800461e 	bne	r7,zero,800e4bc <__udivdi3+0x150>
 800e3a4:	3023883a 	mov	r17,r6
 800e3a8:	2025883a 	mov	r18,r4
 800e3ac:	2980572e 	bgeu	r5,r6,800e50c <__udivdi3+0x1a0>
 800e3b0:	00bfffd4 	movui	r2,65535
 800e3b4:	282d883a 	mov	r22,r5
 800e3b8:	1180b236 	bltu	r2,r6,800e684 <__udivdi3+0x318>
 800e3bc:	00803fc4 	movi	r2,255
 800e3c0:	1185803a 	cmpltu	r2,r2,r6
 800e3c4:	100490fa 	slli	r2,r2,3
 800e3c8:	3086d83a 	srl	r3,r6,r2
 800e3cc:	01020074 	movhi	r4,2049
 800e3d0:	21111104 	addi	r4,r4,17476
 800e3d4:	20c7883a 	add	r3,r4,r3
 800e3d8:	18c00003 	ldbu	r3,0(r3)
 800e3dc:	1885883a 	add	r2,r3,r2
 800e3e0:	00c00804 	movi	r3,32
 800e3e4:	1887c83a 	sub	r3,r3,r2
 800e3e8:	18000526 	beq	r3,zero,800e400 <__udivdi3+0x94>
 800e3ec:	80e0983a 	sll	r16,r16,r3
 800e3f0:	9884d83a 	srl	r2,r19,r2
 800e3f4:	30e2983a 	sll	r17,r6,r3
 800e3f8:	98e4983a 	sll	r18,r19,r3
 800e3fc:	142cb03a 	or	r22,r2,r16
 800e400:	882ad43a 	srli	r21,r17,16
 800e404:	b009883a 	mov	r4,r22
 800e408:	8d3fffcc 	andi	r20,r17,65535
 800e40c:	a80b883a 	mov	r5,r21
 800e410:	80010480 	call	8001048 <__umodsi3>
 800e414:	b009883a 	mov	r4,r22
 800e418:	a80b883a 	mov	r5,r21
 800e41c:	1027883a 	mov	r19,r2
 800e420:	8000fe40 	call	8000fe4 <__udivsi3>
 800e424:	100b883a 	mov	r5,r2
 800e428:	a009883a 	mov	r4,r20
 800e42c:	102d883a 	mov	r22,r2
 800e430:	80010a00 	call	80010a0 <__mulsi3>
 800e434:	9826943a 	slli	r19,r19,16
 800e438:	9006d43a 	srli	r3,r18,16
 800e43c:	1cc6b03a 	or	r3,r3,r19
 800e440:	1880052e 	bgeu	r3,r2,800e458 <__udivdi3+0xec>
 800e444:	1c47883a 	add	r3,r3,r17
 800e448:	b13fffc4 	addi	r4,r22,-1
 800e44c:	1c400136 	bltu	r3,r17,800e454 <__udivdi3+0xe8>
 800e450:	18814236 	bltu	r3,r2,800e95c <__udivdi3+0x5f0>
 800e454:	202d883a 	mov	r22,r4
 800e458:	18a1c83a 	sub	r16,r3,r2
 800e45c:	8009883a 	mov	r4,r16
 800e460:	a80b883a 	mov	r5,r21
 800e464:	80010480 	call	8001048 <__umodsi3>
 800e468:	1027883a 	mov	r19,r2
 800e46c:	8009883a 	mov	r4,r16
 800e470:	a80b883a 	mov	r5,r21
 800e474:	9826943a 	slli	r19,r19,16
 800e478:	8000fe40 	call	8000fe4 <__udivsi3>
 800e47c:	100b883a 	mov	r5,r2
 800e480:	a009883a 	mov	r4,r20
 800e484:	94bfffcc 	andi	r18,r18,65535
 800e488:	1021883a 	mov	r16,r2
 800e48c:	94e4b03a 	or	r18,r18,r19
 800e490:	80010a00 	call	80010a0 <__mulsi3>
 800e494:	9080052e 	bgeu	r18,r2,800e4ac <__udivdi3+0x140>
 800e498:	8ca5883a 	add	r18,r17,r18
 800e49c:	80ffffc4 	addi	r3,r16,-1
 800e4a0:	94410c36 	bltu	r18,r17,800e8d4 <__udivdi3+0x568>
 800e4a4:	90810b2e 	bgeu	r18,r2,800e8d4 <__udivdi3+0x568>
 800e4a8:	843fff84 	addi	r16,r16,-2
 800e4ac:	b004943a 	slli	r2,r22,16
 800e4b0:	0007883a 	mov	r3,zero
 800e4b4:	1404b03a 	or	r2,r2,r16
 800e4b8:	00005e06 	br	800e634 <__udivdi3+0x2c8>
 800e4bc:	29c05b36 	bltu	r5,r7,800e62c <__udivdi3+0x2c0>
 800e4c0:	00bfffd4 	movui	r2,65535
 800e4c4:	11c0672e 	bgeu	r2,r7,800e664 <__udivdi3+0x2f8>
 800e4c8:	00804034 	movhi	r2,256
 800e4cc:	10bfffc4 	addi	r2,r2,-1
 800e4d0:	11c10a36 	bltu	r2,r7,800e8fc <__udivdi3+0x590>
 800e4d4:	00800404 	movi	r2,16
 800e4d8:	3886d83a 	srl	r3,r7,r2
 800e4dc:	01020074 	movhi	r4,2049
 800e4e0:	21111104 	addi	r4,r4,17476
 800e4e4:	20c7883a 	add	r3,r4,r3
 800e4e8:	18c00003 	ldbu	r3,0(r3)
 800e4ec:	05c00804 	movi	r23,32
 800e4f0:	1885883a 	add	r2,r3,r2
 800e4f4:	b8afc83a 	sub	r23,r23,r2
 800e4f8:	b800671e 	bne	r23,zero,800e698 <__udivdi3+0x32c>
 800e4fc:	3c010536 	bltu	r7,r16,800e914 <__udivdi3+0x5a8>
 800e500:	9985403a 	cmpgeu	r2,r19,r6
 800e504:	0007883a 	mov	r3,zero
 800e508:	00004a06 	br	800e634 <__udivdi3+0x2c8>
 800e50c:	3000041e 	bne	r6,zero,800e520 <__udivdi3+0x1b4>
 800e510:	000b883a 	mov	r5,zero
 800e514:	01000044 	movi	r4,1
 800e518:	8000fe40 	call	8000fe4 <__udivsi3>
 800e51c:	1023883a 	mov	r17,r2
 800e520:	00bfffd4 	movui	r2,65535
 800e524:	1440532e 	bgeu	r2,r17,800e674 <__udivdi3+0x308>
 800e528:	00804034 	movhi	r2,256
 800e52c:	10bfffc4 	addi	r2,r2,-1
 800e530:	1440f436 	bltu	r2,r17,800e904 <__udivdi3+0x598>
 800e534:	00800404 	movi	r2,16
 800e538:	8886d83a 	srl	r3,r17,r2
 800e53c:	01020074 	movhi	r4,2049
 800e540:	21111104 	addi	r4,r4,17476
 800e544:	20c7883a 	add	r3,r4,r3
 800e548:	18c00003 	ldbu	r3,0(r3)
 800e54c:	1885883a 	add	r2,r3,r2
 800e550:	00c00804 	movi	r3,32
 800e554:	1887c83a 	sub	r3,r3,r2
 800e558:	1800a51e 	bne	r3,zero,800e7f0 <__udivdi3+0x484>
 800e55c:	882ad43a 	srli	r21,r17,16
 800e560:	8461c83a 	sub	r16,r16,r17
 800e564:	8d3fffcc 	andi	r20,r17,65535
 800e568:	00c00044 	movi	r3,1
 800e56c:	a80b883a 	mov	r5,r21
 800e570:	8009883a 	mov	r4,r16
 800e574:	d8c00115 	stw	r3,4(sp)
 800e578:	80010480 	call	8001048 <__umodsi3>
 800e57c:	a80b883a 	mov	r5,r21
 800e580:	8009883a 	mov	r4,r16
 800e584:	1027883a 	mov	r19,r2
 800e588:	8000fe40 	call	8000fe4 <__udivsi3>
 800e58c:	a00b883a 	mov	r5,r20
 800e590:	1009883a 	mov	r4,r2
 800e594:	102d883a 	mov	r22,r2
 800e598:	80010a00 	call	80010a0 <__mulsi3>
 800e59c:	9826943a 	slli	r19,r19,16
 800e5a0:	900ed43a 	srli	r7,r18,16
 800e5a4:	d8c00117 	ldw	r3,4(sp)
 800e5a8:	3cceb03a 	or	r7,r7,r19
 800e5ac:	3880052e 	bgeu	r7,r2,800e5c4 <__udivdi3+0x258>
 800e5b0:	3c4f883a 	add	r7,r7,r17
 800e5b4:	b13fffc4 	addi	r4,r22,-1
 800e5b8:	3c400136 	bltu	r7,r17,800e5c0 <__udivdi3+0x254>
 800e5bc:	3880e436 	bltu	r7,r2,800e950 <__udivdi3+0x5e4>
 800e5c0:	202d883a 	mov	r22,r4
 800e5c4:	38a1c83a 	sub	r16,r7,r2
 800e5c8:	8009883a 	mov	r4,r16
 800e5cc:	a80b883a 	mov	r5,r21
 800e5d0:	d8c00115 	stw	r3,4(sp)
 800e5d4:	80010480 	call	8001048 <__umodsi3>
 800e5d8:	1027883a 	mov	r19,r2
 800e5dc:	8009883a 	mov	r4,r16
 800e5e0:	a80b883a 	mov	r5,r21
 800e5e4:	9826943a 	slli	r19,r19,16
 800e5e8:	8000fe40 	call	8000fe4 <__udivsi3>
 800e5ec:	a00b883a 	mov	r5,r20
 800e5f0:	1009883a 	mov	r4,r2
 800e5f4:	94bfffcc 	andi	r18,r18,65535
 800e5f8:	1021883a 	mov	r16,r2
 800e5fc:	94e4b03a 	or	r18,r18,r19
 800e600:	80010a00 	call	80010a0 <__mulsi3>
 800e604:	d8c00117 	ldw	r3,4(sp)
 800e608:	9080052e 	bgeu	r18,r2,800e620 <__udivdi3+0x2b4>
 800e60c:	8ca5883a 	add	r18,r17,r18
 800e610:	813fffc4 	addi	r4,r16,-1
 800e614:	9440ad36 	bltu	r18,r17,800e8cc <__udivdi3+0x560>
 800e618:	9080ac2e 	bgeu	r18,r2,800e8cc <__udivdi3+0x560>
 800e61c:	843fff84 	addi	r16,r16,-2
 800e620:	b004943a 	slli	r2,r22,16
 800e624:	1404b03a 	or	r2,r2,r16
 800e628:	00000206 	br	800e634 <__udivdi3+0x2c8>
 800e62c:	0007883a 	mov	r3,zero
 800e630:	0005883a 	mov	r2,zero
 800e634:	dfc00b17 	ldw	ra,44(sp)
 800e638:	df000a17 	ldw	fp,40(sp)
 800e63c:	ddc00917 	ldw	r23,36(sp)
 800e640:	dd800817 	ldw	r22,32(sp)
 800e644:	dd400717 	ldw	r21,28(sp)
 800e648:	dd000617 	ldw	r20,24(sp)
 800e64c:	dcc00517 	ldw	r19,20(sp)
 800e650:	dc800417 	ldw	r18,16(sp)
 800e654:	dc400317 	ldw	r17,12(sp)
 800e658:	dc000217 	ldw	r16,8(sp)
 800e65c:	dec00c04 	addi	sp,sp,48
 800e660:	f800283a 	ret
 800e664:	00803fc4 	movi	r2,255
 800e668:	11c5803a 	cmpltu	r2,r2,r7
 800e66c:	100490fa 	slli	r2,r2,3
 800e670:	003f9906 	br	800e4d8 <__alt_data_end+0xfc00e4d8>
 800e674:	00803fc4 	movi	r2,255
 800e678:	1445803a 	cmpltu	r2,r2,r17
 800e67c:	100490fa 	slli	r2,r2,3
 800e680:	003fad06 	br	800e538 <__alt_data_end+0xfc00e538>
 800e684:	00804034 	movhi	r2,256
 800e688:	10bfffc4 	addi	r2,r2,-1
 800e68c:	11809f36 	bltu	r2,r6,800e90c <__udivdi3+0x5a0>
 800e690:	00800404 	movi	r2,16
 800e694:	003f4c06 	br	800e3c8 <__alt_data_end+0xfc00e3c8>
 800e698:	3dce983a 	sll	r7,r7,r23
 800e69c:	30b8d83a 	srl	fp,r6,r2
 800e6a0:	80a2d83a 	srl	r17,r16,r2
 800e6a4:	35cc983a 	sll	r6,r6,r23
 800e6a8:	3f38b03a 	or	fp,r7,fp
 800e6ac:	e024d43a 	srli	r18,fp,16
 800e6b0:	9884d83a 	srl	r2,r19,r2
 800e6b4:	85e0983a 	sll	r16,r16,r23
 800e6b8:	8809883a 	mov	r4,r17
 800e6bc:	900b883a 	mov	r5,r18
 800e6c0:	d9800015 	stw	r6,0(sp)
 800e6c4:	1420b03a 	or	r16,r2,r16
 800e6c8:	80010480 	call	8001048 <__umodsi3>
 800e6cc:	900b883a 	mov	r5,r18
 800e6d0:	8809883a 	mov	r4,r17
 800e6d4:	1029883a 	mov	r20,r2
 800e6d8:	e5bfffcc 	andi	r22,fp,65535
 800e6dc:	8000fe40 	call	8000fe4 <__udivsi3>
 800e6e0:	100b883a 	mov	r5,r2
 800e6e4:	b009883a 	mov	r4,r22
 800e6e8:	102b883a 	mov	r21,r2
 800e6ec:	80010a00 	call	80010a0 <__mulsi3>
 800e6f0:	a028943a 	slli	r20,r20,16
 800e6f4:	8006d43a 	srli	r3,r16,16
 800e6f8:	1d06b03a 	or	r3,r3,r20
 800e6fc:	1880042e 	bgeu	r3,r2,800e710 <__udivdi3+0x3a4>
 800e700:	1f07883a 	add	r3,r3,fp
 800e704:	a93fffc4 	addi	r4,r21,-1
 800e708:	1f00892e 	bgeu	r3,fp,800e930 <__udivdi3+0x5c4>
 800e70c:	202b883a 	mov	r21,r4
 800e710:	18a3c83a 	sub	r17,r3,r2
 800e714:	8809883a 	mov	r4,r17
 800e718:	900b883a 	mov	r5,r18
 800e71c:	80010480 	call	8001048 <__umodsi3>
 800e720:	1029883a 	mov	r20,r2
 800e724:	8809883a 	mov	r4,r17
 800e728:	900b883a 	mov	r5,r18
 800e72c:	a028943a 	slli	r20,r20,16
 800e730:	8000fe40 	call	8000fe4 <__udivsi3>
 800e734:	100b883a 	mov	r5,r2
 800e738:	b009883a 	mov	r4,r22
 800e73c:	843fffcc 	andi	r16,r16,65535
 800e740:	1023883a 	mov	r17,r2
 800e744:	8520b03a 	or	r16,r16,r20
 800e748:	80010a00 	call	80010a0 <__mulsi3>
 800e74c:	8080042e 	bgeu	r16,r2,800e760 <__udivdi3+0x3f4>
 800e750:	8721883a 	add	r16,r16,fp
 800e754:	88ffffc4 	addi	r3,r17,-1
 800e758:	8700712e 	bgeu	r16,fp,800e920 <__udivdi3+0x5b4>
 800e75c:	1823883a 	mov	r17,r3
 800e760:	a80e943a 	slli	r7,r21,16
 800e764:	d8c00017 	ldw	r3,0(sp)
 800e768:	80a1c83a 	sub	r16,r16,r2
 800e76c:	3c64b03a 	or	r18,r7,r17
 800e770:	1d3fffcc 	andi	r20,r3,65535
 800e774:	9022d43a 	srli	r17,r18,16
 800e778:	95bfffcc 	andi	r22,r18,65535
 800e77c:	a00b883a 	mov	r5,r20
 800e780:	b009883a 	mov	r4,r22
 800e784:	182ad43a 	srli	r21,r3,16
 800e788:	80010a00 	call	80010a0 <__mulsi3>
 800e78c:	a00b883a 	mov	r5,r20
 800e790:	8809883a 	mov	r4,r17
 800e794:	1039883a 	mov	fp,r2
 800e798:	80010a00 	call	80010a0 <__mulsi3>
 800e79c:	8809883a 	mov	r4,r17
 800e7a0:	a80b883a 	mov	r5,r21
 800e7a4:	1029883a 	mov	r20,r2
 800e7a8:	80010a00 	call	80010a0 <__mulsi3>
 800e7ac:	a80b883a 	mov	r5,r21
 800e7b0:	b009883a 	mov	r4,r22
 800e7b4:	1023883a 	mov	r17,r2
 800e7b8:	80010a00 	call	80010a0 <__mulsi3>
 800e7bc:	e006d43a 	srli	r3,fp,16
 800e7c0:	1505883a 	add	r2,r2,r20
 800e7c4:	1887883a 	add	r3,r3,r2
 800e7c8:	1d00022e 	bgeu	r3,r20,800e7d4 <__udivdi3+0x468>
 800e7cc:	00800074 	movhi	r2,1
 800e7d0:	88a3883a 	add	r17,r17,r2
 800e7d4:	1804d43a 	srli	r2,r3,16
 800e7d8:	1463883a 	add	r17,r2,r17
 800e7dc:	84404436 	bltu	r16,r17,800e8f0 <__udivdi3+0x584>
 800e7e0:	84403e26 	beq	r16,r17,800e8dc <__udivdi3+0x570>
 800e7e4:	9005883a 	mov	r2,r18
 800e7e8:	0007883a 	mov	r3,zero
 800e7ec:	003f9106 	br	800e634 <__alt_data_end+0xfc00e634>
 800e7f0:	88e2983a 	sll	r17,r17,r3
 800e7f4:	80aed83a 	srl	r23,r16,r2
 800e7f8:	80e0983a 	sll	r16,r16,r3
 800e7fc:	882ad43a 	srli	r21,r17,16
 800e800:	9884d83a 	srl	r2,r19,r2
 800e804:	b809883a 	mov	r4,r23
 800e808:	a80b883a 	mov	r5,r21
 800e80c:	98e4983a 	sll	r18,r19,r3
 800e810:	142cb03a 	or	r22,r2,r16
 800e814:	80010480 	call	8001048 <__umodsi3>
 800e818:	b809883a 	mov	r4,r23
 800e81c:	a80b883a 	mov	r5,r21
 800e820:	1027883a 	mov	r19,r2
 800e824:	8d3fffcc 	andi	r20,r17,65535
 800e828:	8000fe40 	call	8000fe4 <__udivsi3>
 800e82c:	a009883a 	mov	r4,r20
 800e830:	100b883a 	mov	r5,r2
 800e834:	102f883a 	mov	r23,r2
 800e838:	80010a00 	call	80010a0 <__mulsi3>
 800e83c:	9826943a 	slli	r19,r19,16
 800e840:	b008d43a 	srli	r4,r22,16
 800e844:	24c8b03a 	or	r4,r4,r19
 800e848:	2080062e 	bgeu	r4,r2,800e864 <__udivdi3+0x4f8>
 800e84c:	2449883a 	add	r4,r4,r17
 800e850:	b8ffffc4 	addi	r3,r23,-1
 800e854:	24403c36 	bltu	r4,r17,800e948 <__udivdi3+0x5dc>
 800e858:	20803b2e 	bgeu	r4,r2,800e948 <__udivdi3+0x5dc>
 800e85c:	bdffff84 	addi	r23,r23,-2
 800e860:	2449883a 	add	r4,r4,r17
 800e864:	20a1c83a 	sub	r16,r4,r2
 800e868:	a80b883a 	mov	r5,r21
 800e86c:	8009883a 	mov	r4,r16
 800e870:	80010480 	call	8001048 <__umodsi3>
 800e874:	a80b883a 	mov	r5,r21
 800e878:	8009883a 	mov	r4,r16
 800e87c:	1027883a 	mov	r19,r2
 800e880:	8000fe40 	call	8000fe4 <__udivsi3>
 800e884:	a009883a 	mov	r4,r20
 800e888:	100b883a 	mov	r5,r2
 800e88c:	9826943a 	slli	r19,r19,16
 800e890:	1039883a 	mov	fp,r2
 800e894:	80010a00 	call	80010a0 <__mulsi3>
 800e898:	b13fffcc 	andi	r4,r22,65535
 800e89c:	24c8b03a 	or	r4,r4,r19
 800e8a0:	2080062e 	bgeu	r4,r2,800e8bc <__udivdi3+0x550>
 800e8a4:	2449883a 	add	r4,r4,r17
 800e8a8:	e0ffffc4 	addi	r3,fp,-1
 800e8ac:	24402436 	bltu	r4,r17,800e940 <__udivdi3+0x5d4>
 800e8b0:	2080232e 	bgeu	r4,r2,800e940 <__udivdi3+0x5d4>
 800e8b4:	e73fff84 	addi	fp,fp,-2
 800e8b8:	2449883a 	add	r4,r4,r17
 800e8bc:	b82e943a 	slli	r23,r23,16
 800e8c0:	20a1c83a 	sub	r16,r4,r2
 800e8c4:	bf06b03a 	or	r3,r23,fp
 800e8c8:	003f2806 	br	800e56c <__alt_data_end+0xfc00e56c>
 800e8cc:	2021883a 	mov	r16,r4
 800e8d0:	003f5306 	br	800e620 <__alt_data_end+0xfc00e620>
 800e8d4:	1821883a 	mov	r16,r3
 800e8d8:	003ef406 	br	800e4ac <__alt_data_end+0xfc00e4ac>
 800e8dc:	1806943a 	slli	r3,r3,16
 800e8e0:	9de6983a 	sll	r19,r19,r23
 800e8e4:	e73fffcc 	andi	fp,fp,65535
 800e8e8:	1f07883a 	add	r3,r3,fp
 800e8ec:	98ffbd2e 	bgeu	r19,r3,800e7e4 <__alt_data_end+0xfc00e7e4>
 800e8f0:	90bfffc4 	addi	r2,r18,-1
 800e8f4:	0007883a 	mov	r3,zero
 800e8f8:	003f4e06 	br	800e634 <__alt_data_end+0xfc00e634>
 800e8fc:	00800604 	movi	r2,24
 800e900:	003ef506 	br	800e4d8 <__alt_data_end+0xfc00e4d8>
 800e904:	00800604 	movi	r2,24
 800e908:	003f0b06 	br	800e538 <__alt_data_end+0xfc00e538>
 800e90c:	00800604 	movi	r2,24
 800e910:	003ead06 	br	800e3c8 <__alt_data_end+0xfc00e3c8>
 800e914:	0007883a 	mov	r3,zero
 800e918:	00800044 	movi	r2,1
 800e91c:	003f4506 	br	800e634 <__alt_data_end+0xfc00e634>
 800e920:	80bf8e2e 	bgeu	r16,r2,800e75c <__alt_data_end+0xfc00e75c>
 800e924:	8c7fff84 	addi	r17,r17,-2
 800e928:	8721883a 	add	r16,r16,fp
 800e92c:	003f8c06 	br	800e760 <__alt_data_end+0xfc00e760>
 800e930:	18bf762e 	bgeu	r3,r2,800e70c <__alt_data_end+0xfc00e70c>
 800e934:	ad7fff84 	addi	r21,r21,-2
 800e938:	1f07883a 	add	r3,r3,fp
 800e93c:	003f7406 	br	800e710 <__alt_data_end+0xfc00e710>
 800e940:	1839883a 	mov	fp,r3
 800e944:	003fdd06 	br	800e8bc <__alt_data_end+0xfc00e8bc>
 800e948:	182f883a 	mov	r23,r3
 800e94c:	003fc506 	br	800e864 <__alt_data_end+0xfc00e864>
 800e950:	b5bfff84 	addi	r22,r22,-2
 800e954:	3c4f883a 	add	r7,r7,r17
 800e958:	003f1a06 	br	800e5c4 <__alt_data_end+0xfc00e5c4>
 800e95c:	b5bfff84 	addi	r22,r22,-2
 800e960:	1c47883a 	add	r3,r3,r17
 800e964:	003ebc06 	br	800e458 <__alt_data_end+0xfc00e458>

0800e968 <__umoddi3>:
 800e968:	defff304 	addi	sp,sp,-52
 800e96c:	df000b15 	stw	fp,44(sp)
 800e970:	dc400415 	stw	r17,16(sp)
 800e974:	dc000315 	stw	r16,12(sp)
 800e978:	dfc00c15 	stw	ra,48(sp)
 800e97c:	ddc00a15 	stw	r23,40(sp)
 800e980:	dd800915 	stw	r22,36(sp)
 800e984:	dd400815 	stw	r21,32(sp)
 800e988:	dd000715 	stw	r20,28(sp)
 800e98c:	dcc00615 	stw	r19,24(sp)
 800e990:	dc800515 	stw	r18,20(sp)
 800e994:	2021883a 	mov	r16,r4
 800e998:	2823883a 	mov	r17,r5
 800e99c:	2839883a 	mov	fp,r5
 800e9a0:	3800401e 	bne	r7,zero,800eaa4 <__umoddi3+0x13c>
 800e9a4:	3027883a 	mov	r19,r6
 800e9a8:	2029883a 	mov	r20,r4
 800e9ac:	2980552e 	bgeu	r5,r6,800eb04 <__umoddi3+0x19c>
 800e9b0:	00bfffd4 	movui	r2,65535
 800e9b4:	1180a236 	bltu	r2,r6,800ec40 <__umoddi3+0x2d8>
 800e9b8:	01003fc4 	movi	r4,255
 800e9bc:	2189803a 	cmpltu	r4,r4,r6
 800e9c0:	200890fa 	slli	r4,r4,3
 800e9c4:	3104d83a 	srl	r2,r6,r4
 800e9c8:	00c20074 	movhi	r3,2049
 800e9cc:	18d11104 	addi	r3,r3,17476
 800e9d0:	1885883a 	add	r2,r3,r2
 800e9d4:	10c00003 	ldbu	r3,0(r2)
 800e9d8:	00800804 	movi	r2,32
 800e9dc:	1909883a 	add	r4,r3,r4
 800e9e0:	1125c83a 	sub	r18,r2,r4
 800e9e4:	90000526 	beq	r18,zero,800e9fc <__umoddi3+0x94>
 800e9e8:	8ca2983a 	sll	r17,r17,r18
 800e9ec:	8108d83a 	srl	r4,r16,r4
 800e9f0:	34a6983a 	sll	r19,r6,r18
 800e9f4:	84a8983a 	sll	r20,r16,r18
 800e9f8:	2478b03a 	or	fp,r4,r17
 800e9fc:	982cd43a 	srli	r22,r19,16
 800ea00:	e009883a 	mov	r4,fp
 800ea04:	9dffffcc 	andi	r23,r19,65535
 800ea08:	b00b883a 	mov	r5,r22
 800ea0c:	80010480 	call	8001048 <__umodsi3>
 800ea10:	b00b883a 	mov	r5,r22
 800ea14:	e009883a 	mov	r4,fp
 800ea18:	102b883a 	mov	r21,r2
 800ea1c:	8000fe40 	call	8000fe4 <__udivsi3>
 800ea20:	100b883a 	mov	r5,r2
 800ea24:	b809883a 	mov	r4,r23
 800ea28:	80010a00 	call	80010a0 <__mulsi3>
 800ea2c:	a82a943a 	slli	r21,r21,16
 800ea30:	a006d43a 	srli	r3,r20,16
 800ea34:	1d46b03a 	or	r3,r3,r21
 800ea38:	1880032e 	bgeu	r3,r2,800ea48 <__umoddi3+0xe0>
 800ea3c:	1cc7883a 	add	r3,r3,r19
 800ea40:	1cc00136 	bltu	r3,r19,800ea48 <__umoddi3+0xe0>
 800ea44:	18813136 	bltu	r3,r2,800ef0c <__umoddi3+0x5a4>
 800ea48:	18a1c83a 	sub	r16,r3,r2
 800ea4c:	b00b883a 	mov	r5,r22
 800ea50:	8009883a 	mov	r4,r16
 800ea54:	80010480 	call	8001048 <__umodsi3>
 800ea58:	b00b883a 	mov	r5,r22
 800ea5c:	8009883a 	mov	r4,r16
 800ea60:	1023883a 	mov	r17,r2
 800ea64:	8000fe40 	call	8000fe4 <__udivsi3>
 800ea68:	100b883a 	mov	r5,r2
 800ea6c:	b809883a 	mov	r4,r23
 800ea70:	8822943a 	slli	r17,r17,16
 800ea74:	80010a00 	call	80010a0 <__mulsi3>
 800ea78:	a0ffffcc 	andi	r3,r20,65535
 800ea7c:	1c46b03a 	or	r3,r3,r17
 800ea80:	1880042e 	bgeu	r3,r2,800ea94 <__umoddi3+0x12c>
 800ea84:	1cc7883a 	add	r3,r3,r19
 800ea88:	1cc00236 	bltu	r3,r19,800ea94 <__umoddi3+0x12c>
 800ea8c:	1880012e 	bgeu	r3,r2,800ea94 <__umoddi3+0x12c>
 800ea90:	1cc7883a 	add	r3,r3,r19
 800ea94:	1885c83a 	sub	r2,r3,r2
 800ea98:	1484d83a 	srl	r2,r2,r18
 800ea9c:	0007883a 	mov	r3,zero
 800eaa0:	00005306 	br	800ebf0 <__umoddi3+0x288>
 800eaa4:	29c05036 	bltu	r5,r7,800ebe8 <__umoddi3+0x280>
 800eaa8:	00bfffd4 	movui	r2,65535
 800eaac:	11c05c2e 	bgeu	r2,r7,800ec20 <__umoddi3+0x2b8>
 800eab0:	00804034 	movhi	r2,256
 800eab4:	10bfffc4 	addi	r2,r2,-1
 800eab8:	11c10636 	bltu	r2,r7,800eed4 <__umoddi3+0x56c>
 800eabc:	01000404 	movi	r4,16
 800eac0:	3904d83a 	srl	r2,r7,r4
 800eac4:	00c20074 	movhi	r3,2049
 800eac8:	18d11104 	addi	r3,r3,17476
 800eacc:	1885883a 	add	r2,r3,r2
 800ead0:	14c00003 	ldbu	r19,0(r2)
 800ead4:	00c00804 	movi	r3,32
 800ead8:	9927883a 	add	r19,r19,r4
 800eadc:	1ce9c83a 	sub	r20,r3,r19
 800eae0:	a0005c1e 	bne	r20,zero,800ec54 <__umoddi3+0x2ec>
 800eae4:	3c400136 	bltu	r7,r17,800eaec <__umoddi3+0x184>
 800eae8:	81810a36 	bltu	r16,r6,800ef14 <__umoddi3+0x5ac>
 800eaec:	8185c83a 	sub	r2,r16,r6
 800eaf0:	89e3c83a 	sub	r17,r17,r7
 800eaf4:	8089803a 	cmpltu	r4,r16,r2
 800eaf8:	8939c83a 	sub	fp,r17,r4
 800eafc:	e007883a 	mov	r3,fp
 800eb00:	00003b06 	br	800ebf0 <__umoddi3+0x288>
 800eb04:	3000041e 	bne	r6,zero,800eb18 <__umoddi3+0x1b0>
 800eb08:	000b883a 	mov	r5,zero
 800eb0c:	01000044 	movi	r4,1
 800eb10:	8000fe40 	call	8000fe4 <__udivsi3>
 800eb14:	1027883a 	mov	r19,r2
 800eb18:	00bfffd4 	movui	r2,65535
 800eb1c:	14c0442e 	bgeu	r2,r19,800ec30 <__umoddi3+0x2c8>
 800eb20:	00804034 	movhi	r2,256
 800eb24:	10bfffc4 	addi	r2,r2,-1
 800eb28:	14c0ec36 	bltu	r2,r19,800eedc <__umoddi3+0x574>
 800eb2c:	00800404 	movi	r2,16
 800eb30:	9886d83a 	srl	r3,r19,r2
 800eb34:	01020074 	movhi	r4,2049
 800eb38:	21111104 	addi	r4,r4,17476
 800eb3c:	20c7883a 	add	r3,r4,r3
 800eb40:	18c00003 	ldbu	r3,0(r3)
 800eb44:	1887883a 	add	r3,r3,r2
 800eb48:	00800804 	movi	r2,32
 800eb4c:	10e5c83a 	sub	r18,r2,r3
 800eb50:	9000ab1e 	bne	r18,zero,800ee00 <__umoddi3+0x498>
 800eb54:	982cd43a 	srli	r22,r19,16
 800eb58:	8ce3c83a 	sub	r17,r17,r19
 800eb5c:	9dffffcc 	andi	r23,r19,65535
 800eb60:	b00b883a 	mov	r5,r22
 800eb64:	8809883a 	mov	r4,r17
 800eb68:	80010480 	call	8001048 <__umodsi3>
 800eb6c:	b00b883a 	mov	r5,r22
 800eb70:	8809883a 	mov	r4,r17
 800eb74:	102b883a 	mov	r21,r2
 800eb78:	8000fe40 	call	8000fe4 <__udivsi3>
 800eb7c:	b80b883a 	mov	r5,r23
 800eb80:	1009883a 	mov	r4,r2
 800eb84:	80010a00 	call	80010a0 <__mulsi3>
 800eb88:	a82a943a 	slli	r21,r21,16
 800eb8c:	a006d43a 	srli	r3,r20,16
 800eb90:	1d46b03a 	or	r3,r3,r21
 800eb94:	1880042e 	bgeu	r3,r2,800eba8 <__umoddi3+0x240>
 800eb98:	1cc7883a 	add	r3,r3,r19
 800eb9c:	1cc00236 	bltu	r3,r19,800eba8 <__umoddi3+0x240>
 800eba0:	1880012e 	bgeu	r3,r2,800eba8 <__umoddi3+0x240>
 800eba4:	1cc7883a 	add	r3,r3,r19
 800eba8:	18a1c83a 	sub	r16,r3,r2
 800ebac:	b00b883a 	mov	r5,r22
 800ebb0:	8009883a 	mov	r4,r16
 800ebb4:	80010480 	call	8001048 <__umodsi3>
 800ebb8:	1023883a 	mov	r17,r2
 800ebbc:	b00b883a 	mov	r5,r22
 800ebc0:	8009883a 	mov	r4,r16
 800ebc4:	8000fe40 	call	8000fe4 <__udivsi3>
 800ebc8:	8822943a 	slli	r17,r17,16
 800ebcc:	b80b883a 	mov	r5,r23
 800ebd0:	1009883a 	mov	r4,r2
 800ebd4:	80010a00 	call	80010a0 <__mulsi3>
 800ebd8:	a53fffcc 	andi	r20,r20,65535
 800ebdc:	a446b03a 	or	r3,r20,r17
 800ebe0:	18bfac2e 	bgeu	r3,r2,800ea94 <__alt_data_end+0xfc00ea94>
 800ebe4:	003fa706 	br	800ea84 <__alt_data_end+0xfc00ea84>
 800ebe8:	2005883a 	mov	r2,r4
 800ebec:	2807883a 	mov	r3,r5
 800ebf0:	dfc00c17 	ldw	ra,48(sp)
 800ebf4:	df000b17 	ldw	fp,44(sp)
 800ebf8:	ddc00a17 	ldw	r23,40(sp)
 800ebfc:	dd800917 	ldw	r22,36(sp)
 800ec00:	dd400817 	ldw	r21,32(sp)
 800ec04:	dd000717 	ldw	r20,28(sp)
 800ec08:	dcc00617 	ldw	r19,24(sp)
 800ec0c:	dc800517 	ldw	r18,20(sp)
 800ec10:	dc400417 	ldw	r17,16(sp)
 800ec14:	dc000317 	ldw	r16,12(sp)
 800ec18:	dec00d04 	addi	sp,sp,52
 800ec1c:	f800283a 	ret
 800ec20:	04c03fc4 	movi	r19,255
 800ec24:	99c9803a 	cmpltu	r4,r19,r7
 800ec28:	200890fa 	slli	r4,r4,3
 800ec2c:	003fa406 	br	800eac0 <__alt_data_end+0xfc00eac0>
 800ec30:	00803fc4 	movi	r2,255
 800ec34:	14c5803a 	cmpltu	r2,r2,r19
 800ec38:	100490fa 	slli	r2,r2,3
 800ec3c:	003fbc06 	br	800eb30 <__alt_data_end+0xfc00eb30>
 800ec40:	00804034 	movhi	r2,256
 800ec44:	10bfffc4 	addi	r2,r2,-1
 800ec48:	1180a636 	bltu	r2,r6,800eee4 <__umoddi3+0x57c>
 800ec4c:	01000404 	movi	r4,16
 800ec50:	003f5c06 	br	800e9c4 <__alt_data_end+0xfc00e9c4>
 800ec54:	3d0e983a 	sll	r7,r7,r20
 800ec58:	34ead83a 	srl	r21,r6,r19
 800ec5c:	8cc6d83a 	srl	r3,r17,r19
 800ec60:	8d10983a 	sll	r8,r17,r20
 800ec64:	3d6ab03a 	or	r21,r7,r21
 800ec68:	a82cd43a 	srli	r22,r21,16
 800ec6c:	84e2d83a 	srl	r17,r16,r19
 800ec70:	1809883a 	mov	r4,r3
 800ec74:	b00b883a 	mov	r5,r22
 800ec78:	8a22b03a 	or	r17,r17,r8
 800ec7c:	3524983a 	sll	r18,r6,r20
 800ec80:	dc400015 	stw	r17,0(sp)
 800ec84:	d8c00115 	stw	r3,4(sp)
 800ec88:	80010480 	call	8001048 <__umodsi3>
 800ec8c:	d8c00117 	ldw	r3,4(sp)
 800ec90:	b00b883a 	mov	r5,r22
 800ec94:	1039883a 	mov	fp,r2
 800ec98:	1809883a 	mov	r4,r3
 800ec9c:	8000fe40 	call	8000fe4 <__udivsi3>
 800eca0:	adffffcc 	andi	r23,r21,65535
 800eca4:	100b883a 	mov	r5,r2
 800eca8:	b809883a 	mov	r4,r23
 800ecac:	1023883a 	mov	r17,r2
 800ecb0:	80010a00 	call	80010a0 <__mulsi3>
 800ecb4:	d9400017 	ldw	r5,0(sp)
 800ecb8:	e008943a 	slli	r4,fp,16
 800ecbc:	8520983a 	sll	r16,r16,r20
 800ecc0:	2806d43a 	srli	r3,r5,16
 800ecc4:	1906b03a 	or	r3,r3,r4
 800ecc8:	1880042e 	bgeu	r3,r2,800ecdc <__umoddi3+0x374>
 800eccc:	1d47883a 	add	r3,r3,r21
 800ecd0:	893fffc4 	addi	r4,r17,-1
 800ecd4:	1d40892e 	bgeu	r3,r21,800eefc <__umoddi3+0x594>
 800ecd8:	2023883a 	mov	r17,r4
 800ecdc:	18b9c83a 	sub	fp,r3,r2
 800ece0:	b00b883a 	mov	r5,r22
 800ece4:	e009883a 	mov	r4,fp
 800ece8:	80010480 	call	8001048 <__umodsi3>
 800ecec:	b00b883a 	mov	r5,r22
 800ecf0:	e009883a 	mov	r4,fp
 800ecf4:	d8800215 	stw	r2,8(sp)
 800ecf8:	8000fe40 	call	8000fe4 <__udivsi3>
 800ecfc:	100b883a 	mov	r5,r2
 800ed00:	b809883a 	mov	r4,r23
 800ed04:	102d883a 	mov	r22,r2
 800ed08:	80010a00 	call	80010a0 <__mulsi3>
 800ed0c:	d9800217 	ldw	r6,8(sp)
 800ed10:	d8c00017 	ldw	r3,0(sp)
 800ed14:	300c943a 	slli	r6,r6,16
 800ed18:	1a3fffcc 	andi	r8,r3,65535
 800ed1c:	4190b03a 	or	r8,r8,r6
 800ed20:	4080042e 	bgeu	r8,r2,800ed34 <__umoddi3+0x3cc>
 800ed24:	4551883a 	add	r8,r8,r21
 800ed28:	b0ffffc4 	addi	r3,r22,-1
 800ed2c:	45406f2e 	bgeu	r8,r21,800eeec <__umoddi3+0x584>
 800ed30:	182d883a 	mov	r22,r3
 800ed34:	880e943a 	slli	r7,r17,16
 800ed38:	9006d43a 	srli	r3,r18,16
 800ed3c:	91bfffcc 	andi	r6,r18,65535
 800ed40:	3dacb03a 	or	r22,r7,r22
 800ed44:	b02ed43a 	srli	r23,r22,16
 800ed48:	b5bfffcc 	andi	r22,r22,65535
 800ed4c:	300b883a 	mov	r5,r6
 800ed50:	b009883a 	mov	r4,r22
 800ed54:	40a3c83a 	sub	r17,r8,r2
 800ed58:	d8c00115 	stw	r3,4(sp)
 800ed5c:	d9800215 	stw	r6,8(sp)
 800ed60:	80010a00 	call	80010a0 <__mulsi3>
 800ed64:	d9800217 	ldw	r6,8(sp)
 800ed68:	b809883a 	mov	r4,r23
 800ed6c:	1039883a 	mov	fp,r2
 800ed70:	300b883a 	mov	r5,r6
 800ed74:	80010a00 	call	80010a0 <__mulsi3>
 800ed78:	d8c00117 	ldw	r3,4(sp)
 800ed7c:	b809883a 	mov	r4,r23
 800ed80:	d8800215 	stw	r2,8(sp)
 800ed84:	180b883a 	mov	r5,r3
 800ed88:	80010a00 	call	80010a0 <__mulsi3>
 800ed8c:	d8c00117 	ldw	r3,4(sp)
 800ed90:	b009883a 	mov	r4,r22
 800ed94:	102f883a 	mov	r23,r2
 800ed98:	180b883a 	mov	r5,r3
 800ed9c:	80010a00 	call	80010a0 <__mulsi3>
 800eda0:	d9800217 	ldw	r6,8(sp)
 800eda4:	e006d43a 	srli	r3,fp,16
 800eda8:	1185883a 	add	r2,r2,r6
 800edac:	1885883a 	add	r2,r3,r2
 800edb0:	1180022e 	bgeu	r2,r6,800edbc <__umoddi3+0x454>
 800edb4:	00c00074 	movhi	r3,1
 800edb8:	b8ef883a 	add	r23,r23,r3
 800edbc:	1006d43a 	srli	r3,r2,16
 800edc0:	1004943a 	slli	r2,r2,16
 800edc4:	e73fffcc 	andi	fp,fp,65535
 800edc8:	1dc7883a 	add	r3,r3,r23
 800edcc:	1739883a 	add	fp,r2,fp
 800edd0:	88c03a36 	bltu	r17,r3,800eebc <__umoddi3+0x554>
 800edd4:	88c05126 	beq	r17,r3,800ef1c <__umoddi3+0x5b4>
 800edd8:	88c9c83a 	sub	r4,r17,r3
 800eddc:	e00f883a 	mov	r7,fp
 800ede0:	81cfc83a 	sub	r7,r16,r7
 800ede4:	81c7803a 	cmpltu	r3,r16,r7
 800ede8:	20c7c83a 	sub	r3,r4,r3
 800edec:	1cc4983a 	sll	r2,r3,r19
 800edf0:	3d0ed83a 	srl	r7,r7,r20
 800edf4:	1d06d83a 	srl	r3,r3,r20
 800edf8:	11c4b03a 	or	r2,r2,r7
 800edfc:	003f7c06 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800ee00:	9ca6983a 	sll	r19,r19,r18
 800ee04:	88f8d83a 	srl	fp,r17,r3
 800ee08:	80c4d83a 	srl	r2,r16,r3
 800ee0c:	982cd43a 	srli	r22,r19,16
 800ee10:	8ca2983a 	sll	r17,r17,r18
 800ee14:	e009883a 	mov	r4,fp
 800ee18:	b00b883a 	mov	r5,r22
 800ee1c:	146ab03a 	or	r21,r2,r17
 800ee20:	80010480 	call	8001048 <__umodsi3>
 800ee24:	b00b883a 	mov	r5,r22
 800ee28:	e009883a 	mov	r4,fp
 800ee2c:	1029883a 	mov	r20,r2
 800ee30:	9dffffcc 	andi	r23,r19,65535
 800ee34:	8000fe40 	call	8000fe4 <__udivsi3>
 800ee38:	b809883a 	mov	r4,r23
 800ee3c:	100b883a 	mov	r5,r2
 800ee40:	80010a00 	call	80010a0 <__mulsi3>
 800ee44:	a008943a 	slli	r4,r20,16
 800ee48:	a806d43a 	srli	r3,r21,16
 800ee4c:	84a8983a 	sll	r20,r16,r18
 800ee50:	1906b03a 	or	r3,r3,r4
 800ee54:	1880042e 	bgeu	r3,r2,800ee68 <__umoddi3+0x500>
 800ee58:	1cc7883a 	add	r3,r3,r19
 800ee5c:	1cc00236 	bltu	r3,r19,800ee68 <__umoddi3+0x500>
 800ee60:	1880012e 	bgeu	r3,r2,800ee68 <__umoddi3+0x500>
 800ee64:	1cc7883a 	add	r3,r3,r19
 800ee68:	18a3c83a 	sub	r17,r3,r2
 800ee6c:	b00b883a 	mov	r5,r22
 800ee70:	8809883a 	mov	r4,r17
 800ee74:	80010480 	call	8001048 <__umodsi3>
 800ee78:	b00b883a 	mov	r5,r22
 800ee7c:	8809883a 	mov	r4,r17
 800ee80:	1021883a 	mov	r16,r2
 800ee84:	8000fe40 	call	8000fe4 <__udivsi3>
 800ee88:	100b883a 	mov	r5,r2
 800ee8c:	b809883a 	mov	r4,r23
 800ee90:	8020943a 	slli	r16,r16,16
 800ee94:	80010a00 	call	80010a0 <__mulsi3>
 800ee98:	a8ffffcc 	andi	r3,r21,65535
 800ee9c:	1c06b03a 	or	r3,r3,r16
 800eea0:	1880042e 	bgeu	r3,r2,800eeb4 <__umoddi3+0x54c>
 800eea4:	1cc7883a 	add	r3,r3,r19
 800eea8:	1cc00236 	bltu	r3,r19,800eeb4 <__umoddi3+0x54c>
 800eeac:	1880012e 	bgeu	r3,r2,800eeb4 <__umoddi3+0x54c>
 800eeb0:	1cc7883a 	add	r3,r3,r19
 800eeb4:	18a3c83a 	sub	r17,r3,r2
 800eeb8:	003f2906 	br	800eb60 <__alt_data_end+0xfc00eb60>
 800eebc:	e48fc83a 	sub	r7,fp,r18
 800eec0:	1d49c83a 	sub	r4,r3,r21
 800eec4:	e1f9803a 	cmpltu	fp,fp,r7
 800eec8:	2739c83a 	sub	fp,r4,fp
 800eecc:	8f09c83a 	sub	r4,r17,fp
 800eed0:	003fc306 	br	800ede0 <__alt_data_end+0xfc00ede0>
 800eed4:	01000604 	movi	r4,24
 800eed8:	003ef906 	br	800eac0 <__alt_data_end+0xfc00eac0>
 800eedc:	00800604 	movi	r2,24
 800eee0:	003f1306 	br	800eb30 <__alt_data_end+0xfc00eb30>
 800eee4:	01000604 	movi	r4,24
 800eee8:	003eb606 	br	800e9c4 <__alt_data_end+0xfc00e9c4>
 800eeec:	40bf902e 	bgeu	r8,r2,800ed30 <__alt_data_end+0xfc00ed30>
 800eef0:	b5bfff84 	addi	r22,r22,-2
 800eef4:	4551883a 	add	r8,r8,r21
 800eef8:	003f8e06 	br	800ed34 <__alt_data_end+0xfc00ed34>
 800eefc:	18bf762e 	bgeu	r3,r2,800ecd8 <__alt_data_end+0xfc00ecd8>
 800ef00:	8c7fff84 	addi	r17,r17,-2
 800ef04:	1d47883a 	add	r3,r3,r21
 800ef08:	003f7406 	br	800ecdc <__alt_data_end+0xfc00ecdc>
 800ef0c:	1cc7883a 	add	r3,r3,r19
 800ef10:	003ecd06 	br	800ea48 <__alt_data_end+0xfc00ea48>
 800ef14:	8005883a 	mov	r2,r16
 800ef18:	003ef806 	br	800eafc <__alt_data_end+0xfc00eafc>
 800ef1c:	873fe736 	bltu	r16,fp,800eebc <__alt_data_end+0xfc00eebc>
 800ef20:	e00f883a 	mov	r7,fp
 800ef24:	0009883a 	mov	r4,zero
 800ef28:	003fad06 	br	800ede0 <__alt_data_end+0xfc00ede0>

0800ef2c <__adddf3>:
 800ef2c:	02c00434 	movhi	r11,16
 800ef30:	5affffc4 	addi	r11,r11,-1
 800ef34:	2806d7fa 	srli	r3,r5,31
 800ef38:	2ad4703a 	and	r10,r5,r11
 800ef3c:	3ad2703a 	and	r9,r7,r11
 800ef40:	3804d53a 	srli	r2,r7,20
 800ef44:	3018d77a 	srli	r12,r6,29
 800ef48:	280ad53a 	srli	r5,r5,20
 800ef4c:	501490fa 	slli	r10,r10,3
 800ef50:	2010d77a 	srli	r8,r4,29
 800ef54:	481290fa 	slli	r9,r9,3
 800ef58:	380ed7fa 	srli	r7,r7,31
 800ef5c:	defffb04 	addi	sp,sp,-20
 800ef60:	dc800215 	stw	r18,8(sp)
 800ef64:	dc400115 	stw	r17,4(sp)
 800ef68:	dc000015 	stw	r16,0(sp)
 800ef6c:	dfc00415 	stw	ra,16(sp)
 800ef70:	dcc00315 	stw	r19,12(sp)
 800ef74:	1c803fcc 	andi	r18,r3,255
 800ef78:	2c01ffcc 	andi	r16,r5,2047
 800ef7c:	5210b03a 	or	r8,r10,r8
 800ef80:	202290fa 	slli	r17,r4,3
 800ef84:	1081ffcc 	andi	r2,r2,2047
 800ef88:	4b12b03a 	or	r9,r9,r12
 800ef8c:	300c90fa 	slli	r6,r6,3
 800ef90:	91c07526 	beq	r18,r7,800f168 <__adddf3+0x23c>
 800ef94:	8087c83a 	sub	r3,r16,r2
 800ef98:	00c0ab0e 	bge	zero,r3,800f248 <__adddf3+0x31c>
 800ef9c:	10002a1e 	bne	r2,zero,800f048 <__adddf3+0x11c>
 800efa0:	4984b03a 	or	r2,r9,r6
 800efa4:	1000961e 	bne	r2,zero,800f200 <__adddf3+0x2d4>
 800efa8:	888001cc 	andi	r2,r17,7
 800efac:	10000726 	beq	r2,zero,800efcc <__adddf3+0xa0>
 800efb0:	888003cc 	andi	r2,r17,15
 800efb4:	00c00104 	movi	r3,4
 800efb8:	10c00426 	beq	r2,r3,800efcc <__adddf3+0xa0>
 800efbc:	88c7883a 	add	r3,r17,r3
 800efc0:	1c63803a 	cmpltu	r17,r3,r17
 800efc4:	4451883a 	add	r8,r8,r17
 800efc8:	1823883a 	mov	r17,r3
 800efcc:	4080202c 	andhi	r2,r8,128
 800efd0:	10005926 	beq	r2,zero,800f138 <__adddf3+0x20c>
 800efd4:	84000044 	addi	r16,r16,1
 800efd8:	0081ffc4 	movi	r2,2047
 800efdc:	8080ba26 	beq	r16,r2,800f2c8 <__adddf3+0x39c>
 800efe0:	00bfe034 	movhi	r2,65408
 800efe4:	10bfffc4 	addi	r2,r2,-1
 800efe8:	4090703a 	and	r8,r8,r2
 800efec:	4004977a 	slli	r2,r8,29
 800eff0:	4010927a 	slli	r8,r8,9
 800eff4:	8822d0fa 	srli	r17,r17,3
 800eff8:	8401ffcc 	andi	r16,r16,2047
 800effc:	4010d33a 	srli	r8,r8,12
 800f000:	9007883a 	mov	r3,r18
 800f004:	1444b03a 	or	r2,r2,r17
 800f008:	8401ffcc 	andi	r16,r16,2047
 800f00c:	8020953a 	slli	r16,r16,20
 800f010:	18c03fcc 	andi	r3,r3,255
 800f014:	01000434 	movhi	r4,16
 800f018:	213fffc4 	addi	r4,r4,-1
 800f01c:	180697fa 	slli	r3,r3,31
 800f020:	4110703a 	and	r8,r8,r4
 800f024:	4410b03a 	or	r8,r8,r16
 800f028:	40c6b03a 	or	r3,r8,r3
 800f02c:	dfc00417 	ldw	ra,16(sp)
 800f030:	dcc00317 	ldw	r19,12(sp)
 800f034:	dc800217 	ldw	r18,8(sp)
 800f038:	dc400117 	ldw	r17,4(sp)
 800f03c:	dc000017 	ldw	r16,0(sp)
 800f040:	dec00504 	addi	sp,sp,20
 800f044:	f800283a 	ret
 800f048:	0081ffc4 	movi	r2,2047
 800f04c:	80bfd626 	beq	r16,r2,800efa8 <__alt_data_end+0xfc00efa8>
 800f050:	4a402034 	orhi	r9,r9,128
 800f054:	00800e04 	movi	r2,56
 800f058:	10c09f16 	blt	r2,r3,800f2d8 <__adddf3+0x3ac>
 800f05c:	008007c4 	movi	r2,31
 800f060:	10c0c216 	blt	r2,r3,800f36c <__adddf3+0x440>
 800f064:	00800804 	movi	r2,32
 800f068:	10c5c83a 	sub	r2,r2,r3
 800f06c:	488a983a 	sll	r5,r9,r2
 800f070:	30c8d83a 	srl	r4,r6,r3
 800f074:	3084983a 	sll	r2,r6,r2
 800f078:	48c6d83a 	srl	r3,r9,r3
 800f07c:	290cb03a 	or	r6,r5,r4
 800f080:	1004c03a 	cmpne	r2,r2,zero
 800f084:	308cb03a 	or	r6,r6,r2
 800f088:	898dc83a 	sub	r6,r17,r6
 800f08c:	89a3803a 	cmpltu	r17,r17,r6
 800f090:	40d1c83a 	sub	r8,r8,r3
 800f094:	4451c83a 	sub	r8,r8,r17
 800f098:	3023883a 	mov	r17,r6
 800f09c:	4080202c 	andhi	r2,r8,128
 800f0a0:	10002326 	beq	r2,zero,800f130 <__adddf3+0x204>
 800f0a4:	04c02034 	movhi	r19,128
 800f0a8:	9cffffc4 	addi	r19,r19,-1
 800f0ac:	44e6703a 	and	r19,r8,r19
 800f0b0:	98007626 	beq	r19,zero,800f28c <__adddf3+0x360>
 800f0b4:	9809883a 	mov	r4,r19
 800f0b8:	801176c0 	call	801176c <__clzsi2>
 800f0bc:	10fffe04 	addi	r3,r2,-8
 800f0c0:	010007c4 	movi	r4,31
 800f0c4:	20c07716 	blt	r4,r3,800f2a4 <__adddf3+0x378>
 800f0c8:	00800804 	movi	r2,32
 800f0cc:	10c5c83a 	sub	r2,r2,r3
 800f0d0:	8884d83a 	srl	r2,r17,r2
 800f0d4:	98d0983a 	sll	r8,r19,r3
 800f0d8:	88e2983a 	sll	r17,r17,r3
 800f0dc:	1204b03a 	or	r2,r2,r8
 800f0e0:	1c007416 	blt	r3,r16,800f2b4 <__adddf3+0x388>
 800f0e4:	1c21c83a 	sub	r16,r3,r16
 800f0e8:	82000044 	addi	r8,r16,1
 800f0ec:	00c007c4 	movi	r3,31
 800f0f0:	1a009116 	blt	r3,r8,800f338 <__adddf3+0x40c>
 800f0f4:	00c00804 	movi	r3,32
 800f0f8:	1a07c83a 	sub	r3,r3,r8
 800f0fc:	8a08d83a 	srl	r4,r17,r8
 800f100:	88e2983a 	sll	r17,r17,r3
 800f104:	10c6983a 	sll	r3,r2,r3
 800f108:	1210d83a 	srl	r8,r2,r8
 800f10c:	8804c03a 	cmpne	r2,r17,zero
 800f110:	1906b03a 	or	r3,r3,r4
 800f114:	18a2b03a 	or	r17,r3,r2
 800f118:	0021883a 	mov	r16,zero
 800f11c:	003fa206 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f120:	1890b03a 	or	r8,r3,r2
 800f124:	40017d26 	beq	r8,zero,800f71c <__adddf3+0x7f0>
 800f128:	1011883a 	mov	r8,r2
 800f12c:	1823883a 	mov	r17,r3
 800f130:	888001cc 	andi	r2,r17,7
 800f134:	103f9e1e 	bne	r2,zero,800efb0 <__alt_data_end+0xfc00efb0>
 800f138:	4004977a 	slli	r2,r8,29
 800f13c:	8822d0fa 	srli	r17,r17,3
 800f140:	4010d0fa 	srli	r8,r8,3
 800f144:	9007883a 	mov	r3,r18
 800f148:	1444b03a 	or	r2,r2,r17
 800f14c:	0101ffc4 	movi	r4,2047
 800f150:	81002426 	beq	r16,r4,800f1e4 <__adddf3+0x2b8>
 800f154:	8120703a 	and	r16,r16,r4
 800f158:	01000434 	movhi	r4,16
 800f15c:	213fffc4 	addi	r4,r4,-1
 800f160:	4110703a 	and	r8,r8,r4
 800f164:	003fa806 	br	800f008 <__alt_data_end+0xfc00f008>
 800f168:	8089c83a 	sub	r4,r16,r2
 800f16c:	01005e0e 	bge	zero,r4,800f2e8 <__adddf3+0x3bc>
 800f170:	10002b26 	beq	r2,zero,800f220 <__adddf3+0x2f4>
 800f174:	0081ffc4 	movi	r2,2047
 800f178:	80bf8b26 	beq	r16,r2,800efa8 <__alt_data_end+0xfc00efa8>
 800f17c:	4a402034 	orhi	r9,r9,128
 800f180:	00800e04 	movi	r2,56
 800f184:	1100a40e 	bge	r2,r4,800f418 <__adddf3+0x4ec>
 800f188:	498cb03a 	or	r6,r9,r6
 800f18c:	300ac03a 	cmpne	r5,r6,zero
 800f190:	0013883a 	mov	r9,zero
 800f194:	2c4b883a 	add	r5,r5,r17
 800f198:	2c63803a 	cmpltu	r17,r5,r17
 800f19c:	4a11883a 	add	r8,r9,r8
 800f1a0:	8a11883a 	add	r8,r17,r8
 800f1a4:	2823883a 	mov	r17,r5
 800f1a8:	4080202c 	andhi	r2,r8,128
 800f1ac:	103fe026 	beq	r2,zero,800f130 <__alt_data_end+0xfc00f130>
 800f1b0:	84000044 	addi	r16,r16,1
 800f1b4:	0081ffc4 	movi	r2,2047
 800f1b8:	8080d226 	beq	r16,r2,800f504 <__adddf3+0x5d8>
 800f1bc:	00bfe034 	movhi	r2,65408
 800f1c0:	10bfffc4 	addi	r2,r2,-1
 800f1c4:	4090703a 	and	r8,r8,r2
 800f1c8:	880ad07a 	srli	r5,r17,1
 800f1cc:	400897fa 	slli	r4,r8,31
 800f1d0:	88c0004c 	andi	r3,r17,1
 800f1d4:	28e2b03a 	or	r17,r5,r3
 800f1d8:	4010d07a 	srli	r8,r8,1
 800f1dc:	2462b03a 	or	r17,r4,r17
 800f1e0:	003f7106 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f1e4:	4088b03a 	or	r4,r8,r2
 800f1e8:	20014526 	beq	r4,zero,800f700 <__adddf3+0x7d4>
 800f1ec:	01000434 	movhi	r4,16
 800f1f0:	42000234 	orhi	r8,r8,8
 800f1f4:	213fffc4 	addi	r4,r4,-1
 800f1f8:	4110703a 	and	r8,r8,r4
 800f1fc:	003f8206 	br	800f008 <__alt_data_end+0xfc00f008>
 800f200:	18ffffc4 	addi	r3,r3,-1
 800f204:	1800491e 	bne	r3,zero,800f32c <__adddf3+0x400>
 800f208:	898bc83a 	sub	r5,r17,r6
 800f20c:	8963803a 	cmpltu	r17,r17,r5
 800f210:	4251c83a 	sub	r8,r8,r9
 800f214:	4451c83a 	sub	r8,r8,r17
 800f218:	2823883a 	mov	r17,r5
 800f21c:	003f9f06 	br	800f09c <__alt_data_end+0xfc00f09c>
 800f220:	4984b03a 	or	r2,r9,r6
 800f224:	103f6026 	beq	r2,zero,800efa8 <__alt_data_end+0xfc00efa8>
 800f228:	213fffc4 	addi	r4,r4,-1
 800f22c:	2000931e 	bne	r4,zero,800f47c <__adddf3+0x550>
 800f230:	898d883a 	add	r6,r17,r6
 800f234:	3463803a 	cmpltu	r17,r6,r17
 800f238:	4251883a 	add	r8,r8,r9
 800f23c:	8a11883a 	add	r8,r17,r8
 800f240:	3023883a 	mov	r17,r6
 800f244:	003fd806 	br	800f1a8 <__alt_data_end+0xfc00f1a8>
 800f248:	1800541e 	bne	r3,zero,800f39c <__adddf3+0x470>
 800f24c:	80800044 	addi	r2,r16,1
 800f250:	1081ffcc 	andi	r2,r2,2047
 800f254:	00c00044 	movi	r3,1
 800f258:	1880a00e 	bge	r3,r2,800f4dc <__adddf3+0x5b0>
 800f25c:	8989c83a 	sub	r4,r17,r6
 800f260:	8905803a 	cmpltu	r2,r17,r4
 800f264:	4267c83a 	sub	r19,r8,r9
 800f268:	98a7c83a 	sub	r19,r19,r2
 800f26c:	9880202c 	andhi	r2,r19,128
 800f270:	10006326 	beq	r2,zero,800f400 <__adddf3+0x4d4>
 800f274:	3463c83a 	sub	r17,r6,r17
 800f278:	4a07c83a 	sub	r3,r9,r8
 800f27c:	344d803a 	cmpltu	r6,r6,r17
 800f280:	19a7c83a 	sub	r19,r3,r6
 800f284:	3825883a 	mov	r18,r7
 800f288:	983f8a1e 	bne	r19,zero,800f0b4 <__alt_data_end+0xfc00f0b4>
 800f28c:	8809883a 	mov	r4,r17
 800f290:	801176c0 	call	801176c <__clzsi2>
 800f294:	10800804 	addi	r2,r2,32
 800f298:	10fffe04 	addi	r3,r2,-8
 800f29c:	010007c4 	movi	r4,31
 800f2a0:	20ff890e 	bge	r4,r3,800f0c8 <__alt_data_end+0xfc00f0c8>
 800f2a4:	10bff604 	addi	r2,r2,-40
 800f2a8:	8884983a 	sll	r2,r17,r2
 800f2ac:	0023883a 	mov	r17,zero
 800f2b0:	1c3f8c0e 	bge	r3,r16,800f0e4 <__alt_data_end+0xfc00f0e4>
 800f2b4:	023fe034 	movhi	r8,65408
 800f2b8:	423fffc4 	addi	r8,r8,-1
 800f2bc:	80e1c83a 	sub	r16,r16,r3
 800f2c0:	1210703a 	and	r8,r2,r8
 800f2c4:	003f3806 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f2c8:	9007883a 	mov	r3,r18
 800f2cc:	0011883a 	mov	r8,zero
 800f2d0:	0005883a 	mov	r2,zero
 800f2d4:	003f4c06 	br	800f008 <__alt_data_end+0xfc00f008>
 800f2d8:	498cb03a 	or	r6,r9,r6
 800f2dc:	300cc03a 	cmpne	r6,r6,zero
 800f2e0:	0007883a 	mov	r3,zero
 800f2e4:	003f6806 	br	800f088 <__alt_data_end+0xfc00f088>
 800f2e8:	20009c1e 	bne	r4,zero,800f55c <__adddf3+0x630>
 800f2ec:	80800044 	addi	r2,r16,1
 800f2f0:	1141ffcc 	andi	r5,r2,2047
 800f2f4:	01000044 	movi	r4,1
 800f2f8:	2140670e 	bge	r4,r5,800f498 <__adddf3+0x56c>
 800f2fc:	0101ffc4 	movi	r4,2047
 800f300:	11007f26 	beq	r2,r4,800f500 <__adddf3+0x5d4>
 800f304:	898d883a 	add	r6,r17,r6
 800f308:	4247883a 	add	r3,r8,r9
 800f30c:	3451803a 	cmpltu	r8,r6,r17
 800f310:	40d1883a 	add	r8,r8,r3
 800f314:	402297fa 	slli	r17,r8,31
 800f318:	300cd07a 	srli	r6,r6,1
 800f31c:	4010d07a 	srli	r8,r8,1
 800f320:	1021883a 	mov	r16,r2
 800f324:	89a2b03a 	or	r17,r17,r6
 800f328:	003f1f06 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f32c:	0081ffc4 	movi	r2,2047
 800f330:	80bf481e 	bne	r16,r2,800f054 <__alt_data_end+0xfc00f054>
 800f334:	003f1c06 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f338:	843ff844 	addi	r16,r16,-31
 800f33c:	01000804 	movi	r4,32
 800f340:	1406d83a 	srl	r3,r2,r16
 800f344:	41005026 	beq	r8,r4,800f488 <__adddf3+0x55c>
 800f348:	01001004 	movi	r4,64
 800f34c:	2211c83a 	sub	r8,r4,r8
 800f350:	1204983a 	sll	r2,r2,r8
 800f354:	88a2b03a 	or	r17,r17,r2
 800f358:	8822c03a 	cmpne	r17,r17,zero
 800f35c:	1c62b03a 	or	r17,r3,r17
 800f360:	0011883a 	mov	r8,zero
 800f364:	0021883a 	mov	r16,zero
 800f368:	003f7106 	br	800f130 <__alt_data_end+0xfc00f130>
 800f36c:	193ff804 	addi	r4,r3,-32
 800f370:	00800804 	movi	r2,32
 800f374:	4908d83a 	srl	r4,r9,r4
 800f378:	18804526 	beq	r3,r2,800f490 <__adddf3+0x564>
 800f37c:	00801004 	movi	r2,64
 800f380:	10c5c83a 	sub	r2,r2,r3
 800f384:	4886983a 	sll	r3,r9,r2
 800f388:	198cb03a 	or	r6,r3,r6
 800f38c:	300cc03a 	cmpne	r6,r6,zero
 800f390:	218cb03a 	or	r6,r4,r6
 800f394:	0007883a 	mov	r3,zero
 800f398:	003f3b06 	br	800f088 <__alt_data_end+0xfc00f088>
 800f39c:	80002a26 	beq	r16,zero,800f448 <__adddf3+0x51c>
 800f3a0:	0101ffc4 	movi	r4,2047
 800f3a4:	11006826 	beq	r2,r4,800f548 <__adddf3+0x61c>
 800f3a8:	00c7c83a 	sub	r3,zero,r3
 800f3ac:	42002034 	orhi	r8,r8,128
 800f3b0:	01000e04 	movi	r4,56
 800f3b4:	20c07c16 	blt	r4,r3,800f5a8 <__adddf3+0x67c>
 800f3b8:	010007c4 	movi	r4,31
 800f3bc:	20c0da16 	blt	r4,r3,800f728 <__adddf3+0x7fc>
 800f3c0:	01000804 	movi	r4,32
 800f3c4:	20c9c83a 	sub	r4,r4,r3
 800f3c8:	4114983a 	sll	r10,r8,r4
 800f3cc:	88cad83a 	srl	r5,r17,r3
 800f3d0:	8908983a 	sll	r4,r17,r4
 800f3d4:	40c6d83a 	srl	r3,r8,r3
 800f3d8:	5162b03a 	or	r17,r10,r5
 800f3dc:	2008c03a 	cmpne	r4,r4,zero
 800f3e0:	8922b03a 	or	r17,r17,r4
 800f3e4:	3463c83a 	sub	r17,r6,r17
 800f3e8:	48c7c83a 	sub	r3,r9,r3
 800f3ec:	344d803a 	cmpltu	r6,r6,r17
 800f3f0:	1991c83a 	sub	r8,r3,r6
 800f3f4:	1021883a 	mov	r16,r2
 800f3f8:	3825883a 	mov	r18,r7
 800f3fc:	003f2706 	br	800f09c <__alt_data_end+0xfc00f09c>
 800f400:	24d0b03a 	or	r8,r4,r19
 800f404:	40001b1e 	bne	r8,zero,800f474 <__adddf3+0x548>
 800f408:	0005883a 	mov	r2,zero
 800f40c:	0007883a 	mov	r3,zero
 800f410:	0021883a 	mov	r16,zero
 800f414:	003f4d06 	br	800f14c <__alt_data_end+0xfc00f14c>
 800f418:	008007c4 	movi	r2,31
 800f41c:	11003c16 	blt	r2,r4,800f510 <__adddf3+0x5e4>
 800f420:	00800804 	movi	r2,32
 800f424:	1105c83a 	sub	r2,r2,r4
 800f428:	488e983a 	sll	r7,r9,r2
 800f42c:	310ad83a 	srl	r5,r6,r4
 800f430:	3084983a 	sll	r2,r6,r2
 800f434:	4912d83a 	srl	r9,r9,r4
 800f438:	394ab03a 	or	r5,r7,r5
 800f43c:	1004c03a 	cmpne	r2,r2,zero
 800f440:	288ab03a 	or	r5,r5,r2
 800f444:	003f5306 	br	800f194 <__alt_data_end+0xfc00f194>
 800f448:	4448b03a 	or	r4,r8,r17
 800f44c:	20003e26 	beq	r4,zero,800f548 <__adddf3+0x61c>
 800f450:	00c6303a 	nor	r3,zero,r3
 800f454:	18003a1e 	bne	r3,zero,800f540 <__adddf3+0x614>
 800f458:	3463c83a 	sub	r17,r6,r17
 800f45c:	4a07c83a 	sub	r3,r9,r8
 800f460:	344d803a 	cmpltu	r6,r6,r17
 800f464:	1991c83a 	sub	r8,r3,r6
 800f468:	1021883a 	mov	r16,r2
 800f46c:	3825883a 	mov	r18,r7
 800f470:	003f0a06 	br	800f09c <__alt_data_end+0xfc00f09c>
 800f474:	2023883a 	mov	r17,r4
 800f478:	003f0d06 	br	800f0b0 <__alt_data_end+0xfc00f0b0>
 800f47c:	0081ffc4 	movi	r2,2047
 800f480:	80bf3f1e 	bne	r16,r2,800f180 <__alt_data_end+0xfc00f180>
 800f484:	003ec806 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f488:	0005883a 	mov	r2,zero
 800f48c:	003fb106 	br	800f354 <__alt_data_end+0xfc00f354>
 800f490:	0007883a 	mov	r3,zero
 800f494:	003fbc06 	br	800f388 <__alt_data_end+0xfc00f388>
 800f498:	4444b03a 	or	r2,r8,r17
 800f49c:	8000871e 	bne	r16,zero,800f6bc <__adddf3+0x790>
 800f4a0:	1000ba26 	beq	r2,zero,800f78c <__adddf3+0x860>
 800f4a4:	4984b03a 	or	r2,r9,r6
 800f4a8:	103ebf26 	beq	r2,zero,800efa8 <__alt_data_end+0xfc00efa8>
 800f4ac:	8985883a 	add	r2,r17,r6
 800f4b0:	4247883a 	add	r3,r8,r9
 800f4b4:	1451803a 	cmpltu	r8,r2,r17
 800f4b8:	40d1883a 	add	r8,r8,r3
 800f4bc:	40c0202c 	andhi	r3,r8,128
 800f4c0:	1023883a 	mov	r17,r2
 800f4c4:	183f1a26 	beq	r3,zero,800f130 <__alt_data_end+0xfc00f130>
 800f4c8:	00bfe034 	movhi	r2,65408
 800f4cc:	10bfffc4 	addi	r2,r2,-1
 800f4d0:	2021883a 	mov	r16,r4
 800f4d4:	4090703a 	and	r8,r8,r2
 800f4d8:	003eb306 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f4dc:	4444b03a 	or	r2,r8,r17
 800f4e0:	8000291e 	bne	r16,zero,800f588 <__adddf3+0x65c>
 800f4e4:	10004b1e 	bne	r2,zero,800f614 <__adddf3+0x6e8>
 800f4e8:	4990b03a 	or	r8,r9,r6
 800f4ec:	40008b26 	beq	r8,zero,800f71c <__adddf3+0x7f0>
 800f4f0:	4811883a 	mov	r8,r9
 800f4f4:	3023883a 	mov	r17,r6
 800f4f8:	3825883a 	mov	r18,r7
 800f4fc:	003eaa06 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f500:	1021883a 	mov	r16,r2
 800f504:	0011883a 	mov	r8,zero
 800f508:	0005883a 	mov	r2,zero
 800f50c:	003f0f06 	br	800f14c <__alt_data_end+0xfc00f14c>
 800f510:	217ff804 	addi	r5,r4,-32
 800f514:	00800804 	movi	r2,32
 800f518:	494ad83a 	srl	r5,r9,r5
 800f51c:	20807d26 	beq	r4,r2,800f714 <__adddf3+0x7e8>
 800f520:	00801004 	movi	r2,64
 800f524:	1109c83a 	sub	r4,r2,r4
 800f528:	4912983a 	sll	r9,r9,r4
 800f52c:	498cb03a 	or	r6,r9,r6
 800f530:	300cc03a 	cmpne	r6,r6,zero
 800f534:	298ab03a 	or	r5,r5,r6
 800f538:	0013883a 	mov	r9,zero
 800f53c:	003f1506 	br	800f194 <__alt_data_end+0xfc00f194>
 800f540:	0101ffc4 	movi	r4,2047
 800f544:	113f9a1e 	bne	r2,r4,800f3b0 <__alt_data_end+0xfc00f3b0>
 800f548:	4811883a 	mov	r8,r9
 800f54c:	3023883a 	mov	r17,r6
 800f550:	1021883a 	mov	r16,r2
 800f554:	3825883a 	mov	r18,r7
 800f558:	003e9306 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f55c:	8000161e 	bne	r16,zero,800f5b8 <__adddf3+0x68c>
 800f560:	444ab03a 	or	r5,r8,r17
 800f564:	28005126 	beq	r5,zero,800f6ac <__adddf3+0x780>
 800f568:	0108303a 	nor	r4,zero,r4
 800f56c:	20004d1e 	bne	r4,zero,800f6a4 <__adddf3+0x778>
 800f570:	89a3883a 	add	r17,r17,r6
 800f574:	4253883a 	add	r9,r8,r9
 800f578:	898d803a 	cmpltu	r6,r17,r6
 800f57c:	3251883a 	add	r8,r6,r9
 800f580:	1021883a 	mov	r16,r2
 800f584:	003f0806 	br	800f1a8 <__alt_data_end+0xfc00f1a8>
 800f588:	1000301e 	bne	r2,zero,800f64c <__adddf3+0x720>
 800f58c:	4984b03a 	or	r2,r9,r6
 800f590:	10007126 	beq	r2,zero,800f758 <__adddf3+0x82c>
 800f594:	4811883a 	mov	r8,r9
 800f598:	3023883a 	mov	r17,r6
 800f59c:	3825883a 	mov	r18,r7
 800f5a0:	0401ffc4 	movi	r16,2047
 800f5a4:	003e8006 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f5a8:	4462b03a 	or	r17,r8,r17
 800f5ac:	8822c03a 	cmpne	r17,r17,zero
 800f5b0:	0007883a 	mov	r3,zero
 800f5b4:	003f8b06 	br	800f3e4 <__alt_data_end+0xfc00f3e4>
 800f5b8:	0141ffc4 	movi	r5,2047
 800f5bc:	11403b26 	beq	r2,r5,800f6ac <__adddf3+0x780>
 800f5c0:	0109c83a 	sub	r4,zero,r4
 800f5c4:	42002034 	orhi	r8,r8,128
 800f5c8:	01400e04 	movi	r5,56
 800f5cc:	29006716 	blt	r5,r4,800f76c <__adddf3+0x840>
 800f5d0:	014007c4 	movi	r5,31
 800f5d4:	29007016 	blt	r5,r4,800f798 <__adddf3+0x86c>
 800f5d8:	01400804 	movi	r5,32
 800f5dc:	290bc83a 	sub	r5,r5,r4
 800f5e0:	4154983a 	sll	r10,r8,r5
 800f5e4:	890ed83a 	srl	r7,r17,r4
 800f5e8:	894a983a 	sll	r5,r17,r5
 800f5ec:	4108d83a 	srl	r4,r8,r4
 800f5f0:	51e2b03a 	or	r17,r10,r7
 800f5f4:	280ac03a 	cmpne	r5,r5,zero
 800f5f8:	8962b03a 	or	r17,r17,r5
 800f5fc:	89a3883a 	add	r17,r17,r6
 800f600:	2253883a 	add	r9,r4,r9
 800f604:	898d803a 	cmpltu	r6,r17,r6
 800f608:	3251883a 	add	r8,r6,r9
 800f60c:	1021883a 	mov	r16,r2
 800f610:	003ee506 	br	800f1a8 <__alt_data_end+0xfc00f1a8>
 800f614:	4984b03a 	or	r2,r9,r6
 800f618:	103e6326 	beq	r2,zero,800efa8 <__alt_data_end+0xfc00efa8>
 800f61c:	8987c83a 	sub	r3,r17,r6
 800f620:	88c9803a 	cmpltu	r4,r17,r3
 800f624:	4245c83a 	sub	r2,r8,r9
 800f628:	1105c83a 	sub	r2,r2,r4
 800f62c:	1100202c 	andhi	r4,r2,128
 800f630:	203ebb26 	beq	r4,zero,800f120 <__alt_data_end+0xfc00f120>
 800f634:	3463c83a 	sub	r17,r6,r17
 800f638:	4a07c83a 	sub	r3,r9,r8
 800f63c:	344d803a 	cmpltu	r6,r6,r17
 800f640:	1991c83a 	sub	r8,r3,r6
 800f644:	3825883a 	mov	r18,r7
 800f648:	003e5706 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f64c:	4984b03a 	or	r2,r9,r6
 800f650:	10002e26 	beq	r2,zero,800f70c <__adddf3+0x7e0>
 800f654:	4004d0fa 	srli	r2,r8,3
 800f658:	8822d0fa 	srli	r17,r17,3
 800f65c:	4010977a 	slli	r8,r8,29
 800f660:	10c0022c 	andhi	r3,r2,8
 800f664:	4462b03a 	or	r17,r8,r17
 800f668:	18000826 	beq	r3,zero,800f68c <__adddf3+0x760>
 800f66c:	4808d0fa 	srli	r4,r9,3
 800f670:	20c0022c 	andhi	r3,r4,8
 800f674:	1800051e 	bne	r3,zero,800f68c <__adddf3+0x760>
 800f678:	300cd0fa 	srli	r6,r6,3
 800f67c:	4806977a 	slli	r3,r9,29
 800f680:	2005883a 	mov	r2,r4
 800f684:	3825883a 	mov	r18,r7
 800f688:	19a2b03a 	or	r17,r3,r6
 800f68c:	8810d77a 	srli	r8,r17,29
 800f690:	100490fa 	slli	r2,r2,3
 800f694:	882290fa 	slli	r17,r17,3
 800f698:	0401ffc4 	movi	r16,2047
 800f69c:	4090b03a 	or	r8,r8,r2
 800f6a0:	003e4106 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f6a4:	0141ffc4 	movi	r5,2047
 800f6a8:	117fc71e 	bne	r2,r5,800f5c8 <__alt_data_end+0xfc00f5c8>
 800f6ac:	4811883a 	mov	r8,r9
 800f6b0:	3023883a 	mov	r17,r6
 800f6b4:	1021883a 	mov	r16,r2
 800f6b8:	003e3b06 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f6bc:	10002f26 	beq	r2,zero,800f77c <__adddf3+0x850>
 800f6c0:	4984b03a 	or	r2,r9,r6
 800f6c4:	10001126 	beq	r2,zero,800f70c <__adddf3+0x7e0>
 800f6c8:	4004d0fa 	srli	r2,r8,3
 800f6cc:	8822d0fa 	srli	r17,r17,3
 800f6d0:	4010977a 	slli	r8,r8,29
 800f6d4:	10c0022c 	andhi	r3,r2,8
 800f6d8:	4462b03a 	or	r17,r8,r17
 800f6dc:	183feb26 	beq	r3,zero,800f68c <__alt_data_end+0xfc00f68c>
 800f6e0:	4808d0fa 	srli	r4,r9,3
 800f6e4:	20c0022c 	andhi	r3,r4,8
 800f6e8:	183fe81e 	bne	r3,zero,800f68c <__alt_data_end+0xfc00f68c>
 800f6ec:	300cd0fa 	srli	r6,r6,3
 800f6f0:	4806977a 	slli	r3,r9,29
 800f6f4:	2005883a 	mov	r2,r4
 800f6f8:	19a2b03a 	or	r17,r3,r6
 800f6fc:	003fe306 	br	800f68c <__alt_data_end+0xfc00f68c>
 800f700:	0011883a 	mov	r8,zero
 800f704:	0005883a 	mov	r2,zero
 800f708:	003e3f06 	br	800f008 <__alt_data_end+0xfc00f008>
 800f70c:	0401ffc4 	movi	r16,2047
 800f710:	003e2506 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f714:	0013883a 	mov	r9,zero
 800f718:	003f8406 	br	800f52c <__alt_data_end+0xfc00f52c>
 800f71c:	0005883a 	mov	r2,zero
 800f720:	0007883a 	mov	r3,zero
 800f724:	003e8906 	br	800f14c <__alt_data_end+0xfc00f14c>
 800f728:	197ff804 	addi	r5,r3,-32
 800f72c:	01000804 	movi	r4,32
 800f730:	414ad83a 	srl	r5,r8,r5
 800f734:	19002426 	beq	r3,r4,800f7c8 <__adddf3+0x89c>
 800f738:	01001004 	movi	r4,64
 800f73c:	20c7c83a 	sub	r3,r4,r3
 800f740:	40c6983a 	sll	r3,r8,r3
 800f744:	1c46b03a 	or	r3,r3,r17
 800f748:	1806c03a 	cmpne	r3,r3,zero
 800f74c:	28e2b03a 	or	r17,r5,r3
 800f750:	0007883a 	mov	r3,zero
 800f754:	003f2306 	br	800f3e4 <__alt_data_end+0xfc00f3e4>
 800f758:	0007883a 	mov	r3,zero
 800f75c:	5811883a 	mov	r8,r11
 800f760:	00bfffc4 	movi	r2,-1
 800f764:	0401ffc4 	movi	r16,2047
 800f768:	003e7806 	br	800f14c <__alt_data_end+0xfc00f14c>
 800f76c:	4462b03a 	or	r17,r8,r17
 800f770:	8822c03a 	cmpne	r17,r17,zero
 800f774:	0009883a 	mov	r4,zero
 800f778:	003fa006 	br	800f5fc <__alt_data_end+0xfc00f5fc>
 800f77c:	4811883a 	mov	r8,r9
 800f780:	3023883a 	mov	r17,r6
 800f784:	0401ffc4 	movi	r16,2047
 800f788:	003e0706 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f78c:	4811883a 	mov	r8,r9
 800f790:	3023883a 	mov	r17,r6
 800f794:	003e0406 	br	800efa8 <__alt_data_end+0xfc00efa8>
 800f798:	21fff804 	addi	r7,r4,-32
 800f79c:	01400804 	movi	r5,32
 800f7a0:	41ced83a 	srl	r7,r8,r7
 800f7a4:	21400a26 	beq	r4,r5,800f7d0 <__adddf3+0x8a4>
 800f7a8:	01401004 	movi	r5,64
 800f7ac:	2909c83a 	sub	r4,r5,r4
 800f7b0:	4108983a 	sll	r4,r8,r4
 800f7b4:	2448b03a 	or	r4,r4,r17
 800f7b8:	2008c03a 	cmpne	r4,r4,zero
 800f7bc:	3922b03a 	or	r17,r7,r4
 800f7c0:	0009883a 	mov	r4,zero
 800f7c4:	003f8d06 	br	800f5fc <__alt_data_end+0xfc00f5fc>
 800f7c8:	0007883a 	mov	r3,zero
 800f7cc:	003fdd06 	br	800f744 <__alt_data_end+0xfc00f744>
 800f7d0:	0009883a 	mov	r4,zero
 800f7d4:	003ff706 	br	800f7b4 <__alt_data_end+0xfc00f7b4>

0800f7d8 <__divdf3>:
 800f7d8:	defff004 	addi	sp,sp,-64
 800f7dc:	dc800815 	stw	r18,32(sp)
 800f7e0:	2824d53a 	srli	r18,r5,20
 800f7e4:	dd800c15 	stw	r22,48(sp)
 800f7e8:	282cd7fa 	srli	r22,r5,31
 800f7ec:	dc000615 	stw	r16,24(sp)
 800f7f0:	04000434 	movhi	r16,16
 800f7f4:	843fffc4 	addi	r16,r16,-1
 800f7f8:	dfc00f15 	stw	ra,60(sp)
 800f7fc:	df000e15 	stw	fp,56(sp)
 800f800:	ddc00d15 	stw	r23,52(sp)
 800f804:	dd400b15 	stw	r21,44(sp)
 800f808:	dd000a15 	stw	r20,40(sp)
 800f80c:	dcc00915 	stw	r19,36(sp)
 800f810:	dc400715 	stw	r17,28(sp)
 800f814:	9481ffcc 	andi	r18,r18,2047
 800f818:	2c20703a 	and	r16,r5,r16
 800f81c:	b2003fcc 	andi	r8,r22,255
 800f820:	90006126 	beq	r18,zero,800f9a8 <__divdf3+0x1d0>
 800f824:	0081ffc4 	movi	r2,2047
 800f828:	202b883a 	mov	r21,r4
 800f82c:	90803726 	beq	r18,r2,800f90c <__divdf3+0x134>
 800f830:	80800434 	orhi	r2,r16,16
 800f834:	100490fa 	slli	r2,r2,3
 800f838:	2020d77a 	srli	r16,r4,29
 800f83c:	202a90fa 	slli	r21,r4,3
 800f840:	94bf0044 	addi	r18,r18,-1023
 800f844:	80a0b03a 	or	r16,r16,r2
 800f848:	0013883a 	mov	r9,zero
 800f84c:	000b883a 	mov	r5,zero
 800f850:	3806d53a 	srli	r3,r7,20
 800f854:	382ed7fa 	srli	r23,r7,31
 800f858:	04400434 	movhi	r17,16
 800f85c:	8c7fffc4 	addi	r17,r17,-1
 800f860:	18c1ffcc 	andi	r3,r3,2047
 800f864:	3029883a 	mov	r20,r6
 800f868:	3c62703a 	and	r17,r7,r17
 800f86c:	bf003fcc 	andi	fp,r23,255
 800f870:	18006e26 	beq	r3,zero,800fa2c <__divdf3+0x254>
 800f874:	0081ffc4 	movi	r2,2047
 800f878:	18806626 	beq	r3,r2,800fa14 <__divdf3+0x23c>
 800f87c:	88800434 	orhi	r2,r17,16
 800f880:	100490fa 	slli	r2,r2,3
 800f884:	3022d77a 	srli	r17,r6,29
 800f888:	302890fa 	slli	r20,r6,3
 800f88c:	18ff0044 	addi	r3,r3,-1023
 800f890:	88a2b03a 	or	r17,r17,r2
 800f894:	000f883a 	mov	r7,zero
 800f898:	b5e6f03a 	xor	r19,r22,r23
 800f89c:	3a4cb03a 	or	r6,r7,r9
 800f8a0:	008003c4 	movi	r2,15
 800f8a4:	9809883a 	mov	r4,r19
 800f8a8:	90c7c83a 	sub	r3,r18,r3
 800f8ac:	9cc03fcc 	andi	r19,r19,255
 800f8b0:	11809636 	bltu	r2,r6,800fb0c <__divdf3+0x334>
 800f8b4:	300c90ba 	slli	r6,r6,2
 800f8b8:	00820074 	movhi	r2,2049
 800f8bc:	10be3304 	addi	r2,r2,-1844
 800f8c0:	308d883a 	add	r6,r6,r2
 800f8c4:	30800017 	ldw	r2,0(r6)
 800f8c8:	1000683a 	jmp	r2
 800f8cc:	0800fb0c 	andi	zero,at,1004
 800f8d0:	0800f944 	addi	zero,at,997
 800f8d4:	0800fafc 	xorhi	zero,at,1003
 800f8d8:	0800f938 	rdprs	zero,at,996
 800f8dc:	0800fafc 	xorhi	zero,at,1003
 800f8e0:	0800fad0 	cmplti	zero,at,1003
 800f8e4:	0800fafc 	xorhi	zero,at,1003
 800f8e8:	0800f938 	rdprs	zero,at,996
 800f8ec:	0800f944 	addi	zero,at,997
 800f8f0:	0800f944 	addi	zero,at,997
 800f8f4:	0800fad0 	cmplti	zero,at,1003
 800f8f8:	0800f938 	rdprs	zero,at,996
 800f8fc:	0800f928 	cmpgeui	zero,at,996
 800f900:	0800f928 	cmpgeui	zero,at,996
 800f904:	0800f928 	cmpgeui	zero,at,996
 800f908:	0800fe94 	ori	zero,at,1018
 800f90c:	2404b03a 	or	r2,r4,r16
 800f910:	10006c1e 	bne	r2,zero,800fac4 <__divdf3+0x2ec>
 800f914:	02400204 	movi	r9,8
 800f918:	0021883a 	mov	r16,zero
 800f91c:	002b883a 	mov	r21,zero
 800f920:	01400084 	movi	r5,2
 800f924:	003fca06 	br	800f850 <__alt_data_end+0xfc00f850>
 800f928:	8023883a 	mov	r17,r16
 800f92c:	a829883a 	mov	r20,r21
 800f930:	4039883a 	mov	fp,r8
 800f934:	280f883a 	mov	r7,r5
 800f938:	00800084 	movi	r2,2
 800f93c:	3881601e 	bne	r7,r2,800fec0 <__divdf3+0x6e8>
 800f940:	e027883a 	mov	r19,fp
 800f944:	9900004c 	andi	r4,r19,1
 800f948:	0081ffc4 	movi	r2,2047
 800f94c:	0021883a 	mov	r16,zero
 800f950:	002b883a 	mov	r21,zero
 800f954:	1004953a 	slli	r2,r2,20
 800f958:	20c03fcc 	andi	r3,r4,255
 800f95c:	01400434 	movhi	r5,16
 800f960:	297fffc4 	addi	r5,r5,-1
 800f964:	180697fa 	slli	r3,r3,31
 800f968:	8160703a 	and	r16,r16,r5
 800f96c:	80a0b03a 	or	r16,r16,r2
 800f970:	80c6b03a 	or	r3,r16,r3
 800f974:	a805883a 	mov	r2,r21
 800f978:	dfc00f17 	ldw	ra,60(sp)
 800f97c:	df000e17 	ldw	fp,56(sp)
 800f980:	ddc00d17 	ldw	r23,52(sp)
 800f984:	dd800c17 	ldw	r22,48(sp)
 800f988:	dd400b17 	ldw	r21,44(sp)
 800f98c:	dd000a17 	ldw	r20,40(sp)
 800f990:	dcc00917 	ldw	r19,36(sp)
 800f994:	dc800817 	ldw	r18,32(sp)
 800f998:	dc400717 	ldw	r17,28(sp)
 800f99c:	dc000617 	ldw	r16,24(sp)
 800f9a0:	dec01004 	addi	sp,sp,64
 800f9a4:	f800283a 	ret
 800f9a8:	2404b03a 	or	r2,r4,r16
 800f9ac:	2023883a 	mov	r17,r4
 800f9b0:	10003f26 	beq	r2,zero,800fab0 <__divdf3+0x2d8>
 800f9b4:	80015e26 	beq	r16,zero,800ff30 <__divdf3+0x758>
 800f9b8:	8009883a 	mov	r4,r16
 800f9bc:	d9800215 	stw	r6,8(sp)
 800f9c0:	d9c00515 	stw	r7,20(sp)
 800f9c4:	da000415 	stw	r8,16(sp)
 800f9c8:	801176c0 	call	801176c <__clzsi2>
 800f9cc:	d9800217 	ldw	r6,8(sp)
 800f9d0:	d9c00517 	ldw	r7,20(sp)
 800f9d4:	da000417 	ldw	r8,16(sp)
 800f9d8:	113ffd44 	addi	r4,r2,-11
 800f9dc:	00c00704 	movi	r3,28
 800f9e0:	19014f16 	blt	r3,r4,800ff20 <__divdf3+0x748>
 800f9e4:	00c00744 	movi	r3,29
 800f9e8:	157ffe04 	addi	r21,r2,-8
 800f9ec:	1907c83a 	sub	r3,r3,r4
 800f9f0:	8560983a 	sll	r16,r16,r21
 800f9f4:	88c6d83a 	srl	r3,r17,r3
 800f9f8:	8d6a983a 	sll	r21,r17,r21
 800f9fc:	1c20b03a 	or	r16,r3,r16
 800fa00:	1080fcc4 	addi	r2,r2,1011
 800fa04:	00a5c83a 	sub	r18,zero,r2
 800fa08:	0013883a 	mov	r9,zero
 800fa0c:	000b883a 	mov	r5,zero
 800fa10:	003f8f06 	br	800f850 <__alt_data_end+0xfc00f850>
 800fa14:	3444b03a 	or	r2,r6,r17
 800fa18:	1000231e 	bne	r2,zero,800faa8 <__divdf3+0x2d0>
 800fa1c:	0023883a 	mov	r17,zero
 800fa20:	0029883a 	mov	r20,zero
 800fa24:	01c00084 	movi	r7,2
 800fa28:	003f9b06 	br	800f898 <__alt_data_end+0xfc00f898>
 800fa2c:	3444b03a 	or	r2,r6,r17
 800fa30:	10001926 	beq	r2,zero,800fa98 <__divdf3+0x2c0>
 800fa34:	88014b26 	beq	r17,zero,800ff64 <__divdf3+0x78c>
 800fa38:	8809883a 	mov	r4,r17
 800fa3c:	d9400115 	stw	r5,4(sp)
 800fa40:	d9800215 	stw	r6,8(sp)
 800fa44:	da000415 	stw	r8,16(sp)
 800fa48:	da400315 	stw	r9,12(sp)
 800fa4c:	801176c0 	call	801176c <__clzsi2>
 800fa50:	d9400117 	ldw	r5,4(sp)
 800fa54:	d9800217 	ldw	r6,8(sp)
 800fa58:	da000417 	ldw	r8,16(sp)
 800fa5c:	da400317 	ldw	r9,12(sp)
 800fa60:	113ffd44 	addi	r4,r2,-11
 800fa64:	00c00704 	movi	r3,28
 800fa68:	19013a16 	blt	r3,r4,800ff54 <__divdf3+0x77c>
 800fa6c:	00c00744 	movi	r3,29
 800fa70:	153ffe04 	addi	r20,r2,-8
 800fa74:	1907c83a 	sub	r3,r3,r4
 800fa78:	8d22983a 	sll	r17,r17,r20
 800fa7c:	30c6d83a 	srl	r3,r6,r3
 800fa80:	3528983a 	sll	r20,r6,r20
 800fa84:	1c62b03a 	or	r17,r3,r17
 800fa88:	1080fcc4 	addi	r2,r2,1011
 800fa8c:	0087c83a 	sub	r3,zero,r2
 800fa90:	000f883a 	mov	r7,zero
 800fa94:	003f8006 	br	800f898 <__alt_data_end+0xfc00f898>
 800fa98:	0023883a 	mov	r17,zero
 800fa9c:	0029883a 	mov	r20,zero
 800faa0:	01c00044 	movi	r7,1
 800faa4:	003f7c06 	br	800f898 <__alt_data_end+0xfc00f898>
 800faa8:	01c000c4 	movi	r7,3
 800faac:	003f7a06 	br	800f898 <__alt_data_end+0xfc00f898>
 800fab0:	02400104 	movi	r9,4
 800fab4:	0021883a 	mov	r16,zero
 800fab8:	002b883a 	mov	r21,zero
 800fabc:	01400044 	movi	r5,1
 800fac0:	003f6306 	br	800f850 <__alt_data_end+0xfc00f850>
 800fac4:	02400304 	movi	r9,12
 800fac8:	014000c4 	movi	r5,3
 800facc:	003f6006 	br	800f850 <__alt_data_end+0xfc00f850>
 800fad0:	04000434 	movhi	r16,16
 800fad4:	0009883a 	mov	r4,zero
 800fad8:	843fffc4 	addi	r16,r16,-1
 800fadc:	057fffc4 	movi	r21,-1
 800fae0:	0081ffc4 	movi	r2,2047
 800fae4:	003f9b06 	br	800f954 <__alt_data_end+0xfc00f954>
 800fae8:	00c00044 	movi	r3,1
 800faec:	1887c83a 	sub	r3,r3,r2
 800faf0:	01000e04 	movi	r4,56
 800faf4:	20c1530e 	bge	r4,r3,8010044 <__divdf3+0x86c>
 800faf8:	9900004c 	andi	r4,r19,1
 800fafc:	0005883a 	mov	r2,zero
 800fb00:	0021883a 	mov	r16,zero
 800fb04:	002b883a 	mov	r21,zero
 800fb08:	003f9206 	br	800f954 <__alt_data_end+0xfc00f954>
 800fb0c:	8c012e36 	bltu	r17,r16,800ffc8 <__divdf3+0x7f0>
 800fb10:	84412c26 	beq	r16,r17,800ffc4 <__divdf3+0x7ec>
 800fb14:	a82f883a 	mov	r23,r21
 800fb18:	18ffffc4 	addi	r3,r3,-1
 800fb1c:	002b883a 	mov	r21,zero
 800fb20:	a004d63a 	srli	r2,r20,24
 800fb24:	8822923a 	slli	r17,r17,8
 800fb28:	a028923a 	slli	r20,r20,8
 800fb2c:	8009883a 	mov	r4,r16
 800fb30:	88acb03a 	or	r22,r17,r2
 800fb34:	dd000015 	stw	r20,0(sp)
 800fb38:	b028d43a 	srli	r20,r22,16
 800fb3c:	d8c00215 	stw	r3,8(sp)
 800fb40:	b4bfffcc 	andi	r18,r22,65535
 800fb44:	a00b883a 	mov	r5,r20
 800fb48:	8000fe40 	call	8000fe4 <__udivsi3>
 800fb4c:	100b883a 	mov	r5,r2
 800fb50:	9009883a 	mov	r4,r18
 800fb54:	1023883a 	mov	r17,r2
 800fb58:	80010a00 	call	80010a0 <__mulsi3>
 800fb5c:	8009883a 	mov	r4,r16
 800fb60:	a00b883a 	mov	r5,r20
 800fb64:	1039883a 	mov	fp,r2
 800fb68:	80010480 	call	8001048 <__umodsi3>
 800fb6c:	1004943a 	slli	r2,r2,16
 800fb70:	b808d43a 	srli	r4,r23,16
 800fb74:	d8c00217 	ldw	r3,8(sp)
 800fb78:	2084b03a 	or	r2,r4,r2
 800fb7c:	1700062e 	bgeu	r2,fp,800fb98 <__divdf3+0x3c0>
 800fb80:	1585883a 	add	r2,r2,r22
 800fb84:	893fffc4 	addi	r4,r17,-1
 800fb88:	15811d36 	bltu	r2,r22,8010000 <__divdf3+0x828>
 800fb8c:	17011c2e 	bgeu	r2,fp,8010000 <__divdf3+0x828>
 800fb90:	8c7fff84 	addi	r17,r17,-2
 800fb94:	1585883a 	add	r2,r2,r22
 800fb98:	1739c83a 	sub	fp,r2,fp
 800fb9c:	a00b883a 	mov	r5,r20
 800fba0:	e009883a 	mov	r4,fp
 800fba4:	d8c00215 	stw	r3,8(sp)
 800fba8:	8000fe40 	call	8000fe4 <__udivsi3>
 800fbac:	100b883a 	mov	r5,r2
 800fbb0:	9009883a 	mov	r4,r18
 800fbb4:	1021883a 	mov	r16,r2
 800fbb8:	80010a00 	call	80010a0 <__mulsi3>
 800fbbc:	a00b883a 	mov	r5,r20
 800fbc0:	e009883a 	mov	r4,fp
 800fbc4:	d8800415 	stw	r2,16(sp)
 800fbc8:	80010480 	call	8001048 <__umodsi3>
 800fbcc:	1004943a 	slli	r2,r2,16
 800fbd0:	da000417 	ldw	r8,16(sp)
 800fbd4:	bdffffcc 	andi	r23,r23,65535
 800fbd8:	b884b03a 	or	r2,r23,r2
 800fbdc:	d8c00217 	ldw	r3,8(sp)
 800fbe0:	1200062e 	bgeu	r2,r8,800fbfc <__divdf3+0x424>
 800fbe4:	1585883a 	add	r2,r2,r22
 800fbe8:	813fffc4 	addi	r4,r16,-1
 800fbec:	15810236 	bltu	r2,r22,800fff8 <__divdf3+0x820>
 800fbf0:	1201012e 	bgeu	r2,r8,800fff8 <__divdf3+0x820>
 800fbf4:	843fff84 	addi	r16,r16,-2
 800fbf8:	1585883a 	add	r2,r2,r22
 800fbfc:	8822943a 	slli	r17,r17,16
 800fc00:	d9800017 	ldw	r6,0(sp)
 800fc04:	1211c83a 	sub	r8,r2,r8
 800fc08:	8c22b03a 	or	r17,r17,r16
 800fc0c:	373fffcc 	andi	fp,r6,65535
 800fc10:	8abfffcc 	andi	r10,r17,65535
 800fc14:	8820d43a 	srli	r16,r17,16
 800fc18:	5009883a 	mov	r4,r10
 800fc1c:	e00b883a 	mov	r5,fp
 800fc20:	302ed43a 	srli	r23,r6,16
 800fc24:	d8c00215 	stw	r3,8(sp)
 800fc28:	da000415 	stw	r8,16(sp)
 800fc2c:	da800115 	stw	r10,4(sp)
 800fc30:	80010a00 	call	80010a0 <__mulsi3>
 800fc34:	800b883a 	mov	r5,r16
 800fc38:	e009883a 	mov	r4,fp
 800fc3c:	d8800515 	stw	r2,20(sp)
 800fc40:	80010a00 	call	80010a0 <__mulsi3>
 800fc44:	8009883a 	mov	r4,r16
 800fc48:	b80b883a 	mov	r5,r23
 800fc4c:	d8800315 	stw	r2,12(sp)
 800fc50:	80010a00 	call	80010a0 <__mulsi3>
 800fc54:	da800117 	ldw	r10,4(sp)
 800fc58:	b80b883a 	mov	r5,r23
 800fc5c:	1021883a 	mov	r16,r2
 800fc60:	5009883a 	mov	r4,r10
 800fc64:	80010a00 	call	80010a0 <__mulsi3>
 800fc68:	d9c00517 	ldw	r7,20(sp)
 800fc6c:	da400317 	ldw	r9,12(sp)
 800fc70:	d8c00217 	ldw	r3,8(sp)
 800fc74:	3808d43a 	srli	r4,r7,16
 800fc78:	1245883a 	add	r2,r2,r9
 800fc7c:	da000417 	ldw	r8,16(sp)
 800fc80:	2085883a 	add	r2,r4,r2
 800fc84:	1240022e 	bgeu	r2,r9,800fc90 <__divdf3+0x4b8>
 800fc88:	01000074 	movhi	r4,1
 800fc8c:	8121883a 	add	r16,r16,r4
 800fc90:	1008d43a 	srli	r4,r2,16
 800fc94:	1004943a 	slli	r2,r2,16
 800fc98:	39ffffcc 	andi	r7,r7,65535
 800fc9c:	2409883a 	add	r4,r4,r16
 800fca0:	11c5883a 	add	r2,r2,r7
 800fca4:	4100bb36 	bltu	r8,r4,800ff94 <__divdf3+0x7bc>
 800fca8:	4100d726 	beq	r8,r4,8010008 <__divdf3+0x830>
 800fcac:	4109c83a 	sub	r4,r8,r4
 800fcb0:	a8a1c83a 	sub	r16,r21,r2
 800fcb4:	ac2b803a 	cmpltu	r21,r21,r16
 800fcb8:	256bc83a 	sub	r21,r4,r21
 800fcbc:	b540d926 	beq	r22,r21,8010024 <__divdf3+0x84c>
 800fcc0:	a00b883a 	mov	r5,r20
 800fcc4:	a809883a 	mov	r4,r21
 800fcc8:	d8c00215 	stw	r3,8(sp)
 800fccc:	8000fe40 	call	8000fe4 <__udivsi3>
 800fcd0:	100b883a 	mov	r5,r2
 800fcd4:	9009883a 	mov	r4,r18
 800fcd8:	d8800515 	stw	r2,20(sp)
 800fcdc:	80010a00 	call	80010a0 <__mulsi3>
 800fce0:	a809883a 	mov	r4,r21
 800fce4:	a00b883a 	mov	r5,r20
 800fce8:	d8800415 	stw	r2,16(sp)
 800fcec:	80010480 	call	8001048 <__umodsi3>
 800fcf0:	1004943a 	slli	r2,r2,16
 800fcf4:	8008d43a 	srli	r4,r16,16
 800fcf8:	da000417 	ldw	r8,16(sp)
 800fcfc:	d8c00217 	ldw	r3,8(sp)
 800fd00:	2084b03a 	or	r2,r4,r2
 800fd04:	d9c00517 	ldw	r7,20(sp)
 800fd08:	1200062e 	bgeu	r2,r8,800fd24 <__divdf3+0x54c>
 800fd0c:	1585883a 	add	r2,r2,r22
 800fd10:	393fffc4 	addi	r4,r7,-1
 800fd14:	1580c536 	bltu	r2,r22,801002c <__divdf3+0x854>
 800fd18:	1200c42e 	bgeu	r2,r8,801002c <__divdf3+0x854>
 800fd1c:	39ffff84 	addi	r7,r7,-2
 800fd20:	1585883a 	add	r2,r2,r22
 800fd24:	122bc83a 	sub	r21,r2,r8
 800fd28:	a00b883a 	mov	r5,r20
 800fd2c:	a809883a 	mov	r4,r21
 800fd30:	d8c00215 	stw	r3,8(sp)
 800fd34:	d9c00515 	stw	r7,20(sp)
 800fd38:	8000fe40 	call	8000fe4 <__udivsi3>
 800fd3c:	9009883a 	mov	r4,r18
 800fd40:	100b883a 	mov	r5,r2
 800fd44:	d8800415 	stw	r2,16(sp)
 800fd48:	80010a00 	call	80010a0 <__mulsi3>
 800fd4c:	a809883a 	mov	r4,r21
 800fd50:	a00b883a 	mov	r5,r20
 800fd54:	1025883a 	mov	r18,r2
 800fd58:	80010480 	call	8001048 <__umodsi3>
 800fd5c:	1004943a 	slli	r2,r2,16
 800fd60:	813fffcc 	andi	r4,r16,65535
 800fd64:	d8c00217 	ldw	r3,8(sp)
 800fd68:	20a0b03a 	or	r16,r4,r2
 800fd6c:	d9c00517 	ldw	r7,20(sp)
 800fd70:	da000417 	ldw	r8,16(sp)
 800fd74:	8480062e 	bgeu	r16,r18,800fd90 <__divdf3+0x5b8>
 800fd78:	85a1883a 	add	r16,r16,r22
 800fd7c:	40bfffc4 	addi	r2,r8,-1
 800fd80:	8580ac36 	bltu	r16,r22,8010034 <__divdf3+0x85c>
 800fd84:	8480ab2e 	bgeu	r16,r18,8010034 <__divdf3+0x85c>
 800fd88:	423fff84 	addi	r8,r8,-2
 800fd8c:	85a1883a 	add	r16,r16,r22
 800fd90:	3804943a 	slli	r2,r7,16
 800fd94:	84a1c83a 	sub	r16,r16,r18
 800fd98:	e009883a 	mov	r4,fp
 800fd9c:	1228b03a 	or	r20,r2,r8
 800fda0:	a1ffffcc 	andi	r7,r20,65535
 800fda4:	a024d43a 	srli	r18,r20,16
 800fda8:	380b883a 	mov	r5,r7
 800fdac:	d8c00215 	stw	r3,8(sp)
 800fdb0:	d9c00515 	stw	r7,20(sp)
 800fdb4:	80010a00 	call	80010a0 <__mulsi3>
 800fdb8:	900b883a 	mov	r5,r18
 800fdbc:	e009883a 	mov	r4,fp
 800fdc0:	102b883a 	mov	r21,r2
 800fdc4:	80010a00 	call	80010a0 <__mulsi3>
 800fdc8:	900b883a 	mov	r5,r18
 800fdcc:	b809883a 	mov	r4,r23
 800fdd0:	1039883a 	mov	fp,r2
 800fdd4:	80010a00 	call	80010a0 <__mulsi3>
 800fdd8:	d9c00517 	ldw	r7,20(sp)
 800fddc:	b80b883a 	mov	r5,r23
 800fde0:	1025883a 	mov	r18,r2
 800fde4:	3809883a 	mov	r4,r7
 800fde8:	80010a00 	call	80010a0 <__mulsi3>
 800fdec:	a808d43a 	srli	r4,r21,16
 800fdf0:	1705883a 	add	r2,r2,fp
 800fdf4:	d8c00217 	ldw	r3,8(sp)
 800fdf8:	2085883a 	add	r2,r4,r2
 800fdfc:	1700022e 	bgeu	r2,fp,800fe08 <__divdf3+0x630>
 800fe00:	01000074 	movhi	r4,1
 800fe04:	9125883a 	add	r18,r18,r4
 800fe08:	1008d43a 	srli	r4,r2,16
 800fe0c:	1004943a 	slli	r2,r2,16
 800fe10:	ad7fffcc 	andi	r21,r21,65535
 800fe14:	2489883a 	add	r4,r4,r18
 800fe18:	1545883a 	add	r2,r2,r21
 800fe1c:	81003836 	bltu	r16,r4,800ff00 <__divdf3+0x728>
 800fe20:	81003626 	beq	r16,r4,800fefc <__divdf3+0x724>
 800fe24:	a5000054 	ori	r20,r20,1
 800fe28:	1880ffc4 	addi	r2,r3,1023
 800fe2c:	00bf2e0e 	bge	zero,r2,800fae8 <__alt_data_end+0xfc00fae8>
 800fe30:	a10001cc 	andi	r4,r20,7
 800fe34:	20000726 	beq	r4,zero,800fe54 <__divdf3+0x67c>
 800fe38:	a10003cc 	andi	r4,r20,15
 800fe3c:	01400104 	movi	r5,4
 800fe40:	21400426 	beq	r4,r5,800fe54 <__divdf3+0x67c>
 800fe44:	a149883a 	add	r4,r20,r5
 800fe48:	2529803a 	cmpltu	r20,r4,r20
 800fe4c:	8d23883a 	add	r17,r17,r20
 800fe50:	2029883a 	mov	r20,r4
 800fe54:	8900402c 	andhi	r4,r17,256
 800fe58:	20000426 	beq	r4,zero,800fe6c <__divdf3+0x694>
 800fe5c:	18810004 	addi	r2,r3,1024
 800fe60:	00ffc034 	movhi	r3,65280
 800fe64:	18ffffc4 	addi	r3,r3,-1
 800fe68:	88e2703a 	and	r17,r17,r3
 800fe6c:	00c1ff84 	movi	r3,2046
 800fe70:	18beb416 	blt	r3,r2,800f944 <__alt_data_end+0xfc00f944>
 800fe74:	a028d0fa 	srli	r20,r20,3
 800fe78:	882a977a 	slli	r21,r17,29
 800fe7c:	8820927a 	slli	r16,r17,9
 800fe80:	1081ffcc 	andi	r2,r2,2047
 800fe84:	ad2ab03a 	or	r21,r21,r20
 800fe88:	8020d33a 	srli	r16,r16,12
 800fe8c:	9900004c 	andi	r4,r19,1
 800fe90:	003eb006 	br	800f954 <__alt_data_end+0xfc00f954>
 800fe94:	8080022c 	andhi	r2,r16,8
 800fe98:	10001226 	beq	r2,zero,800fee4 <__divdf3+0x70c>
 800fe9c:	8880022c 	andhi	r2,r17,8
 800fea0:	1000101e 	bne	r2,zero,800fee4 <__divdf3+0x70c>
 800fea4:	00800434 	movhi	r2,16
 800fea8:	8c000234 	orhi	r16,r17,8
 800feac:	10bfffc4 	addi	r2,r2,-1
 800feb0:	b809883a 	mov	r4,r23
 800feb4:	80a0703a 	and	r16,r16,r2
 800feb8:	a02b883a 	mov	r21,r20
 800febc:	003f0806 	br	800fae0 <__alt_data_end+0xfc00fae0>
 800fec0:	008000c4 	movi	r2,3
 800fec4:	3880b126 	beq	r7,r2,801018c <__divdf3+0x9b4>
 800fec8:	00800044 	movi	r2,1
 800fecc:	38805b1e 	bne	r7,r2,801003c <__divdf3+0x864>
 800fed0:	e009883a 	mov	r4,fp
 800fed4:	0005883a 	mov	r2,zero
 800fed8:	0021883a 	mov	r16,zero
 800fedc:	002b883a 	mov	r21,zero
 800fee0:	003e9c06 	br	800f954 <__alt_data_end+0xfc00f954>
 800fee4:	00800434 	movhi	r2,16
 800fee8:	84000234 	orhi	r16,r16,8
 800feec:	10bfffc4 	addi	r2,r2,-1
 800fef0:	b009883a 	mov	r4,r22
 800fef4:	80a0703a 	and	r16,r16,r2
 800fef8:	003ef906 	br	800fae0 <__alt_data_end+0xfc00fae0>
 800fefc:	103fca26 	beq	r2,zero,800fe28 <__alt_data_end+0xfc00fe28>
 800ff00:	b421883a 	add	r16,r22,r16
 800ff04:	a17fffc4 	addi	r5,r20,-1
 800ff08:	8580422e 	bgeu	r16,r22,8010014 <__divdf3+0x83c>
 800ff0c:	2829883a 	mov	r20,r5
 800ff10:	813fc41e 	bne	r16,r4,800fe24 <__alt_data_end+0xfc00fe24>
 800ff14:	d9800017 	ldw	r6,0(sp)
 800ff18:	30bfc21e 	bne	r6,r2,800fe24 <__alt_data_end+0xfc00fe24>
 800ff1c:	003fc206 	br	800fe28 <__alt_data_end+0xfc00fe28>
 800ff20:	143ff604 	addi	r16,r2,-40
 800ff24:	8c20983a 	sll	r16,r17,r16
 800ff28:	002b883a 	mov	r21,zero
 800ff2c:	003eb406 	br	800fa00 <__alt_data_end+0xfc00fa00>
 800ff30:	d9800215 	stw	r6,8(sp)
 800ff34:	d9c00515 	stw	r7,20(sp)
 800ff38:	da000415 	stw	r8,16(sp)
 800ff3c:	801176c0 	call	801176c <__clzsi2>
 800ff40:	10800804 	addi	r2,r2,32
 800ff44:	da000417 	ldw	r8,16(sp)
 800ff48:	d9c00517 	ldw	r7,20(sp)
 800ff4c:	d9800217 	ldw	r6,8(sp)
 800ff50:	003ea106 	br	800f9d8 <__alt_data_end+0xfc00f9d8>
 800ff54:	147ff604 	addi	r17,r2,-40
 800ff58:	3462983a 	sll	r17,r6,r17
 800ff5c:	0029883a 	mov	r20,zero
 800ff60:	003ec906 	br	800fa88 <__alt_data_end+0xfc00fa88>
 800ff64:	3009883a 	mov	r4,r6
 800ff68:	d9400115 	stw	r5,4(sp)
 800ff6c:	d9800215 	stw	r6,8(sp)
 800ff70:	da000415 	stw	r8,16(sp)
 800ff74:	da400315 	stw	r9,12(sp)
 800ff78:	801176c0 	call	801176c <__clzsi2>
 800ff7c:	10800804 	addi	r2,r2,32
 800ff80:	da400317 	ldw	r9,12(sp)
 800ff84:	da000417 	ldw	r8,16(sp)
 800ff88:	d9800217 	ldw	r6,8(sp)
 800ff8c:	d9400117 	ldw	r5,4(sp)
 800ff90:	003eb306 	br	800fa60 <__alt_data_end+0xfc00fa60>
 800ff94:	d9800017 	ldw	r6,0(sp)
 800ff98:	a9ab883a 	add	r21,r21,r6
 800ff9c:	a98b803a 	cmpltu	r5,r21,r6
 800ffa0:	2d8b883a 	add	r5,r5,r22
 800ffa4:	2a11883a 	add	r8,r5,r8
 800ffa8:	897fffc4 	addi	r5,r17,-1
 800ffac:	b2000c2e 	bgeu	r22,r8,800ffe0 <__divdf3+0x808>
 800ffb0:	41003f36 	bltu	r8,r4,80100b0 <__divdf3+0x8d8>
 800ffb4:	22006c26 	beq	r4,r8,8010168 <__divdf3+0x990>
 800ffb8:	4109c83a 	sub	r4,r8,r4
 800ffbc:	2823883a 	mov	r17,r5
 800ffc0:	003f3b06 	br	800fcb0 <__alt_data_end+0xfc00fcb0>
 800ffc4:	ad3ed336 	bltu	r21,r20,800fb14 <__alt_data_end+0xfc00fb14>
 800ffc8:	a804d07a 	srli	r2,r21,1
 800ffcc:	802e97fa 	slli	r23,r16,31
 800ffd0:	a82a97fa 	slli	r21,r21,31
 800ffd4:	8020d07a 	srli	r16,r16,1
 800ffd8:	b8aeb03a 	or	r23,r23,r2
 800ffdc:	003ed006 	br	800fb20 <__alt_data_end+0xfc00fb20>
 800ffe0:	b23ff51e 	bne	r22,r8,800ffb8 <__alt_data_end+0xfc00ffb8>
 800ffe4:	d9800017 	ldw	r6,0(sp)
 800ffe8:	a9bff12e 	bgeu	r21,r6,800ffb0 <__alt_data_end+0xfc00ffb0>
 800ffec:	b109c83a 	sub	r4,r22,r4
 800fff0:	2823883a 	mov	r17,r5
 800fff4:	003f2e06 	br	800fcb0 <__alt_data_end+0xfc00fcb0>
 800fff8:	2021883a 	mov	r16,r4
 800fffc:	003eff06 	br	800fbfc <__alt_data_end+0xfc00fbfc>
 8010000:	2023883a 	mov	r17,r4
 8010004:	003ee406 	br	800fb98 <__alt_data_end+0xfc00fb98>
 8010008:	a8bfe236 	bltu	r21,r2,800ff94 <__alt_data_end+0xfc00ff94>
 801000c:	0009883a 	mov	r4,zero
 8010010:	003f2706 	br	800fcb0 <__alt_data_end+0xfc00fcb0>
 8010014:	81002d36 	bltu	r16,r4,80100cc <__divdf3+0x8f4>
 8010018:	24005626 	beq	r4,r16,8010174 <__divdf3+0x99c>
 801001c:	2829883a 	mov	r20,r5
 8010020:	003f8006 	br	800fe24 <__alt_data_end+0xfc00fe24>
 8010024:	053fffc4 	movi	r20,-1
 8010028:	003f7f06 	br	800fe28 <__alt_data_end+0xfc00fe28>
 801002c:	200f883a 	mov	r7,r4
 8010030:	003f3c06 	br	800fd24 <__alt_data_end+0xfc00fd24>
 8010034:	1011883a 	mov	r8,r2
 8010038:	003f5506 	br	800fd90 <__alt_data_end+0xfc00fd90>
 801003c:	e027883a 	mov	r19,fp
 8010040:	003f7906 	br	800fe28 <__alt_data_end+0xfc00fe28>
 8010044:	010007c4 	movi	r4,31
 8010048:	20c02816 	blt	r4,r3,80100ec <__divdf3+0x914>
 801004c:	00800804 	movi	r2,32
 8010050:	10c5c83a 	sub	r2,r2,r3
 8010054:	888a983a 	sll	r5,r17,r2
 8010058:	a0c8d83a 	srl	r4,r20,r3
 801005c:	a084983a 	sll	r2,r20,r2
 8010060:	88e2d83a 	srl	r17,r17,r3
 8010064:	2906b03a 	or	r3,r5,r4
 8010068:	1004c03a 	cmpne	r2,r2,zero
 801006c:	1886b03a 	or	r3,r3,r2
 8010070:	188001cc 	andi	r2,r3,7
 8010074:	10000726 	beq	r2,zero,8010094 <__divdf3+0x8bc>
 8010078:	188003cc 	andi	r2,r3,15
 801007c:	01000104 	movi	r4,4
 8010080:	11000426 	beq	r2,r4,8010094 <__divdf3+0x8bc>
 8010084:	1805883a 	mov	r2,r3
 8010088:	10c00104 	addi	r3,r2,4
 801008c:	1885803a 	cmpltu	r2,r3,r2
 8010090:	88a3883a 	add	r17,r17,r2
 8010094:	8880202c 	andhi	r2,r17,128
 8010098:	10002926 	beq	r2,zero,8010140 <__divdf3+0x968>
 801009c:	9900004c 	andi	r4,r19,1
 80100a0:	00800044 	movi	r2,1
 80100a4:	0021883a 	mov	r16,zero
 80100a8:	002b883a 	mov	r21,zero
 80100ac:	003e2906 	br	800f954 <__alt_data_end+0xfc00f954>
 80100b0:	d9800017 	ldw	r6,0(sp)
 80100b4:	8c7fff84 	addi	r17,r17,-2
 80100b8:	a9ab883a 	add	r21,r21,r6
 80100bc:	a98b803a 	cmpltu	r5,r21,r6
 80100c0:	2d8b883a 	add	r5,r5,r22
 80100c4:	2a11883a 	add	r8,r5,r8
 80100c8:	003ef806 	br	800fcac <__alt_data_end+0xfc00fcac>
 80100cc:	d9800017 	ldw	r6,0(sp)
 80100d0:	318f883a 	add	r7,r6,r6
 80100d4:	398b803a 	cmpltu	r5,r7,r6
 80100d8:	2d8d883a 	add	r6,r5,r22
 80100dc:	81a1883a 	add	r16,r16,r6
 80100e0:	a17fff84 	addi	r5,r20,-2
 80100e4:	d9c00015 	stw	r7,0(sp)
 80100e8:	003f8806 	br	800ff0c <__alt_data_end+0xfc00ff0c>
 80100ec:	013ff844 	movi	r4,-31
 80100f0:	2085c83a 	sub	r2,r4,r2
 80100f4:	8888d83a 	srl	r4,r17,r2
 80100f8:	00800804 	movi	r2,32
 80100fc:	18802126 	beq	r3,r2,8010184 <__divdf3+0x9ac>
 8010100:	04001004 	movi	r16,64
 8010104:	80c7c83a 	sub	r3,r16,r3
 8010108:	88e0983a 	sll	r16,r17,r3
 801010c:	8504b03a 	or	r2,r16,r20
 8010110:	1004c03a 	cmpne	r2,r2,zero
 8010114:	2084b03a 	or	r2,r4,r2
 8010118:	144001cc 	andi	r17,r2,7
 801011c:	88000d1e 	bne	r17,zero,8010154 <__divdf3+0x97c>
 8010120:	0021883a 	mov	r16,zero
 8010124:	102ad0fa 	srli	r21,r2,3
 8010128:	9900004c 	andi	r4,r19,1
 801012c:	0005883a 	mov	r2,zero
 8010130:	ac6ab03a 	or	r21,r21,r17
 8010134:	003e0706 	br	800f954 <__alt_data_end+0xfc00f954>
 8010138:	1007883a 	mov	r3,r2
 801013c:	0023883a 	mov	r17,zero
 8010140:	8820927a 	slli	r16,r17,9
 8010144:	1805883a 	mov	r2,r3
 8010148:	8822977a 	slli	r17,r17,29
 801014c:	8020d33a 	srli	r16,r16,12
 8010150:	003ff406 	br	8010124 <__alt_data_end+0xfc010124>
 8010154:	10c003cc 	andi	r3,r2,15
 8010158:	01000104 	movi	r4,4
 801015c:	193ff626 	beq	r3,r4,8010138 <__alt_data_end+0xfc010138>
 8010160:	0023883a 	mov	r17,zero
 8010164:	003fc806 	br	8010088 <__alt_data_end+0xfc010088>
 8010168:	a8bfd136 	bltu	r21,r2,80100b0 <__alt_data_end+0xfc0100b0>
 801016c:	2823883a 	mov	r17,r5
 8010170:	003fa606 	br	801000c <__alt_data_end+0xfc01000c>
 8010174:	d9800017 	ldw	r6,0(sp)
 8010178:	30bfd436 	bltu	r6,r2,80100cc <__alt_data_end+0xfc0100cc>
 801017c:	2829883a 	mov	r20,r5
 8010180:	003f6406 	br	800ff14 <__alt_data_end+0xfc00ff14>
 8010184:	0021883a 	mov	r16,zero
 8010188:	003fe006 	br	801010c <__alt_data_end+0xfc01010c>
 801018c:	00800434 	movhi	r2,16
 8010190:	8c000234 	orhi	r16,r17,8
 8010194:	10bfffc4 	addi	r2,r2,-1
 8010198:	e009883a 	mov	r4,fp
 801019c:	80a0703a 	and	r16,r16,r2
 80101a0:	a02b883a 	mov	r21,r20
 80101a4:	003e4e06 	br	800fae0 <__alt_data_end+0xfc00fae0>

080101a8 <__eqdf2>:
 80101a8:	2804d53a 	srli	r2,r5,20
 80101ac:	3806d53a 	srli	r3,r7,20
 80101b0:	02000434 	movhi	r8,16
 80101b4:	423fffc4 	addi	r8,r8,-1
 80101b8:	1081ffcc 	andi	r2,r2,2047
 80101bc:	0281ffc4 	movi	r10,2047
 80101c0:	2a12703a 	and	r9,r5,r8
 80101c4:	18c1ffcc 	andi	r3,r3,2047
 80101c8:	3a10703a 	and	r8,r7,r8
 80101cc:	280ad7fa 	srli	r5,r5,31
 80101d0:	380ed7fa 	srli	r7,r7,31
 80101d4:	12801026 	beq	r2,r10,8010218 <__eqdf2+0x70>
 80101d8:	0281ffc4 	movi	r10,2047
 80101dc:	1a800a26 	beq	r3,r10,8010208 <__eqdf2+0x60>
 80101e0:	10c00226 	beq	r2,r3,80101ec <__eqdf2+0x44>
 80101e4:	00800044 	movi	r2,1
 80101e8:	f800283a 	ret
 80101ec:	4a3ffd1e 	bne	r9,r8,80101e4 <__alt_data_end+0xfc0101e4>
 80101f0:	21bffc1e 	bne	r4,r6,80101e4 <__alt_data_end+0xfc0101e4>
 80101f4:	29c00c26 	beq	r5,r7,8010228 <__eqdf2+0x80>
 80101f8:	103ffa1e 	bne	r2,zero,80101e4 <__alt_data_end+0xfc0101e4>
 80101fc:	2244b03a 	or	r2,r4,r9
 8010200:	1004c03a 	cmpne	r2,r2,zero
 8010204:	f800283a 	ret
 8010208:	3214b03a 	or	r10,r6,r8
 801020c:	503ff426 	beq	r10,zero,80101e0 <__alt_data_end+0xfc0101e0>
 8010210:	00800044 	movi	r2,1
 8010214:	f800283a 	ret
 8010218:	2254b03a 	or	r10,r4,r9
 801021c:	503fee26 	beq	r10,zero,80101d8 <__alt_data_end+0xfc0101d8>
 8010220:	00800044 	movi	r2,1
 8010224:	f800283a 	ret
 8010228:	0005883a 	mov	r2,zero
 801022c:	f800283a 	ret

08010230 <__gedf2>:
 8010230:	2804d53a 	srli	r2,r5,20
 8010234:	3806d53a 	srli	r3,r7,20
 8010238:	02000434 	movhi	r8,16
 801023c:	423fffc4 	addi	r8,r8,-1
 8010240:	1081ffcc 	andi	r2,r2,2047
 8010244:	0241ffc4 	movi	r9,2047
 8010248:	2a14703a 	and	r10,r5,r8
 801024c:	18c1ffcc 	andi	r3,r3,2047
 8010250:	3a10703a 	and	r8,r7,r8
 8010254:	280ad7fa 	srli	r5,r5,31
 8010258:	380ed7fa 	srli	r7,r7,31
 801025c:	12401d26 	beq	r2,r9,80102d4 <__gedf2+0xa4>
 8010260:	0241ffc4 	movi	r9,2047
 8010264:	1a401226 	beq	r3,r9,80102b0 <__gedf2+0x80>
 8010268:	1000081e 	bne	r2,zero,801028c <__gedf2+0x5c>
 801026c:	2296b03a 	or	r11,r4,r10
 8010270:	5813003a 	cmpeq	r9,r11,zero
 8010274:	1800091e 	bne	r3,zero,801029c <__gedf2+0x6c>
 8010278:	3218b03a 	or	r12,r6,r8
 801027c:	6000071e 	bne	r12,zero,801029c <__gedf2+0x6c>
 8010280:	0005883a 	mov	r2,zero
 8010284:	5800101e 	bne	r11,zero,80102c8 <__gedf2+0x98>
 8010288:	f800283a 	ret
 801028c:	18000c1e 	bne	r3,zero,80102c0 <__gedf2+0x90>
 8010290:	3212b03a 	or	r9,r6,r8
 8010294:	48000c26 	beq	r9,zero,80102c8 <__gedf2+0x98>
 8010298:	0013883a 	mov	r9,zero
 801029c:	39c03fcc 	andi	r7,r7,255
 80102a0:	48000826 	beq	r9,zero,80102c4 <__gedf2+0x94>
 80102a4:	38000926 	beq	r7,zero,80102cc <__gedf2+0x9c>
 80102a8:	00800044 	movi	r2,1
 80102ac:	f800283a 	ret
 80102b0:	3212b03a 	or	r9,r6,r8
 80102b4:	483fec26 	beq	r9,zero,8010268 <__alt_data_end+0xfc010268>
 80102b8:	00bfff84 	movi	r2,-2
 80102bc:	f800283a 	ret
 80102c0:	39c03fcc 	andi	r7,r7,255
 80102c4:	29c00626 	beq	r5,r7,80102e0 <__gedf2+0xb0>
 80102c8:	283ff726 	beq	r5,zero,80102a8 <__alt_data_end+0xfc0102a8>
 80102cc:	00bfffc4 	movi	r2,-1
 80102d0:	f800283a 	ret
 80102d4:	2292b03a 	or	r9,r4,r10
 80102d8:	483fe126 	beq	r9,zero,8010260 <__alt_data_end+0xfc010260>
 80102dc:	003ff606 	br	80102b8 <__alt_data_end+0xfc0102b8>
 80102e0:	18bff916 	blt	r3,r2,80102c8 <__alt_data_end+0xfc0102c8>
 80102e4:	10c00316 	blt	r2,r3,80102f4 <__gedf2+0xc4>
 80102e8:	42bff736 	bltu	r8,r10,80102c8 <__alt_data_end+0xfc0102c8>
 80102ec:	52000326 	beq	r10,r8,80102fc <__gedf2+0xcc>
 80102f0:	5200042e 	bgeu	r10,r8,8010304 <__gedf2+0xd4>
 80102f4:	283fec1e 	bne	r5,zero,80102a8 <__alt_data_end+0xfc0102a8>
 80102f8:	003ff406 	br	80102cc <__alt_data_end+0xfc0102cc>
 80102fc:	313ff236 	bltu	r6,r4,80102c8 <__alt_data_end+0xfc0102c8>
 8010300:	21bffc36 	bltu	r4,r6,80102f4 <__alt_data_end+0xfc0102f4>
 8010304:	0005883a 	mov	r2,zero
 8010308:	f800283a 	ret

0801030c <__ledf2>:
 801030c:	2804d53a 	srli	r2,r5,20
 8010310:	3810d53a 	srli	r8,r7,20
 8010314:	00c00434 	movhi	r3,16
 8010318:	18ffffc4 	addi	r3,r3,-1
 801031c:	1081ffcc 	andi	r2,r2,2047
 8010320:	0241ffc4 	movi	r9,2047
 8010324:	28d4703a 	and	r10,r5,r3
 8010328:	4201ffcc 	andi	r8,r8,2047
 801032c:	38c6703a 	and	r3,r7,r3
 8010330:	280ad7fa 	srli	r5,r5,31
 8010334:	380ed7fa 	srli	r7,r7,31
 8010338:	12401f26 	beq	r2,r9,80103b8 <__ledf2+0xac>
 801033c:	0241ffc4 	movi	r9,2047
 8010340:	42401426 	beq	r8,r9,8010394 <__ledf2+0x88>
 8010344:	1000091e 	bne	r2,zero,801036c <__ledf2+0x60>
 8010348:	2296b03a 	or	r11,r4,r10
 801034c:	5813003a 	cmpeq	r9,r11,zero
 8010350:	29403fcc 	andi	r5,r5,255
 8010354:	40000a1e 	bne	r8,zero,8010380 <__ledf2+0x74>
 8010358:	30d8b03a 	or	r12,r6,r3
 801035c:	6000081e 	bne	r12,zero,8010380 <__ledf2+0x74>
 8010360:	0005883a 	mov	r2,zero
 8010364:	5800111e 	bne	r11,zero,80103ac <__ledf2+0xa0>
 8010368:	f800283a 	ret
 801036c:	29403fcc 	andi	r5,r5,255
 8010370:	40000c1e 	bne	r8,zero,80103a4 <__ledf2+0x98>
 8010374:	30d2b03a 	or	r9,r6,r3
 8010378:	48000c26 	beq	r9,zero,80103ac <__ledf2+0xa0>
 801037c:	0013883a 	mov	r9,zero
 8010380:	39c03fcc 	andi	r7,r7,255
 8010384:	48000826 	beq	r9,zero,80103a8 <__ledf2+0x9c>
 8010388:	38001126 	beq	r7,zero,80103d0 <__ledf2+0xc4>
 801038c:	00800044 	movi	r2,1
 8010390:	f800283a 	ret
 8010394:	30d2b03a 	or	r9,r6,r3
 8010398:	483fea26 	beq	r9,zero,8010344 <__alt_data_end+0xfc010344>
 801039c:	00800084 	movi	r2,2
 80103a0:	f800283a 	ret
 80103a4:	39c03fcc 	andi	r7,r7,255
 80103a8:	39400726 	beq	r7,r5,80103c8 <__ledf2+0xbc>
 80103ac:	2800081e 	bne	r5,zero,80103d0 <__ledf2+0xc4>
 80103b0:	00800044 	movi	r2,1
 80103b4:	f800283a 	ret
 80103b8:	2292b03a 	or	r9,r4,r10
 80103bc:	483fdf26 	beq	r9,zero,801033c <__alt_data_end+0xfc01033c>
 80103c0:	00800084 	movi	r2,2
 80103c4:	f800283a 	ret
 80103c8:	4080030e 	bge	r8,r2,80103d8 <__ledf2+0xcc>
 80103cc:	383fef26 	beq	r7,zero,801038c <__alt_data_end+0xfc01038c>
 80103d0:	00bfffc4 	movi	r2,-1
 80103d4:	f800283a 	ret
 80103d8:	123feb16 	blt	r2,r8,8010388 <__alt_data_end+0xfc010388>
 80103dc:	1abff336 	bltu	r3,r10,80103ac <__alt_data_end+0xfc0103ac>
 80103e0:	50c00326 	beq	r10,r3,80103f0 <__ledf2+0xe4>
 80103e4:	50c0042e 	bgeu	r10,r3,80103f8 <__ledf2+0xec>
 80103e8:	283fe81e 	bne	r5,zero,801038c <__alt_data_end+0xfc01038c>
 80103ec:	003ff806 	br	80103d0 <__alt_data_end+0xfc0103d0>
 80103f0:	313fee36 	bltu	r6,r4,80103ac <__alt_data_end+0xfc0103ac>
 80103f4:	21bffc36 	bltu	r4,r6,80103e8 <__alt_data_end+0xfc0103e8>
 80103f8:	0005883a 	mov	r2,zero
 80103fc:	f800283a 	ret

08010400 <__muldf3>:
 8010400:	deffee04 	addi	sp,sp,-72
 8010404:	dd000c15 	stw	r20,48(sp)
 8010408:	2828d53a 	srli	r20,r5,20
 801040c:	ddc00f15 	stw	r23,60(sp)
 8010410:	282ed7fa 	srli	r23,r5,31
 8010414:	dc000815 	stw	r16,32(sp)
 8010418:	04000434 	movhi	r16,16
 801041c:	dcc00b15 	stw	r19,44(sp)
 8010420:	843fffc4 	addi	r16,r16,-1
 8010424:	dfc01115 	stw	ra,68(sp)
 8010428:	df001015 	stw	fp,64(sp)
 801042c:	dd800e15 	stw	r22,56(sp)
 8010430:	dd400d15 	stw	r21,52(sp)
 8010434:	dc800a15 	stw	r18,40(sp)
 8010438:	dc400915 	stw	r17,36(sp)
 801043c:	a501ffcc 	andi	r20,r20,2047
 8010440:	2c20703a 	and	r16,r5,r16
 8010444:	b827883a 	mov	r19,r23
 8010448:	ba403fcc 	andi	r9,r23,255
 801044c:	a0006026 	beq	r20,zero,80105d0 <__muldf3+0x1d0>
 8010450:	0081ffc4 	movi	r2,2047
 8010454:	202d883a 	mov	r22,r4
 8010458:	a0803626 	beq	r20,r2,8010534 <__muldf3+0x134>
 801045c:	84000434 	orhi	r16,r16,16
 8010460:	200ad77a 	srli	r5,r4,29
 8010464:	800490fa 	slli	r2,r16,3
 8010468:	202c90fa 	slli	r22,r4,3
 801046c:	a53f0044 	addi	r20,r20,-1023
 8010470:	28a0b03a 	or	r16,r5,r2
 8010474:	002b883a 	mov	r21,zero
 8010478:	000b883a 	mov	r5,zero
 801047c:	3804d53a 	srli	r2,r7,20
 8010480:	3838d7fa 	srli	fp,r7,31
 8010484:	04400434 	movhi	r17,16
 8010488:	8c7fffc4 	addi	r17,r17,-1
 801048c:	1081ffcc 	andi	r2,r2,2047
 8010490:	3025883a 	mov	r18,r6
 8010494:	3c62703a 	and	r17,r7,r17
 8010498:	e2803fcc 	andi	r10,fp,255
 801049c:	10006d26 	beq	r2,zero,8010654 <__muldf3+0x254>
 80104a0:	00c1ffc4 	movi	r3,2047
 80104a4:	10c06526 	beq	r2,r3,801063c <__muldf3+0x23c>
 80104a8:	8c400434 	orhi	r17,r17,16
 80104ac:	300ed77a 	srli	r7,r6,29
 80104b0:	880690fa 	slli	r3,r17,3
 80104b4:	302490fa 	slli	r18,r6,3
 80104b8:	10bf0044 	addi	r2,r2,-1023
 80104bc:	38e2b03a 	or	r17,r7,r3
 80104c0:	000f883a 	mov	r7,zero
 80104c4:	a087883a 	add	r3,r20,r2
 80104c8:	010003c4 	movi	r4,15
 80104cc:	3d44b03a 	or	r2,r7,r21
 80104d0:	e5ccf03a 	xor	r6,fp,r23
 80104d4:	1a000044 	addi	r8,r3,1
 80104d8:	20809b36 	bltu	r4,r2,8010748 <__muldf3+0x348>
 80104dc:	100490ba 	slli	r2,r2,2
 80104e0:	01020074 	movhi	r4,2049
 80104e4:	21013d04 	addi	r4,r4,1268
 80104e8:	1105883a 	add	r2,r2,r4
 80104ec:	10800017 	ldw	r2,0(r2)
 80104f0:	1000683a 	jmp	r2
 80104f4:	08010748 	cmpgei	zero,at,1053
 80104f8:	08010554 	ori	zero,at,1045
 80104fc:	08010554 	ori	zero,at,1045
 8010500:	08010550 	cmplti	zero,at,1045
 8010504:	08010724 	muli	zero,at,1052
 8010508:	08010724 	muli	zero,at,1052
 801050c:	0801070c 	andi	zero,at,1052
 8010510:	08010550 	cmplti	zero,at,1045
 8010514:	08010724 	muli	zero,at,1052
 8010518:	0801070c 	andi	zero,at,1052
 801051c:	08010724 	muli	zero,at,1052
 8010520:	08010550 	cmplti	zero,at,1045
 8010524:	08010734 	orhi	zero,at,1052
 8010528:	08010734 	orhi	zero,at,1052
 801052c:	08010734 	orhi	zero,at,1052
 8010530:	08010a94 	ori	zero,at,1066
 8010534:	2404b03a 	or	r2,r4,r16
 8010538:	1000711e 	bne	r2,zero,8010700 <__muldf3+0x300>
 801053c:	05400204 	movi	r21,8
 8010540:	0021883a 	mov	r16,zero
 8010544:	002d883a 	mov	r22,zero
 8010548:	01400084 	movi	r5,2
 801054c:	003fcb06 	br	801047c <__alt_data_end+0xfc01047c>
 8010550:	500d883a 	mov	r6,r10
 8010554:	00800084 	movi	r2,2
 8010558:	38805926 	beq	r7,r2,80106c0 <__muldf3+0x2c0>
 801055c:	008000c4 	movi	r2,3
 8010560:	3881bb26 	beq	r7,r2,8010c50 <__muldf3+0x850>
 8010564:	00800044 	movi	r2,1
 8010568:	3881961e 	bne	r7,r2,8010bc4 <__muldf3+0x7c4>
 801056c:	3027883a 	mov	r19,r6
 8010570:	0005883a 	mov	r2,zero
 8010574:	0021883a 	mov	r16,zero
 8010578:	002d883a 	mov	r22,zero
 801057c:	1004953a 	slli	r2,r2,20
 8010580:	98c03fcc 	andi	r3,r19,255
 8010584:	04400434 	movhi	r17,16
 8010588:	8c7fffc4 	addi	r17,r17,-1
 801058c:	180697fa 	slli	r3,r3,31
 8010590:	8460703a 	and	r16,r16,r17
 8010594:	80a0b03a 	or	r16,r16,r2
 8010598:	80c6b03a 	or	r3,r16,r3
 801059c:	b005883a 	mov	r2,r22
 80105a0:	dfc01117 	ldw	ra,68(sp)
 80105a4:	df001017 	ldw	fp,64(sp)
 80105a8:	ddc00f17 	ldw	r23,60(sp)
 80105ac:	dd800e17 	ldw	r22,56(sp)
 80105b0:	dd400d17 	ldw	r21,52(sp)
 80105b4:	dd000c17 	ldw	r20,48(sp)
 80105b8:	dcc00b17 	ldw	r19,44(sp)
 80105bc:	dc800a17 	ldw	r18,40(sp)
 80105c0:	dc400917 	ldw	r17,36(sp)
 80105c4:	dc000817 	ldw	r16,32(sp)
 80105c8:	dec01204 	addi	sp,sp,72
 80105cc:	f800283a 	ret
 80105d0:	2404b03a 	or	r2,r4,r16
 80105d4:	202b883a 	mov	r21,r4
 80105d8:	10004426 	beq	r2,zero,80106ec <__muldf3+0x2ec>
 80105dc:	80015126 	beq	r16,zero,8010b24 <__muldf3+0x724>
 80105e0:	8009883a 	mov	r4,r16
 80105e4:	d9800715 	stw	r6,28(sp)
 80105e8:	d9c00215 	stw	r7,8(sp)
 80105ec:	da400415 	stw	r9,16(sp)
 80105f0:	801176c0 	call	801176c <__clzsi2>
 80105f4:	d9800717 	ldw	r6,28(sp)
 80105f8:	d9c00217 	ldw	r7,8(sp)
 80105fc:	da400417 	ldw	r9,16(sp)
 8010600:	113ffd44 	addi	r4,r2,-11
 8010604:	00c00704 	movi	r3,28
 8010608:	19014216 	blt	r3,r4,8010b14 <__muldf3+0x714>
 801060c:	00c00744 	movi	r3,29
 8010610:	15bffe04 	addi	r22,r2,-8
 8010614:	1907c83a 	sub	r3,r3,r4
 8010618:	85a0983a 	sll	r16,r16,r22
 801061c:	a8c6d83a 	srl	r3,r21,r3
 8010620:	adac983a 	sll	r22,r21,r22
 8010624:	1c20b03a 	or	r16,r3,r16
 8010628:	1080fcc4 	addi	r2,r2,1011
 801062c:	00a9c83a 	sub	r20,zero,r2
 8010630:	002b883a 	mov	r21,zero
 8010634:	000b883a 	mov	r5,zero
 8010638:	003f9006 	br	801047c <__alt_data_end+0xfc01047c>
 801063c:	3446b03a 	or	r3,r6,r17
 8010640:	1800281e 	bne	r3,zero,80106e4 <__muldf3+0x2e4>
 8010644:	0023883a 	mov	r17,zero
 8010648:	0025883a 	mov	r18,zero
 801064c:	01c00084 	movi	r7,2
 8010650:	003f9c06 	br	80104c4 <__alt_data_end+0xfc0104c4>
 8010654:	3446b03a 	or	r3,r6,r17
 8010658:	18001e26 	beq	r3,zero,80106d4 <__muldf3+0x2d4>
 801065c:	88012126 	beq	r17,zero,8010ae4 <__muldf3+0x6e4>
 8010660:	8809883a 	mov	r4,r17
 8010664:	d9400215 	stw	r5,8(sp)
 8010668:	d9800715 	stw	r6,28(sp)
 801066c:	da400415 	stw	r9,16(sp)
 8010670:	da800315 	stw	r10,12(sp)
 8010674:	801176c0 	call	801176c <__clzsi2>
 8010678:	d9400217 	ldw	r5,8(sp)
 801067c:	d9800717 	ldw	r6,28(sp)
 8010680:	da400417 	ldw	r9,16(sp)
 8010684:	da800317 	ldw	r10,12(sp)
 8010688:	113ffd44 	addi	r4,r2,-11
 801068c:	00c00704 	movi	r3,28
 8010690:	19011016 	blt	r3,r4,8010ad4 <__muldf3+0x6d4>
 8010694:	00c00744 	movi	r3,29
 8010698:	14bffe04 	addi	r18,r2,-8
 801069c:	1907c83a 	sub	r3,r3,r4
 80106a0:	8ca2983a 	sll	r17,r17,r18
 80106a4:	30c6d83a 	srl	r3,r6,r3
 80106a8:	34a4983a 	sll	r18,r6,r18
 80106ac:	1c62b03a 	or	r17,r3,r17
 80106b0:	1080fcc4 	addi	r2,r2,1011
 80106b4:	0085c83a 	sub	r2,zero,r2
 80106b8:	000f883a 	mov	r7,zero
 80106bc:	003f8106 	br	80104c4 <__alt_data_end+0xfc0104c4>
 80106c0:	3027883a 	mov	r19,r6
 80106c4:	0081ffc4 	movi	r2,2047
 80106c8:	0021883a 	mov	r16,zero
 80106cc:	002d883a 	mov	r22,zero
 80106d0:	003faa06 	br	801057c <__alt_data_end+0xfc01057c>
 80106d4:	0023883a 	mov	r17,zero
 80106d8:	0025883a 	mov	r18,zero
 80106dc:	01c00044 	movi	r7,1
 80106e0:	003f7806 	br	80104c4 <__alt_data_end+0xfc0104c4>
 80106e4:	01c000c4 	movi	r7,3
 80106e8:	003f7606 	br	80104c4 <__alt_data_end+0xfc0104c4>
 80106ec:	05400104 	movi	r21,4
 80106f0:	0021883a 	mov	r16,zero
 80106f4:	002d883a 	mov	r22,zero
 80106f8:	01400044 	movi	r5,1
 80106fc:	003f5f06 	br	801047c <__alt_data_end+0xfc01047c>
 8010700:	05400304 	movi	r21,12
 8010704:	014000c4 	movi	r5,3
 8010708:	003f5c06 	br	801047c <__alt_data_end+0xfc01047c>
 801070c:	04000434 	movhi	r16,16
 8010710:	0027883a 	mov	r19,zero
 8010714:	843fffc4 	addi	r16,r16,-1
 8010718:	05bfffc4 	movi	r22,-1
 801071c:	0081ffc4 	movi	r2,2047
 8010720:	003f9606 	br	801057c <__alt_data_end+0xfc01057c>
 8010724:	8023883a 	mov	r17,r16
 8010728:	b025883a 	mov	r18,r22
 801072c:	280f883a 	mov	r7,r5
 8010730:	003f8806 	br	8010554 <__alt_data_end+0xfc010554>
 8010734:	8023883a 	mov	r17,r16
 8010738:	b025883a 	mov	r18,r22
 801073c:	480d883a 	mov	r6,r9
 8010740:	280f883a 	mov	r7,r5
 8010744:	003f8306 	br	8010554 <__alt_data_end+0xfc010554>
 8010748:	b026d43a 	srli	r19,r22,16
 801074c:	902ed43a 	srli	r23,r18,16
 8010750:	b5bfffcc 	andi	r22,r22,65535
 8010754:	94bfffcc 	andi	r18,r18,65535
 8010758:	b00b883a 	mov	r5,r22
 801075c:	9009883a 	mov	r4,r18
 8010760:	d8c00515 	stw	r3,20(sp)
 8010764:	d9800715 	stw	r6,28(sp)
 8010768:	da000615 	stw	r8,24(sp)
 801076c:	80010a00 	call	80010a0 <__mulsi3>
 8010770:	980b883a 	mov	r5,r19
 8010774:	9009883a 	mov	r4,r18
 8010778:	1029883a 	mov	r20,r2
 801077c:	80010a00 	call	80010a0 <__mulsi3>
 8010780:	b80b883a 	mov	r5,r23
 8010784:	9809883a 	mov	r4,r19
 8010788:	102b883a 	mov	r21,r2
 801078c:	80010a00 	call	80010a0 <__mulsi3>
 8010790:	b809883a 	mov	r4,r23
 8010794:	b00b883a 	mov	r5,r22
 8010798:	1039883a 	mov	fp,r2
 801079c:	80010a00 	call	80010a0 <__mulsi3>
 80107a0:	a008d43a 	srli	r4,r20,16
 80107a4:	1545883a 	add	r2,r2,r21
 80107a8:	d8c00517 	ldw	r3,20(sp)
 80107ac:	2085883a 	add	r2,r4,r2
 80107b0:	d9800717 	ldw	r6,28(sp)
 80107b4:	da000617 	ldw	r8,24(sp)
 80107b8:	1540022e 	bgeu	r2,r21,80107c4 <__muldf3+0x3c4>
 80107bc:	01000074 	movhi	r4,1
 80107c0:	e139883a 	add	fp,fp,r4
 80107c4:	100e943a 	slli	r7,r2,16
 80107c8:	1004d43a 	srli	r2,r2,16
 80107cc:	882ad43a 	srli	r21,r17,16
 80107d0:	a53fffcc 	andi	r20,r20,65535
 80107d4:	8c7fffcc 	andi	r17,r17,65535
 80107d8:	3d29883a 	add	r20,r7,r20
 80107dc:	b00b883a 	mov	r5,r22
 80107e0:	8809883a 	mov	r4,r17
 80107e4:	d8c00515 	stw	r3,20(sp)
 80107e8:	d9800715 	stw	r6,28(sp)
 80107ec:	da000615 	stw	r8,24(sp)
 80107f0:	dd000115 	stw	r20,4(sp)
 80107f4:	d8800015 	stw	r2,0(sp)
 80107f8:	80010a00 	call	80010a0 <__mulsi3>
 80107fc:	980b883a 	mov	r5,r19
 8010800:	8809883a 	mov	r4,r17
 8010804:	d8800215 	stw	r2,8(sp)
 8010808:	80010a00 	call	80010a0 <__mulsi3>
 801080c:	9809883a 	mov	r4,r19
 8010810:	a80b883a 	mov	r5,r21
 8010814:	1029883a 	mov	r20,r2
 8010818:	80010a00 	call	80010a0 <__mulsi3>
 801081c:	b00b883a 	mov	r5,r22
 8010820:	a809883a 	mov	r4,r21
 8010824:	d8800415 	stw	r2,16(sp)
 8010828:	80010a00 	call	80010a0 <__mulsi3>
 801082c:	d9c00217 	ldw	r7,8(sp)
 8010830:	1505883a 	add	r2,r2,r20
 8010834:	d8c00517 	ldw	r3,20(sp)
 8010838:	3826d43a 	srli	r19,r7,16
 801083c:	d9800717 	ldw	r6,28(sp)
 8010840:	da000617 	ldw	r8,24(sp)
 8010844:	9885883a 	add	r2,r19,r2
 8010848:	da400417 	ldw	r9,16(sp)
 801084c:	1500022e 	bgeu	r2,r20,8010858 <__muldf3+0x458>
 8010850:	01000074 	movhi	r4,1
 8010854:	4913883a 	add	r9,r9,r4
 8010858:	1028d43a 	srli	r20,r2,16
 801085c:	1004943a 	slli	r2,r2,16
 8010860:	802cd43a 	srli	r22,r16,16
 8010864:	843fffcc 	andi	r16,r16,65535
 8010868:	3cffffcc 	andi	r19,r7,65535
 801086c:	9009883a 	mov	r4,r18
 8010870:	800b883a 	mov	r5,r16
 8010874:	a269883a 	add	r20,r20,r9
 8010878:	d8c00515 	stw	r3,20(sp)
 801087c:	d9800715 	stw	r6,28(sp)
 8010880:	da000615 	stw	r8,24(sp)
 8010884:	14e7883a 	add	r19,r2,r19
 8010888:	80010a00 	call	80010a0 <__mulsi3>
 801088c:	9009883a 	mov	r4,r18
 8010890:	b00b883a 	mov	r5,r22
 8010894:	d8800315 	stw	r2,12(sp)
 8010898:	80010a00 	call	80010a0 <__mulsi3>
 801089c:	b809883a 	mov	r4,r23
 80108a0:	b00b883a 	mov	r5,r22
 80108a4:	d8800215 	stw	r2,8(sp)
 80108a8:	80010a00 	call	80010a0 <__mulsi3>
 80108ac:	b80b883a 	mov	r5,r23
 80108b0:	8009883a 	mov	r4,r16
 80108b4:	d8800415 	stw	r2,16(sp)
 80108b8:	80010a00 	call	80010a0 <__mulsi3>
 80108bc:	da800317 	ldw	r10,12(sp)
 80108c0:	d9c00217 	ldw	r7,8(sp)
 80108c4:	d9000017 	ldw	r4,0(sp)
 80108c8:	502ed43a 	srli	r23,r10,16
 80108cc:	11c5883a 	add	r2,r2,r7
 80108d0:	24e5883a 	add	r18,r4,r19
 80108d4:	b885883a 	add	r2,r23,r2
 80108d8:	d8c00517 	ldw	r3,20(sp)
 80108dc:	d9800717 	ldw	r6,28(sp)
 80108e0:	da000617 	ldw	r8,24(sp)
 80108e4:	da400417 	ldw	r9,16(sp)
 80108e8:	11c0022e 	bgeu	r2,r7,80108f4 <__muldf3+0x4f4>
 80108ec:	01000074 	movhi	r4,1
 80108f0:	4913883a 	add	r9,r9,r4
 80108f4:	100ed43a 	srli	r7,r2,16
 80108f8:	1004943a 	slli	r2,r2,16
 80108fc:	55ffffcc 	andi	r23,r10,65535
 8010900:	3a53883a 	add	r9,r7,r9
 8010904:	8809883a 	mov	r4,r17
 8010908:	800b883a 	mov	r5,r16
 801090c:	d8c00515 	stw	r3,20(sp)
 8010910:	d9800715 	stw	r6,28(sp)
 8010914:	da000615 	stw	r8,24(sp)
 8010918:	da400415 	stw	r9,16(sp)
 801091c:	15ef883a 	add	r23,r2,r23
 8010920:	80010a00 	call	80010a0 <__mulsi3>
 8010924:	8809883a 	mov	r4,r17
 8010928:	b00b883a 	mov	r5,r22
 801092c:	d8800215 	stw	r2,8(sp)
 8010930:	80010a00 	call	80010a0 <__mulsi3>
 8010934:	b00b883a 	mov	r5,r22
 8010938:	a809883a 	mov	r4,r21
 801093c:	d8800315 	stw	r2,12(sp)
 8010940:	80010a00 	call	80010a0 <__mulsi3>
 8010944:	8009883a 	mov	r4,r16
 8010948:	a80b883a 	mov	r5,r21
 801094c:	1023883a 	mov	r17,r2
 8010950:	80010a00 	call	80010a0 <__mulsi3>
 8010954:	d9c00217 	ldw	r7,8(sp)
 8010958:	da800317 	ldw	r10,12(sp)
 801095c:	d8c00517 	ldw	r3,20(sp)
 8010960:	3808d43a 	srli	r4,r7,16
 8010964:	1285883a 	add	r2,r2,r10
 8010968:	d9800717 	ldw	r6,28(sp)
 801096c:	2085883a 	add	r2,r4,r2
 8010970:	da000617 	ldw	r8,24(sp)
 8010974:	da400417 	ldw	r9,16(sp)
 8010978:	1280022e 	bgeu	r2,r10,8010984 <__muldf3+0x584>
 801097c:	01000074 	movhi	r4,1
 8010980:	8923883a 	add	r17,r17,r4
 8010984:	1008943a 	slli	r4,r2,16
 8010988:	39ffffcc 	andi	r7,r7,65535
 801098c:	e4b9883a 	add	fp,fp,r18
 8010990:	21cf883a 	add	r7,r4,r7
 8010994:	e4e7803a 	cmpltu	r19,fp,r19
 8010998:	3d0f883a 	add	r7,r7,r20
 801099c:	bf39883a 	add	fp,r23,fp
 80109a0:	99c9883a 	add	r4,r19,r7
 80109a4:	e5ef803a 	cmpltu	r23,fp,r23
 80109a8:	490b883a 	add	r5,r9,r4
 80109ac:	1004d43a 	srli	r2,r2,16
 80109b0:	b965883a 	add	r18,r23,r5
 80109b4:	24c9803a 	cmpltu	r4,r4,r19
 80109b8:	3d29803a 	cmpltu	r20,r7,r20
 80109bc:	a128b03a 	or	r20,r20,r4
 80109c0:	95ef803a 	cmpltu	r23,r18,r23
 80109c4:	2a53803a 	cmpltu	r9,r5,r9
 80109c8:	a0a9883a 	add	r20,r20,r2
 80109cc:	4deeb03a 	or	r23,r9,r23
 80109d0:	a5ef883a 	add	r23,r20,r23
 80109d4:	bc63883a 	add	r17,r23,r17
 80109d8:	e004927a 	slli	r2,fp,9
 80109dc:	d9000117 	ldw	r4,4(sp)
 80109e0:	882e927a 	slli	r23,r17,9
 80109e4:	9022d5fa 	srli	r17,r18,23
 80109e8:	e038d5fa 	srli	fp,fp,23
 80109ec:	1104b03a 	or	r2,r2,r4
 80109f0:	9024927a 	slli	r18,r18,9
 80109f4:	1004c03a 	cmpne	r2,r2,zero
 80109f8:	bc62b03a 	or	r17,r23,r17
 80109fc:	1738b03a 	or	fp,r2,fp
 8010a00:	8880402c 	andhi	r2,r17,256
 8010a04:	e4a4b03a 	or	r18,fp,r18
 8010a08:	10000726 	beq	r2,zero,8010a28 <__muldf3+0x628>
 8010a0c:	9006d07a 	srli	r3,r18,1
 8010a10:	880497fa 	slli	r2,r17,31
 8010a14:	9480004c 	andi	r18,r18,1
 8010a18:	8822d07a 	srli	r17,r17,1
 8010a1c:	1ca4b03a 	or	r18,r3,r18
 8010a20:	14a4b03a 	or	r18,r2,r18
 8010a24:	4007883a 	mov	r3,r8
 8010a28:	1880ffc4 	addi	r2,r3,1023
 8010a2c:	0080460e 	bge	zero,r2,8010b48 <__muldf3+0x748>
 8010a30:	910001cc 	andi	r4,r18,7
 8010a34:	20000726 	beq	r4,zero,8010a54 <__muldf3+0x654>
 8010a38:	910003cc 	andi	r4,r18,15
 8010a3c:	01400104 	movi	r5,4
 8010a40:	21400426 	beq	r4,r5,8010a54 <__muldf3+0x654>
 8010a44:	9149883a 	add	r4,r18,r5
 8010a48:	24a5803a 	cmpltu	r18,r4,r18
 8010a4c:	8ca3883a 	add	r17,r17,r18
 8010a50:	2025883a 	mov	r18,r4
 8010a54:	8900402c 	andhi	r4,r17,256
 8010a58:	20000426 	beq	r4,zero,8010a6c <__muldf3+0x66c>
 8010a5c:	18810004 	addi	r2,r3,1024
 8010a60:	00ffc034 	movhi	r3,65280
 8010a64:	18ffffc4 	addi	r3,r3,-1
 8010a68:	88e2703a 	and	r17,r17,r3
 8010a6c:	00c1ff84 	movi	r3,2046
 8010a70:	18bf1316 	blt	r3,r2,80106c0 <__alt_data_end+0xfc0106c0>
 8010a74:	882c977a 	slli	r22,r17,29
 8010a78:	9024d0fa 	srli	r18,r18,3
 8010a7c:	8822927a 	slli	r17,r17,9
 8010a80:	1081ffcc 	andi	r2,r2,2047
 8010a84:	b4acb03a 	or	r22,r22,r18
 8010a88:	8820d33a 	srli	r16,r17,12
 8010a8c:	3027883a 	mov	r19,r6
 8010a90:	003eba06 	br	801057c <__alt_data_end+0xfc01057c>
 8010a94:	8080022c 	andhi	r2,r16,8
 8010a98:	10000926 	beq	r2,zero,8010ac0 <__muldf3+0x6c0>
 8010a9c:	8880022c 	andhi	r2,r17,8
 8010aa0:	1000071e 	bne	r2,zero,8010ac0 <__muldf3+0x6c0>
 8010aa4:	00800434 	movhi	r2,16
 8010aa8:	8c000234 	orhi	r16,r17,8
 8010aac:	10bfffc4 	addi	r2,r2,-1
 8010ab0:	e027883a 	mov	r19,fp
 8010ab4:	80a0703a 	and	r16,r16,r2
 8010ab8:	902d883a 	mov	r22,r18
 8010abc:	003f1706 	br	801071c <__alt_data_end+0xfc01071c>
 8010ac0:	00800434 	movhi	r2,16
 8010ac4:	84000234 	orhi	r16,r16,8
 8010ac8:	10bfffc4 	addi	r2,r2,-1
 8010acc:	80a0703a 	and	r16,r16,r2
 8010ad0:	003f1206 	br	801071c <__alt_data_end+0xfc01071c>
 8010ad4:	147ff604 	addi	r17,r2,-40
 8010ad8:	3462983a 	sll	r17,r6,r17
 8010adc:	0025883a 	mov	r18,zero
 8010ae0:	003ef306 	br	80106b0 <__alt_data_end+0xfc0106b0>
 8010ae4:	3009883a 	mov	r4,r6
 8010ae8:	d9400215 	stw	r5,8(sp)
 8010aec:	d9800715 	stw	r6,28(sp)
 8010af0:	da400415 	stw	r9,16(sp)
 8010af4:	da800315 	stw	r10,12(sp)
 8010af8:	801176c0 	call	801176c <__clzsi2>
 8010afc:	10800804 	addi	r2,r2,32
 8010b00:	da800317 	ldw	r10,12(sp)
 8010b04:	da400417 	ldw	r9,16(sp)
 8010b08:	d9800717 	ldw	r6,28(sp)
 8010b0c:	d9400217 	ldw	r5,8(sp)
 8010b10:	003edd06 	br	8010688 <__alt_data_end+0xfc010688>
 8010b14:	143ff604 	addi	r16,r2,-40
 8010b18:	ac20983a 	sll	r16,r21,r16
 8010b1c:	002d883a 	mov	r22,zero
 8010b20:	003ec106 	br	8010628 <__alt_data_end+0xfc010628>
 8010b24:	d9800715 	stw	r6,28(sp)
 8010b28:	d9c00215 	stw	r7,8(sp)
 8010b2c:	da400415 	stw	r9,16(sp)
 8010b30:	801176c0 	call	801176c <__clzsi2>
 8010b34:	10800804 	addi	r2,r2,32
 8010b38:	da400417 	ldw	r9,16(sp)
 8010b3c:	d9c00217 	ldw	r7,8(sp)
 8010b40:	d9800717 	ldw	r6,28(sp)
 8010b44:	003eae06 	br	8010600 <__alt_data_end+0xfc010600>
 8010b48:	00c00044 	movi	r3,1
 8010b4c:	1887c83a 	sub	r3,r3,r2
 8010b50:	01000e04 	movi	r4,56
 8010b54:	20fe8516 	blt	r4,r3,801056c <__alt_data_end+0xfc01056c>
 8010b58:	010007c4 	movi	r4,31
 8010b5c:	20c01b16 	blt	r4,r3,8010bcc <__muldf3+0x7cc>
 8010b60:	00800804 	movi	r2,32
 8010b64:	10c5c83a 	sub	r2,r2,r3
 8010b68:	888a983a 	sll	r5,r17,r2
 8010b6c:	90c8d83a 	srl	r4,r18,r3
 8010b70:	9084983a 	sll	r2,r18,r2
 8010b74:	88e2d83a 	srl	r17,r17,r3
 8010b78:	2906b03a 	or	r3,r5,r4
 8010b7c:	1004c03a 	cmpne	r2,r2,zero
 8010b80:	1886b03a 	or	r3,r3,r2
 8010b84:	188001cc 	andi	r2,r3,7
 8010b88:	10000726 	beq	r2,zero,8010ba8 <__muldf3+0x7a8>
 8010b8c:	188003cc 	andi	r2,r3,15
 8010b90:	01000104 	movi	r4,4
 8010b94:	11000426 	beq	r2,r4,8010ba8 <__muldf3+0x7a8>
 8010b98:	1805883a 	mov	r2,r3
 8010b9c:	10c00104 	addi	r3,r2,4
 8010ba0:	1885803a 	cmpltu	r2,r3,r2
 8010ba4:	88a3883a 	add	r17,r17,r2
 8010ba8:	8880202c 	andhi	r2,r17,128
 8010bac:	10001c26 	beq	r2,zero,8010c20 <__muldf3+0x820>
 8010bb0:	3027883a 	mov	r19,r6
 8010bb4:	00800044 	movi	r2,1
 8010bb8:	0021883a 	mov	r16,zero
 8010bbc:	002d883a 	mov	r22,zero
 8010bc0:	003e6e06 	br	801057c <__alt_data_end+0xfc01057c>
 8010bc4:	4007883a 	mov	r3,r8
 8010bc8:	003f9706 	br	8010a28 <__alt_data_end+0xfc010a28>
 8010bcc:	017ff844 	movi	r5,-31
 8010bd0:	2885c83a 	sub	r2,r5,r2
 8010bd4:	888ad83a 	srl	r5,r17,r2
 8010bd8:	00800804 	movi	r2,32
 8010bdc:	18801a26 	beq	r3,r2,8010c48 <__muldf3+0x848>
 8010be0:	01001004 	movi	r4,64
 8010be4:	20c7c83a 	sub	r3,r4,r3
 8010be8:	88e2983a 	sll	r17,r17,r3
 8010bec:	8ca4b03a 	or	r18,r17,r18
 8010bf0:	9004c03a 	cmpne	r2,r18,zero
 8010bf4:	2884b03a 	or	r2,r5,r2
 8010bf8:	144001cc 	andi	r17,r2,7
 8010bfc:	88000d1e 	bne	r17,zero,8010c34 <__muldf3+0x834>
 8010c00:	0021883a 	mov	r16,zero
 8010c04:	102cd0fa 	srli	r22,r2,3
 8010c08:	3027883a 	mov	r19,r6
 8010c0c:	0005883a 	mov	r2,zero
 8010c10:	b46cb03a 	or	r22,r22,r17
 8010c14:	003e5906 	br	801057c <__alt_data_end+0xfc01057c>
 8010c18:	1007883a 	mov	r3,r2
 8010c1c:	0023883a 	mov	r17,zero
 8010c20:	8820927a 	slli	r16,r17,9
 8010c24:	1805883a 	mov	r2,r3
 8010c28:	8822977a 	slli	r17,r17,29
 8010c2c:	8020d33a 	srli	r16,r16,12
 8010c30:	003ff406 	br	8010c04 <__alt_data_end+0xfc010c04>
 8010c34:	10c003cc 	andi	r3,r2,15
 8010c38:	01000104 	movi	r4,4
 8010c3c:	193ff626 	beq	r3,r4,8010c18 <__alt_data_end+0xfc010c18>
 8010c40:	0023883a 	mov	r17,zero
 8010c44:	003fd506 	br	8010b9c <__alt_data_end+0xfc010b9c>
 8010c48:	0023883a 	mov	r17,zero
 8010c4c:	003fe706 	br	8010bec <__alt_data_end+0xfc010bec>
 8010c50:	00800434 	movhi	r2,16
 8010c54:	8c000234 	orhi	r16,r17,8
 8010c58:	10bfffc4 	addi	r2,r2,-1
 8010c5c:	3027883a 	mov	r19,r6
 8010c60:	80a0703a 	and	r16,r16,r2
 8010c64:	902d883a 	mov	r22,r18
 8010c68:	003eac06 	br	801071c <__alt_data_end+0xfc01071c>

08010c6c <__subdf3>:
 8010c6c:	02000434 	movhi	r8,16
 8010c70:	423fffc4 	addi	r8,r8,-1
 8010c74:	defffb04 	addi	sp,sp,-20
 8010c78:	2a14703a 	and	r10,r5,r8
 8010c7c:	3812d53a 	srli	r9,r7,20
 8010c80:	3a10703a 	and	r8,r7,r8
 8010c84:	2006d77a 	srli	r3,r4,29
 8010c88:	3004d77a 	srli	r2,r6,29
 8010c8c:	dc000015 	stw	r16,0(sp)
 8010c90:	501490fa 	slli	r10,r10,3
 8010c94:	2820d53a 	srli	r16,r5,20
 8010c98:	401090fa 	slli	r8,r8,3
 8010c9c:	dc800215 	stw	r18,8(sp)
 8010ca0:	dc400115 	stw	r17,4(sp)
 8010ca4:	dfc00415 	stw	ra,16(sp)
 8010ca8:	202290fa 	slli	r17,r4,3
 8010cac:	dcc00315 	stw	r19,12(sp)
 8010cb0:	4a41ffcc 	andi	r9,r9,2047
 8010cb4:	0101ffc4 	movi	r4,2047
 8010cb8:	2824d7fa 	srli	r18,r5,31
 8010cbc:	8401ffcc 	andi	r16,r16,2047
 8010cc0:	50c6b03a 	or	r3,r10,r3
 8010cc4:	380ed7fa 	srli	r7,r7,31
 8010cc8:	408ab03a 	or	r5,r8,r2
 8010ccc:	300c90fa 	slli	r6,r6,3
 8010cd0:	49009626 	beq	r9,r4,8010f2c <__subdf3+0x2c0>
 8010cd4:	39c0005c 	xori	r7,r7,1
 8010cd8:	8245c83a 	sub	r2,r16,r9
 8010cdc:	3c807426 	beq	r7,r18,8010eb0 <__subdf3+0x244>
 8010ce0:	0080af0e 	bge	zero,r2,8010fa0 <__subdf3+0x334>
 8010ce4:	48002a1e 	bne	r9,zero,8010d90 <__subdf3+0x124>
 8010ce8:	2988b03a 	or	r4,r5,r6
 8010cec:	20009a1e 	bne	r4,zero,8010f58 <__subdf3+0x2ec>
 8010cf0:	888001cc 	andi	r2,r17,7
 8010cf4:	10000726 	beq	r2,zero,8010d14 <__subdf3+0xa8>
 8010cf8:	888003cc 	andi	r2,r17,15
 8010cfc:	01000104 	movi	r4,4
 8010d00:	11000426 	beq	r2,r4,8010d14 <__subdf3+0xa8>
 8010d04:	890b883a 	add	r5,r17,r4
 8010d08:	2c63803a 	cmpltu	r17,r5,r17
 8010d0c:	1c47883a 	add	r3,r3,r17
 8010d10:	2823883a 	mov	r17,r5
 8010d14:	1880202c 	andhi	r2,r3,128
 8010d18:	10005926 	beq	r2,zero,8010e80 <__subdf3+0x214>
 8010d1c:	84000044 	addi	r16,r16,1
 8010d20:	0081ffc4 	movi	r2,2047
 8010d24:	8080be26 	beq	r16,r2,8011020 <__subdf3+0x3b4>
 8010d28:	017fe034 	movhi	r5,65408
 8010d2c:	297fffc4 	addi	r5,r5,-1
 8010d30:	1946703a 	and	r3,r3,r5
 8010d34:	1804977a 	slli	r2,r3,29
 8010d38:	1806927a 	slli	r3,r3,9
 8010d3c:	8822d0fa 	srli	r17,r17,3
 8010d40:	8401ffcc 	andi	r16,r16,2047
 8010d44:	180ad33a 	srli	r5,r3,12
 8010d48:	9100004c 	andi	r4,r18,1
 8010d4c:	1444b03a 	or	r2,r2,r17
 8010d50:	80c1ffcc 	andi	r3,r16,2047
 8010d54:	1820953a 	slli	r16,r3,20
 8010d58:	20c03fcc 	andi	r3,r4,255
 8010d5c:	180897fa 	slli	r4,r3,31
 8010d60:	00c00434 	movhi	r3,16
 8010d64:	18ffffc4 	addi	r3,r3,-1
 8010d68:	28c6703a 	and	r3,r5,r3
 8010d6c:	1c06b03a 	or	r3,r3,r16
 8010d70:	1906b03a 	or	r3,r3,r4
 8010d74:	dfc00417 	ldw	ra,16(sp)
 8010d78:	dcc00317 	ldw	r19,12(sp)
 8010d7c:	dc800217 	ldw	r18,8(sp)
 8010d80:	dc400117 	ldw	r17,4(sp)
 8010d84:	dc000017 	ldw	r16,0(sp)
 8010d88:	dec00504 	addi	sp,sp,20
 8010d8c:	f800283a 	ret
 8010d90:	0101ffc4 	movi	r4,2047
 8010d94:	813fd626 	beq	r16,r4,8010cf0 <__alt_data_end+0xfc010cf0>
 8010d98:	29402034 	orhi	r5,r5,128
 8010d9c:	01000e04 	movi	r4,56
 8010da0:	2080a316 	blt	r4,r2,8011030 <__subdf3+0x3c4>
 8010da4:	010007c4 	movi	r4,31
 8010da8:	2080c616 	blt	r4,r2,80110c4 <__subdf3+0x458>
 8010dac:	01000804 	movi	r4,32
 8010db0:	2089c83a 	sub	r4,r4,r2
 8010db4:	2910983a 	sll	r8,r5,r4
 8010db8:	308ed83a 	srl	r7,r6,r2
 8010dbc:	3108983a 	sll	r4,r6,r4
 8010dc0:	2884d83a 	srl	r2,r5,r2
 8010dc4:	41ccb03a 	or	r6,r8,r7
 8010dc8:	2008c03a 	cmpne	r4,r4,zero
 8010dcc:	310cb03a 	or	r6,r6,r4
 8010dd0:	898dc83a 	sub	r6,r17,r6
 8010dd4:	89a3803a 	cmpltu	r17,r17,r6
 8010dd8:	1887c83a 	sub	r3,r3,r2
 8010ddc:	1c47c83a 	sub	r3,r3,r17
 8010de0:	3023883a 	mov	r17,r6
 8010de4:	1880202c 	andhi	r2,r3,128
 8010de8:	10002326 	beq	r2,zero,8010e78 <__subdf3+0x20c>
 8010dec:	04c02034 	movhi	r19,128
 8010df0:	9cffffc4 	addi	r19,r19,-1
 8010df4:	1ce6703a 	and	r19,r3,r19
 8010df8:	98007a26 	beq	r19,zero,8010fe4 <__subdf3+0x378>
 8010dfc:	9809883a 	mov	r4,r19
 8010e00:	801176c0 	call	801176c <__clzsi2>
 8010e04:	113ffe04 	addi	r4,r2,-8
 8010e08:	00c007c4 	movi	r3,31
 8010e0c:	19007b16 	blt	r3,r4,8010ffc <__subdf3+0x390>
 8010e10:	00800804 	movi	r2,32
 8010e14:	1105c83a 	sub	r2,r2,r4
 8010e18:	8884d83a 	srl	r2,r17,r2
 8010e1c:	9906983a 	sll	r3,r19,r4
 8010e20:	8922983a 	sll	r17,r17,r4
 8010e24:	10c4b03a 	or	r2,r2,r3
 8010e28:	24007816 	blt	r4,r16,801100c <__subdf3+0x3a0>
 8010e2c:	2421c83a 	sub	r16,r4,r16
 8010e30:	80c00044 	addi	r3,r16,1
 8010e34:	010007c4 	movi	r4,31
 8010e38:	20c09516 	blt	r4,r3,8011090 <__subdf3+0x424>
 8010e3c:	01400804 	movi	r5,32
 8010e40:	28cbc83a 	sub	r5,r5,r3
 8010e44:	88c8d83a 	srl	r4,r17,r3
 8010e48:	8962983a 	sll	r17,r17,r5
 8010e4c:	114a983a 	sll	r5,r2,r5
 8010e50:	10c6d83a 	srl	r3,r2,r3
 8010e54:	8804c03a 	cmpne	r2,r17,zero
 8010e58:	290ab03a 	or	r5,r5,r4
 8010e5c:	28a2b03a 	or	r17,r5,r2
 8010e60:	0021883a 	mov	r16,zero
 8010e64:	003fa206 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8010e68:	2090b03a 	or	r8,r4,r2
 8010e6c:	40018e26 	beq	r8,zero,80114a8 <__subdf3+0x83c>
 8010e70:	1007883a 	mov	r3,r2
 8010e74:	2023883a 	mov	r17,r4
 8010e78:	888001cc 	andi	r2,r17,7
 8010e7c:	103f9e1e 	bne	r2,zero,8010cf8 <__alt_data_end+0xfc010cf8>
 8010e80:	1804977a 	slli	r2,r3,29
 8010e84:	8822d0fa 	srli	r17,r17,3
 8010e88:	1810d0fa 	srli	r8,r3,3
 8010e8c:	9100004c 	andi	r4,r18,1
 8010e90:	1444b03a 	or	r2,r2,r17
 8010e94:	00c1ffc4 	movi	r3,2047
 8010e98:	80c02826 	beq	r16,r3,8010f3c <__subdf3+0x2d0>
 8010e9c:	01400434 	movhi	r5,16
 8010ea0:	297fffc4 	addi	r5,r5,-1
 8010ea4:	80e0703a 	and	r16,r16,r3
 8010ea8:	414a703a 	and	r5,r8,r5
 8010eac:	003fa806 	br	8010d50 <__alt_data_end+0xfc010d50>
 8010eb0:	0080630e 	bge	zero,r2,8011040 <__subdf3+0x3d4>
 8010eb4:	48003026 	beq	r9,zero,8010f78 <__subdf3+0x30c>
 8010eb8:	0101ffc4 	movi	r4,2047
 8010ebc:	813f8c26 	beq	r16,r4,8010cf0 <__alt_data_end+0xfc010cf0>
 8010ec0:	29402034 	orhi	r5,r5,128
 8010ec4:	01000e04 	movi	r4,56
 8010ec8:	2080a90e 	bge	r4,r2,8011170 <__subdf3+0x504>
 8010ecc:	298cb03a 	or	r6,r5,r6
 8010ed0:	3012c03a 	cmpne	r9,r6,zero
 8010ed4:	0005883a 	mov	r2,zero
 8010ed8:	4c53883a 	add	r9,r9,r17
 8010edc:	4c63803a 	cmpltu	r17,r9,r17
 8010ee0:	10c7883a 	add	r3,r2,r3
 8010ee4:	88c7883a 	add	r3,r17,r3
 8010ee8:	4823883a 	mov	r17,r9
 8010eec:	1880202c 	andhi	r2,r3,128
 8010ef0:	1000d026 	beq	r2,zero,8011234 <__subdf3+0x5c8>
 8010ef4:	84000044 	addi	r16,r16,1
 8010ef8:	0081ffc4 	movi	r2,2047
 8010efc:	8080fe26 	beq	r16,r2,80112f8 <__subdf3+0x68c>
 8010f00:	00bfe034 	movhi	r2,65408
 8010f04:	10bfffc4 	addi	r2,r2,-1
 8010f08:	1886703a 	and	r3,r3,r2
 8010f0c:	880ad07a 	srli	r5,r17,1
 8010f10:	180497fa 	slli	r2,r3,31
 8010f14:	8900004c 	andi	r4,r17,1
 8010f18:	2922b03a 	or	r17,r5,r4
 8010f1c:	1806d07a 	srli	r3,r3,1
 8010f20:	1462b03a 	or	r17,r2,r17
 8010f24:	3825883a 	mov	r18,r7
 8010f28:	003f7106 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8010f2c:	2984b03a 	or	r2,r5,r6
 8010f30:	103f6826 	beq	r2,zero,8010cd4 <__alt_data_end+0xfc010cd4>
 8010f34:	39c03fcc 	andi	r7,r7,255
 8010f38:	003f6706 	br	8010cd8 <__alt_data_end+0xfc010cd8>
 8010f3c:	4086b03a 	or	r3,r8,r2
 8010f40:	18015226 	beq	r3,zero,801148c <__subdf3+0x820>
 8010f44:	00c00434 	movhi	r3,16
 8010f48:	41400234 	orhi	r5,r8,8
 8010f4c:	18ffffc4 	addi	r3,r3,-1
 8010f50:	28ca703a 	and	r5,r5,r3
 8010f54:	003f7e06 	br	8010d50 <__alt_data_end+0xfc010d50>
 8010f58:	10bfffc4 	addi	r2,r2,-1
 8010f5c:	1000491e 	bne	r2,zero,8011084 <__subdf3+0x418>
 8010f60:	898fc83a 	sub	r7,r17,r6
 8010f64:	89e3803a 	cmpltu	r17,r17,r7
 8010f68:	1947c83a 	sub	r3,r3,r5
 8010f6c:	1c47c83a 	sub	r3,r3,r17
 8010f70:	3823883a 	mov	r17,r7
 8010f74:	003f9b06 	br	8010de4 <__alt_data_end+0xfc010de4>
 8010f78:	2988b03a 	or	r4,r5,r6
 8010f7c:	203f5c26 	beq	r4,zero,8010cf0 <__alt_data_end+0xfc010cf0>
 8010f80:	10bfffc4 	addi	r2,r2,-1
 8010f84:	1000931e 	bne	r2,zero,80111d4 <__subdf3+0x568>
 8010f88:	898d883a 	add	r6,r17,r6
 8010f8c:	3463803a 	cmpltu	r17,r6,r17
 8010f90:	1947883a 	add	r3,r3,r5
 8010f94:	88c7883a 	add	r3,r17,r3
 8010f98:	3023883a 	mov	r17,r6
 8010f9c:	003fd306 	br	8010eec <__alt_data_end+0xfc010eec>
 8010fa0:	1000541e 	bne	r2,zero,80110f4 <__subdf3+0x488>
 8010fa4:	80800044 	addi	r2,r16,1
 8010fa8:	1081ffcc 	andi	r2,r2,2047
 8010fac:	01000044 	movi	r4,1
 8010fb0:	2080a20e 	bge	r4,r2,801123c <__subdf3+0x5d0>
 8010fb4:	8989c83a 	sub	r4,r17,r6
 8010fb8:	8905803a 	cmpltu	r2,r17,r4
 8010fbc:	1967c83a 	sub	r19,r3,r5
 8010fc0:	98a7c83a 	sub	r19,r19,r2
 8010fc4:	9880202c 	andhi	r2,r19,128
 8010fc8:	10006326 	beq	r2,zero,8011158 <__subdf3+0x4ec>
 8010fcc:	3463c83a 	sub	r17,r6,r17
 8010fd0:	28c7c83a 	sub	r3,r5,r3
 8010fd4:	344d803a 	cmpltu	r6,r6,r17
 8010fd8:	19a7c83a 	sub	r19,r3,r6
 8010fdc:	3825883a 	mov	r18,r7
 8010fe0:	983f861e 	bne	r19,zero,8010dfc <__alt_data_end+0xfc010dfc>
 8010fe4:	8809883a 	mov	r4,r17
 8010fe8:	801176c0 	call	801176c <__clzsi2>
 8010fec:	10800804 	addi	r2,r2,32
 8010ff0:	113ffe04 	addi	r4,r2,-8
 8010ff4:	00c007c4 	movi	r3,31
 8010ff8:	193f850e 	bge	r3,r4,8010e10 <__alt_data_end+0xfc010e10>
 8010ffc:	10bff604 	addi	r2,r2,-40
 8011000:	8884983a 	sll	r2,r17,r2
 8011004:	0023883a 	mov	r17,zero
 8011008:	243f880e 	bge	r4,r16,8010e2c <__alt_data_end+0xfc010e2c>
 801100c:	00ffe034 	movhi	r3,65408
 8011010:	18ffffc4 	addi	r3,r3,-1
 8011014:	8121c83a 	sub	r16,r16,r4
 8011018:	10c6703a 	and	r3,r2,r3
 801101c:	003f3406 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011020:	9100004c 	andi	r4,r18,1
 8011024:	000b883a 	mov	r5,zero
 8011028:	0005883a 	mov	r2,zero
 801102c:	003f4806 	br	8010d50 <__alt_data_end+0xfc010d50>
 8011030:	298cb03a 	or	r6,r5,r6
 8011034:	300cc03a 	cmpne	r6,r6,zero
 8011038:	0005883a 	mov	r2,zero
 801103c:	003f6406 	br	8010dd0 <__alt_data_end+0xfc010dd0>
 8011040:	10009a1e 	bne	r2,zero,80112ac <__subdf3+0x640>
 8011044:	82400044 	addi	r9,r16,1
 8011048:	4881ffcc 	andi	r2,r9,2047
 801104c:	02800044 	movi	r10,1
 8011050:	5080670e 	bge	r10,r2,80111f0 <__subdf3+0x584>
 8011054:	0081ffc4 	movi	r2,2047
 8011058:	4880af26 	beq	r9,r2,8011318 <__subdf3+0x6ac>
 801105c:	898d883a 	add	r6,r17,r6
 8011060:	1945883a 	add	r2,r3,r5
 8011064:	3447803a 	cmpltu	r3,r6,r17
 8011068:	1887883a 	add	r3,r3,r2
 801106c:	182297fa 	slli	r17,r3,31
 8011070:	300cd07a 	srli	r6,r6,1
 8011074:	1806d07a 	srli	r3,r3,1
 8011078:	4821883a 	mov	r16,r9
 801107c:	89a2b03a 	or	r17,r17,r6
 8011080:	003f1b06 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011084:	0101ffc4 	movi	r4,2047
 8011088:	813f441e 	bne	r16,r4,8010d9c <__alt_data_end+0xfc010d9c>
 801108c:	003f1806 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011090:	843ff844 	addi	r16,r16,-31
 8011094:	01400804 	movi	r5,32
 8011098:	1408d83a 	srl	r4,r2,r16
 801109c:	19405026 	beq	r3,r5,80111e0 <__subdf3+0x574>
 80110a0:	01401004 	movi	r5,64
 80110a4:	28c7c83a 	sub	r3,r5,r3
 80110a8:	10c4983a 	sll	r2,r2,r3
 80110ac:	88a2b03a 	or	r17,r17,r2
 80110b0:	8822c03a 	cmpne	r17,r17,zero
 80110b4:	2462b03a 	or	r17,r4,r17
 80110b8:	0007883a 	mov	r3,zero
 80110bc:	0021883a 	mov	r16,zero
 80110c0:	003f6d06 	br	8010e78 <__alt_data_end+0xfc010e78>
 80110c4:	11fff804 	addi	r7,r2,-32
 80110c8:	01000804 	movi	r4,32
 80110cc:	29ced83a 	srl	r7,r5,r7
 80110d0:	11004526 	beq	r2,r4,80111e8 <__subdf3+0x57c>
 80110d4:	01001004 	movi	r4,64
 80110d8:	2089c83a 	sub	r4,r4,r2
 80110dc:	2904983a 	sll	r2,r5,r4
 80110e0:	118cb03a 	or	r6,r2,r6
 80110e4:	300cc03a 	cmpne	r6,r6,zero
 80110e8:	398cb03a 	or	r6,r7,r6
 80110ec:	0005883a 	mov	r2,zero
 80110f0:	003f3706 	br	8010dd0 <__alt_data_end+0xfc010dd0>
 80110f4:	80002a26 	beq	r16,zero,80111a0 <__subdf3+0x534>
 80110f8:	0101ffc4 	movi	r4,2047
 80110fc:	49006626 	beq	r9,r4,8011298 <__subdf3+0x62c>
 8011100:	0085c83a 	sub	r2,zero,r2
 8011104:	18c02034 	orhi	r3,r3,128
 8011108:	01000e04 	movi	r4,56
 801110c:	20807e16 	blt	r4,r2,8011308 <__subdf3+0x69c>
 8011110:	010007c4 	movi	r4,31
 8011114:	2080e716 	blt	r4,r2,80114b4 <__subdf3+0x848>
 8011118:	01000804 	movi	r4,32
 801111c:	2089c83a 	sub	r4,r4,r2
 8011120:	1914983a 	sll	r10,r3,r4
 8011124:	8890d83a 	srl	r8,r17,r2
 8011128:	8908983a 	sll	r4,r17,r4
 801112c:	1884d83a 	srl	r2,r3,r2
 8011130:	5222b03a 	or	r17,r10,r8
 8011134:	2006c03a 	cmpne	r3,r4,zero
 8011138:	88e2b03a 	or	r17,r17,r3
 801113c:	3463c83a 	sub	r17,r6,r17
 8011140:	2885c83a 	sub	r2,r5,r2
 8011144:	344d803a 	cmpltu	r6,r6,r17
 8011148:	1187c83a 	sub	r3,r2,r6
 801114c:	4821883a 	mov	r16,r9
 8011150:	3825883a 	mov	r18,r7
 8011154:	003f2306 	br	8010de4 <__alt_data_end+0xfc010de4>
 8011158:	24d0b03a 	or	r8,r4,r19
 801115c:	40001b1e 	bne	r8,zero,80111cc <__subdf3+0x560>
 8011160:	0005883a 	mov	r2,zero
 8011164:	0009883a 	mov	r4,zero
 8011168:	0021883a 	mov	r16,zero
 801116c:	003f4906 	br	8010e94 <__alt_data_end+0xfc010e94>
 8011170:	010007c4 	movi	r4,31
 8011174:	20803a16 	blt	r4,r2,8011260 <__subdf3+0x5f4>
 8011178:	01000804 	movi	r4,32
 801117c:	2089c83a 	sub	r4,r4,r2
 8011180:	2912983a 	sll	r9,r5,r4
 8011184:	3090d83a 	srl	r8,r6,r2
 8011188:	3108983a 	sll	r4,r6,r4
 801118c:	2884d83a 	srl	r2,r5,r2
 8011190:	4a12b03a 	or	r9,r9,r8
 8011194:	2008c03a 	cmpne	r4,r4,zero
 8011198:	4912b03a 	or	r9,r9,r4
 801119c:	003f4e06 	br	8010ed8 <__alt_data_end+0xfc010ed8>
 80111a0:	1c48b03a 	or	r4,r3,r17
 80111a4:	20003c26 	beq	r4,zero,8011298 <__subdf3+0x62c>
 80111a8:	0084303a 	nor	r2,zero,r2
 80111ac:	1000381e 	bne	r2,zero,8011290 <__subdf3+0x624>
 80111b0:	3463c83a 	sub	r17,r6,r17
 80111b4:	28c5c83a 	sub	r2,r5,r3
 80111b8:	344d803a 	cmpltu	r6,r6,r17
 80111bc:	1187c83a 	sub	r3,r2,r6
 80111c0:	4821883a 	mov	r16,r9
 80111c4:	3825883a 	mov	r18,r7
 80111c8:	003f0606 	br	8010de4 <__alt_data_end+0xfc010de4>
 80111cc:	2023883a 	mov	r17,r4
 80111d0:	003f0906 	br	8010df8 <__alt_data_end+0xfc010df8>
 80111d4:	0101ffc4 	movi	r4,2047
 80111d8:	813f3a1e 	bne	r16,r4,8010ec4 <__alt_data_end+0xfc010ec4>
 80111dc:	003ec406 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 80111e0:	0005883a 	mov	r2,zero
 80111e4:	003fb106 	br	80110ac <__alt_data_end+0xfc0110ac>
 80111e8:	0005883a 	mov	r2,zero
 80111ec:	003fbc06 	br	80110e0 <__alt_data_end+0xfc0110e0>
 80111f0:	1c44b03a 	or	r2,r3,r17
 80111f4:	80008e1e 	bne	r16,zero,8011430 <__subdf3+0x7c4>
 80111f8:	1000c826 	beq	r2,zero,801151c <__subdf3+0x8b0>
 80111fc:	2984b03a 	or	r2,r5,r6
 8011200:	103ebb26 	beq	r2,zero,8010cf0 <__alt_data_end+0xfc010cf0>
 8011204:	8989883a 	add	r4,r17,r6
 8011208:	1945883a 	add	r2,r3,r5
 801120c:	2447803a 	cmpltu	r3,r4,r17
 8011210:	1887883a 	add	r3,r3,r2
 8011214:	1880202c 	andhi	r2,r3,128
 8011218:	2023883a 	mov	r17,r4
 801121c:	103f1626 	beq	r2,zero,8010e78 <__alt_data_end+0xfc010e78>
 8011220:	00bfe034 	movhi	r2,65408
 8011224:	10bfffc4 	addi	r2,r2,-1
 8011228:	5021883a 	mov	r16,r10
 801122c:	1886703a 	and	r3,r3,r2
 8011230:	003eaf06 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011234:	3825883a 	mov	r18,r7
 8011238:	003f0f06 	br	8010e78 <__alt_data_end+0xfc010e78>
 801123c:	1c44b03a 	or	r2,r3,r17
 8011240:	8000251e 	bne	r16,zero,80112d8 <__subdf3+0x66c>
 8011244:	1000661e 	bne	r2,zero,80113e0 <__subdf3+0x774>
 8011248:	2990b03a 	or	r8,r5,r6
 801124c:	40009626 	beq	r8,zero,80114a8 <__subdf3+0x83c>
 8011250:	2807883a 	mov	r3,r5
 8011254:	3023883a 	mov	r17,r6
 8011258:	3825883a 	mov	r18,r7
 801125c:	003ea406 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011260:	127ff804 	addi	r9,r2,-32
 8011264:	01000804 	movi	r4,32
 8011268:	2a52d83a 	srl	r9,r5,r9
 801126c:	11008c26 	beq	r2,r4,80114a0 <__subdf3+0x834>
 8011270:	01001004 	movi	r4,64
 8011274:	2085c83a 	sub	r2,r4,r2
 8011278:	2884983a 	sll	r2,r5,r2
 801127c:	118cb03a 	or	r6,r2,r6
 8011280:	300cc03a 	cmpne	r6,r6,zero
 8011284:	4992b03a 	or	r9,r9,r6
 8011288:	0005883a 	mov	r2,zero
 801128c:	003f1206 	br	8010ed8 <__alt_data_end+0xfc010ed8>
 8011290:	0101ffc4 	movi	r4,2047
 8011294:	493f9c1e 	bne	r9,r4,8011108 <__alt_data_end+0xfc011108>
 8011298:	2807883a 	mov	r3,r5
 801129c:	3023883a 	mov	r17,r6
 80112a0:	4821883a 	mov	r16,r9
 80112a4:	3825883a 	mov	r18,r7
 80112a8:	003e9106 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 80112ac:	80001f1e 	bne	r16,zero,801132c <__subdf3+0x6c0>
 80112b0:	1c48b03a 	or	r4,r3,r17
 80112b4:	20005a26 	beq	r4,zero,8011420 <__subdf3+0x7b4>
 80112b8:	0084303a 	nor	r2,zero,r2
 80112bc:	1000561e 	bne	r2,zero,8011418 <__subdf3+0x7ac>
 80112c0:	89a3883a 	add	r17,r17,r6
 80112c4:	1945883a 	add	r2,r3,r5
 80112c8:	898d803a 	cmpltu	r6,r17,r6
 80112cc:	3087883a 	add	r3,r6,r2
 80112d0:	4821883a 	mov	r16,r9
 80112d4:	003f0506 	br	8010eec <__alt_data_end+0xfc010eec>
 80112d8:	10002b1e 	bne	r2,zero,8011388 <__subdf3+0x71c>
 80112dc:	2984b03a 	or	r2,r5,r6
 80112e0:	10008026 	beq	r2,zero,80114e4 <__subdf3+0x878>
 80112e4:	2807883a 	mov	r3,r5
 80112e8:	3023883a 	mov	r17,r6
 80112ec:	3825883a 	mov	r18,r7
 80112f0:	0401ffc4 	movi	r16,2047
 80112f4:	003e7e06 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 80112f8:	3809883a 	mov	r4,r7
 80112fc:	0011883a 	mov	r8,zero
 8011300:	0005883a 	mov	r2,zero
 8011304:	003ee306 	br	8010e94 <__alt_data_end+0xfc010e94>
 8011308:	1c62b03a 	or	r17,r3,r17
 801130c:	8822c03a 	cmpne	r17,r17,zero
 8011310:	0005883a 	mov	r2,zero
 8011314:	003f8906 	br	801113c <__alt_data_end+0xfc01113c>
 8011318:	3809883a 	mov	r4,r7
 801131c:	4821883a 	mov	r16,r9
 8011320:	0011883a 	mov	r8,zero
 8011324:	0005883a 	mov	r2,zero
 8011328:	003eda06 	br	8010e94 <__alt_data_end+0xfc010e94>
 801132c:	0101ffc4 	movi	r4,2047
 8011330:	49003b26 	beq	r9,r4,8011420 <__subdf3+0x7b4>
 8011334:	0085c83a 	sub	r2,zero,r2
 8011338:	18c02034 	orhi	r3,r3,128
 801133c:	01000e04 	movi	r4,56
 8011340:	20806e16 	blt	r4,r2,80114fc <__subdf3+0x890>
 8011344:	010007c4 	movi	r4,31
 8011348:	20807716 	blt	r4,r2,8011528 <__subdf3+0x8bc>
 801134c:	01000804 	movi	r4,32
 8011350:	2089c83a 	sub	r4,r4,r2
 8011354:	1914983a 	sll	r10,r3,r4
 8011358:	8890d83a 	srl	r8,r17,r2
 801135c:	8908983a 	sll	r4,r17,r4
 8011360:	1884d83a 	srl	r2,r3,r2
 8011364:	5222b03a 	or	r17,r10,r8
 8011368:	2006c03a 	cmpne	r3,r4,zero
 801136c:	88e2b03a 	or	r17,r17,r3
 8011370:	89a3883a 	add	r17,r17,r6
 8011374:	1145883a 	add	r2,r2,r5
 8011378:	898d803a 	cmpltu	r6,r17,r6
 801137c:	3087883a 	add	r3,r6,r2
 8011380:	4821883a 	mov	r16,r9
 8011384:	003ed906 	br	8010eec <__alt_data_end+0xfc010eec>
 8011388:	2984b03a 	or	r2,r5,r6
 801138c:	10004226 	beq	r2,zero,8011498 <__subdf3+0x82c>
 8011390:	1808d0fa 	srli	r4,r3,3
 8011394:	8822d0fa 	srli	r17,r17,3
 8011398:	1806977a 	slli	r3,r3,29
 801139c:	2080022c 	andhi	r2,r4,8
 80113a0:	1c62b03a 	or	r17,r3,r17
 80113a4:	10000826 	beq	r2,zero,80113c8 <__subdf3+0x75c>
 80113a8:	2812d0fa 	srli	r9,r5,3
 80113ac:	4880022c 	andhi	r2,r9,8
 80113b0:	1000051e 	bne	r2,zero,80113c8 <__subdf3+0x75c>
 80113b4:	300cd0fa 	srli	r6,r6,3
 80113b8:	2804977a 	slli	r2,r5,29
 80113bc:	4809883a 	mov	r4,r9
 80113c0:	3825883a 	mov	r18,r7
 80113c4:	11a2b03a 	or	r17,r2,r6
 80113c8:	8806d77a 	srli	r3,r17,29
 80113cc:	200890fa 	slli	r4,r4,3
 80113d0:	882290fa 	slli	r17,r17,3
 80113d4:	0401ffc4 	movi	r16,2047
 80113d8:	1906b03a 	or	r3,r3,r4
 80113dc:	003e4406 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 80113e0:	2984b03a 	or	r2,r5,r6
 80113e4:	103e4226 	beq	r2,zero,8010cf0 <__alt_data_end+0xfc010cf0>
 80113e8:	8989c83a 	sub	r4,r17,r6
 80113ec:	8911803a 	cmpltu	r8,r17,r4
 80113f0:	1945c83a 	sub	r2,r3,r5
 80113f4:	1205c83a 	sub	r2,r2,r8
 80113f8:	1200202c 	andhi	r8,r2,128
 80113fc:	403e9a26 	beq	r8,zero,8010e68 <__alt_data_end+0xfc010e68>
 8011400:	3463c83a 	sub	r17,r6,r17
 8011404:	28c5c83a 	sub	r2,r5,r3
 8011408:	344d803a 	cmpltu	r6,r6,r17
 801140c:	1187c83a 	sub	r3,r2,r6
 8011410:	3825883a 	mov	r18,r7
 8011414:	003e3606 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011418:	0101ffc4 	movi	r4,2047
 801141c:	493fc71e 	bne	r9,r4,801133c <__alt_data_end+0xfc01133c>
 8011420:	2807883a 	mov	r3,r5
 8011424:	3023883a 	mov	r17,r6
 8011428:	4821883a 	mov	r16,r9
 801142c:	003e3006 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011430:	10003626 	beq	r2,zero,801150c <__subdf3+0x8a0>
 8011434:	2984b03a 	or	r2,r5,r6
 8011438:	10001726 	beq	r2,zero,8011498 <__subdf3+0x82c>
 801143c:	1808d0fa 	srli	r4,r3,3
 8011440:	8822d0fa 	srli	r17,r17,3
 8011444:	1806977a 	slli	r3,r3,29
 8011448:	2080022c 	andhi	r2,r4,8
 801144c:	1c62b03a 	or	r17,r3,r17
 8011450:	10000726 	beq	r2,zero,8011470 <__subdf3+0x804>
 8011454:	2812d0fa 	srli	r9,r5,3
 8011458:	4880022c 	andhi	r2,r9,8
 801145c:	1000041e 	bne	r2,zero,8011470 <__subdf3+0x804>
 8011460:	300cd0fa 	srli	r6,r6,3
 8011464:	2804977a 	slli	r2,r5,29
 8011468:	4809883a 	mov	r4,r9
 801146c:	11a2b03a 	or	r17,r2,r6
 8011470:	8806d77a 	srli	r3,r17,29
 8011474:	200890fa 	slli	r4,r4,3
 8011478:	882290fa 	slli	r17,r17,3
 801147c:	3825883a 	mov	r18,r7
 8011480:	1906b03a 	or	r3,r3,r4
 8011484:	0401ffc4 	movi	r16,2047
 8011488:	003e1906 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 801148c:	000b883a 	mov	r5,zero
 8011490:	0005883a 	mov	r2,zero
 8011494:	003e2e06 	br	8010d50 <__alt_data_end+0xfc010d50>
 8011498:	0401ffc4 	movi	r16,2047
 801149c:	003e1406 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 80114a0:	0005883a 	mov	r2,zero
 80114a4:	003f7506 	br	801127c <__alt_data_end+0xfc01127c>
 80114a8:	0005883a 	mov	r2,zero
 80114ac:	0009883a 	mov	r4,zero
 80114b0:	003e7806 	br	8010e94 <__alt_data_end+0xfc010e94>
 80114b4:	123ff804 	addi	r8,r2,-32
 80114b8:	01000804 	movi	r4,32
 80114bc:	1a10d83a 	srl	r8,r3,r8
 80114c0:	11002526 	beq	r2,r4,8011558 <__subdf3+0x8ec>
 80114c4:	01001004 	movi	r4,64
 80114c8:	2085c83a 	sub	r2,r4,r2
 80114cc:	1884983a 	sll	r2,r3,r2
 80114d0:	1444b03a 	or	r2,r2,r17
 80114d4:	1004c03a 	cmpne	r2,r2,zero
 80114d8:	40a2b03a 	or	r17,r8,r2
 80114dc:	0005883a 	mov	r2,zero
 80114e0:	003f1606 	br	801113c <__alt_data_end+0xfc01113c>
 80114e4:	02000434 	movhi	r8,16
 80114e8:	0009883a 	mov	r4,zero
 80114ec:	423fffc4 	addi	r8,r8,-1
 80114f0:	00bfffc4 	movi	r2,-1
 80114f4:	0401ffc4 	movi	r16,2047
 80114f8:	003e6606 	br	8010e94 <__alt_data_end+0xfc010e94>
 80114fc:	1c62b03a 	or	r17,r3,r17
 8011500:	8822c03a 	cmpne	r17,r17,zero
 8011504:	0005883a 	mov	r2,zero
 8011508:	003f9906 	br	8011370 <__alt_data_end+0xfc011370>
 801150c:	2807883a 	mov	r3,r5
 8011510:	3023883a 	mov	r17,r6
 8011514:	0401ffc4 	movi	r16,2047
 8011518:	003df506 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 801151c:	2807883a 	mov	r3,r5
 8011520:	3023883a 	mov	r17,r6
 8011524:	003df206 	br	8010cf0 <__alt_data_end+0xfc010cf0>
 8011528:	123ff804 	addi	r8,r2,-32
 801152c:	01000804 	movi	r4,32
 8011530:	1a10d83a 	srl	r8,r3,r8
 8011534:	11000a26 	beq	r2,r4,8011560 <__subdf3+0x8f4>
 8011538:	01001004 	movi	r4,64
 801153c:	2085c83a 	sub	r2,r4,r2
 8011540:	1884983a 	sll	r2,r3,r2
 8011544:	1444b03a 	or	r2,r2,r17
 8011548:	1004c03a 	cmpne	r2,r2,zero
 801154c:	40a2b03a 	or	r17,r8,r2
 8011550:	0005883a 	mov	r2,zero
 8011554:	003f8606 	br	8011370 <__alt_data_end+0xfc011370>
 8011558:	0005883a 	mov	r2,zero
 801155c:	003fdc06 	br	80114d0 <__alt_data_end+0xfc0114d0>
 8011560:	0005883a 	mov	r2,zero
 8011564:	003ff706 	br	8011544 <__alt_data_end+0xfc011544>

08011568 <__fixdfsi>:
 8011568:	280cd53a 	srli	r6,r5,20
 801156c:	00c00434 	movhi	r3,16
 8011570:	18ffffc4 	addi	r3,r3,-1
 8011574:	3181ffcc 	andi	r6,r6,2047
 8011578:	01c0ff84 	movi	r7,1022
 801157c:	28c6703a 	and	r3,r5,r3
 8011580:	280ad7fa 	srli	r5,r5,31
 8011584:	3980120e 	bge	r7,r6,80115d0 <__fixdfsi+0x68>
 8011588:	00810744 	movi	r2,1053
 801158c:	11800c16 	blt	r2,r6,80115c0 <__fixdfsi+0x58>
 8011590:	00810cc4 	movi	r2,1075
 8011594:	1185c83a 	sub	r2,r2,r6
 8011598:	01c007c4 	movi	r7,31
 801159c:	18c00434 	orhi	r3,r3,16
 80115a0:	38800d16 	blt	r7,r2,80115d8 <__fixdfsi+0x70>
 80115a4:	31befb44 	addi	r6,r6,-1043
 80115a8:	2084d83a 	srl	r2,r4,r2
 80115ac:	1986983a 	sll	r3,r3,r6
 80115b0:	1884b03a 	or	r2,r3,r2
 80115b4:	28000726 	beq	r5,zero,80115d4 <__fixdfsi+0x6c>
 80115b8:	0085c83a 	sub	r2,zero,r2
 80115bc:	f800283a 	ret
 80115c0:	00a00034 	movhi	r2,32768
 80115c4:	10bfffc4 	addi	r2,r2,-1
 80115c8:	2885883a 	add	r2,r5,r2
 80115cc:	f800283a 	ret
 80115d0:	0005883a 	mov	r2,zero
 80115d4:	f800283a 	ret
 80115d8:	008104c4 	movi	r2,1043
 80115dc:	1185c83a 	sub	r2,r2,r6
 80115e0:	1884d83a 	srl	r2,r3,r2
 80115e4:	003ff306 	br	80115b4 <__alt_data_end+0xfc0115b4>

080115e8 <__floatsidf>:
 80115e8:	defffd04 	addi	sp,sp,-12
 80115ec:	dfc00215 	stw	ra,8(sp)
 80115f0:	dc400115 	stw	r17,4(sp)
 80115f4:	dc000015 	stw	r16,0(sp)
 80115f8:	20002b26 	beq	r4,zero,80116a8 <__floatsidf+0xc0>
 80115fc:	2023883a 	mov	r17,r4
 8011600:	2020d7fa 	srli	r16,r4,31
 8011604:	20002d16 	blt	r4,zero,80116bc <__floatsidf+0xd4>
 8011608:	8809883a 	mov	r4,r17
 801160c:	801176c0 	call	801176c <__clzsi2>
 8011610:	01410784 	movi	r5,1054
 8011614:	288bc83a 	sub	r5,r5,r2
 8011618:	01010cc4 	movi	r4,1075
 801161c:	2149c83a 	sub	r4,r4,r5
 8011620:	00c007c4 	movi	r3,31
 8011624:	1900160e 	bge	r3,r4,8011680 <__floatsidf+0x98>
 8011628:	00c104c4 	movi	r3,1043
 801162c:	1947c83a 	sub	r3,r3,r5
 8011630:	88c6983a 	sll	r3,r17,r3
 8011634:	00800434 	movhi	r2,16
 8011638:	10bfffc4 	addi	r2,r2,-1
 801163c:	1886703a 	and	r3,r3,r2
 8011640:	2941ffcc 	andi	r5,r5,2047
 8011644:	800d883a 	mov	r6,r16
 8011648:	0005883a 	mov	r2,zero
 801164c:	280a953a 	slli	r5,r5,20
 8011650:	31803fcc 	andi	r6,r6,255
 8011654:	01000434 	movhi	r4,16
 8011658:	300c97fa 	slli	r6,r6,31
 801165c:	213fffc4 	addi	r4,r4,-1
 8011660:	1906703a 	and	r3,r3,r4
 8011664:	1946b03a 	or	r3,r3,r5
 8011668:	1986b03a 	or	r3,r3,r6
 801166c:	dfc00217 	ldw	ra,8(sp)
 8011670:	dc400117 	ldw	r17,4(sp)
 8011674:	dc000017 	ldw	r16,0(sp)
 8011678:	dec00304 	addi	sp,sp,12
 801167c:	f800283a 	ret
 8011680:	00c002c4 	movi	r3,11
 8011684:	1887c83a 	sub	r3,r3,r2
 8011688:	88c6d83a 	srl	r3,r17,r3
 801168c:	8904983a 	sll	r2,r17,r4
 8011690:	01000434 	movhi	r4,16
 8011694:	213fffc4 	addi	r4,r4,-1
 8011698:	2941ffcc 	andi	r5,r5,2047
 801169c:	1906703a 	and	r3,r3,r4
 80116a0:	800d883a 	mov	r6,r16
 80116a4:	003fe906 	br	801164c <__alt_data_end+0xfc01164c>
 80116a8:	000d883a 	mov	r6,zero
 80116ac:	000b883a 	mov	r5,zero
 80116b0:	0007883a 	mov	r3,zero
 80116b4:	0005883a 	mov	r2,zero
 80116b8:	003fe406 	br	801164c <__alt_data_end+0xfc01164c>
 80116bc:	0123c83a 	sub	r17,zero,r4
 80116c0:	003fd106 	br	8011608 <__alt_data_end+0xfc011608>

080116c4 <__floatunsidf>:
 80116c4:	defffe04 	addi	sp,sp,-8
 80116c8:	dc000015 	stw	r16,0(sp)
 80116cc:	dfc00115 	stw	ra,4(sp)
 80116d0:	2021883a 	mov	r16,r4
 80116d4:	20002226 	beq	r4,zero,8011760 <__floatunsidf+0x9c>
 80116d8:	801176c0 	call	801176c <__clzsi2>
 80116dc:	01010784 	movi	r4,1054
 80116e0:	2089c83a 	sub	r4,r4,r2
 80116e4:	01810cc4 	movi	r6,1075
 80116e8:	310dc83a 	sub	r6,r6,r4
 80116ec:	00c007c4 	movi	r3,31
 80116f0:	1980120e 	bge	r3,r6,801173c <__floatunsidf+0x78>
 80116f4:	00c104c4 	movi	r3,1043
 80116f8:	1907c83a 	sub	r3,r3,r4
 80116fc:	80ca983a 	sll	r5,r16,r3
 8011700:	00800434 	movhi	r2,16
 8011704:	10bfffc4 	addi	r2,r2,-1
 8011708:	2101ffcc 	andi	r4,r4,2047
 801170c:	0021883a 	mov	r16,zero
 8011710:	288a703a 	and	r5,r5,r2
 8011714:	2008953a 	slli	r4,r4,20
 8011718:	00c00434 	movhi	r3,16
 801171c:	18ffffc4 	addi	r3,r3,-1
 8011720:	28c6703a 	and	r3,r5,r3
 8011724:	8005883a 	mov	r2,r16
 8011728:	1906b03a 	or	r3,r3,r4
 801172c:	dfc00117 	ldw	ra,4(sp)
 8011730:	dc000017 	ldw	r16,0(sp)
 8011734:	dec00204 	addi	sp,sp,8
 8011738:	f800283a 	ret
 801173c:	00c002c4 	movi	r3,11
 8011740:	188bc83a 	sub	r5,r3,r2
 8011744:	814ad83a 	srl	r5,r16,r5
 8011748:	00c00434 	movhi	r3,16
 801174c:	18ffffc4 	addi	r3,r3,-1
 8011750:	81a0983a 	sll	r16,r16,r6
 8011754:	2101ffcc 	andi	r4,r4,2047
 8011758:	28ca703a 	and	r5,r5,r3
 801175c:	003fed06 	br	8011714 <__alt_data_end+0xfc011714>
 8011760:	0009883a 	mov	r4,zero
 8011764:	000b883a 	mov	r5,zero
 8011768:	003fea06 	br	8011714 <__alt_data_end+0xfc011714>

0801176c <__clzsi2>:
 801176c:	00bfffd4 	movui	r2,65535
 8011770:	11000536 	bltu	r2,r4,8011788 <__clzsi2+0x1c>
 8011774:	00803fc4 	movi	r2,255
 8011778:	11000f36 	bltu	r2,r4,80117b8 <__clzsi2+0x4c>
 801177c:	00800804 	movi	r2,32
 8011780:	0007883a 	mov	r3,zero
 8011784:	00000506 	br	801179c <__clzsi2+0x30>
 8011788:	00804034 	movhi	r2,256
 801178c:	10bfffc4 	addi	r2,r2,-1
 8011790:	11000c2e 	bgeu	r2,r4,80117c4 <__clzsi2+0x58>
 8011794:	00800204 	movi	r2,8
 8011798:	00c00604 	movi	r3,24
 801179c:	20c8d83a 	srl	r4,r4,r3
 80117a0:	00c20074 	movhi	r3,2049
 80117a4:	18d11104 	addi	r3,r3,17476
 80117a8:	1909883a 	add	r4,r3,r4
 80117ac:	20c00003 	ldbu	r3,0(r4)
 80117b0:	10c5c83a 	sub	r2,r2,r3
 80117b4:	f800283a 	ret
 80117b8:	00800604 	movi	r2,24
 80117bc:	00c00204 	movi	r3,8
 80117c0:	003ff606 	br	801179c <__alt_data_end+0xfc01179c>
 80117c4:	00800404 	movi	r2,16
 80117c8:	1007883a 	mov	r3,r2
 80117cc:	003ff306 	br	801179c <__alt_data_end+0xfc01179c>

080117d0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80117d0:	defffe04 	addi	sp,sp,-8
 80117d4:	dfc00115 	stw	ra,4(sp)
 80117d8:	df000015 	stw	fp,0(sp)
 80117dc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80117e0:	d0a00e17 	ldw	r2,-32712(gp)
 80117e4:	10000326 	beq	r2,zero,80117f4 <alt_get_errno+0x24>
 80117e8:	d0a00e17 	ldw	r2,-32712(gp)
 80117ec:	103ee83a 	callr	r2
 80117f0:	00000106 	br	80117f8 <alt_get_errno+0x28>
 80117f4:	d0a78f04 	addi	r2,gp,-25028
}
 80117f8:	e037883a 	mov	sp,fp
 80117fc:	dfc00117 	ldw	ra,4(sp)
 8011800:	df000017 	ldw	fp,0(sp)
 8011804:	dec00204 	addi	sp,sp,8
 8011808:	f800283a 	ret

0801180c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 801180c:	defffb04 	addi	sp,sp,-20
 8011810:	dfc00415 	stw	ra,16(sp)
 8011814:	df000315 	stw	fp,12(sp)
 8011818:	df000304 	addi	fp,sp,12
 801181c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 8011820:	e0bfff17 	ldw	r2,-4(fp)
 8011824:	10000816 	blt	r2,zero,8011848 <close+0x3c>
 8011828:	01400304 	movi	r5,12
 801182c:	e13fff17 	ldw	r4,-4(fp)
 8011830:	80010a00 	call	80010a0 <__mulsi3>
 8011834:	1007883a 	mov	r3,r2
 8011838:	00820074 	movhi	r2,2049
 801183c:	10944904 	addi	r2,r2,20772
 8011840:	1885883a 	add	r2,r3,r2
 8011844:	00000106 	br	801184c <close+0x40>
 8011848:	0005883a 	mov	r2,zero
 801184c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 8011850:	e0bffd17 	ldw	r2,-12(fp)
 8011854:	10001926 	beq	r2,zero,80118bc <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 8011858:	e0bffd17 	ldw	r2,-12(fp)
 801185c:	10800017 	ldw	r2,0(r2)
 8011860:	10800417 	ldw	r2,16(r2)
 8011864:	10000626 	beq	r2,zero,8011880 <close+0x74>
 8011868:	e0bffd17 	ldw	r2,-12(fp)
 801186c:	10800017 	ldw	r2,0(r2)
 8011870:	10800417 	ldw	r2,16(r2)
 8011874:	e13ffd17 	ldw	r4,-12(fp)
 8011878:	103ee83a 	callr	r2
 801187c:	00000106 	br	8011884 <close+0x78>
 8011880:	0005883a 	mov	r2,zero
 8011884:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 8011888:	e13fff17 	ldw	r4,-4(fp)
 801188c:	8011ef40 	call	8011ef4 <alt_release_fd>
    if (rval < 0)
 8011890:	e0bffe17 	ldw	r2,-8(fp)
 8011894:	1000070e 	bge	r2,zero,80118b4 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 8011898:	80117d00 	call	80117d0 <alt_get_errno>
 801189c:	1007883a 	mov	r3,r2
 80118a0:	e0bffe17 	ldw	r2,-8(fp)
 80118a4:	0085c83a 	sub	r2,zero,r2
 80118a8:	18800015 	stw	r2,0(r3)
      return -1;
 80118ac:	00bfffc4 	movi	r2,-1
 80118b0:	00000706 	br	80118d0 <close+0xc4>
    }
    return 0;
 80118b4:	0005883a 	mov	r2,zero
 80118b8:	00000506 	br	80118d0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 80118bc:	80117d00 	call	80117d0 <alt_get_errno>
 80118c0:	1007883a 	mov	r3,r2
 80118c4:	00801444 	movi	r2,81
 80118c8:	18800015 	stw	r2,0(r3)
    return -1;
 80118cc:	00bfffc4 	movi	r2,-1
  }
}
 80118d0:	e037883a 	mov	sp,fp
 80118d4:	dfc00117 	ldw	ra,4(sp)
 80118d8:	df000017 	ldw	fp,0(sp)
 80118dc:	dec00204 	addi	sp,sp,8
 80118e0:	f800283a 	ret

080118e4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 80118e4:	defffc04 	addi	sp,sp,-16
 80118e8:	df000315 	stw	fp,12(sp)
 80118ec:	df000304 	addi	fp,sp,12
 80118f0:	e13ffd15 	stw	r4,-12(fp)
 80118f4:	e17ffe15 	stw	r5,-8(fp)
 80118f8:	e1bfff15 	stw	r6,-4(fp)
  return len;
 80118fc:	e0bfff17 	ldw	r2,-4(fp)
}
 8011900:	e037883a 	mov	sp,fp
 8011904:	df000017 	ldw	fp,0(sp)
 8011908:	dec00104 	addi	sp,sp,4
 801190c:	f800283a 	ret

08011910 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8011910:	defffe04 	addi	sp,sp,-8
 8011914:	dfc00115 	stw	ra,4(sp)
 8011918:	df000015 	stw	fp,0(sp)
 801191c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8011920:	d0a00e17 	ldw	r2,-32712(gp)
 8011924:	10000326 	beq	r2,zero,8011934 <alt_get_errno+0x24>
 8011928:	d0a00e17 	ldw	r2,-32712(gp)
 801192c:	103ee83a 	callr	r2
 8011930:	00000106 	br	8011938 <alt_get_errno+0x28>
 8011934:	d0a78f04 	addi	r2,gp,-25028
}
 8011938:	e037883a 	mov	sp,fp
 801193c:	dfc00117 	ldw	ra,4(sp)
 8011940:	df000017 	ldw	fp,0(sp)
 8011944:	dec00204 	addi	sp,sp,8
 8011948:	f800283a 	ret

0801194c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 801194c:	defffb04 	addi	sp,sp,-20
 8011950:	dfc00415 	stw	ra,16(sp)
 8011954:	df000315 	stw	fp,12(sp)
 8011958:	df000304 	addi	fp,sp,12
 801195c:	e13ffe15 	stw	r4,-8(fp)
 8011960:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8011964:	e0bffe17 	ldw	r2,-8(fp)
 8011968:	10000816 	blt	r2,zero,801198c <fstat+0x40>
 801196c:	01400304 	movi	r5,12
 8011970:	e13ffe17 	ldw	r4,-8(fp)
 8011974:	80010a00 	call	80010a0 <__mulsi3>
 8011978:	1007883a 	mov	r3,r2
 801197c:	00820074 	movhi	r2,2049
 8011980:	10944904 	addi	r2,r2,20772
 8011984:	1885883a 	add	r2,r3,r2
 8011988:	00000106 	br	8011990 <fstat+0x44>
 801198c:	0005883a 	mov	r2,zero
 8011990:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 8011994:	e0bffd17 	ldw	r2,-12(fp)
 8011998:	10001026 	beq	r2,zero,80119dc <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 801199c:	e0bffd17 	ldw	r2,-12(fp)
 80119a0:	10800017 	ldw	r2,0(r2)
 80119a4:	10800817 	ldw	r2,32(r2)
 80119a8:	10000726 	beq	r2,zero,80119c8 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 80119ac:	e0bffd17 	ldw	r2,-12(fp)
 80119b0:	10800017 	ldw	r2,0(r2)
 80119b4:	10800817 	ldw	r2,32(r2)
 80119b8:	e17fff17 	ldw	r5,-4(fp)
 80119bc:	e13ffd17 	ldw	r4,-12(fp)
 80119c0:	103ee83a 	callr	r2
 80119c4:	00000a06 	br	80119f0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 80119c8:	e0bfff17 	ldw	r2,-4(fp)
 80119cc:	00c80004 	movi	r3,8192
 80119d0:	10c00115 	stw	r3,4(r2)
      return 0;
 80119d4:	0005883a 	mov	r2,zero
 80119d8:	00000506 	br	80119f0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 80119dc:	80119100 	call	8011910 <alt_get_errno>
 80119e0:	1007883a 	mov	r3,r2
 80119e4:	00801444 	movi	r2,81
 80119e8:	18800015 	stw	r2,0(r3)
    return -1;
 80119ec:	00bfffc4 	movi	r2,-1
  }
}
 80119f0:	e037883a 	mov	sp,fp
 80119f4:	dfc00117 	ldw	ra,4(sp)
 80119f8:	df000017 	ldw	fp,0(sp)
 80119fc:	dec00204 	addi	sp,sp,8
 8011a00:	f800283a 	ret

08011a04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8011a04:	defffe04 	addi	sp,sp,-8
 8011a08:	dfc00115 	stw	ra,4(sp)
 8011a0c:	df000015 	stw	fp,0(sp)
 8011a10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8011a14:	d0a00e17 	ldw	r2,-32712(gp)
 8011a18:	10000326 	beq	r2,zero,8011a28 <alt_get_errno+0x24>
 8011a1c:	d0a00e17 	ldw	r2,-32712(gp)
 8011a20:	103ee83a 	callr	r2
 8011a24:	00000106 	br	8011a2c <alt_get_errno+0x28>
 8011a28:	d0a78f04 	addi	r2,gp,-25028
}
 8011a2c:	e037883a 	mov	sp,fp
 8011a30:	dfc00117 	ldw	ra,4(sp)
 8011a34:	df000017 	ldw	fp,0(sp)
 8011a38:	dec00204 	addi	sp,sp,8
 8011a3c:	f800283a 	ret

08011a40 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 8011a40:	deffed04 	addi	sp,sp,-76
 8011a44:	dfc01215 	stw	ra,72(sp)
 8011a48:	df001115 	stw	fp,68(sp)
 8011a4c:	df001104 	addi	fp,sp,68
 8011a50:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8011a54:	e0bfff17 	ldw	r2,-4(fp)
 8011a58:	10000816 	blt	r2,zero,8011a7c <isatty+0x3c>
 8011a5c:	01400304 	movi	r5,12
 8011a60:	e13fff17 	ldw	r4,-4(fp)
 8011a64:	80010a00 	call	80010a0 <__mulsi3>
 8011a68:	1007883a 	mov	r3,r2
 8011a6c:	00820074 	movhi	r2,2049
 8011a70:	10944904 	addi	r2,r2,20772
 8011a74:	1885883a 	add	r2,r3,r2
 8011a78:	00000106 	br	8011a80 <isatty+0x40>
 8011a7c:	0005883a 	mov	r2,zero
 8011a80:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 8011a84:	e0bfef17 	ldw	r2,-68(fp)
 8011a88:	10000e26 	beq	r2,zero,8011ac4 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 8011a8c:	e0bfef17 	ldw	r2,-68(fp)
 8011a90:	10800017 	ldw	r2,0(r2)
 8011a94:	10800817 	ldw	r2,32(r2)
 8011a98:	1000021e 	bne	r2,zero,8011aa4 <isatty+0x64>
    {
      return 1;
 8011a9c:	00800044 	movi	r2,1
 8011aa0:	00000d06 	br	8011ad8 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 8011aa4:	e0bff004 	addi	r2,fp,-64
 8011aa8:	100b883a 	mov	r5,r2
 8011aac:	e13fff17 	ldw	r4,-4(fp)
 8011ab0:	801194c0 	call	801194c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 8011ab4:	e0bff117 	ldw	r2,-60(fp)
 8011ab8:	10880020 	cmpeqi	r2,r2,8192
 8011abc:	10803fcc 	andi	r2,r2,255
 8011ac0:	00000506 	br	8011ad8 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8011ac4:	8011a040 	call	8011a04 <alt_get_errno>
 8011ac8:	1007883a 	mov	r3,r2
 8011acc:	00801444 	movi	r2,81
 8011ad0:	18800015 	stw	r2,0(r3)
    return 0;
 8011ad4:	0005883a 	mov	r2,zero
  }
}
 8011ad8:	e037883a 	mov	sp,fp
 8011adc:	dfc00117 	ldw	ra,4(sp)
 8011ae0:	df000017 	ldw	fp,0(sp)
 8011ae4:	dec00204 	addi	sp,sp,8
 8011ae8:	f800283a 	ret

08011aec <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 8011aec:	defffc04 	addi	sp,sp,-16
 8011af0:	df000315 	stw	fp,12(sp)
 8011af4:	df000304 	addi	fp,sp,12
 8011af8:	e13ffd15 	stw	r4,-12(fp)
 8011afc:	e17ffe15 	stw	r5,-8(fp)
 8011b00:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 8011b04:	e0fffe17 	ldw	r3,-8(fp)
 8011b08:	e0bffd17 	ldw	r2,-12(fp)
 8011b0c:	18800c26 	beq	r3,r2,8011b40 <alt_load_section+0x54>
  {
    while( to != end )
 8011b10:	00000806 	br	8011b34 <alt_load_section+0x48>
    {
      *to++ = *from++;
 8011b14:	e0bffe17 	ldw	r2,-8(fp)
 8011b18:	10c00104 	addi	r3,r2,4
 8011b1c:	e0fffe15 	stw	r3,-8(fp)
 8011b20:	e0fffd17 	ldw	r3,-12(fp)
 8011b24:	19000104 	addi	r4,r3,4
 8011b28:	e13ffd15 	stw	r4,-12(fp)
 8011b2c:	18c00017 	ldw	r3,0(r3)
 8011b30:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 8011b34:	e0fffe17 	ldw	r3,-8(fp)
 8011b38:	e0bfff17 	ldw	r2,-4(fp)
 8011b3c:	18bff51e 	bne	r3,r2,8011b14 <__alt_data_end+0xfc011b14>
    {
      *to++ = *from++;
    }
  }
}
 8011b40:	0001883a 	nop
 8011b44:	e037883a 	mov	sp,fp
 8011b48:	df000017 	ldw	fp,0(sp)
 8011b4c:	dec00104 	addi	sp,sp,4
 8011b50:	f800283a 	ret

08011b54 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 8011b54:	defffe04 	addi	sp,sp,-8
 8011b58:	dfc00115 	stw	ra,4(sp)
 8011b5c:	df000015 	stw	fp,0(sp)
 8011b60:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 8011b64:	01820074 	movhi	r6,2049
 8011b68:	3198d404 	addi	r6,r6,25424
 8011b6c:	01420074 	movhi	r5,2049
 8011b70:	29515e04 	addi	r5,r5,17784
 8011b74:	01020074 	movhi	r4,2049
 8011b78:	2118d404 	addi	r4,r4,25424
 8011b7c:	8011aec0 	call	8011aec <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 8011b80:	01820034 	movhi	r6,2048
 8011b84:	31808c04 	addi	r6,r6,560
 8011b88:	01420034 	movhi	r5,2048
 8011b8c:	29400804 	addi	r5,r5,32
 8011b90:	01020034 	movhi	r4,2048
 8011b94:	21000804 	addi	r4,r4,32
 8011b98:	8011aec0 	call	8011aec <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 8011b9c:	01820074 	movhi	r6,2049
 8011ba0:	31915e04 	addi	r6,r6,17784
 8011ba4:	01420074 	movhi	r5,2049
 8011ba8:	29503f04 	addi	r5,r5,16636
 8011bac:	01020074 	movhi	r4,2049
 8011bb0:	21103f04 	addi	r4,r4,16636
 8011bb4:	8011aec0 	call	8011aec <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 8011bb8:	80130440 	call	8013044 <alt_dcache_flush_all>
  alt_icache_flush_all();
 8011bbc:	80132040 	call	8013204 <alt_icache_flush_all>
}
 8011bc0:	0001883a 	nop
 8011bc4:	e037883a 	mov	sp,fp
 8011bc8:	dfc00117 	ldw	ra,4(sp)
 8011bcc:	df000017 	ldw	fp,0(sp)
 8011bd0:	dec00204 	addi	sp,sp,8
 8011bd4:	f800283a 	ret

08011bd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8011bd8:	defffe04 	addi	sp,sp,-8
 8011bdc:	dfc00115 	stw	ra,4(sp)
 8011be0:	df000015 	stw	fp,0(sp)
 8011be4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8011be8:	d0a00e17 	ldw	r2,-32712(gp)
 8011bec:	10000326 	beq	r2,zero,8011bfc <alt_get_errno+0x24>
 8011bf0:	d0a00e17 	ldw	r2,-32712(gp)
 8011bf4:	103ee83a 	callr	r2
 8011bf8:	00000106 	br	8011c00 <alt_get_errno+0x28>
 8011bfc:	d0a78f04 	addi	r2,gp,-25028
}
 8011c00:	e037883a 	mov	sp,fp
 8011c04:	dfc00117 	ldw	ra,4(sp)
 8011c08:	df000017 	ldw	fp,0(sp)
 8011c0c:	dec00204 	addi	sp,sp,8
 8011c10:	f800283a 	ret

08011c14 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 8011c14:	defff904 	addi	sp,sp,-28
 8011c18:	dfc00615 	stw	ra,24(sp)
 8011c1c:	df000515 	stw	fp,20(sp)
 8011c20:	df000504 	addi	fp,sp,20
 8011c24:	e13ffd15 	stw	r4,-12(fp)
 8011c28:	e17ffe15 	stw	r5,-8(fp)
 8011c2c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 8011c30:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8011c34:	e0bffd17 	ldw	r2,-12(fp)
 8011c38:	10000816 	blt	r2,zero,8011c5c <lseek+0x48>
 8011c3c:	01400304 	movi	r5,12
 8011c40:	e13ffd17 	ldw	r4,-12(fp)
 8011c44:	80010a00 	call	80010a0 <__mulsi3>
 8011c48:	1007883a 	mov	r3,r2
 8011c4c:	00820074 	movhi	r2,2049
 8011c50:	10944904 	addi	r2,r2,20772
 8011c54:	1885883a 	add	r2,r3,r2
 8011c58:	00000106 	br	8011c60 <lseek+0x4c>
 8011c5c:	0005883a 	mov	r2,zero
 8011c60:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 8011c64:	e0bffc17 	ldw	r2,-16(fp)
 8011c68:	10001026 	beq	r2,zero,8011cac <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 8011c6c:	e0bffc17 	ldw	r2,-16(fp)
 8011c70:	10800017 	ldw	r2,0(r2)
 8011c74:	10800717 	ldw	r2,28(r2)
 8011c78:	10000926 	beq	r2,zero,8011ca0 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 8011c7c:	e0bffc17 	ldw	r2,-16(fp)
 8011c80:	10800017 	ldw	r2,0(r2)
 8011c84:	10800717 	ldw	r2,28(r2)
 8011c88:	e1bfff17 	ldw	r6,-4(fp)
 8011c8c:	e17ffe17 	ldw	r5,-8(fp)
 8011c90:	e13ffc17 	ldw	r4,-16(fp)
 8011c94:	103ee83a 	callr	r2
 8011c98:	e0bffb15 	stw	r2,-20(fp)
 8011c9c:	00000506 	br	8011cb4 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 8011ca0:	00bfde84 	movi	r2,-134
 8011ca4:	e0bffb15 	stw	r2,-20(fp)
 8011ca8:	00000206 	br	8011cb4 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 8011cac:	00bfebc4 	movi	r2,-81
 8011cb0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 8011cb4:	e0bffb17 	ldw	r2,-20(fp)
 8011cb8:	1000070e 	bge	r2,zero,8011cd8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 8011cbc:	8011bd80 	call	8011bd8 <alt_get_errno>
 8011cc0:	1007883a 	mov	r3,r2
 8011cc4:	e0bffb17 	ldw	r2,-20(fp)
 8011cc8:	0085c83a 	sub	r2,zero,r2
 8011ccc:	18800015 	stw	r2,0(r3)
    rc = -1;
 8011cd0:	00bfffc4 	movi	r2,-1
 8011cd4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 8011cd8:	e0bffb17 	ldw	r2,-20(fp)
}
 8011cdc:	e037883a 	mov	sp,fp
 8011ce0:	dfc00117 	ldw	ra,4(sp)
 8011ce4:	df000017 	ldw	fp,0(sp)
 8011ce8:	dec00204 	addi	sp,sp,8
 8011cec:	f800283a 	ret

08011cf0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 8011cf0:	defffd04 	addi	sp,sp,-12
 8011cf4:	dfc00215 	stw	ra,8(sp)
 8011cf8:	df000115 	stw	fp,4(sp)
 8011cfc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 8011d00:	0009883a 	mov	r4,zero
 8011d04:	80121c80 	call	80121c8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 8011d08:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 8011d0c:	80122000 	call	8012200 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 8011d10:	01820074 	movhi	r6,2049
 8011d14:	31915404 	addi	r6,r6,17744
 8011d18:	01420074 	movhi	r5,2049
 8011d1c:	29515404 	addi	r5,r5,17744
 8011d20:	01020074 	movhi	r4,2049
 8011d24:	21115404 	addi	r4,r4,17744
 8011d28:	80135a80 	call	80135a8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 8011d2c:	80131440 	call	8013144 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 8011d30:	01020074 	movhi	r4,2049
 8011d34:	210c6904 	addi	r4,r4,12708
 8011d38:	8013d680 	call	8013d68 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 8011d3c:	d0a79017 	ldw	r2,-25024(gp)
 8011d40:	d0e79117 	ldw	r3,-25020(gp)
 8011d44:	d1279217 	ldw	r4,-25016(gp)
 8011d48:	200d883a 	mov	r6,r4
 8011d4c:	180b883a 	mov	r5,r3
 8011d50:	1009883a 	mov	r4,r2
 8011d54:	800026c0 	call	800026c <main>
 8011d58:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 8011d5c:	01000044 	movi	r4,1
 8011d60:	801180c0 	call	801180c <close>
  exit (result);
 8011d64:	e13fff17 	ldw	r4,-4(fp)
 8011d68:	8013d7c0 	call	8013d7c <exit>

08011d6c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 8011d6c:	defffe04 	addi	sp,sp,-8
 8011d70:	df000115 	stw	fp,4(sp)
 8011d74:	df000104 	addi	fp,sp,4
 8011d78:	e13fff15 	stw	r4,-4(fp)
}
 8011d7c:	0001883a 	nop
 8011d80:	e037883a 	mov	sp,fp
 8011d84:	df000017 	ldw	fp,0(sp)
 8011d88:	dec00104 	addi	sp,sp,4
 8011d8c:	f800283a 	ret

08011d90 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 8011d90:	defffe04 	addi	sp,sp,-8
 8011d94:	df000115 	stw	fp,4(sp)
 8011d98:	df000104 	addi	fp,sp,4
 8011d9c:	e13fff15 	stw	r4,-4(fp)
}
 8011da0:	0001883a 	nop
 8011da4:	e037883a 	mov	sp,fp
 8011da8:	df000017 	ldw	fp,0(sp)
 8011dac:	dec00104 	addi	sp,sp,4
 8011db0:	f800283a 	ret

08011db4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8011db4:	defffe04 	addi	sp,sp,-8
 8011db8:	dfc00115 	stw	ra,4(sp)
 8011dbc:	df000015 	stw	fp,0(sp)
 8011dc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8011dc4:	d0a00e17 	ldw	r2,-32712(gp)
 8011dc8:	10000326 	beq	r2,zero,8011dd8 <alt_get_errno+0x24>
 8011dcc:	d0a00e17 	ldw	r2,-32712(gp)
 8011dd0:	103ee83a 	callr	r2
 8011dd4:	00000106 	br	8011ddc <alt_get_errno+0x28>
 8011dd8:	d0a78f04 	addi	r2,gp,-25028
}
 8011ddc:	e037883a 	mov	sp,fp
 8011de0:	dfc00117 	ldw	ra,4(sp)
 8011de4:	df000017 	ldw	fp,0(sp)
 8011de8:	dec00204 	addi	sp,sp,8
 8011dec:	f800283a 	ret

08011df0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 8011df0:	defff904 	addi	sp,sp,-28
 8011df4:	dfc00615 	stw	ra,24(sp)
 8011df8:	df000515 	stw	fp,20(sp)
 8011dfc:	df000504 	addi	fp,sp,20
 8011e00:	e13ffd15 	stw	r4,-12(fp)
 8011e04:	e17ffe15 	stw	r5,-8(fp)
 8011e08:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8011e0c:	e0bffd17 	ldw	r2,-12(fp)
 8011e10:	10000816 	blt	r2,zero,8011e34 <read+0x44>
 8011e14:	01400304 	movi	r5,12
 8011e18:	e13ffd17 	ldw	r4,-12(fp)
 8011e1c:	80010a00 	call	80010a0 <__mulsi3>
 8011e20:	1007883a 	mov	r3,r2
 8011e24:	00820074 	movhi	r2,2049
 8011e28:	10944904 	addi	r2,r2,20772
 8011e2c:	1885883a 	add	r2,r3,r2
 8011e30:	00000106 	br	8011e38 <read+0x48>
 8011e34:	0005883a 	mov	r2,zero
 8011e38:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8011e3c:	e0bffb17 	ldw	r2,-20(fp)
 8011e40:	10002226 	beq	r2,zero,8011ecc <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8011e44:	e0bffb17 	ldw	r2,-20(fp)
 8011e48:	10800217 	ldw	r2,8(r2)
 8011e4c:	108000cc 	andi	r2,r2,3
 8011e50:	10800060 	cmpeqi	r2,r2,1
 8011e54:	1000181e 	bne	r2,zero,8011eb8 <read+0xc8>
        (fd->dev->read))
 8011e58:	e0bffb17 	ldw	r2,-20(fp)
 8011e5c:	10800017 	ldw	r2,0(r2)
 8011e60:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8011e64:	10001426 	beq	r2,zero,8011eb8 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 8011e68:	e0bffb17 	ldw	r2,-20(fp)
 8011e6c:	10800017 	ldw	r2,0(r2)
 8011e70:	10800517 	ldw	r2,20(r2)
 8011e74:	e0ffff17 	ldw	r3,-4(fp)
 8011e78:	180d883a 	mov	r6,r3
 8011e7c:	e17ffe17 	ldw	r5,-8(fp)
 8011e80:	e13ffb17 	ldw	r4,-20(fp)
 8011e84:	103ee83a 	callr	r2
 8011e88:	e0bffc15 	stw	r2,-16(fp)
 8011e8c:	e0bffc17 	ldw	r2,-16(fp)
 8011e90:	1000070e 	bge	r2,zero,8011eb0 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 8011e94:	8011db40 	call	8011db4 <alt_get_errno>
 8011e98:	1007883a 	mov	r3,r2
 8011e9c:	e0bffc17 	ldw	r2,-16(fp)
 8011ea0:	0085c83a 	sub	r2,zero,r2
 8011ea4:	18800015 	stw	r2,0(r3)
          return -1;
 8011ea8:	00bfffc4 	movi	r2,-1
 8011eac:	00000c06 	br	8011ee0 <read+0xf0>
        }
        return rval;
 8011eb0:	e0bffc17 	ldw	r2,-16(fp)
 8011eb4:	00000a06 	br	8011ee0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 8011eb8:	8011db40 	call	8011db4 <alt_get_errno>
 8011ebc:	1007883a 	mov	r3,r2
 8011ec0:	00800344 	movi	r2,13
 8011ec4:	18800015 	stw	r2,0(r3)
 8011ec8:	00000406 	br	8011edc <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 8011ecc:	8011db40 	call	8011db4 <alt_get_errno>
 8011ed0:	1007883a 	mov	r3,r2
 8011ed4:	00801444 	movi	r2,81
 8011ed8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8011edc:	00bfffc4 	movi	r2,-1
}
 8011ee0:	e037883a 	mov	sp,fp
 8011ee4:	dfc00117 	ldw	ra,4(sp)
 8011ee8:	df000017 	ldw	fp,0(sp)
 8011eec:	dec00204 	addi	sp,sp,8
 8011ef0:	f800283a 	ret

08011ef4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 8011ef4:	defffc04 	addi	sp,sp,-16
 8011ef8:	dfc00315 	stw	ra,12(sp)
 8011efc:	df000215 	stw	fp,8(sp)
 8011f00:	dc000115 	stw	r16,4(sp)
 8011f04:	df000204 	addi	fp,sp,8
 8011f08:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 8011f0c:	e0bffe17 	ldw	r2,-8(fp)
 8011f10:	108000d0 	cmplti	r2,r2,3
 8011f14:	1000111e 	bne	r2,zero,8011f5c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 8011f18:	04020074 	movhi	r16,2049
 8011f1c:	84144904 	addi	r16,r16,20772
 8011f20:	e0bffe17 	ldw	r2,-8(fp)
 8011f24:	01400304 	movi	r5,12
 8011f28:	1009883a 	mov	r4,r2
 8011f2c:	80010a00 	call	80010a0 <__mulsi3>
 8011f30:	8085883a 	add	r2,r16,r2
 8011f34:	10800204 	addi	r2,r2,8
 8011f38:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 8011f3c:	04020074 	movhi	r16,2049
 8011f40:	84144904 	addi	r16,r16,20772
 8011f44:	e0bffe17 	ldw	r2,-8(fp)
 8011f48:	01400304 	movi	r5,12
 8011f4c:	1009883a 	mov	r4,r2
 8011f50:	80010a00 	call	80010a0 <__mulsi3>
 8011f54:	8085883a 	add	r2,r16,r2
 8011f58:	10000015 	stw	zero,0(r2)
  }
}
 8011f5c:	0001883a 	nop
 8011f60:	e6ffff04 	addi	sp,fp,-4
 8011f64:	dfc00217 	ldw	ra,8(sp)
 8011f68:	df000117 	ldw	fp,4(sp)
 8011f6c:	dc000017 	ldw	r16,0(sp)
 8011f70:	dec00304 	addi	sp,sp,12
 8011f74:	f800283a 	ret

08011f78 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 8011f78:	defff904 	addi	sp,sp,-28
 8011f7c:	df000615 	stw	fp,24(sp)
 8011f80:	df000604 	addi	fp,sp,24
 8011f84:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011f88:	0005303a 	rdctl	r2,status
 8011f8c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011f90:	e0fffe17 	ldw	r3,-8(fp)
 8011f94:	00bfff84 	movi	r2,-2
 8011f98:	1884703a 	and	r2,r3,r2
 8011f9c:	1001703a 	wrctl	status,r2
  
  return context;
 8011fa0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 8011fa4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 8011fa8:	d0a00f17 	ldw	r2,-32708(gp)
 8011fac:	10c000c4 	addi	r3,r2,3
 8011fb0:	00bfff04 	movi	r2,-4
 8011fb4:	1884703a 	and	r2,r3,r2
 8011fb8:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 8011fbc:	d0e00f17 	ldw	r3,-32708(gp)
 8011fc0:	e0bfff17 	ldw	r2,-4(fp)
 8011fc4:	1887883a 	add	r3,r3,r2
 8011fc8:	00830034 	movhi	r2,3072
 8011fcc:	10800004 	addi	r2,r2,0
 8011fd0:	10c0062e 	bgeu	r2,r3,8011fec <sbrk+0x74>
 8011fd4:	e0bffb17 	ldw	r2,-20(fp)
 8011fd8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011fdc:	e0bffa17 	ldw	r2,-24(fp)
 8011fe0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 8011fe4:	00bfffc4 	movi	r2,-1
 8011fe8:	00000b06 	br	8012018 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 8011fec:	d0a00f17 	ldw	r2,-32708(gp)
 8011ff0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 8011ff4:	d0e00f17 	ldw	r3,-32708(gp)
 8011ff8:	e0bfff17 	ldw	r2,-4(fp)
 8011ffc:	1885883a 	add	r2,r3,r2
 8012000:	d0a00f15 	stw	r2,-32708(gp)
 8012004:	e0bffb17 	ldw	r2,-20(fp)
 8012008:	e0bffc15 	stw	r2,-16(fp)
 801200c:	e0bffc17 	ldw	r2,-16(fp)
 8012010:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 8012014:	e0bffd17 	ldw	r2,-12(fp)
} 
 8012018:	e037883a 	mov	sp,fp
 801201c:	df000017 	ldw	fp,0(sp)
 8012020:	dec00104 	addi	sp,sp,4
 8012024:	f800283a 	ret

08012028 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 8012028:	defffd04 	addi	sp,sp,-12
 801202c:	dfc00215 	stw	ra,8(sp)
 8012030:	df000115 	stw	fp,4(sp)
 8012034:	df000104 	addi	fp,sp,4
 8012038:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 801203c:	e13fff17 	ldw	r4,-4(fp)
 8012040:	8012eec0 	call	8012eec <alt_busy_sleep>
}
 8012044:	e037883a 	mov	sp,fp
 8012048:	dfc00117 	ldw	ra,4(sp)
 801204c:	df000017 	ldw	fp,0(sp)
 8012050:	dec00204 	addi	sp,sp,8
 8012054:	f800283a 	ret

08012058 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8012058:	defffe04 	addi	sp,sp,-8
 801205c:	dfc00115 	stw	ra,4(sp)
 8012060:	df000015 	stw	fp,0(sp)
 8012064:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8012068:	d0a00e17 	ldw	r2,-32712(gp)
 801206c:	10000326 	beq	r2,zero,801207c <alt_get_errno+0x24>
 8012070:	d0a00e17 	ldw	r2,-32712(gp)
 8012074:	103ee83a 	callr	r2
 8012078:	00000106 	br	8012080 <alt_get_errno+0x28>
 801207c:	d0a78f04 	addi	r2,gp,-25028
}
 8012080:	e037883a 	mov	sp,fp
 8012084:	dfc00117 	ldw	ra,4(sp)
 8012088:	df000017 	ldw	fp,0(sp)
 801208c:	dec00204 	addi	sp,sp,8
 8012090:	f800283a 	ret

08012094 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 8012094:	defff904 	addi	sp,sp,-28
 8012098:	dfc00615 	stw	ra,24(sp)
 801209c:	df000515 	stw	fp,20(sp)
 80120a0:	df000504 	addi	fp,sp,20
 80120a4:	e13ffd15 	stw	r4,-12(fp)
 80120a8:	e17ffe15 	stw	r5,-8(fp)
 80120ac:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80120b0:	e0bffd17 	ldw	r2,-12(fp)
 80120b4:	10000816 	blt	r2,zero,80120d8 <write+0x44>
 80120b8:	01400304 	movi	r5,12
 80120bc:	e13ffd17 	ldw	r4,-12(fp)
 80120c0:	80010a00 	call	80010a0 <__mulsi3>
 80120c4:	1007883a 	mov	r3,r2
 80120c8:	00820074 	movhi	r2,2049
 80120cc:	10944904 	addi	r2,r2,20772
 80120d0:	1885883a 	add	r2,r3,r2
 80120d4:	00000106 	br	80120dc <write+0x48>
 80120d8:	0005883a 	mov	r2,zero
 80120dc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 80120e0:	e0bffb17 	ldw	r2,-20(fp)
 80120e4:	10002126 	beq	r2,zero,801216c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 80120e8:	e0bffb17 	ldw	r2,-20(fp)
 80120ec:	10800217 	ldw	r2,8(r2)
 80120f0:	108000cc 	andi	r2,r2,3
 80120f4:	10001826 	beq	r2,zero,8012158 <write+0xc4>
 80120f8:	e0bffb17 	ldw	r2,-20(fp)
 80120fc:	10800017 	ldw	r2,0(r2)
 8012100:	10800617 	ldw	r2,24(r2)
 8012104:	10001426 	beq	r2,zero,8012158 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 8012108:	e0bffb17 	ldw	r2,-20(fp)
 801210c:	10800017 	ldw	r2,0(r2)
 8012110:	10800617 	ldw	r2,24(r2)
 8012114:	e0ffff17 	ldw	r3,-4(fp)
 8012118:	180d883a 	mov	r6,r3
 801211c:	e17ffe17 	ldw	r5,-8(fp)
 8012120:	e13ffb17 	ldw	r4,-20(fp)
 8012124:	103ee83a 	callr	r2
 8012128:	e0bffc15 	stw	r2,-16(fp)
 801212c:	e0bffc17 	ldw	r2,-16(fp)
 8012130:	1000070e 	bge	r2,zero,8012150 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 8012134:	80120580 	call	8012058 <alt_get_errno>
 8012138:	1007883a 	mov	r3,r2
 801213c:	e0bffc17 	ldw	r2,-16(fp)
 8012140:	0085c83a 	sub	r2,zero,r2
 8012144:	18800015 	stw	r2,0(r3)
        return -1;
 8012148:	00bfffc4 	movi	r2,-1
 801214c:	00000c06 	br	8012180 <write+0xec>
      }
      return rval;
 8012150:	e0bffc17 	ldw	r2,-16(fp)
 8012154:	00000a06 	br	8012180 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 8012158:	80120580 	call	8012058 <alt_get_errno>
 801215c:	1007883a 	mov	r3,r2
 8012160:	00800344 	movi	r2,13
 8012164:	18800015 	stw	r2,0(r3)
 8012168:	00000406 	br	801217c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 801216c:	80120580 	call	8012058 <alt_get_errno>
 8012170:	1007883a 	mov	r3,r2
 8012174:	00801444 	movi	r2,81
 8012178:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801217c:	00bfffc4 	movi	r2,-1
}
 8012180:	e037883a 	mov	sp,fp
 8012184:	dfc00117 	ldw	ra,4(sp)
 8012188:	df000017 	ldw	fp,0(sp)
 801218c:	dec00204 	addi	sp,sp,8
 8012190:	f800283a 	ret

08012194 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 8012194:	defffd04 	addi	sp,sp,-12
 8012198:	dfc00215 	stw	ra,8(sp)
 801219c:	df000115 	stw	fp,4(sp)
 80121a0:	df000104 	addi	fp,sp,4
 80121a4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 80121a8:	d1600b04 	addi	r5,gp,-32724
 80121ac:	e13fff17 	ldw	r4,-4(fp)
 80121b0:	80130a00 	call	80130a0 <alt_dev_llist_insert>
}
 80121b4:	e037883a 	mov	sp,fp
 80121b8:	dfc00117 	ldw	ra,4(sp)
 80121bc:	df000017 	ldw	fp,0(sp)
 80121c0:	dec00204 	addi	sp,sp,8
 80121c4:	f800283a 	ret

080121c8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 80121c8:	defffd04 	addi	sp,sp,-12
 80121cc:	dfc00215 	stw	ra,8(sp)
 80121d0:	df000115 	stw	fp,4(sp)
 80121d4:	df000104 	addi	fp,sp,4
 80121d8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 80121dc:	8013a4c0 	call	8013a4c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 80121e0:	00800044 	movi	r2,1
 80121e4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 80121e8:	0001883a 	nop
 80121ec:	e037883a 	mov	sp,fp
 80121f0:	dfc00117 	ldw	ra,4(sp)
 80121f4:	df000017 	ldw	fp,0(sp)
 80121f8:	dec00204 	addi	sp,sp,8
 80121fc:	f800283a 	ret

08012200 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 8012200:	defffe04 	addi	sp,sp,-8
 8012204:	dfc00115 	stw	ra,4(sp)
 8012208:	df000015 	stw	fp,0(sp)
 801220c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 8012210:	01c0fa04 	movi	r7,1000
 8012214:	01800084 	movi	r6,2
 8012218:	000b883a 	mov	r5,zero
 801221c:	01002004 	movi	r4,128
 8012220:	8012d440 	call	8012d44 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 8012224:	01800044 	movi	r6,1
 8012228:	000b883a 	mov	r5,zero
 801222c:	01020074 	movhi	r4,2049
 8012230:	2114b304 	addi	r4,r4,21196
 8012234:	80123c80 	call	80123c8 <altera_avalon_jtag_uart_init>
 8012238:	01020074 	movhi	r4,2049
 801223c:	2114a904 	addi	r4,r4,21156
 8012240:	80121940 	call	8012194 <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI_0, spi_0);
 8012244:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 8012248:	0001883a 	nop
}
 801224c:	0001883a 	nop
 8012250:	e037883a 	mov	sp,fp
 8012254:	dfc00117 	ldw	ra,4(sp)
 8012258:	df000017 	ldw	fp,0(sp)
 801225c:	dec00204 	addi	sp,sp,8
 8012260:	f800283a 	ret

08012264 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 8012264:	defffa04 	addi	sp,sp,-24
 8012268:	dfc00515 	stw	ra,20(sp)
 801226c:	df000415 	stw	fp,16(sp)
 8012270:	df000404 	addi	fp,sp,16
 8012274:	e13ffd15 	stw	r4,-12(fp)
 8012278:	e17ffe15 	stw	r5,-8(fp)
 801227c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8012280:	e0bffd17 	ldw	r2,-12(fp)
 8012284:	10800017 	ldw	r2,0(r2)
 8012288:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 801228c:	e0bffc17 	ldw	r2,-16(fp)
 8012290:	10c00a04 	addi	r3,r2,40
 8012294:	e0bffd17 	ldw	r2,-12(fp)
 8012298:	10800217 	ldw	r2,8(r2)
 801229c:	100f883a 	mov	r7,r2
 80122a0:	e1bfff17 	ldw	r6,-4(fp)
 80122a4:	e17ffe17 	ldw	r5,-8(fp)
 80122a8:	1809883a 	mov	r4,r3
 80122ac:	801288c0 	call	801288c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 80122b0:	e037883a 	mov	sp,fp
 80122b4:	dfc00117 	ldw	ra,4(sp)
 80122b8:	df000017 	ldw	fp,0(sp)
 80122bc:	dec00204 	addi	sp,sp,8
 80122c0:	f800283a 	ret

080122c4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 80122c4:	defffa04 	addi	sp,sp,-24
 80122c8:	dfc00515 	stw	ra,20(sp)
 80122cc:	df000415 	stw	fp,16(sp)
 80122d0:	df000404 	addi	fp,sp,16
 80122d4:	e13ffd15 	stw	r4,-12(fp)
 80122d8:	e17ffe15 	stw	r5,-8(fp)
 80122dc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80122e0:	e0bffd17 	ldw	r2,-12(fp)
 80122e4:	10800017 	ldw	r2,0(r2)
 80122e8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 80122ec:	e0bffc17 	ldw	r2,-16(fp)
 80122f0:	10c00a04 	addi	r3,r2,40
 80122f4:	e0bffd17 	ldw	r2,-12(fp)
 80122f8:	10800217 	ldw	r2,8(r2)
 80122fc:	100f883a 	mov	r7,r2
 8012300:	e1bfff17 	ldw	r6,-4(fp)
 8012304:	e17ffe17 	ldw	r5,-8(fp)
 8012308:	1809883a 	mov	r4,r3
 801230c:	8012aa80 	call	8012aa8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 8012310:	e037883a 	mov	sp,fp
 8012314:	dfc00117 	ldw	ra,4(sp)
 8012318:	df000017 	ldw	fp,0(sp)
 801231c:	dec00204 	addi	sp,sp,8
 8012320:	f800283a 	ret

08012324 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 8012324:	defffc04 	addi	sp,sp,-16
 8012328:	dfc00315 	stw	ra,12(sp)
 801232c:	df000215 	stw	fp,8(sp)
 8012330:	df000204 	addi	fp,sp,8
 8012334:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8012338:	e0bfff17 	ldw	r2,-4(fp)
 801233c:	10800017 	ldw	r2,0(r2)
 8012340:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 8012344:	e0bffe17 	ldw	r2,-8(fp)
 8012348:	10c00a04 	addi	r3,r2,40
 801234c:	e0bfff17 	ldw	r2,-4(fp)
 8012350:	10800217 	ldw	r2,8(r2)
 8012354:	100b883a 	mov	r5,r2
 8012358:	1809883a 	mov	r4,r3
 801235c:	80127340 	call	8012734 <altera_avalon_jtag_uart_close>
}
 8012360:	e037883a 	mov	sp,fp
 8012364:	dfc00117 	ldw	ra,4(sp)
 8012368:	df000017 	ldw	fp,0(sp)
 801236c:	dec00204 	addi	sp,sp,8
 8012370:	f800283a 	ret

08012374 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 8012374:	defffa04 	addi	sp,sp,-24
 8012378:	dfc00515 	stw	ra,20(sp)
 801237c:	df000415 	stw	fp,16(sp)
 8012380:	df000404 	addi	fp,sp,16
 8012384:	e13ffd15 	stw	r4,-12(fp)
 8012388:	e17ffe15 	stw	r5,-8(fp)
 801238c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 8012390:	e0bffd17 	ldw	r2,-12(fp)
 8012394:	10800017 	ldw	r2,0(r2)
 8012398:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 801239c:	e0bffc17 	ldw	r2,-16(fp)
 80123a0:	10800a04 	addi	r2,r2,40
 80123a4:	e1bfff17 	ldw	r6,-4(fp)
 80123a8:	e17ffe17 	ldw	r5,-8(fp)
 80123ac:	1009883a 	mov	r4,r2
 80123b0:	801279c0 	call	801279c <altera_avalon_jtag_uart_ioctl>
}
 80123b4:	e037883a 	mov	sp,fp
 80123b8:	dfc00117 	ldw	ra,4(sp)
 80123bc:	df000017 	ldw	fp,0(sp)
 80123c0:	dec00204 	addi	sp,sp,8
 80123c4:	f800283a 	ret

080123c8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 80123c8:	defffa04 	addi	sp,sp,-24
 80123cc:	dfc00515 	stw	ra,20(sp)
 80123d0:	df000415 	stw	fp,16(sp)
 80123d4:	df000404 	addi	fp,sp,16
 80123d8:	e13ffd15 	stw	r4,-12(fp)
 80123dc:	e17ffe15 	stw	r5,-8(fp)
 80123e0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 80123e4:	e0bffd17 	ldw	r2,-12(fp)
 80123e8:	00c00044 	movi	r3,1
 80123ec:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 80123f0:	e0bffd17 	ldw	r2,-12(fp)
 80123f4:	10800017 	ldw	r2,0(r2)
 80123f8:	10800104 	addi	r2,r2,4
 80123fc:	1007883a 	mov	r3,r2
 8012400:	e0bffd17 	ldw	r2,-12(fp)
 8012404:	10800817 	ldw	r2,32(r2)
 8012408:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 801240c:	e0bffe17 	ldw	r2,-8(fp)
 8012410:	e0ffff17 	ldw	r3,-4(fp)
 8012414:	d8000015 	stw	zero,0(sp)
 8012418:	e1fffd17 	ldw	r7,-12(fp)
 801241c:	01820074 	movhi	r6,2049
 8012420:	31892204 	addi	r6,r6,9352
 8012424:	180b883a 	mov	r5,r3
 8012428:	1009883a 	mov	r4,r2
 801242c:	80132240 	call	8013224 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 8012430:	e0bffd17 	ldw	r2,-12(fp)
 8012434:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 8012438:	e0bffd17 	ldw	r2,-12(fp)
 801243c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8012440:	d0e79417 	ldw	r3,-25008(gp)
 8012444:	e1fffd17 	ldw	r7,-12(fp)
 8012448:	01820074 	movhi	r6,2049
 801244c:	3189a504 	addi	r6,r6,9876
 8012450:	180b883a 	mov	r5,r3
 8012454:	1009883a 	mov	r4,r2
 8012458:	8012dc00 	call	8012dc0 <alt_alarm_start>
 801245c:	1000040e 	bge	r2,zero,8012470 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 8012460:	e0fffd17 	ldw	r3,-12(fp)
 8012464:	00a00034 	movhi	r2,32768
 8012468:	10bfffc4 	addi	r2,r2,-1
 801246c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 8012470:	0001883a 	nop
 8012474:	e037883a 	mov	sp,fp
 8012478:	dfc00117 	ldw	ra,4(sp)
 801247c:	df000017 	ldw	fp,0(sp)
 8012480:	dec00204 	addi	sp,sp,8
 8012484:	f800283a 	ret

08012488 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 8012488:	defff804 	addi	sp,sp,-32
 801248c:	df000715 	stw	fp,28(sp)
 8012490:	df000704 	addi	fp,sp,28
 8012494:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8012498:	e0bfff17 	ldw	r2,-4(fp)
 801249c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 80124a0:	e0bffb17 	ldw	r2,-20(fp)
 80124a4:	10800017 	ldw	r2,0(r2)
 80124a8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 80124ac:	e0bffc17 	ldw	r2,-16(fp)
 80124b0:	10800104 	addi	r2,r2,4
 80124b4:	10800037 	ldwio	r2,0(r2)
 80124b8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 80124bc:	e0bffd17 	ldw	r2,-12(fp)
 80124c0:	1080c00c 	andi	r2,r2,768
 80124c4:	10006d26 	beq	r2,zero,801267c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 80124c8:	e0bffd17 	ldw	r2,-12(fp)
 80124cc:	1080400c 	andi	r2,r2,256
 80124d0:	10003526 	beq	r2,zero,80125a8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 80124d4:	00800074 	movhi	r2,1
 80124d8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 80124dc:	e0bffb17 	ldw	r2,-20(fp)
 80124e0:	10800a17 	ldw	r2,40(r2)
 80124e4:	10800044 	addi	r2,r2,1
 80124e8:	1081ffcc 	andi	r2,r2,2047
 80124ec:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 80124f0:	e0bffb17 	ldw	r2,-20(fp)
 80124f4:	10c00b17 	ldw	r3,44(r2)
 80124f8:	e0bffe17 	ldw	r2,-8(fp)
 80124fc:	18801526 	beq	r3,r2,8012554 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8012500:	e0bffc17 	ldw	r2,-16(fp)
 8012504:	10800037 	ldwio	r2,0(r2)
 8012508:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 801250c:	e0bff917 	ldw	r2,-28(fp)
 8012510:	10a0000c 	andi	r2,r2,32768
 8012514:	10001126 	beq	r2,zero,801255c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 8012518:	e0bffb17 	ldw	r2,-20(fp)
 801251c:	10800a17 	ldw	r2,40(r2)
 8012520:	e0fff917 	ldw	r3,-28(fp)
 8012524:	1809883a 	mov	r4,r3
 8012528:	e0fffb17 	ldw	r3,-20(fp)
 801252c:	1885883a 	add	r2,r3,r2
 8012530:	10800e04 	addi	r2,r2,56
 8012534:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8012538:	e0bffb17 	ldw	r2,-20(fp)
 801253c:	10800a17 	ldw	r2,40(r2)
 8012540:	10800044 	addi	r2,r2,1
 8012544:	10c1ffcc 	andi	r3,r2,2047
 8012548:	e0bffb17 	ldw	r2,-20(fp)
 801254c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 8012550:	003fe206 	br	80124dc <__alt_data_end+0xfc0124dc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 8012554:	0001883a 	nop
 8012558:	00000106 	br	8012560 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 801255c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 8012560:	e0bff917 	ldw	r2,-28(fp)
 8012564:	10bfffec 	andhi	r2,r2,65535
 8012568:	10000f26 	beq	r2,zero,80125a8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801256c:	e0bffb17 	ldw	r2,-20(fp)
 8012570:	10c00817 	ldw	r3,32(r2)
 8012574:	00bfff84 	movi	r2,-2
 8012578:	1886703a 	and	r3,r3,r2
 801257c:	e0bffb17 	ldw	r2,-20(fp)
 8012580:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 8012584:	e0bffc17 	ldw	r2,-16(fp)
 8012588:	10800104 	addi	r2,r2,4
 801258c:	1007883a 	mov	r3,r2
 8012590:	e0bffb17 	ldw	r2,-20(fp)
 8012594:	10800817 	ldw	r2,32(r2)
 8012598:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801259c:	e0bffc17 	ldw	r2,-16(fp)
 80125a0:	10800104 	addi	r2,r2,4
 80125a4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 80125a8:	e0bffd17 	ldw	r2,-12(fp)
 80125ac:	1080800c 	andi	r2,r2,512
 80125b0:	103fbe26 	beq	r2,zero,80124ac <__alt_data_end+0xfc0124ac>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 80125b4:	e0bffd17 	ldw	r2,-12(fp)
 80125b8:	1004d43a 	srli	r2,r2,16
 80125bc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 80125c0:	00001406 	br	8012614 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 80125c4:	e0bffc17 	ldw	r2,-16(fp)
 80125c8:	e0fffb17 	ldw	r3,-20(fp)
 80125cc:	18c00d17 	ldw	r3,52(r3)
 80125d0:	e13ffb17 	ldw	r4,-20(fp)
 80125d4:	20c7883a 	add	r3,r4,r3
 80125d8:	18c20e04 	addi	r3,r3,2104
 80125dc:	18c00003 	ldbu	r3,0(r3)
 80125e0:	18c03fcc 	andi	r3,r3,255
 80125e4:	18c0201c 	xori	r3,r3,128
 80125e8:	18ffe004 	addi	r3,r3,-128
 80125ec:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 80125f0:	e0bffb17 	ldw	r2,-20(fp)
 80125f4:	10800d17 	ldw	r2,52(r2)
 80125f8:	10800044 	addi	r2,r2,1
 80125fc:	10c1ffcc 	andi	r3,r2,2047
 8012600:	e0bffb17 	ldw	r2,-20(fp)
 8012604:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 8012608:	e0bffa17 	ldw	r2,-24(fp)
 801260c:	10bfffc4 	addi	r2,r2,-1
 8012610:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 8012614:	e0bffa17 	ldw	r2,-24(fp)
 8012618:	10000526 	beq	r2,zero,8012630 <altera_avalon_jtag_uart_irq+0x1a8>
 801261c:	e0bffb17 	ldw	r2,-20(fp)
 8012620:	10c00d17 	ldw	r3,52(r2)
 8012624:	e0bffb17 	ldw	r2,-20(fp)
 8012628:	10800c17 	ldw	r2,48(r2)
 801262c:	18bfe51e 	bne	r3,r2,80125c4 <__alt_data_end+0xfc0125c4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 8012630:	e0bffa17 	ldw	r2,-24(fp)
 8012634:	103f9d26 	beq	r2,zero,80124ac <__alt_data_end+0xfc0124ac>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8012638:	e0bffb17 	ldw	r2,-20(fp)
 801263c:	10c00817 	ldw	r3,32(r2)
 8012640:	00bfff44 	movi	r2,-3
 8012644:	1886703a 	and	r3,r3,r2
 8012648:	e0bffb17 	ldw	r2,-20(fp)
 801264c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8012650:	e0bffb17 	ldw	r2,-20(fp)
 8012654:	10800017 	ldw	r2,0(r2)
 8012658:	10800104 	addi	r2,r2,4
 801265c:	1007883a 	mov	r3,r2
 8012660:	e0bffb17 	ldw	r2,-20(fp)
 8012664:	10800817 	ldw	r2,32(r2)
 8012668:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801266c:	e0bffc17 	ldw	r2,-16(fp)
 8012670:	10800104 	addi	r2,r2,4
 8012674:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 8012678:	003f8c06 	br	80124ac <__alt_data_end+0xfc0124ac>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 801267c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 8012680:	0001883a 	nop
 8012684:	e037883a 	mov	sp,fp
 8012688:	df000017 	ldw	fp,0(sp)
 801268c:	dec00104 	addi	sp,sp,4
 8012690:	f800283a 	ret

08012694 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 8012694:	defff804 	addi	sp,sp,-32
 8012698:	df000715 	stw	fp,28(sp)
 801269c:	df000704 	addi	fp,sp,28
 80126a0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 80126a4:	e0bffb17 	ldw	r2,-20(fp)
 80126a8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 80126ac:	e0bff917 	ldw	r2,-28(fp)
 80126b0:	10800017 	ldw	r2,0(r2)
 80126b4:	10800104 	addi	r2,r2,4
 80126b8:	10800037 	ldwio	r2,0(r2)
 80126bc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 80126c0:	e0bffa17 	ldw	r2,-24(fp)
 80126c4:	1081000c 	andi	r2,r2,1024
 80126c8:	10000b26 	beq	r2,zero,80126f8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 80126cc:	e0bff917 	ldw	r2,-28(fp)
 80126d0:	10800017 	ldw	r2,0(r2)
 80126d4:	10800104 	addi	r2,r2,4
 80126d8:	1007883a 	mov	r3,r2
 80126dc:	e0bff917 	ldw	r2,-28(fp)
 80126e0:	10800817 	ldw	r2,32(r2)
 80126e4:	10810014 	ori	r2,r2,1024
 80126e8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 80126ec:	e0bff917 	ldw	r2,-28(fp)
 80126f0:	10000915 	stw	zero,36(r2)
 80126f4:	00000a06 	br	8012720 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 80126f8:	e0bff917 	ldw	r2,-28(fp)
 80126fc:	10c00917 	ldw	r3,36(r2)
 8012700:	00a00034 	movhi	r2,32768
 8012704:	10bfff04 	addi	r2,r2,-4
 8012708:	10c00536 	bltu	r2,r3,8012720 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 801270c:	e0bff917 	ldw	r2,-28(fp)
 8012710:	10800917 	ldw	r2,36(r2)
 8012714:	10c00044 	addi	r3,r2,1
 8012718:	e0bff917 	ldw	r2,-28(fp)
 801271c:	10c00915 	stw	r3,36(r2)
 8012720:	d0a79417 	ldw	r2,-25008(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 8012724:	e037883a 	mov	sp,fp
 8012728:	df000017 	ldw	fp,0(sp)
 801272c:	dec00104 	addi	sp,sp,4
 8012730:	f800283a 	ret

08012734 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 8012734:	defffd04 	addi	sp,sp,-12
 8012738:	df000215 	stw	fp,8(sp)
 801273c:	df000204 	addi	fp,sp,8
 8012740:	e13ffe15 	stw	r4,-8(fp)
 8012744:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8012748:	00000506 	br	8012760 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 801274c:	e0bfff17 	ldw	r2,-4(fp)
 8012750:	1090000c 	andi	r2,r2,16384
 8012754:	10000226 	beq	r2,zero,8012760 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 8012758:	00bffd44 	movi	r2,-11
 801275c:	00000b06 	br	801278c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8012760:	e0bffe17 	ldw	r2,-8(fp)
 8012764:	10c00d17 	ldw	r3,52(r2)
 8012768:	e0bffe17 	ldw	r2,-8(fp)
 801276c:	10800c17 	ldw	r2,48(r2)
 8012770:	18800526 	beq	r3,r2,8012788 <altera_avalon_jtag_uart_close+0x54>
 8012774:	e0bffe17 	ldw	r2,-8(fp)
 8012778:	10c00917 	ldw	r3,36(r2)
 801277c:	e0bffe17 	ldw	r2,-8(fp)
 8012780:	10800117 	ldw	r2,4(r2)
 8012784:	18bff136 	bltu	r3,r2,801274c <__alt_data_end+0xfc01274c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 8012788:	0005883a 	mov	r2,zero
}
 801278c:	e037883a 	mov	sp,fp
 8012790:	df000017 	ldw	fp,0(sp)
 8012794:	dec00104 	addi	sp,sp,4
 8012798:	f800283a 	ret

0801279c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 801279c:	defffa04 	addi	sp,sp,-24
 80127a0:	df000515 	stw	fp,20(sp)
 80127a4:	df000504 	addi	fp,sp,20
 80127a8:	e13ffd15 	stw	r4,-12(fp)
 80127ac:	e17ffe15 	stw	r5,-8(fp)
 80127b0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 80127b4:	00bff9c4 	movi	r2,-25
 80127b8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 80127bc:	e0bffe17 	ldw	r2,-8(fp)
 80127c0:	10da8060 	cmpeqi	r3,r2,27137
 80127c4:	1800031e 	bne	r3,zero,80127d4 <altera_avalon_jtag_uart_ioctl+0x38>
 80127c8:	109a80a0 	cmpeqi	r2,r2,27138
 80127cc:	1000181e 	bne	r2,zero,8012830 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 80127d0:	00002906 	br	8012878 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 80127d4:	e0bffd17 	ldw	r2,-12(fp)
 80127d8:	10c00117 	ldw	r3,4(r2)
 80127dc:	00a00034 	movhi	r2,32768
 80127e0:	10bfffc4 	addi	r2,r2,-1
 80127e4:	18802126 	beq	r3,r2,801286c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 80127e8:	e0bfff17 	ldw	r2,-4(fp)
 80127ec:	10800017 	ldw	r2,0(r2)
 80127f0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 80127f4:	e0bffc17 	ldw	r2,-16(fp)
 80127f8:	10800090 	cmplti	r2,r2,2
 80127fc:	1000061e 	bne	r2,zero,8012818 <altera_avalon_jtag_uart_ioctl+0x7c>
 8012800:	e0fffc17 	ldw	r3,-16(fp)
 8012804:	00a00034 	movhi	r2,32768
 8012808:	10bfffc4 	addi	r2,r2,-1
 801280c:	18800226 	beq	r3,r2,8012818 <altera_avalon_jtag_uart_ioctl+0x7c>
 8012810:	e0bffc17 	ldw	r2,-16(fp)
 8012814:	00000206 	br	8012820 <altera_avalon_jtag_uart_ioctl+0x84>
 8012818:	00a00034 	movhi	r2,32768
 801281c:	10bfff84 	addi	r2,r2,-2
 8012820:	e0fffd17 	ldw	r3,-12(fp)
 8012824:	18800115 	stw	r2,4(r3)
      rc = 0;
 8012828:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801282c:	00000f06 	br	801286c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 8012830:	e0bffd17 	ldw	r2,-12(fp)
 8012834:	10c00117 	ldw	r3,4(r2)
 8012838:	00a00034 	movhi	r2,32768
 801283c:	10bfffc4 	addi	r2,r2,-1
 8012840:	18800c26 	beq	r3,r2,8012874 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 8012844:	e0bffd17 	ldw	r2,-12(fp)
 8012848:	10c00917 	ldw	r3,36(r2)
 801284c:	e0bffd17 	ldw	r2,-12(fp)
 8012850:	10800117 	ldw	r2,4(r2)
 8012854:	1885803a 	cmpltu	r2,r3,r2
 8012858:	10c03fcc 	andi	r3,r2,255
 801285c:	e0bfff17 	ldw	r2,-4(fp)
 8012860:	10c00015 	stw	r3,0(r2)
      rc = 0;
 8012864:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8012868:	00000206 	br	8012874 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 801286c:	0001883a 	nop
 8012870:	00000106 	br	8012878 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 8012874:	0001883a 	nop

  default:
    break;
  }

  return rc;
 8012878:	e0bffb17 	ldw	r2,-20(fp)
}
 801287c:	e037883a 	mov	sp,fp
 8012880:	df000017 	ldw	fp,0(sp)
 8012884:	dec00104 	addi	sp,sp,4
 8012888:	f800283a 	ret

0801288c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 801288c:	defff304 	addi	sp,sp,-52
 8012890:	dfc00c15 	stw	ra,48(sp)
 8012894:	df000b15 	stw	fp,44(sp)
 8012898:	df000b04 	addi	fp,sp,44
 801289c:	e13ffc15 	stw	r4,-16(fp)
 80128a0:	e17ffd15 	stw	r5,-12(fp)
 80128a4:	e1bffe15 	stw	r6,-8(fp)
 80128a8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 80128ac:	e0bffd17 	ldw	r2,-12(fp)
 80128b0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 80128b4:	00004706 	br	80129d4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 80128b8:	e0bffc17 	ldw	r2,-16(fp)
 80128bc:	10800a17 	ldw	r2,40(r2)
 80128c0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 80128c4:	e0bffc17 	ldw	r2,-16(fp)
 80128c8:	10800b17 	ldw	r2,44(r2)
 80128cc:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 80128d0:	e0fff717 	ldw	r3,-36(fp)
 80128d4:	e0bff817 	ldw	r2,-32(fp)
 80128d8:	18800536 	bltu	r3,r2,80128f0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 80128dc:	e0fff717 	ldw	r3,-36(fp)
 80128e0:	e0bff817 	ldw	r2,-32(fp)
 80128e4:	1885c83a 	sub	r2,r3,r2
 80128e8:	e0bff615 	stw	r2,-40(fp)
 80128ec:	00000406 	br	8012900 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 80128f0:	00c20004 	movi	r3,2048
 80128f4:	e0bff817 	ldw	r2,-32(fp)
 80128f8:	1885c83a 	sub	r2,r3,r2
 80128fc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8012900:	e0bff617 	ldw	r2,-40(fp)
 8012904:	10001e26 	beq	r2,zero,8012980 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 8012908:	e0fffe17 	ldw	r3,-8(fp)
 801290c:	e0bff617 	ldw	r2,-40(fp)
 8012910:	1880022e 	bgeu	r3,r2,801291c <altera_avalon_jtag_uart_read+0x90>
        n = space;
 8012914:	e0bffe17 	ldw	r2,-8(fp)
 8012918:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 801291c:	e0bffc17 	ldw	r2,-16(fp)
 8012920:	10c00e04 	addi	r3,r2,56
 8012924:	e0bff817 	ldw	r2,-32(fp)
 8012928:	1885883a 	add	r2,r3,r2
 801292c:	e1bff617 	ldw	r6,-40(fp)
 8012930:	100b883a 	mov	r5,r2
 8012934:	e13ff517 	ldw	r4,-44(fp)
 8012938:	80010c80 	call	80010c8 <memcpy>
      ptr   += n;
 801293c:	e0fff517 	ldw	r3,-44(fp)
 8012940:	e0bff617 	ldw	r2,-40(fp)
 8012944:	1885883a 	add	r2,r3,r2
 8012948:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 801294c:	e0fffe17 	ldw	r3,-8(fp)
 8012950:	e0bff617 	ldw	r2,-40(fp)
 8012954:	1885c83a 	sub	r2,r3,r2
 8012958:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801295c:	e0fff817 	ldw	r3,-32(fp)
 8012960:	e0bff617 	ldw	r2,-40(fp)
 8012964:	1885883a 	add	r2,r3,r2
 8012968:	10c1ffcc 	andi	r3,r2,2047
 801296c:	e0bffc17 	ldw	r2,-16(fp)
 8012970:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 8012974:	e0bffe17 	ldw	r2,-8(fp)
 8012978:	00bfcf16 	blt	zero,r2,80128b8 <__alt_data_end+0xfc0128b8>
 801297c:	00000106 	br	8012984 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 8012980:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 8012984:	e0fff517 	ldw	r3,-44(fp)
 8012988:	e0bffd17 	ldw	r2,-12(fp)
 801298c:	1880141e 	bne	r3,r2,80129e0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 8012990:	e0bfff17 	ldw	r2,-4(fp)
 8012994:	1090000c 	andi	r2,r2,16384
 8012998:	1000131e 	bne	r2,zero,80129e8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 801299c:	0001883a 	nop
 80129a0:	e0bffc17 	ldw	r2,-16(fp)
 80129a4:	10c00a17 	ldw	r3,40(r2)
 80129a8:	e0bff717 	ldw	r2,-36(fp)
 80129ac:	1880051e 	bne	r3,r2,80129c4 <altera_avalon_jtag_uart_read+0x138>
 80129b0:	e0bffc17 	ldw	r2,-16(fp)
 80129b4:	10c00917 	ldw	r3,36(r2)
 80129b8:	e0bffc17 	ldw	r2,-16(fp)
 80129bc:	10800117 	ldw	r2,4(r2)
 80129c0:	18bff736 	bltu	r3,r2,80129a0 <__alt_data_end+0xfc0129a0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 80129c4:	e0bffc17 	ldw	r2,-16(fp)
 80129c8:	10c00a17 	ldw	r3,40(r2)
 80129cc:	e0bff717 	ldw	r2,-36(fp)
 80129d0:	18800726 	beq	r3,r2,80129f0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 80129d4:	e0bffe17 	ldw	r2,-8(fp)
 80129d8:	00bfb716 	blt	zero,r2,80128b8 <__alt_data_end+0xfc0128b8>
 80129dc:	00000506 	br	80129f4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 80129e0:	0001883a 	nop
 80129e4:	00000306 	br	80129f4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 80129e8:	0001883a 	nop
 80129ec:	00000106 	br	80129f4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 80129f0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 80129f4:	e0fff517 	ldw	r3,-44(fp)
 80129f8:	e0bffd17 	ldw	r2,-12(fp)
 80129fc:	18801826 	beq	r3,r2,8012a60 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8012a00:	0005303a 	rdctl	r2,status
 8012a04:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8012a08:	e0fffb17 	ldw	r3,-20(fp)
 8012a0c:	00bfff84 	movi	r2,-2
 8012a10:	1884703a 	and	r2,r3,r2
 8012a14:	1001703a 	wrctl	status,r2
  
  return context;
 8012a18:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 8012a1c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8012a20:	e0bffc17 	ldw	r2,-16(fp)
 8012a24:	10800817 	ldw	r2,32(r2)
 8012a28:	10c00054 	ori	r3,r2,1
 8012a2c:	e0bffc17 	ldw	r2,-16(fp)
 8012a30:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8012a34:	e0bffc17 	ldw	r2,-16(fp)
 8012a38:	10800017 	ldw	r2,0(r2)
 8012a3c:	10800104 	addi	r2,r2,4
 8012a40:	1007883a 	mov	r3,r2
 8012a44:	e0bffc17 	ldw	r2,-16(fp)
 8012a48:	10800817 	ldw	r2,32(r2)
 8012a4c:	18800035 	stwio	r2,0(r3)
 8012a50:	e0bffa17 	ldw	r2,-24(fp)
 8012a54:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8012a58:	e0bff917 	ldw	r2,-28(fp)
 8012a5c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 8012a60:	e0fff517 	ldw	r3,-44(fp)
 8012a64:	e0bffd17 	ldw	r2,-12(fp)
 8012a68:	18800426 	beq	r3,r2,8012a7c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 8012a6c:	e0fff517 	ldw	r3,-44(fp)
 8012a70:	e0bffd17 	ldw	r2,-12(fp)
 8012a74:	1885c83a 	sub	r2,r3,r2
 8012a78:	00000606 	br	8012a94 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 8012a7c:	e0bfff17 	ldw	r2,-4(fp)
 8012a80:	1090000c 	andi	r2,r2,16384
 8012a84:	10000226 	beq	r2,zero,8012a90 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 8012a88:	00bffd44 	movi	r2,-11
 8012a8c:	00000106 	br	8012a94 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 8012a90:	00bffec4 	movi	r2,-5
}
 8012a94:	e037883a 	mov	sp,fp
 8012a98:	dfc00117 	ldw	ra,4(sp)
 8012a9c:	df000017 	ldw	fp,0(sp)
 8012aa0:	dec00204 	addi	sp,sp,8
 8012aa4:	f800283a 	ret

08012aa8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 8012aa8:	defff304 	addi	sp,sp,-52
 8012aac:	dfc00c15 	stw	ra,48(sp)
 8012ab0:	df000b15 	stw	fp,44(sp)
 8012ab4:	df000b04 	addi	fp,sp,44
 8012ab8:	e13ffc15 	stw	r4,-16(fp)
 8012abc:	e17ffd15 	stw	r5,-12(fp)
 8012ac0:	e1bffe15 	stw	r6,-8(fp)
 8012ac4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 8012ac8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 8012acc:	e0bffd17 	ldw	r2,-12(fp)
 8012ad0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8012ad4:	00003706 	br	8012bb4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 8012ad8:	e0bffc17 	ldw	r2,-16(fp)
 8012adc:	10800c17 	ldw	r2,48(r2)
 8012ae0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 8012ae4:	e0bffc17 	ldw	r2,-16(fp)
 8012ae8:	10800d17 	ldw	r2,52(r2)
 8012aec:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 8012af0:	e0fff917 	ldw	r3,-28(fp)
 8012af4:	e0bff517 	ldw	r2,-44(fp)
 8012af8:	1880062e 	bgeu	r3,r2,8012b14 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 8012afc:	e0fff517 	ldw	r3,-44(fp)
 8012b00:	e0bff917 	ldw	r2,-28(fp)
 8012b04:	1885c83a 	sub	r2,r3,r2
 8012b08:	10bfffc4 	addi	r2,r2,-1
 8012b0c:	e0bff615 	stw	r2,-40(fp)
 8012b10:	00000b06 	br	8012b40 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 8012b14:	e0bff517 	ldw	r2,-44(fp)
 8012b18:	10000526 	beq	r2,zero,8012b30 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 8012b1c:	00c20004 	movi	r3,2048
 8012b20:	e0bff917 	ldw	r2,-28(fp)
 8012b24:	1885c83a 	sub	r2,r3,r2
 8012b28:	e0bff615 	stw	r2,-40(fp)
 8012b2c:	00000406 	br	8012b40 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 8012b30:	00c1ffc4 	movi	r3,2047
 8012b34:	e0bff917 	ldw	r2,-28(fp)
 8012b38:	1885c83a 	sub	r2,r3,r2
 8012b3c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8012b40:	e0bff617 	ldw	r2,-40(fp)
 8012b44:	10001e26 	beq	r2,zero,8012bc0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 8012b48:	e0fffe17 	ldw	r3,-8(fp)
 8012b4c:	e0bff617 	ldw	r2,-40(fp)
 8012b50:	1880022e 	bgeu	r3,r2,8012b5c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 8012b54:	e0bffe17 	ldw	r2,-8(fp)
 8012b58:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 8012b5c:	e0bffc17 	ldw	r2,-16(fp)
 8012b60:	10c20e04 	addi	r3,r2,2104
 8012b64:	e0bff917 	ldw	r2,-28(fp)
 8012b68:	1885883a 	add	r2,r3,r2
 8012b6c:	e1bff617 	ldw	r6,-40(fp)
 8012b70:	e17ffd17 	ldw	r5,-12(fp)
 8012b74:	1009883a 	mov	r4,r2
 8012b78:	80010c80 	call	80010c8 <memcpy>
      ptr   += n;
 8012b7c:	e0fffd17 	ldw	r3,-12(fp)
 8012b80:	e0bff617 	ldw	r2,-40(fp)
 8012b84:	1885883a 	add	r2,r3,r2
 8012b88:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 8012b8c:	e0fffe17 	ldw	r3,-8(fp)
 8012b90:	e0bff617 	ldw	r2,-40(fp)
 8012b94:	1885c83a 	sub	r2,r3,r2
 8012b98:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8012b9c:	e0fff917 	ldw	r3,-28(fp)
 8012ba0:	e0bff617 	ldw	r2,-40(fp)
 8012ba4:	1885883a 	add	r2,r3,r2
 8012ba8:	10c1ffcc 	andi	r3,r2,2047
 8012bac:	e0bffc17 	ldw	r2,-16(fp)
 8012bb0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8012bb4:	e0bffe17 	ldw	r2,-8(fp)
 8012bb8:	00bfc716 	blt	zero,r2,8012ad8 <__alt_data_end+0xfc012ad8>
 8012bbc:	00000106 	br	8012bc4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 8012bc0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8012bc4:	0005303a 	rdctl	r2,status
 8012bc8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8012bcc:	e0fffb17 	ldw	r3,-20(fp)
 8012bd0:	00bfff84 	movi	r2,-2
 8012bd4:	1884703a 	and	r2,r3,r2
 8012bd8:	1001703a 	wrctl	status,r2
  
  return context;
 8012bdc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 8012be0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8012be4:	e0bffc17 	ldw	r2,-16(fp)
 8012be8:	10800817 	ldw	r2,32(r2)
 8012bec:	10c00094 	ori	r3,r2,2
 8012bf0:	e0bffc17 	ldw	r2,-16(fp)
 8012bf4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8012bf8:	e0bffc17 	ldw	r2,-16(fp)
 8012bfc:	10800017 	ldw	r2,0(r2)
 8012c00:	10800104 	addi	r2,r2,4
 8012c04:	1007883a 	mov	r3,r2
 8012c08:	e0bffc17 	ldw	r2,-16(fp)
 8012c0c:	10800817 	ldw	r2,32(r2)
 8012c10:	18800035 	stwio	r2,0(r3)
 8012c14:	e0bffa17 	ldw	r2,-24(fp)
 8012c18:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8012c1c:	e0bff817 	ldw	r2,-32(fp)
 8012c20:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 8012c24:	e0bffe17 	ldw	r2,-8(fp)
 8012c28:	0080100e 	bge	zero,r2,8012c6c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 8012c2c:	e0bfff17 	ldw	r2,-4(fp)
 8012c30:	1090000c 	andi	r2,r2,16384
 8012c34:	1000101e 	bne	r2,zero,8012c78 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 8012c38:	0001883a 	nop
 8012c3c:	e0bffc17 	ldw	r2,-16(fp)
 8012c40:	10c00d17 	ldw	r3,52(r2)
 8012c44:	e0bff517 	ldw	r2,-44(fp)
 8012c48:	1880051e 	bne	r3,r2,8012c60 <altera_avalon_jtag_uart_write+0x1b8>
 8012c4c:	e0bffc17 	ldw	r2,-16(fp)
 8012c50:	10c00917 	ldw	r3,36(r2)
 8012c54:	e0bffc17 	ldw	r2,-16(fp)
 8012c58:	10800117 	ldw	r2,4(r2)
 8012c5c:	18bff736 	bltu	r3,r2,8012c3c <__alt_data_end+0xfc012c3c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 8012c60:	e0bffc17 	ldw	r2,-16(fp)
 8012c64:	10800917 	ldw	r2,36(r2)
 8012c68:	1000051e 	bne	r2,zero,8012c80 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 8012c6c:	e0bffe17 	ldw	r2,-8(fp)
 8012c70:	00bfd016 	blt	zero,r2,8012bb4 <__alt_data_end+0xfc012bb4>
 8012c74:	00000306 	br	8012c84 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 8012c78:	0001883a 	nop
 8012c7c:	00000106 	br	8012c84 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 8012c80:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 8012c84:	e0fffd17 	ldw	r3,-12(fp)
 8012c88:	e0bff717 	ldw	r2,-36(fp)
 8012c8c:	18800426 	beq	r3,r2,8012ca0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 8012c90:	e0fffd17 	ldw	r3,-12(fp)
 8012c94:	e0bff717 	ldw	r2,-36(fp)
 8012c98:	1885c83a 	sub	r2,r3,r2
 8012c9c:	00000606 	br	8012cb8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 8012ca0:	e0bfff17 	ldw	r2,-4(fp)
 8012ca4:	1090000c 	andi	r2,r2,16384
 8012ca8:	10000226 	beq	r2,zero,8012cb4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 8012cac:	00bffd44 	movi	r2,-11
 8012cb0:	00000106 	br	8012cb8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 8012cb4:	00bffec4 	movi	r2,-5
}
 8012cb8:	e037883a 	mov	sp,fp
 8012cbc:	dfc00117 	ldw	ra,4(sp)
 8012cc0:	df000017 	ldw	fp,0(sp)
 8012cc4:	dec00204 	addi	sp,sp,8
 8012cc8:	f800283a 	ret

08012ccc <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 8012ccc:	defffa04 	addi	sp,sp,-24
 8012cd0:	dfc00515 	stw	ra,20(sp)
 8012cd4:	df000415 	stw	fp,16(sp)
 8012cd8:	df000404 	addi	fp,sp,16
 8012cdc:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 8012ce0:	0007883a 	mov	r3,zero
 8012ce4:	e0bfff17 	ldw	r2,-4(fp)
 8012ce8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 8012cec:	e0bfff17 	ldw	r2,-4(fp)
 8012cf0:	10800104 	addi	r2,r2,4
 8012cf4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8012cf8:	0005303a 	rdctl	r2,status
 8012cfc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8012d00:	e0fffd17 	ldw	r3,-12(fp)
 8012d04:	00bfff84 	movi	r2,-2
 8012d08:	1884703a 	and	r2,r3,r2
 8012d0c:	1001703a 	wrctl	status,r2
  
  return context;
 8012d10:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 8012d14:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 8012d18:	80139440 	call	8013944 <alt_tick>
 8012d1c:	e0bffc17 	ldw	r2,-16(fp)
 8012d20:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8012d24:	e0bffe17 	ldw	r2,-8(fp)
 8012d28:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 8012d2c:	0001883a 	nop
 8012d30:	e037883a 	mov	sp,fp
 8012d34:	dfc00117 	ldw	ra,4(sp)
 8012d38:	df000017 	ldw	fp,0(sp)
 8012d3c:	dec00204 	addi	sp,sp,8
 8012d40:	f800283a 	ret

08012d44 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 8012d44:	defff804 	addi	sp,sp,-32
 8012d48:	dfc00715 	stw	ra,28(sp)
 8012d4c:	df000615 	stw	fp,24(sp)
 8012d50:	df000604 	addi	fp,sp,24
 8012d54:	e13ffc15 	stw	r4,-16(fp)
 8012d58:	e17ffd15 	stw	r5,-12(fp)
 8012d5c:	e1bffe15 	stw	r6,-8(fp)
 8012d60:	e1ffff15 	stw	r7,-4(fp)
 8012d64:	e0bfff17 	ldw	r2,-4(fp)
 8012d68:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 8012d6c:	d0a79417 	ldw	r2,-25008(gp)
 8012d70:	1000021e 	bne	r2,zero,8012d7c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 8012d74:	e0bffb17 	ldw	r2,-20(fp)
 8012d78:	d0a79415 	stw	r2,-25008(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 8012d7c:	e0bffc17 	ldw	r2,-16(fp)
 8012d80:	10800104 	addi	r2,r2,4
 8012d84:	00c001c4 	movi	r3,7
 8012d88:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 8012d8c:	d8000015 	stw	zero,0(sp)
 8012d90:	e1fffc17 	ldw	r7,-16(fp)
 8012d94:	01820074 	movhi	r6,2049
 8012d98:	318b3304 	addi	r6,r6,11468
 8012d9c:	e17ffe17 	ldw	r5,-8(fp)
 8012da0:	e13ffd17 	ldw	r4,-12(fp)
 8012da4:	80132240 	call	8013224 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 8012da8:	0001883a 	nop
 8012dac:	e037883a 	mov	sp,fp
 8012db0:	dfc00117 	ldw	ra,4(sp)
 8012db4:	df000017 	ldw	fp,0(sp)
 8012db8:	dec00204 	addi	sp,sp,8
 8012dbc:	f800283a 	ret

08012dc0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 8012dc0:	defff504 	addi	sp,sp,-44
 8012dc4:	df000a15 	stw	fp,40(sp)
 8012dc8:	df000a04 	addi	fp,sp,40
 8012dcc:	e13ffc15 	stw	r4,-16(fp)
 8012dd0:	e17ffd15 	stw	r5,-12(fp)
 8012dd4:	e1bffe15 	stw	r6,-8(fp)
 8012dd8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 8012ddc:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8012de0:	d0a79417 	ldw	r2,-25008(gp)
  
  if (alt_ticks_per_second ())
 8012de4:	10003c26 	beq	r2,zero,8012ed8 <alt_alarm_start+0x118>
  {
    if (alarm)
 8012de8:	e0bffc17 	ldw	r2,-16(fp)
 8012dec:	10003826 	beq	r2,zero,8012ed0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 8012df0:	e0bffc17 	ldw	r2,-16(fp)
 8012df4:	e0fffe17 	ldw	r3,-8(fp)
 8012df8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 8012dfc:	e0bffc17 	ldw	r2,-16(fp)
 8012e00:	e0ffff17 	ldw	r3,-4(fp)
 8012e04:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8012e08:	0005303a 	rdctl	r2,status
 8012e0c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8012e10:	e0fff917 	ldw	r3,-28(fp)
 8012e14:	00bfff84 	movi	r2,-2
 8012e18:	1884703a 	and	r2,r3,r2
 8012e1c:	1001703a 	wrctl	status,r2
  
  return context;
 8012e20:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 8012e24:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8012e28:	d0a79517 	ldw	r2,-25004(gp)
      
      current_nticks = alt_nticks();
 8012e2c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 8012e30:	e0fffd17 	ldw	r3,-12(fp)
 8012e34:	e0bff617 	ldw	r2,-40(fp)
 8012e38:	1885883a 	add	r2,r3,r2
 8012e3c:	10c00044 	addi	r3,r2,1
 8012e40:	e0bffc17 	ldw	r2,-16(fp)
 8012e44:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 8012e48:	e0bffc17 	ldw	r2,-16(fp)
 8012e4c:	10c00217 	ldw	r3,8(r2)
 8012e50:	e0bff617 	ldw	r2,-40(fp)
 8012e54:	1880042e 	bgeu	r3,r2,8012e68 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 8012e58:	e0bffc17 	ldw	r2,-16(fp)
 8012e5c:	00c00044 	movi	r3,1
 8012e60:	10c00405 	stb	r3,16(r2)
 8012e64:	00000206 	br	8012e70 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 8012e68:	e0bffc17 	ldw	r2,-16(fp)
 8012e6c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 8012e70:	e0bffc17 	ldw	r2,-16(fp)
 8012e74:	d0e01104 	addi	r3,gp,-32700
 8012e78:	e0fffa15 	stw	r3,-24(fp)
 8012e7c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 8012e80:	e0bffb17 	ldw	r2,-20(fp)
 8012e84:	e0fffa17 	ldw	r3,-24(fp)
 8012e88:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 8012e8c:	e0bffa17 	ldw	r2,-24(fp)
 8012e90:	10c00017 	ldw	r3,0(r2)
 8012e94:	e0bffb17 	ldw	r2,-20(fp)
 8012e98:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 8012e9c:	e0bffa17 	ldw	r2,-24(fp)
 8012ea0:	10800017 	ldw	r2,0(r2)
 8012ea4:	e0fffb17 	ldw	r3,-20(fp)
 8012ea8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 8012eac:	e0bffa17 	ldw	r2,-24(fp)
 8012eb0:	e0fffb17 	ldw	r3,-20(fp)
 8012eb4:	10c00015 	stw	r3,0(r2)
 8012eb8:	e0bff817 	ldw	r2,-32(fp)
 8012ebc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8012ec0:	e0bff717 	ldw	r2,-36(fp)
 8012ec4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 8012ec8:	0005883a 	mov	r2,zero
 8012ecc:	00000306 	br	8012edc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 8012ed0:	00bffa84 	movi	r2,-22
 8012ed4:	00000106 	br	8012edc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 8012ed8:	00bfde84 	movi	r2,-134
  }
}
 8012edc:	e037883a 	mov	sp,fp
 8012ee0:	df000017 	ldw	fp,0(sp)
 8012ee4:	dec00104 	addi	sp,sp,4
 8012ee8:	f800283a 	ret

08012eec <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 8012eec:	defffa04 	addi	sp,sp,-24
 8012ef0:	dfc00515 	stw	ra,20(sp)
 8012ef4:	df000415 	stw	fp,16(sp)
 8012ef8:	df000404 	addi	fp,sp,16
 8012efc:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 8012f00:	00800244 	movi	r2,9
 8012f04:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 8012f08:	014003f4 	movhi	r5,15
 8012f0c:	29509004 	addi	r5,r5,16960
 8012f10:	e13ffd17 	ldw	r4,-12(fp)
 8012f14:	80010a00 	call	80010a0 <__mulsi3>
 8012f18:	100b883a 	mov	r5,r2
 8012f1c:	0100bef4 	movhi	r4,763
 8012f20:	213c2004 	addi	r4,r4,-3968
 8012f24:	8000fe40 	call	8000fe4 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 8012f28:	100b883a 	mov	r5,r2
 8012f2c:	01200034 	movhi	r4,32768
 8012f30:	213fffc4 	addi	r4,r4,-1
 8012f34:	8000fe40 	call	8000fe4 <__udivsi3>
 8012f38:	100b883a 	mov	r5,r2
 8012f3c:	e13fff17 	ldw	r4,-4(fp)
 8012f40:	8000fe40 	call	8000fe4 <__udivsi3>
 8012f44:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 8012f48:	e0bffe17 	ldw	r2,-8(fp)
 8012f4c:	10002a26 	beq	r2,zero,8012ff8 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 8012f50:	e03ffc15 	stw	zero,-16(fp)
 8012f54:	00001706 	br	8012fb4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 8012f58:	00a00034 	movhi	r2,32768
 8012f5c:	10bfffc4 	addi	r2,r2,-1
 8012f60:	10bfffc4 	addi	r2,r2,-1
 8012f64:	103ffe1e 	bne	r2,zero,8012f60 <__alt_data_end+0xfc012f60>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 8012f68:	014003f4 	movhi	r5,15
 8012f6c:	29509004 	addi	r5,r5,16960
 8012f70:	e13ffd17 	ldw	r4,-12(fp)
 8012f74:	80010a00 	call	80010a0 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 8012f78:	100b883a 	mov	r5,r2
 8012f7c:	0100bef4 	movhi	r4,763
 8012f80:	213c2004 	addi	r4,r4,-3968
 8012f84:	8000fe40 	call	8000fe4 <__udivsi3>
 8012f88:	100b883a 	mov	r5,r2
 8012f8c:	01200034 	movhi	r4,32768
 8012f90:	213fffc4 	addi	r4,r4,-1
 8012f94:	8000fe40 	call	8000fe4 <__udivsi3>
 8012f98:	1007883a 	mov	r3,r2
 8012f9c:	e0bfff17 	ldw	r2,-4(fp)
 8012fa0:	10c5c83a 	sub	r2,r2,r3
 8012fa4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 8012fa8:	e0bffc17 	ldw	r2,-16(fp)
 8012fac:	10800044 	addi	r2,r2,1
 8012fb0:	e0bffc15 	stw	r2,-16(fp)
 8012fb4:	e0fffc17 	ldw	r3,-16(fp)
 8012fb8:	e0bffe17 	ldw	r2,-8(fp)
 8012fbc:	18bfe616 	blt	r3,r2,8012f58 <__alt_data_end+0xfc012f58>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 8012fc0:	014003f4 	movhi	r5,15
 8012fc4:	29509004 	addi	r5,r5,16960
 8012fc8:	e13ffd17 	ldw	r4,-12(fp)
 8012fcc:	80010a00 	call	80010a0 <__mulsi3>
 8012fd0:	100b883a 	mov	r5,r2
 8012fd4:	0100bef4 	movhi	r4,763
 8012fd8:	213c2004 	addi	r4,r4,-3968
 8012fdc:	8000fe40 	call	8000fe4 <__udivsi3>
 8012fe0:	e17fff17 	ldw	r5,-4(fp)
 8012fe4:	1009883a 	mov	r4,r2
 8012fe8:	80010a00 	call	80010a0 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 8012fec:	10bfffc4 	addi	r2,r2,-1
 8012ff0:	103ffe1e 	bne	r2,zero,8012fec <__alt_data_end+0xfc012fec>
 8012ff4:	00000d06 	br	801302c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 8012ff8:	014003f4 	movhi	r5,15
 8012ffc:	29509004 	addi	r5,r5,16960
 8013000:	e13ffd17 	ldw	r4,-12(fp)
 8013004:	80010a00 	call	80010a0 <__mulsi3>
 8013008:	100b883a 	mov	r5,r2
 801300c:	0100bef4 	movhi	r4,763
 8013010:	213c2004 	addi	r4,r4,-3968
 8013014:	8000fe40 	call	8000fe4 <__udivsi3>
 8013018:	e17fff17 	ldw	r5,-4(fp)
 801301c:	1009883a 	mov	r4,r2
 8013020:	80010a00 	call	80010a0 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 8013024:	10bfffc4 	addi	r2,r2,-1
 8013028:	00bffe16 	blt	zero,r2,8013024 <__alt_data_end+0xfc013024>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 801302c:	0005883a 	mov	r2,zero
}
 8013030:	e037883a 	mov	sp,fp
 8013034:	dfc00117 	ldw	ra,4(sp)
 8013038:	df000017 	ldw	fp,0(sp)
 801303c:	dec00204 	addi	sp,sp,8
 8013040:	f800283a 	ret

08013044 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 8013044:	deffff04 	addi	sp,sp,-4
 8013048:	df000015 	stw	fp,0(sp)
 801304c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 8013050:	0001883a 	nop
 8013054:	e037883a 	mov	sp,fp
 8013058:	df000017 	ldw	fp,0(sp)
 801305c:	dec00104 	addi	sp,sp,4
 8013060:	f800283a 	ret

08013064 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013064:	defffe04 	addi	sp,sp,-8
 8013068:	dfc00115 	stw	ra,4(sp)
 801306c:	df000015 	stw	fp,0(sp)
 8013070:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013074:	d0a00e17 	ldw	r2,-32712(gp)
 8013078:	10000326 	beq	r2,zero,8013088 <alt_get_errno+0x24>
 801307c:	d0a00e17 	ldw	r2,-32712(gp)
 8013080:	103ee83a 	callr	r2
 8013084:	00000106 	br	801308c <alt_get_errno+0x28>
 8013088:	d0a78f04 	addi	r2,gp,-25028
}
 801308c:	e037883a 	mov	sp,fp
 8013090:	dfc00117 	ldw	ra,4(sp)
 8013094:	df000017 	ldw	fp,0(sp)
 8013098:	dec00204 	addi	sp,sp,8
 801309c:	f800283a 	ret

080130a0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 80130a0:	defffa04 	addi	sp,sp,-24
 80130a4:	dfc00515 	stw	ra,20(sp)
 80130a8:	df000415 	stw	fp,16(sp)
 80130ac:	df000404 	addi	fp,sp,16
 80130b0:	e13ffe15 	stw	r4,-8(fp)
 80130b4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 80130b8:	e0bffe17 	ldw	r2,-8(fp)
 80130bc:	10000326 	beq	r2,zero,80130cc <alt_dev_llist_insert+0x2c>
 80130c0:	e0bffe17 	ldw	r2,-8(fp)
 80130c4:	10800217 	ldw	r2,8(r2)
 80130c8:	1000061e 	bne	r2,zero,80130e4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 80130cc:	80130640 	call	8013064 <alt_get_errno>
 80130d0:	1007883a 	mov	r3,r2
 80130d4:	00800584 	movi	r2,22
 80130d8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 80130dc:	00bffa84 	movi	r2,-22
 80130e0:	00001306 	br	8013130 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 80130e4:	e0bffe17 	ldw	r2,-8(fp)
 80130e8:	e0ffff17 	ldw	r3,-4(fp)
 80130ec:	e0fffc15 	stw	r3,-16(fp)
 80130f0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 80130f4:	e0bffd17 	ldw	r2,-12(fp)
 80130f8:	e0fffc17 	ldw	r3,-16(fp)
 80130fc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 8013100:	e0bffc17 	ldw	r2,-16(fp)
 8013104:	10c00017 	ldw	r3,0(r2)
 8013108:	e0bffd17 	ldw	r2,-12(fp)
 801310c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 8013110:	e0bffc17 	ldw	r2,-16(fp)
 8013114:	10800017 	ldw	r2,0(r2)
 8013118:	e0fffd17 	ldw	r3,-12(fp)
 801311c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 8013120:	e0bffc17 	ldw	r2,-16(fp)
 8013124:	e0fffd17 	ldw	r3,-12(fp)
 8013128:	10c00015 	stw	r3,0(r2)

  return 0;  
 801312c:	0005883a 	mov	r2,zero
}
 8013130:	e037883a 	mov	sp,fp
 8013134:	dfc00117 	ldw	ra,4(sp)
 8013138:	df000017 	ldw	fp,0(sp)
 801313c:	dec00204 	addi	sp,sp,8
 8013140:	f800283a 	ret

08013144 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 8013144:	defffd04 	addi	sp,sp,-12
 8013148:	dfc00215 	stw	ra,8(sp)
 801314c:	df000115 	stw	fp,4(sp)
 8013150:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 8013154:	00820074 	movhi	r2,2049
 8013158:	10903e04 	addi	r2,r2,16632
 801315c:	e0bfff15 	stw	r2,-4(fp)
 8013160:	00000606 	br	801317c <_do_ctors+0x38>
        (*ctor) (); 
 8013164:	e0bfff17 	ldw	r2,-4(fp)
 8013168:	10800017 	ldw	r2,0(r2)
 801316c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 8013170:	e0bfff17 	ldw	r2,-4(fp)
 8013174:	10bfff04 	addi	r2,r2,-4
 8013178:	e0bfff15 	stw	r2,-4(fp)
 801317c:	e0ffff17 	ldw	r3,-4(fp)
 8013180:	00820074 	movhi	r2,2049
 8013184:	10903f04 	addi	r2,r2,16636
 8013188:	18bff62e 	bgeu	r3,r2,8013164 <__alt_data_end+0xfc013164>
        (*ctor) (); 
}
 801318c:	0001883a 	nop
 8013190:	e037883a 	mov	sp,fp
 8013194:	dfc00117 	ldw	ra,4(sp)
 8013198:	df000017 	ldw	fp,0(sp)
 801319c:	dec00204 	addi	sp,sp,8
 80131a0:	f800283a 	ret

080131a4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 80131a4:	defffd04 	addi	sp,sp,-12
 80131a8:	dfc00215 	stw	ra,8(sp)
 80131ac:	df000115 	stw	fp,4(sp)
 80131b0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 80131b4:	00820074 	movhi	r2,2049
 80131b8:	10903e04 	addi	r2,r2,16632
 80131bc:	e0bfff15 	stw	r2,-4(fp)
 80131c0:	00000606 	br	80131dc <_do_dtors+0x38>
        (*dtor) (); 
 80131c4:	e0bfff17 	ldw	r2,-4(fp)
 80131c8:	10800017 	ldw	r2,0(r2)
 80131cc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 80131d0:	e0bfff17 	ldw	r2,-4(fp)
 80131d4:	10bfff04 	addi	r2,r2,-4
 80131d8:	e0bfff15 	stw	r2,-4(fp)
 80131dc:	e0ffff17 	ldw	r3,-4(fp)
 80131e0:	00820074 	movhi	r2,2049
 80131e4:	10903f04 	addi	r2,r2,16636
 80131e8:	18bff62e 	bgeu	r3,r2,80131c4 <__alt_data_end+0xfc0131c4>
        (*dtor) (); 
}
 80131ec:	0001883a 	nop
 80131f0:	e037883a 	mov	sp,fp
 80131f4:	dfc00117 	ldw	ra,4(sp)
 80131f8:	df000017 	ldw	fp,0(sp)
 80131fc:	dec00204 	addi	sp,sp,8
 8013200:	f800283a 	ret

08013204 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 8013204:	deffff04 	addi	sp,sp,-4
 8013208:	df000015 	stw	fp,0(sp)
 801320c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 8013210:	0001883a 	nop
 8013214:	e037883a 	mov	sp,fp
 8013218:	df000017 	ldw	fp,0(sp)
 801321c:	dec00104 	addi	sp,sp,4
 8013220:	f800283a 	ret

08013224 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 8013224:	defff904 	addi	sp,sp,-28
 8013228:	dfc00615 	stw	ra,24(sp)
 801322c:	df000515 	stw	fp,20(sp)
 8013230:	df000504 	addi	fp,sp,20
 8013234:	e13ffc15 	stw	r4,-16(fp)
 8013238:	e17ffd15 	stw	r5,-12(fp)
 801323c:	e1bffe15 	stw	r6,-8(fp)
 8013240:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 8013244:	e0800217 	ldw	r2,8(fp)
 8013248:	d8800015 	stw	r2,0(sp)
 801324c:	e1ffff17 	ldw	r7,-4(fp)
 8013250:	e1bffe17 	ldw	r6,-8(fp)
 8013254:	e17ffd17 	ldw	r5,-12(fp)
 8013258:	e13ffc17 	ldw	r4,-16(fp)
 801325c:	80133d40 	call	80133d4 <alt_iic_isr_register>
}  
 8013260:	e037883a 	mov	sp,fp
 8013264:	dfc00117 	ldw	ra,4(sp)
 8013268:	df000017 	ldw	fp,0(sp)
 801326c:	dec00204 	addi	sp,sp,8
 8013270:	f800283a 	ret

08013274 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 8013274:	defff904 	addi	sp,sp,-28
 8013278:	df000615 	stw	fp,24(sp)
 801327c:	df000604 	addi	fp,sp,24
 8013280:	e13ffe15 	stw	r4,-8(fp)
 8013284:	e17fff15 	stw	r5,-4(fp)
 8013288:	e0bfff17 	ldw	r2,-4(fp)
 801328c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8013290:	0005303a 	rdctl	r2,status
 8013294:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8013298:	e0fffb17 	ldw	r3,-20(fp)
 801329c:	00bfff84 	movi	r2,-2
 80132a0:	1884703a 	and	r2,r3,r2
 80132a4:	1001703a 	wrctl	status,r2
  
  return context;
 80132a8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 80132ac:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 80132b0:	00c00044 	movi	r3,1
 80132b4:	e0bffa17 	ldw	r2,-24(fp)
 80132b8:	1884983a 	sll	r2,r3,r2
 80132bc:	1007883a 	mov	r3,r2
 80132c0:	d0a79317 	ldw	r2,-25012(gp)
 80132c4:	1884b03a 	or	r2,r3,r2
 80132c8:	d0a79315 	stw	r2,-25012(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 80132cc:	d0a79317 	ldw	r2,-25012(gp)
 80132d0:	100170fa 	wrctl	ienable,r2
 80132d4:	e0bffc17 	ldw	r2,-16(fp)
 80132d8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80132dc:	e0bffd17 	ldw	r2,-12(fp)
 80132e0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 80132e4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 80132e8:	0001883a 	nop
}
 80132ec:	e037883a 	mov	sp,fp
 80132f0:	df000017 	ldw	fp,0(sp)
 80132f4:	dec00104 	addi	sp,sp,4
 80132f8:	f800283a 	ret

080132fc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 80132fc:	defff904 	addi	sp,sp,-28
 8013300:	df000615 	stw	fp,24(sp)
 8013304:	df000604 	addi	fp,sp,24
 8013308:	e13ffe15 	stw	r4,-8(fp)
 801330c:	e17fff15 	stw	r5,-4(fp)
 8013310:	e0bfff17 	ldw	r2,-4(fp)
 8013314:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8013318:	0005303a 	rdctl	r2,status
 801331c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8013320:	e0fffb17 	ldw	r3,-20(fp)
 8013324:	00bfff84 	movi	r2,-2
 8013328:	1884703a 	and	r2,r3,r2
 801332c:	1001703a 	wrctl	status,r2
  
  return context;
 8013330:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8013334:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 8013338:	00c00044 	movi	r3,1
 801333c:	e0bffa17 	ldw	r2,-24(fp)
 8013340:	1884983a 	sll	r2,r3,r2
 8013344:	0084303a 	nor	r2,zero,r2
 8013348:	1007883a 	mov	r3,r2
 801334c:	d0a79317 	ldw	r2,-25012(gp)
 8013350:	1884703a 	and	r2,r3,r2
 8013354:	d0a79315 	stw	r2,-25012(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8013358:	d0a79317 	ldw	r2,-25012(gp)
 801335c:	100170fa 	wrctl	ienable,r2
 8013360:	e0bffc17 	ldw	r2,-16(fp)
 8013364:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8013368:	e0bffd17 	ldw	r2,-12(fp)
 801336c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8013370:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 8013374:	0001883a 	nop
}
 8013378:	e037883a 	mov	sp,fp
 801337c:	df000017 	ldw	fp,0(sp)
 8013380:	dec00104 	addi	sp,sp,4
 8013384:	f800283a 	ret

08013388 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 8013388:	defffc04 	addi	sp,sp,-16
 801338c:	df000315 	stw	fp,12(sp)
 8013390:	df000304 	addi	fp,sp,12
 8013394:	e13ffe15 	stw	r4,-8(fp)
 8013398:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 801339c:	000530fa 	rdctl	r2,ienable
 80133a0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 80133a4:	00c00044 	movi	r3,1
 80133a8:	e0bfff17 	ldw	r2,-4(fp)
 80133ac:	1884983a 	sll	r2,r3,r2
 80133b0:	1007883a 	mov	r3,r2
 80133b4:	e0bffd17 	ldw	r2,-12(fp)
 80133b8:	1884703a 	and	r2,r3,r2
 80133bc:	1004c03a 	cmpne	r2,r2,zero
 80133c0:	10803fcc 	andi	r2,r2,255
}
 80133c4:	e037883a 	mov	sp,fp
 80133c8:	df000017 	ldw	fp,0(sp)
 80133cc:	dec00104 	addi	sp,sp,4
 80133d0:	f800283a 	ret

080133d4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 80133d4:	defff504 	addi	sp,sp,-44
 80133d8:	dfc00a15 	stw	ra,40(sp)
 80133dc:	df000915 	stw	fp,36(sp)
 80133e0:	df000904 	addi	fp,sp,36
 80133e4:	e13ffc15 	stw	r4,-16(fp)
 80133e8:	e17ffd15 	stw	r5,-12(fp)
 80133ec:	e1bffe15 	stw	r6,-8(fp)
 80133f0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 80133f4:	00bffa84 	movi	r2,-22
 80133f8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 80133fc:	e0bffd17 	ldw	r2,-12(fp)
 8013400:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 8013404:	e0bff817 	ldw	r2,-32(fp)
 8013408:	10800808 	cmpgei	r2,r2,32
 801340c:	1000271e 	bne	r2,zero,80134ac <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8013410:	0005303a 	rdctl	r2,status
 8013414:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8013418:	e0fffb17 	ldw	r3,-20(fp)
 801341c:	00bfff84 	movi	r2,-2
 8013420:	1884703a 	and	r2,r3,r2
 8013424:	1001703a 	wrctl	status,r2
  
  return context;
 8013428:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 801342c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 8013430:	008200b4 	movhi	r2,2050
 8013434:	10a06204 	addi	r2,r2,-32376
 8013438:	e0fff817 	ldw	r3,-32(fp)
 801343c:	180690fa 	slli	r3,r3,3
 8013440:	10c5883a 	add	r2,r2,r3
 8013444:	e0fffe17 	ldw	r3,-8(fp)
 8013448:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 801344c:	008200b4 	movhi	r2,2050
 8013450:	10a06204 	addi	r2,r2,-32376
 8013454:	e0fff817 	ldw	r3,-32(fp)
 8013458:	180690fa 	slli	r3,r3,3
 801345c:	10c5883a 	add	r2,r2,r3
 8013460:	10800104 	addi	r2,r2,4
 8013464:	e0ffff17 	ldw	r3,-4(fp)
 8013468:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 801346c:	e0bffe17 	ldw	r2,-8(fp)
 8013470:	10000526 	beq	r2,zero,8013488 <alt_iic_isr_register+0xb4>
 8013474:	e0bff817 	ldw	r2,-32(fp)
 8013478:	100b883a 	mov	r5,r2
 801347c:	e13ffc17 	ldw	r4,-16(fp)
 8013480:	80132740 	call	8013274 <alt_ic_irq_enable>
 8013484:	00000406 	br	8013498 <alt_iic_isr_register+0xc4>
 8013488:	e0bff817 	ldw	r2,-32(fp)
 801348c:	100b883a 	mov	r5,r2
 8013490:	e13ffc17 	ldw	r4,-16(fp)
 8013494:	80132fc0 	call	80132fc <alt_ic_irq_disable>
 8013498:	e0bff715 	stw	r2,-36(fp)
 801349c:	e0bffa17 	ldw	r2,-24(fp)
 80134a0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80134a4:	e0bff917 	ldw	r2,-28(fp)
 80134a8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 80134ac:	e0bff717 	ldw	r2,-36(fp)
}
 80134b0:	e037883a 	mov	sp,fp
 80134b4:	dfc00117 	ldw	ra,4(sp)
 80134b8:	df000017 	ldw	fp,0(sp)
 80134bc:	dec00204 	addi	sp,sp,8
 80134c0:	f800283a 	ret

080134c4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 80134c4:	defff804 	addi	sp,sp,-32
 80134c8:	dfc00715 	stw	ra,28(sp)
 80134cc:	df000615 	stw	fp,24(sp)
 80134d0:	dc000515 	stw	r16,20(sp)
 80134d4:	df000604 	addi	fp,sp,24
 80134d8:	e13ffb15 	stw	r4,-20(fp)
 80134dc:	e17ffc15 	stw	r5,-16(fp)
 80134e0:	e1bffd15 	stw	r6,-12(fp)
 80134e4:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 80134e8:	e1bffe17 	ldw	r6,-8(fp)
 80134ec:	e17ffd17 	ldw	r5,-12(fp)
 80134f0:	e13ffc17 	ldw	r4,-16(fp)
 80134f4:	801374c0 	call	801374c <open>
 80134f8:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 80134fc:	e0bffa17 	ldw	r2,-24(fp)
 8013500:	10002216 	blt	r2,zero,801358c <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 8013504:	04020074 	movhi	r16,2049
 8013508:	84144904 	addi	r16,r16,20772
 801350c:	e0bffa17 	ldw	r2,-24(fp)
 8013510:	01400304 	movi	r5,12
 8013514:	1009883a 	mov	r4,r2
 8013518:	80010a00 	call	80010a0 <__mulsi3>
 801351c:	8085883a 	add	r2,r16,r2
 8013520:	10c00017 	ldw	r3,0(r2)
 8013524:	e0bffb17 	ldw	r2,-20(fp)
 8013528:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 801352c:	04020074 	movhi	r16,2049
 8013530:	84144904 	addi	r16,r16,20772
 8013534:	e0bffa17 	ldw	r2,-24(fp)
 8013538:	01400304 	movi	r5,12
 801353c:	1009883a 	mov	r4,r2
 8013540:	80010a00 	call	80010a0 <__mulsi3>
 8013544:	8085883a 	add	r2,r16,r2
 8013548:	10800104 	addi	r2,r2,4
 801354c:	10c00017 	ldw	r3,0(r2)
 8013550:	e0bffb17 	ldw	r2,-20(fp)
 8013554:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 8013558:	04020074 	movhi	r16,2049
 801355c:	84144904 	addi	r16,r16,20772
 8013560:	e0bffa17 	ldw	r2,-24(fp)
 8013564:	01400304 	movi	r5,12
 8013568:	1009883a 	mov	r4,r2
 801356c:	80010a00 	call	80010a0 <__mulsi3>
 8013570:	8085883a 	add	r2,r16,r2
 8013574:	10800204 	addi	r2,r2,8
 8013578:	10c00017 	ldw	r3,0(r2)
 801357c:	e0bffb17 	ldw	r2,-20(fp)
 8013580:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 8013584:	e13ffa17 	ldw	r4,-24(fp)
 8013588:	8011ef40 	call	8011ef4 <alt_release_fd>
  }
} 
 801358c:	0001883a 	nop
 8013590:	e6ffff04 	addi	sp,fp,-4
 8013594:	dfc00217 	ldw	ra,8(sp)
 8013598:	df000117 	ldw	fp,4(sp)
 801359c:	dc000017 	ldw	r16,0(sp)
 80135a0:	dec00304 	addi	sp,sp,12
 80135a4:	f800283a 	ret

080135a8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 80135a8:	defffb04 	addi	sp,sp,-20
 80135ac:	dfc00415 	stw	ra,16(sp)
 80135b0:	df000315 	stw	fp,12(sp)
 80135b4:	df000304 	addi	fp,sp,12
 80135b8:	e13ffd15 	stw	r4,-12(fp)
 80135bc:	e17ffe15 	stw	r5,-8(fp)
 80135c0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 80135c4:	01c07fc4 	movi	r7,511
 80135c8:	01800044 	movi	r6,1
 80135cc:	e17ffd17 	ldw	r5,-12(fp)
 80135d0:	01020074 	movhi	r4,2049
 80135d4:	21144c04 	addi	r4,r4,20784
 80135d8:	80134c40 	call	80134c4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 80135dc:	01c07fc4 	movi	r7,511
 80135e0:	000d883a 	mov	r6,zero
 80135e4:	e17ffe17 	ldw	r5,-8(fp)
 80135e8:	01020074 	movhi	r4,2049
 80135ec:	21144904 	addi	r4,r4,20772
 80135f0:	80134c40 	call	80134c4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 80135f4:	01c07fc4 	movi	r7,511
 80135f8:	01800044 	movi	r6,1
 80135fc:	e17fff17 	ldw	r5,-4(fp)
 8013600:	01020074 	movhi	r4,2049
 8013604:	21144f04 	addi	r4,r4,20796
 8013608:	80134c40 	call	80134c4 <alt_open_fd>
}  
 801360c:	0001883a 	nop
 8013610:	e037883a 	mov	sp,fp
 8013614:	dfc00117 	ldw	ra,4(sp)
 8013618:	df000017 	ldw	fp,0(sp)
 801361c:	dec00204 	addi	sp,sp,8
 8013620:	f800283a 	ret

08013624 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013624:	defffe04 	addi	sp,sp,-8
 8013628:	dfc00115 	stw	ra,4(sp)
 801362c:	df000015 	stw	fp,0(sp)
 8013630:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013634:	d0a00e17 	ldw	r2,-32712(gp)
 8013638:	10000326 	beq	r2,zero,8013648 <alt_get_errno+0x24>
 801363c:	d0a00e17 	ldw	r2,-32712(gp)
 8013640:	103ee83a 	callr	r2
 8013644:	00000106 	br	801364c <alt_get_errno+0x28>
 8013648:	d0a78f04 	addi	r2,gp,-25028
}
 801364c:	e037883a 	mov	sp,fp
 8013650:	dfc00117 	ldw	ra,4(sp)
 8013654:	df000017 	ldw	fp,0(sp)
 8013658:	dec00204 	addi	sp,sp,8
 801365c:	f800283a 	ret

08013660 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 8013660:	defffb04 	addi	sp,sp,-20
 8013664:	dfc00415 	stw	ra,16(sp)
 8013668:	df000315 	stw	fp,12(sp)
 801366c:	dc000215 	stw	r16,8(sp)
 8013670:	df000304 	addi	fp,sp,12
 8013674:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 8013678:	e0bffe17 	ldw	r2,-8(fp)
 801367c:	10800217 	ldw	r2,8(r2)
 8013680:	10d00034 	orhi	r3,r2,16384
 8013684:	e0bffe17 	ldw	r2,-8(fp)
 8013688:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801368c:	e03ffd15 	stw	zero,-12(fp)
 8013690:	00002306 	br	8013720 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8013694:	04020074 	movhi	r16,2049
 8013698:	84144904 	addi	r16,r16,20772
 801369c:	e0bffd17 	ldw	r2,-12(fp)
 80136a0:	01400304 	movi	r5,12
 80136a4:	1009883a 	mov	r4,r2
 80136a8:	80010a00 	call	80010a0 <__mulsi3>
 80136ac:	8085883a 	add	r2,r16,r2
 80136b0:	10c00017 	ldw	r3,0(r2)
 80136b4:	e0bffe17 	ldw	r2,-8(fp)
 80136b8:	10800017 	ldw	r2,0(r2)
 80136bc:	1880151e 	bne	r3,r2,8013714 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 80136c0:	04020074 	movhi	r16,2049
 80136c4:	84144904 	addi	r16,r16,20772
 80136c8:	e0bffd17 	ldw	r2,-12(fp)
 80136cc:	01400304 	movi	r5,12
 80136d0:	1009883a 	mov	r4,r2
 80136d4:	80010a00 	call	80010a0 <__mulsi3>
 80136d8:	8085883a 	add	r2,r16,r2
 80136dc:	10800204 	addi	r2,r2,8
 80136e0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 80136e4:	10000b0e 	bge	r2,zero,8013714 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 80136e8:	01400304 	movi	r5,12
 80136ec:	e13ffd17 	ldw	r4,-12(fp)
 80136f0:	80010a00 	call	80010a0 <__mulsi3>
 80136f4:	1007883a 	mov	r3,r2
 80136f8:	00820074 	movhi	r2,2049
 80136fc:	10944904 	addi	r2,r2,20772
 8013700:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8013704:	e0bffe17 	ldw	r2,-8(fp)
 8013708:	18800226 	beq	r3,r2,8013714 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 801370c:	00bffcc4 	movi	r2,-13
 8013710:	00000806 	br	8013734 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8013714:	e0bffd17 	ldw	r2,-12(fp)
 8013718:	10800044 	addi	r2,r2,1
 801371c:	e0bffd15 	stw	r2,-12(fp)
 8013720:	d0a00d17 	ldw	r2,-32716(gp)
 8013724:	1007883a 	mov	r3,r2
 8013728:	e0bffd17 	ldw	r2,-12(fp)
 801372c:	18bfd92e 	bgeu	r3,r2,8013694 <__alt_data_end+0xfc013694>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 8013730:	0005883a 	mov	r2,zero
}
 8013734:	e6ffff04 	addi	sp,fp,-4
 8013738:	dfc00217 	ldw	ra,8(sp)
 801373c:	df000117 	ldw	fp,4(sp)
 8013740:	dc000017 	ldw	r16,0(sp)
 8013744:	dec00304 	addi	sp,sp,12
 8013748:	f800283a 	ret

0801374c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 801374c:	defff604 	addi	sp,sp,-40
 8013750:	dfc00915 	stw	ra,36(sp)
 8013754:	df000815 	stw	fp,32(sp)
 8013758:	df000804 	addi	fp,sp,32
 801375c:	e13ffd15 	stw	r4,-12(fp)
 8013760:	e17ffe15 	stw	r5,-8(fp)
 8013764:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 8013768:	00bfffc4 	movi	r2,-1
 801376c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 8013770:	00bffb44 	movi	r2,-19
 8013774:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 8013778:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 801377c:	d1600b04 	addi	r5,gp,-32724
 8013780:	e13ffd17 	ldw	r4,-12(fp)
 8013784:	8013a700 	call	8013a70 <alt_find_dev>
 8013788:	e0bff815 	stw	r2,-32(fp)
 801378c:	e0bff817 	ldw	r2,-32(fp)
 8013790:	1000051e 	bne	r2,zero,80137a8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 8013794:	e13ffd17 	ldw	r4,-12(fp)
 8013798:	8013b000 	call	8013b00 <alt_find_file>
 801379c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 80137a0:	00800044 	movi	r2,1
 80137a4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 80137a8:	e0bff817 	ldw	r2,-32(fp)
 80137ac:	10002b26 	beq	r2,zero,801385c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 80137b0:	e13ff817 	ldw	r4,-32(fp)
 80137b4:	8013c080 	call	8013c08 <alt_get_fd>
 80137b8:	e0bff915 	stw	r2,-28(fp)
 80137bc:	e0bff917 	ldw	r2,-28(fp)
 80137c0:	1000030e 	bge	r2,zero,80137d0 <open+0x84>
    {
      status = index;
 80137c4:	e0bff917 	ldw	r2,-28(fp)
 80137c8:	e0bffa15 	stw	r2,-24(fp)
 80137cc:	00002506 	br	8013864 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 80137d0:	01400304 	movi	r5,12
 80137d4:	e13ff917 	ldw	r4,-28(fp)
 80137d8:	80010a00 	call	80010a0 <__mulsi3>
 80137dc:	1007883a 	mov	r3,r2
 80137e0:	00820074 	movhi	r2,2049
 80137e4:	10944904 	addi	r2,r2,20772
 80137e8:	1885883a 	add	r2,r3,r2
 80137ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 80137f0:	e0fffe17 	ldw	r3,-8(fp)
 80137f4:	00900034 	movhi	r2,16384
 80137f8:	10bfffc4 	addi	r2,r2,-1
 80137fc:	1886703a 	and	r3,r3,r2
 8013800:	e0bffc17 	ldw	r2,-16(fp)
 8013804:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 8013808:	e0bffb17 	ldw	r2,-20(fp)
 801380c:	1000051e 	bne	r2,zero,8013824 <open+0xd8>
 8013810:	e13ffc17 	ldw	r4,-16(fp)
 8013814:	80136600 	call	8013660 <alt_file_locked>
 8013818:	e0bffa15 	stw	r2,-24(fp)
 801381c:	e0bffa17 	ldw	r2,-24(fp)
 8013820:	10001016 	blt	r2,zero,8013864 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 8013824:	e0bff817 	ldw	r2,-32(fp)
 8013828:	10800317 	ldw	r2,12(r2)
 801382c:	10000826 	beq	r2,zero,8013850 <open+0x104>
 8013830:	e0bff817 	ldw	r2,-32(fp)
 8013834:	10800317 	ldw	r2,12(r2)
 8013838:	e1ffff17 	ldw	r7,-4(fp)
 801383c:	e1bffe17 	ldw	r6,-8(fp)
 8013840:	e17ffd17 	ldw	r5,-12(fp)
 8013844:	e13ffc17 	ldw	r4,-16(fp)
 8013848:	103ee83a 	callr	r2
 801384c:	00000106 	br	8013854 <open+0x108>
 8013850:	0005883a 	mov	r2,zero
 8013854:	e0bffa15 	stw	r2,-24(fp)
 8013858:	00000206 	br	8013864 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 801385c:	00bffb44 	movi	r2,-19
 8013860:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 8013864:	e0bffa17 	ldw	r2,-24(fp)
 8013868:	1000090e 	bge	r2,zero,8013890 <open+0x144>
  {
    alt_release_fd (index);  
 801386c:	e13ff917 	ldw	r4,-28(fp)
 8013870:	8011ef40 	call	8011ef4 <alt_release_fd>
    ALT_ERRNO = -status;
 8013874:	80136240 	call	8013624 <alt_get_errno>
 8013878:	1007883a 	mov	r3,r2
 801387c:	e0bffa17 	ldw	r2,-24(fp)
 8013880:	0085c83a 	sub	r2,zero,r2
 8013884:	18800015 	stw	r2,0(r3)
    return -1;
 8013888:	00bfffc4 	movi	r2,-1
 801388c:	00000106 	br	8013894 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 8013890:	e0bff917 	ldw	r2,-28(fp)
}
 8013894:	e037883a 	mov	sp,fp
 8013898:	dfc00117 	ldw	ra,4(sp)
 801389c:	df000017 	ldw	fp,0(sp)
 80138a0:	dec00204 	addi	sp,sp,8
 80138a4:	f800283a 	ret

080138a8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 80138a8:	defffa04 	addi	sp,sp,-24
 80138ac:	df000515 	stw	fp,20(sp)
 80138b0:	df000504 	addi	fp,sp,20
 80138b4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80138b8:	0005303a 	rdctl	r2,status
 80138bc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80138c0:	e0fffc17 	ldw	r3,-16(fp)
 80138c4:	00bfff84 	movi	r2,-2
 80138c8:	1884703a 	and	r2,r3,r2
 80138cc:	1001703a 	wrctl	status,r2
  
  return context;
 80138d0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 80138d4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 80138d8:	e0bfff17 	ldw	r2,-4(fp)
 80138dc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 80138e0:	e0bffd17 	ldw	r2,-12(fp)
 80138e4:	10800017 	ldw	r2,0(r2)
 80138e8:	e0fffd17 	ldw	r3,-12(fp)
 80138ec:	18c00117 	ldw	r3,4(r3)
 80138f0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 80138f4:	e0bffd17 	ldw	r2,-12(fp)
 80138f8:	10800117 	ldw	r2,4(r2)
 80138fc:	e0fffd17 	ldw	r3,-12(fp)
 8013900:	18c00017 	ldw	r3,0(r3)
 8013904:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 8013908:	e0bffd17 	ldw	r2,-12(fp)
 801390c:	e0fffd17 	ldw	r3,-12(fp)
 8013910:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 8013914:	e0bffd17 	ldw	r2,-12(fp)
 8013918:	e0fffd17 	ldw	r3,-12(fp)
 801391c:	10c00015 	stw	r3,0(r2)
 8013920:	e0bffb17 	ldw	r2,-20(fp)
 8013924:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8013928:	e0bffe17 	ldw	r2,-8(fp)
 801392c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 8013930:	0001883a 	nop
 8013934:	e037883a 	mov	sp,fp
 8013938:	df000017 	ldw	fp,0(sp)
 801393c:	dec00104 	addi	sp,sp,4
 8013940:	f800283a 	ret

08013944 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 8013944:	defffb04 	addi	sp,sp,-20
 8013948:	dfc00415 	stw	ra,16(sp)
 801394c:	df000315 	stw	fp,12(sp)
 8013950:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 8013954:	d0a01117 	ldw	r2,-32700(gp)
 8013958:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 801395c:	d0a79517 	ldw	r2,-25004(gp)
 8013960:	10800044 	addi	r2,r2,1
 8013964:	d0a79515 	stw	r2,-25004(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8013968:	00002e06 	br	8013a24 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 801396c:	e0bffd17 	ldw	r2,-12(fp)
 8013970:	10800017 	ldw	r2,0(r2)
 8013974:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 8013978:	e0bffd17 	ldw	r2,-12(fp)
 801397c:	10800403 	ldbu	r2,16(r2)
 8013980:	10803fcc 	andi	r2,r2,255
 8013984:	10000426 	beq	r2,zero,8013998 <alt_tick+0x54>
 8013988:	d0a79517 	ldw	r2,-25004(gp)
 801398c:	1000021e 	bne	r2,zero,8013998 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 8013990:	e0bffd17 	ldw	r2,-12(fp)
 8013994:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 8013998:	e0bffd17 	ldw	r2,-12(fp)
 801399c:	10800217 	ldw	r2,8(r2)
 80139a0:	d0e79517 	ldw	r3,-25004(gp)
 80139a4:	18801d36 	bltu	r3,r2,8013a1c <alt_tick+0xd8>
 80139a8:	e0bffd17 	ldw	r2,-12(fp)
 80139ac:	10800403 	ldbu	r2,16(r2)
 80139b0:	10803fcc 	andi	r2,r2,255
 80139b4:	1000191e 	bne	r2,zero,8013a1c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 80139b8:	e0bffd17 	ldw	r2,-12(fp)
 80139bc:	10800317 	ldw	r2,12(r2)
 80139c0:	e0fffd17 	ldw	r3,-12(fp)
 80139c4:	18c00517 	ldw	r3,20(r3)
 80139c8:	1809883a 	mov	r4,r3
 80139cc:	103ee83a 	callr	r2
 80139d0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 80139d4:	e0bfff17 	ldw	r2,-4(fp)
 80139d8:	1000031e 	bne	r2,zero,80139e8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 80139dc:	e13ffd17 	ldw	r4,-12(fp)
 80139e0:	80138a80 	call	80138a8 <alt_alarm_stop>
 80139e4:	00000d06 	br	8013a1c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 80139e8:	e0bffd17 	ldw	r2,-12(fp)
 80139ec:	10c00217 	ldw	r3,8(r2)
 80139f0:	e0bfff17 	ldw	r2,-4(fp)
 80139f4:	1887883a 	add	r3,r3,r2
 80139f8:	e0bffd17 	ldw	r2,-12(fp)
 80139fc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 8013a00:	e0bffd17 	ldw	r2,-12(fp)
 8013a04:	10c00217 	ldw	r3,8(r2)
 8013a08:	d0a79517 	ldw	r2,-25004(gp)
 8013a0c:	1880032e 	bgeu	r3,r2,8013a1c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 8013a10:	e0bffd17 	ldw	r2,-12(fp)
 8013a14:	00c00044 	movi	r3,1
 8013a18:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 8013a1c:	e0bffe17 	ldw	r2,-8(fp)
 8013a20:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8013a24:	e0fffd17 	ldw	r3,-12(fp)
 8013a28:	d0a01104 	addi	r2,gp,-32700
 8013a2c:	18bfcf1e 	bne	r3,r2,801396c <__alt_data_end+0xfc01396c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 8013a30:	0001883a 	nop
}
 8013a34:	0001883a 	nop
 8013a38:	e037883a 	mov	sp,fp
 8013a3c:	dfc00117 	ldw	ra,4(sp)
 8013a40:	df000017 	ldw	fp,0(sp)
 8013a44:	dec00204 	addi	sp,sp,8
 8013a48:	f800283a 	ret

08013a4c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 8013a4c:	deffff04 	addi	sp,sp,-4
 8013a50:	df000015 	stw	fp,0(sp)
 8013a54:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 8013a58:	000170fa 	wrctl	ienable,zero
}
 8013a5c:	0001883a 	nop
 8013a60:	e037883a 	mov	sp,fp
 8013a64:	df000017 	ldw	fp,0(sp)
 8013a68:	dec00104 	addi	sp,sp,4
 8013a6c:	f800283a 	ret

08013a70 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 8013a70:	defffa04 	addi	sp,sp,-24
 8013a74:	dfc00515 	stw	ra,20(sp)
 8013a78:	df000415 	stw	fp,16(sp)
 8013a7c:	df000404 	addi	fp,sp,16
 8013a80:	e13ffe15 	stw	r4,-8(fp)
 8013a84:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 8013a88:	e0bfff17 	ldw	r2,-4(fp)
 8013a8c:	10800017 	ldw	r2,0(r2)
 8013a90:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 8013a94:	e13ffe17 	ldw	r4,-8(fp)
 8013a98:	80013bc0 	call	80013bc <strlen>
 8013a9c:	10800044 	addi	r2,r2,1
 8013aa0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8013aa4:	00000d06 	br	8013adc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 8013aa8:	e0bffc17 	ldw	r2,-16(fp)
 8013aac:	10800217 	ldw	r2,8(r2)
 8013ab0:	e0fffd17 	ldw	r3,-12(fp)
 8013ab4:	180d883a 	mov	r6,r3
 8013ab8:	e17ffe17 	ldw	r5,-8(fp)
 8013abc:	1009883a 	mov	r4,r2
 8013ac0:	8013db40 	call	8013db4 <memcmp>
 8013ac4:	1000021e 	bne	r2,zero,8013ad0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 8013ac8:	e0bffc17 	ldw	r2,-16(fp)
 8013acc:	00000706 	br	8013aec <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 8013ad0:	e0bffc17 	ldw	r2,-16(fp)
 8013ad4:	10800017 	ldw	r2,0(r2)
 8013ad8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8013adc:	e0fffc17 	ldw	r3,-16(fp)
 8013ae0:	e0bfff17 	ldw	r2,-4(fp)
 8013ae4:	18bff01e 	bne	r3,r2,8013aa8 <__alt_data_end+0xfc013aa8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 8013ae8:	0005883a 	mov	r2,zero
}
 8013aec:	e037883a 	mov	sp,fp
 8013af0:	dfc00117 	ldw	ra,4(sp)
 8013af4:	df000017 	ldw	fp,0(sp)
 8013af8:	dec00204 	addi	sp,sp,8
 8013afc:	f800283a 	ret

08013b00 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 8013b00:	defffb04 	addi	sp,sp,-20
 8013b04:	dfc00415 	stw	ra,16(sp)
 8013b08:	df000315 	stw	fp,12(sp)
 8013b0c:	df000304 	addi	fp,sp,12
 8013b10:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 8013b14:	d0a00917 	ldw	r2,-32732(gp)
 8013b18:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8013b1c:	00003106 	br	8013be4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 8013b20:	e0bffd17 	ldw	r2,-12(fp)
 8013b24:	10800217 	ldw	r2,8(r2)
 8013b28:	1009883a 	mov	r4,r2
 8013b2c:	80013bc0 	call	80013bc <strlen>
 8013b30:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 8013b34:	e0bffd17 	ldw	r2,-12(fp)
 8013b38:	10c00217 	ldw	r3,8(r2)
 8013b3c:	e0bffe17 	ldw	r2,-8(fp)
 8013b40:	10bfffc4 	addi	r2,r2,-1
 8013b44:	1885883a 	add	r2,r3,r2
 8013b48:	10800003 	ldbu	r2,0(r2)
 8013b4c:	10803fcc 	andi	r2,r2,255
 8013b50:	1080201c 	xori	r2,r2,128
 8013b54:	10bfe004 	addi	r2,r2,-128
 8013b58:	10800bd8 	cmpnei	r2,r2,47
 8013b5c:	1000031e 	bne	r2,zero,8013b6c <alt_find_file+0x6c>
    {
      len -= 1;
 8013b60:	e0bffe17 	ldw	r2,-8(fp)
 8013b64:	10bfffc4 	addi	r2,r2,-1
 8013b68:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 8013b6c:	e0bffe17 	ldw	r2,-8(fp)
 8013b70:	e0ffff17 	ldw	r3,-4(fp)
 8013b74:	1885883a 	add	r2,r3,r2
 8013b78:	10800003 	ldbu	r2,0(r2)
 8013b7c:	10803fcc 	andi	r2,r2,255
 8013b80:	1080201c 	xori	r2,r2,128
 8013b84:	10bfe004 	addi	r2,r2,-128
 8013b88:	10800be0 	cmpeqi	r2,r2,47
 8013b8c:	1000081e 	bne	r2,zero,8013bb0 <alt_find_file+0xb0>
 8013b90:	e0bffe17 	ldw	r2,-8(fp)
 8013b94:	e0ffff17 	ldw	r3,-4(fp)
 8013b98:	1885883a 	add	r2,r3,r2
 8013b9c:	10800003 	ldbu	r2,0(r2)
 8013ba0:	10803fcc 	andi	r2,r2,255
 8013ba4:	1080201c 	xori	r2,r2,128
 8013ba8:	10bfe004 	addi	r2,r2,-128
 8013bac:	10000a1e 	bne	r2,zero,8013bd8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 8013bb0:	e0bffd17 	ldw	r2,-12(fp)
 8013bb4:	10800217 	ldw	r2,8(r2)
 8013bb8:	e0fffe17 	ldw	r3,-8(fp)
 8013bbc:	180d883a 	mov	r6,r3
 8013bc0:	e17fff17 	ldw	r5,-4(fp)
 8013bc4:	1009883a 	mov	r4,r2
 8013bc8:	8013db40 	call	8013db4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 8013bcc:	1000021e 	bne	r2,zero,8013bd8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 8013bd0:	e0bffd17 	ldw	r2,-12(fp)
 8013bd4:	00000706 	br	8013bf4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 8013bd8:	e0bffd17 	ldw	r2,-12(fp)
 8013bdc:	10800017 	ldw	r2,0(r2)
 8013be0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8013be4:	e0fffd17 	ldw	r3,-12(fp)
 8013be8:	d0a00904 	addi	r2,gp,-32732
 8013bec:	18bfcc1e 	bne	r3,r2,8013b20 <__alt_data_end+0xfc013b20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 8013bf0:	0005883a 	mov	r2,zero
}
 8013bf4:	e037883a 	mov	sp,fp
 8013bf8:	dfc00117 	ldw	ra,4(sp)
 8013bfc:	df000017 	ldw	fp,0(sp)
 8013c00:	dec00204 	addi	sp,sp,8
 8013c04:	f800283a 	ret

08013c08 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 8013c08:	defffa04 	addi	sp,sp,-24
 8013c0c:	dfc00515 	stw	ra,20(sp)
 8013c10:	df000415 	stw	fp,16(sp)
 8013c14:	dc000315 	stw	r16,12(sp)
 8013c18:	df000404 	addi	fp,sp,16
 8013c1c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 8013c20:	00bffa04 	movi	r2,-24
 8013c24:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8013c28:	e03ffc15 	stw	zero,-16(fp)
 8013c2c:	00001d06 	br	8013ca4 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 8013c30:	04020074 	movhi	r16,2049
 8013c34:	84144904 	addi	r16,r16,20772
 8013c38:	e0bffc17 	ldw	r2,-16(fp)
 8013c3c:	01400304 	movi	r5,12
 8013c40:	1009883a 	mov	r4,r2
 8013c44:	80010a00 	call	80010a0 <__mulsi3>
 8013c48:	8085883a 	add	r2,r16,r2
 8013c4c:	10800017 	ldw	r2,0(r2)
 8013c50:	1000111e 	bne	r2,zero,8013c98 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 8013c54:	04020074 	movhi	r16,2049
 8013c58:	84144904 	addi	r16,r16,20772
 8013c5c:	e0bffc17 	ldw	r2,-16(fp)
 8013c60:	01400304 	movi	r5,12
 8013c64:	1009883a 	mov	r4,r2
 8013c68:	80010a00 	call	80010a0 <__mulsi3>
 8013c6c:	8085883a 	add	r2,r16,r2
 8013c70:	e0fffe17 	ldw	r3,-8(fp)
 8013c74:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 8013c78:	d0e00d17 	ldw	r3,-32716(gp)
 8013c7c:	e0bffc17 	ldw	r2,-16(fp)
 8013c80:	1880020e 	bge	r3,r2,8013c8c <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 8013c84:	e0bffc17 	ldw	r2,-16(fp)
 8013c88:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
 8013c8c:	e0bffc17 	ldw	r2,-16(fp)
 8013c90:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 8013c94:	00000606 	br	8013cb0 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8013c98:	e0bffc17 	ldw	r2,-16(fp)
 8013c9c:	10800044 	addi	r2,r2,1
 8013ca0:	e0bffc15 	stw	r2,-16(fp)
 8013ca4:	e0bffc17 	ldw	r2,-16(fp)
 8013ca8:	10800810 	cmplti	r2,r2,32
 8013cac:	103fe01e 	bne	r2,zero,8013c30 <__alt_data_end+0xfc013c30>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 8013cb0:	e0bffd17 	ldw	r2,-12(fp)
}
 8013cb4:	e6ffff04 	addi	sp,fp,-4
 8013cb8:	dfc00217 	ldw	ra,8(sp)
 8013cbc:	df000117 	ldw	fp,4(sp)
 8013cc0:	dc000017 	ldw	r16,0(sp)
 8013cc4:	dec00304 	addi	sp,sp,12
 8013cc8:	f800283a 	ret

08013ccc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 8013ccc:	defffe04 	addi	sp,sp,-8
 8013cd0:	df000115 	stw	fp,4(sp)
 8013cd4:	df000104 	addi	fp,sp,4
 8013cd8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 8013cdc:	e0bfff17 	ldw	r2,-4(fp)
 8013ce0:	10bffe84 	addi	r2,r2,-6
 8013ce4:	10c00428 	cmpgeui	r3,r2,16
 8013ce8:	18001a1e 	bne	r3,zero,8013d54 <alt_exception_cause_generated_bad_addr+0x88>
 8013cec:	100690ba 	slli	r3,r2,2
 8013cf0:	00820074 	movhi	r2,2049
 8013cf4:	108f4104 	addi	r2,r2,15620
 8013cf8:	1885883a 	add	r2,r3,r2
 8013cfc:	10800017 	ldw	r2,0(r2)
 8013d00:	1000683a 	jmp	r2
 8013d04:	08013d44 	addi	zero,at,1269
 8013d08:	08013d44 	addi	zero,at,1269
 8013d0c:	08013d54 	ori	zero,at,1269
 8013d10:	08013d54 	ori	zero,at,1269
 8013d14:	08013d54 	ori	zero,at,1269
 8013d18:	08013d44 	addi	zero,at,1269
 8013d1c:	08013d4c 	andi	zero,at,1269
 8013d20:	08013d54 	ori	zero,at,1269
 8013d24:	08013d44 	addi	zero,at,1269
 8013d28:	08013d44 	addi	zero,at,1269
 8013d2c:	08013d54 	ori	zero,at,1269
 8013d30:	08013d44 	addi	zero,at,1269
 8013d34:	08013d4c 	andi	zero,at,1269
 8013d38:	08013d54 	ori	zero,at,1269
 8013d3c:	08013d54 	ori	zero,at,1269
 8013d40:	08013d44 	addi	zero,at,1269
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 8013d44:	00800044 	movi	r2,1
 8013d48:	00000306 	br	8013d58 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 8013d4c:	0005883a 	mov	r2,zero
 8013d50:	00000106 	br	8013d58 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 8013d54:	0005883a 	mov	r2,zero
  }
}
 8013d58:	e037883a 	mov	sp,fp
 8013d5c:	df000017 	ldw	fp,0(sp)
 8013d60:	dec00104 	addi	sp,sp,4
 8013d64:	f800283a 	ret

08013d68 <atexit>:
 8013d68:	200b883a 	mov	r5,r4
 8013d6c:	000f883a 	mov	r7,zero
 8013d70:	000d883a 	mov	r6,zero
 8013d74:	0009883a 	mov	r4,zero
 8013d78:	8013e301 	jmpi	8013e30 <__register_exitproc>

08013d7c <exit>:
 8013d7c:	defffe04 	addi	sp,sp,-8
 8013d80:	000b883a 	mov	r5,zero
 8013d84:	dc000015 	stw	r16,0(sp)
 8013d88:	dfc00115 	stw	ra,4(sp)
 8013d8c:	2021883a 	mov	r16,r4
 8013d90:	8013f480 	call	8013f48 <__call_exitprocs>
 8013d94:	00820074 	movhi	r2,2049
 8013d98:	1098c404 	addi	r2,r2,25360
 8013d9c:	11000017 	ldw	r4,0(r2)
 8013da0:	20800f17 	ldw	r2,60(r4)
 8013da4:	10000126 	beq	r2,zero,8013dac <exit+0x30>
 8013da8:	103ee83a 	callr	r2
 8013dac:	8009883a 	mov	r4,r16
 8013db0:	80140c80 	call	80140c8 <_exit>

08013db4 <memcmp>:
 8013db4:	01c000c4 	movi	r7,3
 8013db8:	3980192e 	bgeu	r7,r6,8013e20 <memcmp+0x6c>
 8013dbc:	2144b03a 	or	r2,r4,r5
 8013dc0:	11c4703a 	and	r2,r2,r7
 8013dc4:	10000f26 	beq	r2,zero,8013e04 <memcmp+0x50>
 8013dc8:	20800003 	ldbu	r2,0(r4)
 8013dcc:	28c00003 	ldbu	r3,0(r5)
 8013dd0:	10c0151e 	bne	r2,r3,8013e28 <memcmp+0x74>
 8013dd4:	31bfff84 	addi	r6,r6,-2
 8013dd8:	01ffffc4 	movi	r7,-1
 8013ddc:	00000406 	br	8013df0 <memcmp+0x3c>
 8013de0:	20800003 	ldbu	r2,0(r4)
 8013de4:	28c00003 	ldbu	r3,0(r5)
 8013de8:	31bfffc4 	addi	r6,r6,-1
 8013dec:	10c00e1e 	bne	r2,r3,8013e28 <memcmp+0x74>
 8013df0:	21000044 	addi	r4,r4,1
 8013df4:	29400044 	addi	r5,r5,1
 8013df8:	31fff91e 	bne	r6,r7,8013de0 <__alt_data_end+0xfc013de0>
 8013dfc:	0005883a 	mov	r2,zero
 8013e00:	f800283a 	ret
 8013e04:	20c00017 	ldw	r3,0(r4)
 8013e08:	28800017 	ldw	r2,0(r5)
 8013e0c:	18bfee1e 	bne	r3,r2,8013dc8 <__alt_data_end+0xfc013dc8>
 8013e10:	31bfff04 	addi	r6,r6,-4
 8013e14:	21000104 	addi	r4,r4,4
 8013e18:	29400104 	addi	r5,r5,4
 8013e1c:	39bff936 	bltu	r7,r6,8013e04 <__alt_data_end+0xfc013e04>
 8013e20:	303fe91e 	bne	r6,zero,8013dc8 <__alt_data_end+0xfc013dc8>
 8013e24:	003ff506 	br	8013dfc <__alt_data_end+0xfc013dfc>
 8013e28:	10c5c83a 	sub	r2,r2,r3
 8013e2c:	f800283a 	ret

08013e30 <__register_exitproc>:
 8013e30:	defffa04 	addi	sp,sp,-24
 8013e34:	dc000315 	stw	r16,12(sp)
 8013e38:	04020074 	movhi	r16,2049
 8013e3c:	8418c404 	addi	r16,r16,25360
 8013e40:	80c00017 	ldw	r3,0(r16)
 8013e44:	dc400415 	stw	r17,16(sp)
 8013e48:	dfc00515 	stw	ra,20(sp)
 8013e4c:	18805217 	ldw	r2,328(r3)
 8013e50:	2023883a 	mov	r17,r4
 8013e54:	10003726 	beq	r2,zero,8013f34 <__register_exitproc+0x104>
 8013e58:	10c00117 	ldw	r3,4(r2)
 8013e5c:	010007c4 	movi	r4,31
 8013e60:	20c00e16 	blt	r4,r3,8013e9c <__register_exitproc+0x6c>
 8013e64:	1a000044 	addi	r8,r3,1
 8013e68:	8800221e 	bne	r17,zero,8013ef4 <__register_exitproc+0xc4>
 8013e6c:	18c00084 	addi	r3,r3,2
 8013e70:	18c7883a 	add	r3,r3,r3
 8013e74:	18c7883a 	add	r3,r3,r3
 8013e78:	12000115 	stw	r8,4(r2)
 8013e7c:	10c7883a 	add	r3,r2,r3
 8013e80:	19400015 	stw	r5,0(r3)
 8013e84:	0005883a 	mov	r2,zero
 8013e88:	dfc00517 	ldw	ra,20(sp)
 8013e8c:	dc400417 	ldw	r17,16(sp)
 8013e90:	dc000317 	ldw	r16,12(sp)
 8013e94:	dec00604 	addi	sp,sp,24
 8013e98:	f800283a 	ret
 8013e9c:	00800034 	movhi	r2,0
 8013ea0:	10800004 	addi	r2,r2,0
 8013ea4:	10002626 	beq	r2,zero,8013f40 <__register_exitproc+0x110>
 8013ea8:	01006404 	movi	r4,400
 8013eac:	d9400015 	stw	r5,0(sp)
 8013eb0:	d9800115 	stw	r6,4(sp)
 8013eb4:	d9c00215 	stw	r7,8(sp)
 8013eb8:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 8013ebc:	d9400017 	ldw	r5,0(sp)
 8013ec0:	d9800117 	ldw	r6,4(sp)
 8013ec4:	d9c00217 	ldw	r7,8(sp)
 8013ec8:	10001d26 	beq	r2,zero,8013f40 <__register_exitproc+0x110>
 8013ecc:	81000017 	ldw	r4,0(r16)
 8013ed0:	10000115 	stw	zero,4(r2)
 8013ed4:	02000044 	movi	r8,1
 8013ed8:	22405217 	ldw	r9,328(r4)
 8013edc:	0007883a 	mov	r3,zero
 8013ee0:	12400015 	stw	r9,0(r2)
 8013ee4:	20805215 	stw	r2,328(r4)
 8013ee8:	10006215 	stw	zero,392(r2)
 8013eec:	10006315 	stw	zero,396(r2)
 8013ef0:	883fde26 	beq	r17,zero,8013e6c <__alt_data_end+0xfc013e6c>
 8013ef4:	18c9883a 	add	r4,r3,r3
 8013ef8:	2109883a 	add	r4,r4,r4
 8013efc:	1109883a 	add	r4,r2,r4
 8013f00:	21802215 	stw	r6,136(r4)
 8013f04:	01800044 	movi	r6,1
 8013f08:	12406217 	ldw	r9,392(r2)
 8013f0c:	30cc983a 	sll	r6,r6,r3
 8013f10:	4992b03a 	or	r9,r9,r6
 8013f14:	12406215 	stw	r9,392(r2)
 8013f18:	21c04215 	stw	r7,264(r4)
 8013f1c:	01000084 	movi	r4,2
 8013f20:	893fd21e 	bne	r17,r4,8013e6c <__alt_data_end+0xfc013e6c>
 8013f24:	11006317 	ldw	r4,396(r2)
 8013f28:	218cb03a 	or	r6,r4,r6
 8013f2c:	11806315 	stw	r6,396(r2)
 8013f30:	003fce06 	br	8013e6c <__alt_data_end+0xfc013e6c>
 8013f34:	18805304 	addi	r2,r3,332
 8013f38:	18805215 	stw	r2,328(r3)
 8013f3c:	003fc606 	br	8013e58 <__alt_data_end+0xfc013e58>
 8013f40:	00bfffc4 	movi	r2,-1
 8013f44:	003fd006 	br	8013e88 <__alt_data_end+0xfc013e88>

08013f48 <__call_exitprocs>:
 8013f48:	defff504 	addi	sp,sp,-44
 8013f4c:	df000915 	stw	fp,36(sp)
 8013f50:	dd400615 	stw	r21,24(sp)
 8013f54:	dc800315 	stw	r18,12(sp)
 8013f58:	dfc00a15 	stw	ra,40(sp)
 8013f5c:	ddc00815 	stw	r23,32(sp)
 8013f60:	dd800715 	stw	r22,28(sp)
 8013f64:	dd000515 	stw	r20,20(sp)
 8013f68:	dcc00415 	stw	r19,16(sp)
 8013f6c:	dc400215 	stw	r17,8(sp)
 8013f70:	dc000115 	stw	r16,4(sp)
 8013f74:	d9000015 	stw	r4,0(sp)
 8013f78:	2839883a 	mov	fp,r5
 8013f7c:	04800044 	movi	r18,1
 8013f80:	057fffc4 	movi	r21,-1
 8013f84:	00820074 	movhi	r2,2049
 8013f88:	1098c404 	addi	r2,r2,25360
 8013f8c:	12000017 	ldw	r8,0(r2)
 8013f90:	45005217 	ldw	r20,328(r8)
 8013f94:	44c05204 	addi	r19,r8,328
 8013f98:	a0001c26 	beq	r20,zero,801400c <__call_exitprocs+0xc4>
 8013f9c:	a0800117 	ldw	r2,4(r20)
 8013fa0:	15ffffc4 	addi	r23,r2,-1
 8013fa4:	b8000d16 	blt	r23,zero,8013fdc <__call_exitprocs+0x94>
 8013fa8:	14000044 	addi	r16,r2,1
 8013fac:	8421883a 	add	r16,r16,r16
 8013fb0:	8421883a 	add	r16,r16,r16
 8013fb4:	84402004 	addi	r17,r16,128
 8013fb8:	a463883a 	add	r17,r20,r17
 8013fbc:	a421883a 	add	r16,r20,r16
 8013fc0:	e0001e26 	beq	fp,zero,801403c <__call_exitprocs+0xf4>
 8013fc4:	80804017 	ldw	r2,256(r16)
 8013fc8:	e0801c26 	beq	fp,r2,801403c <__call_exitprocs+0xf4>
 8013fcc:	bdffffc4 	addi	r23,r23,-1
 8013fd0:	843fff04 	addi	r16,r16,-4
 8013fd4:	8c7fff04 	addi	r17,r17,-4
 8013fd8:	bd7ff91e 	bne	r23,r21,8013fc0 <__alt_data_end+0xfc013fc0>
 8013fdc:	00800034 	movhi	r2,0
 8013fe0:	10800004 	addi	r2,r2,0
 8013fe4:	10000926 	beq	r2,zero,801400c <__call_exitprocs+0xc4>
 8013fe8:	a0800117 	ldw	r2,4(r20)
 8013fec:	1000301e 	bne	r2,zero,80140b0 <__call_exitprocs+0x168>
 8013ff0:	a0800017 	ldw	r2,0(r20)
 8013ff4:	10003226 	beq	r2,zero,80140c0 <__call_exitprocs+0x178>
 8013ff8:	a009883a 	mov	r4,r20
 8013ffc:	98800015 	stw	r2,0(r19)
 8014000:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 8014004:	9d000017 	ldw	r20,0(r19)
 8014008:	a03fe41e 	bne	r20,zero,8013f9c <__alt_data_end+0xfc013f9c>
 801400c:	dfc00a17 	ldw	ra,40(sp)
 8014010:	df000917 	ldw	fp,36(sp)
 8014014:	ddc00817 	ldw	r23,32(sp)
 8014018:	dd800717 	ldw	r22,28(sp)
 801401c:	dd400617 	ldw	r21,24(sp)
 8014020:	dd000517 	ldw	r20,20(sp)
 8014024:	dcc00417 	ldw	r19,16(sp)
 8014028:	dc800317 	ldw	r18,12(sp)
 801402c:	dc400217 	ldw	r17,8(sp)
 8014030:	dc000117 	ldw	r16,4(sp)
 8014034:	dec00b04 	addi	sp,sp,44
 8014038:	f800283a 	ret
 801403c:	a0800117 	ldw	r2,4(r20)
 8014040:	80c00017 	ldw	r3,0(r16)
 8014044:	10bfffc4 	addi	r2,r2,-1
 8014048:	15c01426 	beq	r2,r23,801409c <__call_exitprocs+0x154>
 801404c:	80000015 	stw	zero,0(r16)
 8014050:	183fde26 	beq	r3,zero,8013fcc <__alt_data_end+0xfc013fcc>
 8014054:	95c8983a 	sll	r4,r18,r23
 8014058:	a0806217 	ldw	r2,392(r20)
 801405c:	a5800117 	ldw	r22,4(r20)
 8014060:	2084703a 	and	r2,r4,r2
 8014064:	10000b26 	beq	r2,zero,8014094 <__call_exitprocs+0x14c>
 8014068:	a0806317 	ldw	r2,396(r20)
 801406c:	2088703a 	and	r4,r4,r2
 8014070:	20000c1e 	bne	r4,zero,80140a4 <__call_exitprocs+0x15c>
 8014074:	89400017 	ldw	r5,0(r17)
 8014078:	d9000017 	ldw	r4,0(sp)
 801407c:	183ee83a 	callr	r3
 8014080:	a0800117 	ldw	r2,4(r20)
 8014084:	15bfbf1e 	bne	r2,r22,8013f84 <__alt_data_end+0xfc013f84>
 8014088:	98800017 	ldw	r2,0(r19)
 801408c:	153fcf26 	beq	r2,r20,8013fcc <__alt_data_end+0xfc013fcc>
 8014090:	003fbc06 	br	8013f84 <__alt_data_end+0xfc013f84>
 8014094:	183ee83a 	callr	r3
 8014098:	003ff906 	br	8014080 <__alt_data_end+0xfc014080>
 801409c:	a5c00115 	stw	r23,4(r20)
 80140a0:	003feb06 	br	8014050 <__alt_data_end+0xfc014050>
 80140a4:	89000017 	ldw	r4,0(r17)
 80140a8:	183ee83a 	callr	r3
 80140ac:	003ff406 	br	8014080 <__alt_data_end+0xfc014080>
 80140b0:	a0800017 	ldw	r2,0(r20)
 80140b4:	a027883a 	mov	r19,r20
 80140b8:	1029883a 	mov	r20,r2
 80140bc:	003fb606 	br	8013f98 <__alt_data_end+0xfc013f98>
 80140c0:	0005883a 	mov	r2,zero
 80140c4:	003ffb06 	br	80140b4 <__alt_data_end+0xfc0140b4>

080140c8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 80140c8:	defffd04 	addi	sp,sp,-12
 80140cc:	df000215 	stw	fp,8(sp)
 80140d0:	df000204 	addi	fp,sp,8
 80140d4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 80140d8:	0001883a 	nop
 80140dc:	e0bfff17 	ldw	r2,-4(fp)
 80140e0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 80140e4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 80140e8:	10000226 	beq	r2,zero,80140f4 <_exit+0x2c>
    ALT_SIM_FAIL();
 80140ec:	002af070 	cmpltui	zero,zero,43969
 80140f0:	00000106 	br	80140f8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 80140f4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 80140f8:	003fff06 	br	80140f8 <__alt_data_end+0xfc0140f8>
